cset: moving following pidspec: 3883
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.347443246 seconds)
loading group "string"... done (took 0.49193789 seconds)
loading group "linalg"... done (took 7.896213227 seconds)
loading group "parallel"... done (took 0.177261413 seconds)
loading group "find"... done (took 1.210023117 seconds)
loading group "tuple"... done (took 1.897518853 seconds)
loading group "dates"... done (took 1.305553019 seconds)
loading group "micro"... done (took 0.24242221 seconds)
loading group "io"... done (took 0.801363852 seconds)
loading group "scalar"... done (took 42.971766681 seconds)
loading group "sparse"... done (took 13.205162847 seconds)
loading group "broadcast"... done (took 1.152589368 seconds)
loading group "union"... done (took 15.04844341 seconds)
loading group "simd"... done (took 5.274182543 seconds)
loading group "random"... done (took 10.730787093 seconds)
loading group "problem"... done (took 2.07673287 seconds)
loading group "array"... done (took 24.015656736 seconds)
loading group "misc"... done (took 1.490451255 seconds)
loading group "sort"... done (took 3.808145379 seconds)
loading group "collection"... done (took 20.429178401 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.557555192 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.154103266 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.16283042 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.164538454 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.217492565 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.150449378 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.168124 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.120427816 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.097548246 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.199309686 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.163207194 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.529141114 seconds)
done (took 5.498557799 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.330739628 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.098470199 seconds)
    (2/2) benchmarking "String"...
    done (took 0.11373146 seconds)
  done (took 0.96821298 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.081529821 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.152904574 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.101545224 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.099371614 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.085105374 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.101531165 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.083327821 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.099923948 seconds)
  done (took 1.478569598 seconds)
done (took 3.622363576 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.753378302 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.297407451 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.22666515 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.488986145 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.190091145 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.226677374 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.746420823 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.38326736 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.274285111 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.102612494 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.154585578 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.416857762 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.139305194 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.674168844 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.096059699 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.132877794 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.192806562 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.507246948 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.087325657 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.113347045 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.120418799 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.145190304 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.136974902 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.097716972 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.191829424 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.102716438 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.192817021 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.111148885 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.084021999 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.295666225 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.208721274 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.702595892 seconds)
  done (took 11.39049035 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.119882942 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.144856544 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.104565147 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.163424107 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.140871532 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.087773869 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.107426973 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.085766252 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.132269581 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.187224259 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.138558184 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.147555504 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.098169441 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.088037196 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.126462552 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.25427701 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.128384524 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.111724846 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.107659245 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.111527907 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.130146469 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.122109087 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.118105053 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.116316512 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.173893305 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.212593514 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.117643477 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.133222527 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.101537391 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.12060334 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.149561061 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.150988949 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.099724473 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.084651314 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.183415587 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.131009117 seconds)
  done (took 5.495703637 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.165501881 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.201283007 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.130010896 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.180207496 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.172051011 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.148672663 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.179882378 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.120856131 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.243794778 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.205727167 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.190944034 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.153440021 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.12040346 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.102234536 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.089988255 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.100583506 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.785298136 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.171001665 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.121316547 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.124040391 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112376474 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.11121394 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.373032233 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.094302563 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.10264609 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.087673524 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.088130629 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.171707639 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.104615148 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.229371121 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.126901696 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.086293196 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.143527375 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.220389608 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.135812115 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.142244571 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086946907 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.101903463 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.18838429 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.094778018 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.103962687 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.131643582 seconds)
    (43/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.083057065 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.142880249 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.145759658 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.104386966 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.10621659 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.220348725 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.085248641 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.123204476 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.003100095 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.187371477 seconds)
    (53/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.084855908 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.11400816 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.084640555 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.353626315 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.123520978 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.104499454 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.083787605 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.288317625 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.145982719 seconds)
    (62/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.083282498 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.103866028 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.084923019 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.108784196 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.085841216 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.419056371 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.086898648 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.739193887 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.103864977 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.096106753 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.106791866 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.104736027 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.109761065 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.094484558 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.122214285 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.085430604 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.105558531 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.085187204 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.103845415 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.105722182 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.097093317 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.109007258 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.103048462 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.15478824 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.100793597 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.103149479 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.135743365 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.10708404 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.100648659 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.123291239 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.104962398 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.103999745 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.125502799 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.105076102 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.115031245 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.104921126 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.133433843 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.103781417 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.196973909 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.083670332 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.133194509 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.107092968 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.137228764 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.118539343 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086914053 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.108833637 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.082926283 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.10185691 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.168851295 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.085636971 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.103779552 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.088073115 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.118481666 seconds)
  done (took 23.932873474 seconds)
done (took 41.57323237 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.35724734 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.113094793 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.110302999 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.109189833 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.107390403 seconds)
  done (took 1.625309656 seconds)
done (took 2.426143189 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.297400204 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.182822582 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.100886548 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.176471776 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.099256616 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.185052744 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.185753113 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.100767629 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.212210251 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.080763035 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.191209423 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.080861852 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.099489141 seconds)
  done (took 2.822076235 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.099897681 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.124289878 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.0878278 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.120714162 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.09994866 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.102092403 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.118278249 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.106500445 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.118942377 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.108755834 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.082892273 seconds)
  done (took 1.967424061 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.099212863 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.119668435 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.086943493 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.117486147 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.081354193 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.119311444 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.117131616 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.105948735 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.118846494 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.108922724 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.083176483 seconds)
  done (took 1.960372159 seconds)
done (took 7.542337186 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.100514599 seconds)
  done (took 0.896147991 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.067149833 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.632842133 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.121831385 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.160189316 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.334791297 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.191176648 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.613141721 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.134121281 seconds)
  done (took 16.276766752 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.154762485 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.09031322 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.107036786 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.088689777 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.110442309 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.107029741 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.0911465 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.107908905 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.104557406 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.088256291 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.104942324 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.107142773 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.09067418 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.10551306 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.090124348 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.105121502 seconds)
  done (took 2.509165159 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.142303578 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.142160019 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.094405743 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.114777925 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.11033232 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.091660099 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.113738085 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.110229596 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.090683995 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.110680977 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.112755663 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.110082123 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.09146547 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.102251867 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.111927373 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.09612745 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.108604431 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.11150676 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.112971314 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.095875028 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.114003276 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.100333031 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.091589674 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.112312055 seconds)
  done (took 3.481980046 seconds)
done (took 23.96476286 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.171786524 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.114699729 seconds)
  done (took 1.084936444 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.108634592 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.127110073 seconds)
  done (took 1.039576006 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.112574705 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.101481044 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.142935951 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.122566301 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.101361547 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.08475602 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.137612681 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.102136367 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.083970043 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.102682799 seconds)
  done (took 1.900695969 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.09167742 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.120464878 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.112845289 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.124791779 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.098919905 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.107183993 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.116593784 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.09124942 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.124056504 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.102696124 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.095003857 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.122376877 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.112461228 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.12457813 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.117323333 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.093879631 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.115473497 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.108866749 seconds)
  done (took 2.790064508 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.084850898 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.106495645 seconds)
  done (took 1.000502498 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.089674502 seconds)
    (2/7) benchmarking "second"...
    done (took 0.10244326 seconds)
    (3/7) benchmarking "month"...
    done (took 0.089014183 seconds)
    (4/7) benchmarking "year"...
    done (took 0.10751122 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.10285738 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.084857144 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.103094485 seconds)
  done (took 1.488963756 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.495909825 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.140227759 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.264606475 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.107547156 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.129589945 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.338055243 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.082981838 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.109107363 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.107128406 seconds)
  done (took 2.623634109 seconds)
done (took 12.733862231 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.097835195 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.124107917 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.139415856 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.489982006 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.130834632 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.083485994 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.171249006 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.272790899 seconds)
done (took 2.320643283 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.159099327 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.340304337 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.123188503 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.086646 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.085580894 seconds)
  done (took 1.454450524 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.084857564 seconds)
    (2/2) benchmarking "read"...
    done (took 0.104764462 seconds)
  done (took 1.007307196 seconds)
done (took 3.439048568 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085631352 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.13601203 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.102136824 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.085111823 seconds)
    (5/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.103830488 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 0.082248316 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.103679738 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 0.081813021 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.099463228 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.083345044 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.103000052 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.101163362 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.085946175 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101497073 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082069556 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09920616 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084937661 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.099320337 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.08162604 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100981135 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081244681 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102689222 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.098629921 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.083418831 seconds)
  done (took 3.118885563 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.11474969 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.10386329 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.108964479 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.092182361 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.108404779 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.108759257 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.09076615 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.103708251 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.108451239 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.086964712 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.10762712 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.107110353 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.087576248 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.108527335 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104790822 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.089410741 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.109659058 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103310144 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088489561 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.108705541 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.107372507 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085976077 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.10764483 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.108280775 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.090020551 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.108095333 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.10486508 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.086841486 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.109008897 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.106818334 seconds)
  done (took 3.877129441 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.09054175 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.099291978 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.083210109 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.108088497 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.081838989 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.105223613 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.098639423 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.0840174 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.101005245 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.081897828 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.10271372 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.081824688 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.10263101 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.083151029 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.103525899 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.103330349 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.095856557 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.101431394 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.08153726 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.102175521 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.084904775 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.10218683 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.101529044 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.082486066 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.09976415 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.081914204 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.101159607 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.081547143 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.101662989 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.099556811 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.086317896 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.103783213 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.082863482 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.107665173 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.085515931 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.100052625 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.085256222 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.100848603 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.099331687 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.083141895 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.099303085 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.082834301 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.100421131 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.089968571 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.104827457 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.084422727 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.101282219 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.101804611 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.084354333 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.103741085 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.082175097 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.101076841 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.083751005 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.102838173 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.1033036 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.08316293 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.100273565 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.081607722 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.101465866 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.081272334 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.100220004 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.098368503 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.085255606 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.101509804 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.099582019 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.107537296 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.082092964 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.103998228 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.103686252 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.085493583 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.102206415 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.097533479 seconds)
  done (took 7.625195336 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.089086259 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.112261332 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.084479331 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.104227635 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.098770385 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.083802323 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.105590632 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082359169 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104289433 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.119183188 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083673602 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.102971967 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101943585 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.087914243 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.101851931 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.084727836 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.112028302 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.09830852 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.084473456 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.104918006 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.083606067 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.106423382 seconds)
  done (took 2.967610944 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.226570668 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.112814818 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.149065647 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.128563245 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.120645119 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.09973646 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.109532034 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.108980014 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091211161 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.10778832 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106498545 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090592408 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.111883488 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105692643 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088427587 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.107734255 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.107697215 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.09095333 seconds)
  done (took 2.895608266 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.099298677 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.104629007 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.126607021 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.086060687 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.10462069 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.088131586 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.111711471 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.121131444 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.106598907 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.087635333 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.115806246 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10631277 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.089297933 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105023058 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08773852 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.10487613 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.106088874 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086980024 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.114888212 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.110462392 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.09195646 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.115902192 seconds)
  done (took 3.104137552 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.103125766 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.106667344 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.12495791 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.090222745 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.103110543 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.086285602 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.111768386 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.103903024 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.093856453 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.107111401 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.103532016 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.086251873 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.110633038 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.102317832 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.091534194 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.105825343 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.087458603 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.105437954 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.105354012 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.08446233 seconds)
  done (took 2.844962841 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.126017485 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.218043177 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.105720277 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.110491818 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.106587376 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.106043729 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.130033748 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.088754986 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.105890368 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.132981643 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.086787 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.106728597 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.129288816 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.12544844 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.088603625 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.129759728 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.129855281 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.129685448 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.086708788 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.106517946 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.131960194 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.105219215 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.111243081 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.106302579 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.10437891 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.088479786 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.106032335 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.125230493 seconds)
  done (took 4.062479965 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.086623629 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.104010054 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.082889883 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.101109755 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.082376368 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.101309216 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.082943362 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.101979657 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.085728071 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.101993386 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.102100113 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.085931469 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.103234098 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.084962723 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.104495757 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.085231696 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.106235547 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.082739944 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.1023822 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100712945 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.08627219 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103801843 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.085721136 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.101836804 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082291013 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.104691453 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081936179 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.101874238 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102178767 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.083457358 seconds)
  done (took 3.659568263 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.096456224 seconds)
    (2/2) benchmarking "in"...
    done (took 0.112063409 seconds)
  done (took 1.04649796 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.084163531 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.120860204 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.081502078 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.109505816 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.109980327 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.087377715 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.115115655 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.110410201 seconds)
  done (took 1.654907358 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.105571744 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.123982395 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.10849814 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.105824509 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.120086693 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.12121666 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.167790836 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.091789349 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.111667744 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.083461931 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.122457 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.103804752 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.092447565 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.105989715 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.09125561 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.111680093 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.104689085 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.102077127 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.112681844 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.083699723 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.107026144 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.116411717 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.088643955 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.103416463 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.106054011 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.097562212 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.115322418 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.106336813 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090170336 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.11568489 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.091134784 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.09958819 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.104420548 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.092350223 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.106717656 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.099698707 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.119286753 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.108788827 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.095342119 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.111597989 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.13244896 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.084936526 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.111754338 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.110237857 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.097701885 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.111136218 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.109971338 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.086359707 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.102580571 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.088754525 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.104892526 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.086488132 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.099898513 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.112492908 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.091596039 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.124365895 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.103956331 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.090037104 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.108477489 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.089646588 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.113023744 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.106046379 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.090321447 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.104031296 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.093201263 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.109732669 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.112060161 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.085144306 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.09969155 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.087310767 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.114759456 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.127029391 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.095810048 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.112025546 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.109370816 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.086931102 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.108743095 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.091988668 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.113098637 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.113872397 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.090751931 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.12702994 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.11331111 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.085735058 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.108208614 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.118117454 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.085808533 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.107768863 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.082794719 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.122563461 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.104129645 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.086862046 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.103496727 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.112837952 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.091032037 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.104694497 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.083735282 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.113976784 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.079249702 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.111426671 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.10992242 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.087112608 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.11567309 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.115229216 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.097766861 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.113762876 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.116552395 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.086434802 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.108364367 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.082185915 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.111443405 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.107202799 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.094106667 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.099582333 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.089042063 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.107507062 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.109296505 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.095218008 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.103736531 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.090709057 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.113944958 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.113102028 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.084856261 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.102891059 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.088776566 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.110059281 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.114296872 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.09361467 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.105513921 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.103644585 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.08524406 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.109129928 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.090955693 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.111841677 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.115078432 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089335018 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.100714418 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.086241858 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.115628921 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.113241592 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.086142895 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.106456822 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.109127418 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.087485704 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.104633816 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.092460183 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.108125188 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.103081672 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.091559177 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.107242341 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.084231544 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.115911631 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.106905997 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.086029146 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.108861863 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.09520765 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.108682815 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.110298417 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085073004 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.11210451 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.110683051 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.086860893 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.10497677 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.08468302 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.116352035 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.106255885 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.085654265 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.10294976 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.099613486 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.104355452 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.08983179 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.105342828 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.107298165 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.092114189 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.107109681 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.085218727 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.108667369 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.137407396 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.118354947 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.09276399 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.112285588 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.09711184 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.110736707 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.106842234 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.092052565 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.111193424 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.091299861 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.115165475 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.111093413 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.097225838 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.109652897 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.100725375 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.094037256 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.113750729 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.086258131 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.10810035 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.103925144 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.091316301 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.113628824 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.108823068 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.092895476 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.103533073 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.087299664 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.114655145 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.107845415 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.091273523 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.104463495 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.091050302 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.106346813 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.11768395 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.093678338 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.116839496 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.10830678 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.085446921 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.115841528 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.084636279 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.113273384 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.104153161 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.085350899 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.103941858 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.092112448 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.104898615 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.088126129 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.100787849 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.11337333 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.094624303 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.106348862 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.085106352 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.111778573 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.114998778 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.087472156 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.110187086 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.107983113 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.093065108 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.120943723 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.084361806 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.109590293 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.115463184 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.091096883 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.10048902 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.111692222 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.085690354 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.104854671 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.085479955 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.105124247 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089291541 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.123187644 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.111924526 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.080242159 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.109924391 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.104129918 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.085756289 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.104942435 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.094367507 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.111131986 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.108180763 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.096689123 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.11258225 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.110265156 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.091962856 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.110719874 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.092551797 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.111977844 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.109171064 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.093126781 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.108404881 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.086121732 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.109917614 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.103599203 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.088483384 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.108062552 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.091497618 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.106829511 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.110676494 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.089973735 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.106710301 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.08920963 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.113507036 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.106182601 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.088346795 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.105994065 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.090069654 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.107667584 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.086120666 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.109692046 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.10372411 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.095485497 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.111023185 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.094254593 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.106978291 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.101828468 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.092783992 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.109822282 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.115931707 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.092943181 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.112960132 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.087762652 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.111170202 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.108577999 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.097314319 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.104207044 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.096880633 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.113285884 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.107180029 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.08956706 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.107374226 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.08730627 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.106369311 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.107785204 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.091609703 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.107069558 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.086014379 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.11230757 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.108823287 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.087122211 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.107598695 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.091142748 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.107961943 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.10787476 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.082069943 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.106123436 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.086215807 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.111161823 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.113476456 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.09317754 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.110020208 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.085587321 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.112919814 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.104766122 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.08418815 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.122335643 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.121337995 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.09321015 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.115630344 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.104416797 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.089400183 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116916606 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.08105017 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.105654398 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.087500689 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.1060237 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.115210349 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.091937559 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.116807933 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.105477189 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.087562858 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.103842994 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.092700859 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.10557366 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.089287525 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.109044167 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.109003528 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.090241007 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.104968649 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.091539363 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.11039498 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.110791671 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.096016526 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.106282181 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.089101608 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.112254655 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.102800269 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.086626285 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.10535302 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.090278454 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.112994088 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.08476421 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.104815466 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.109120131 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.089407659 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.107710214 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.086590004 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.108900341 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.113280778 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.087489988 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.110032615 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.095227399 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.102140258 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.109887682 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.086831003 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.110325064 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.085299336 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.111283849 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.109497068 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.093184163 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.115335053 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.108465515 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.089649632 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.107127545 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.088486664 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.111782309 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.090475005 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.112001059 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.105644074 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.093064118 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.11710308 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.087833502 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.109946736 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.105726068 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.088680964 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.112715145 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.092901175 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.110223632 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.122038457 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.089712615 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.109470492 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.112761712 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.092548142 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.111564213 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.111930212 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.090342114 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.114768248 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.08672962 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.117317476 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.105772473 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.09379355 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.108542423 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.085024371 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.107012559 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.105476458 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.087778479 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.112821984 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.09282571 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.107500305 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.085154256 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.109823621 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.108456649 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.096827717 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.116715949 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.109423704 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091600464 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.105539492 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.083920501 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.114084737 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.083779996 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.109826594 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.109795803 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.094240188 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.110161653 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.106516847 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.087269733 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.115442175 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093242038 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.114137745 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.103783371 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.093036219 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.112809176 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.089020247 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.11001178 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.107018314 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.089184424 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.113759589 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.089155477 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.107328477 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.116038812 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.092388004 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.114787587 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.107498184 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.08887276 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.107191927 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.086375256 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.112972499 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.089293864 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.115000365 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.109596761 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.087897283 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.119365241 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.105684692 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.088873029 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.116678194 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.087387823 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.115348301 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.105365013 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.089052703 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.113064186 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.093607415 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.107663821 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.105977245 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.086141695 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.11019783 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.086798125 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.106055268 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.115956078 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.096014429 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.109612953 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.085585913 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.107195494 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.104739055 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.087630635 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.10705104 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.092678251 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.110920946 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.115827149 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.087408681 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.106044186 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.086603244 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.108332734 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.089400563 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.112678831 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.103694481 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.087055585 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.106205221 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.09008864 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.115758048 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.106300539 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.092719322 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.111966586 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.089758033 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.108551595 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.115912281 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.084767748 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.111433727 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.096792561 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.113455215 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.107608126 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.092740358 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.117090899 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.111706453 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.08703332 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.113274453 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.089791389 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.108963034 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.113025579 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.090305072 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.122706179 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.110277322 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.087843403 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.106866077 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.091545112 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.108128435 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.115418335 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.094634812 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.114032389 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.09195174 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.109999404 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.123438571 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.089412971 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.114446793 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.109266393 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.090925007 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.107415557 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.087922286 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.107312545 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.085423231 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.110490582 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.113223709 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.093422406 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.122486133 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.106872692 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097886903 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.116720886 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.112386314 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.084677361 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.106765506 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.086704149 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.107721917 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.092298893 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.10716283 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.105841699 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.086538299 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.107134381 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.087507411 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.114010672 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.108706059 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.094636808 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.107906622 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.081503253 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.110201965 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.109240568 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.090201355 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.103780192 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.092674927 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.113682065 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.112722167 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.100564458 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.107759783 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.089259289 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.11062765 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.087872181 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.107136279 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.114053036 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.086186583 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.110742665 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.086474563 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.109006361 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.112837504 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091826589 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.119387547 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.10974789 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.091105882 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.118341816 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.094078533 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.105918763 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.104693805 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.094198715 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.109672078 seconds)
  done (took 61.881929148 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.157143135 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.09378564 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105011703 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.082402871 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.123934831 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.109128007 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.082327545 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.108993992 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.107346178 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.090952958 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.103990023 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.083060007 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.117829967 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.133430015 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.124356224 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.112555067 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.083613105 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.108993933 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.08196258 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.1092629 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.118698018 seconds)
  done (took 3.128719823 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.111335965 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.123118061 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.121673135 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.126124458 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.113840852 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.102102435 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.121909194 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.121904344 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.124569746 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.115244142 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.106427129 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.123210542 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.11682622 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.116047956 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096040249 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.12000787 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.126134425 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.114341464 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.102096318 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.121353569 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.119665574 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.121322726 seconds)
  done (took 3.451394106 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.097286941 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.110770613 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.092229123 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.103726211 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.086337892 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.103832653 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.116103805 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.085902952 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.112862196 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.08542989 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.107804567 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.086273158 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.113961702 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.102505581 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.088036953 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.106177691 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.162513049 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.112322677 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.092011608 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.110421949 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.085630831 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.111884823 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.105522373 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.087777611 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.107280937 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.101435232 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.11088662 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.087149169 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.10965767 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.107044859 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.092240928 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.106019969 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.08945666 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.109732369 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.085859168 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.108817964 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.107569938 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.091563772 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.105889381 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.088336648 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.109498303 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.085673306 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.1157339 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.108703714 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.089034236 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.106651314 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.088746881 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.109959274 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.082117066 seconds)
  done (took 5.860962891 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.121852792 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.161790729 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.08956025 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.130926672 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.128503387 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.122747163 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.112811068 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.151359456 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.085398557 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.112813947 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.130833062 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.126420205 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.091481597 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.118563643 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.116359459 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.090918725 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.114684862 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.108510469 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.116775086 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.089067677 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.118277358 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.115467102 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.105271445 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.125068306 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.119117878 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.110747696 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.08887226 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.119704222 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.125311159 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.117751965 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.097785969 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.120467803 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.128064215 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.110553758 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.088553738 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.116087695 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.130250239 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.092340558 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.115561588 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.10613599 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.09418335 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.118569937 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.116364977 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.131153115 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.092098844 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.115307109 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.112883653 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.084988313 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.124660509 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.119389554 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.126883594 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.130755013 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.101040888 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.117718067 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.121878661 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.110220799 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.117876355 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.115052437 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.099461337 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.128495486 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.110755113 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.121676872 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.107860597 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.116516957 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.122155908 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.126118315 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.095148494 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.120223857 seconds)
  done (took 8.829013004 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.120828515 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.121140671 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.131637478 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.131744491 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.119806968 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.100161937 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.120791303 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.121044209 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.119803864 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.106009944 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.121539547 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.168447641 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.115074395 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.125085192 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.100482498 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.122569741 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.122861192 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.121948465 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.099380902 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.121752072 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.122024364 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.132048784 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.120817939 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.131669993 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.130233418 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.09464745 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.121375613 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.120460152 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.13091568 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.10058198 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.131395131 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.121776153 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.120155293 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.131211065 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.131151752 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.099082663 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.112561783 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.119821078 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.099529108 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.120932353 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.114809381 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.132462823 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.099200479 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.116161754 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.121903585 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.119891058 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.131453261 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.109889095 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.125900285 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.128150354 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.121382166 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.132152893 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.120101009 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.101472988 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.132569572 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.137294371 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.131938557 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.133229783 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.121289572 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.131696498 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.131985257 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.136412036 seconds)
  done (took 8.431874405 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.14284864 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.103649948 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.131107114 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.106944663 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.085966281 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.119185967 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.107549815 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.087033335 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.124412124 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.123894108 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.126792497 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.097238347 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.122900262 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.127978067 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.118381321 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.120942072 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.098058113 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.119355141 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.123346593 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.118077974 seconds)
  done (took 3.206037523 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.098648917 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.132123034 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.110901138 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.097182371 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.116001786 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.116769727 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.091704754 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.114702241 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.110729421 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.093847758 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.123767188 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.123190289 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089636258 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.119711027 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.123171988 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.117795737 seconds)
  done (took 2.684501446 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.103287372 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.133838822 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.131978927 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.110715565 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.0874765 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.107730726 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.090736357 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.108074657 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.105616983 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.106834346 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.112709495 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.116177821 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.09248847 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.108497608 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.085364689 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.117378294 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.106865216 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.087351304 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.114123683 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.131879405 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.101721912 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.110423508 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.113689676 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.09147225 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.111216113 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.11623473 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.090251907 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.10947455 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.086555031 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.114240796 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.111103687 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.09831184 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.108239596 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.108399386 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.086859421 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.108882477 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.090708101 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.115563763 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.116087238 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.090900698 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.109879747 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.109151469 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.091865354 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.112326086 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.084681717 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.115056027 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.106057001 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.096589536 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.109250861 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.109947535 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.093135663 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.114263055 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.089901516 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.123541811 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.114619596 seconds)
  done (took 6.726681801 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.104656163 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.115349925 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.083167542 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.108977978 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.11368934 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.092546881 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.115596235 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.092515896 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.113341353 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.108597353 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.091448273 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.117045092 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.111721292 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.09478008 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.113086173 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.093010183 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.106495744 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.111685702 seconds)
  done (took 2.79865542 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.09575203 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.111026237 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.096562058 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.11178975 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.110986449 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.093161429 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.107008041 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.088054216 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.110421946 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.088248322 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111359122 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.113710523 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087655412 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.113634452 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.088031012 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111361803 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.113424499 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.088093678 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.111605511 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.0846068 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.113848979 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.108006399 seconds)
  done (took 3.167355784 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.126702355 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.131698743 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.117660776 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.222921495 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.106389978 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.13938765 seconds)
  done (took 1.751768919 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115262071 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.15058289 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.111855613 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.092715011 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125465908 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116859201 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093313343 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117854005 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128189226 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130770482 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11660864 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105623006 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12807557 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128213156 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125281822 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124187346 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094334026 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117461553 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112277165 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136185971 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094617949 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12906708 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117495288 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116251296 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095637636 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128357373 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12928192 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130874347 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116133523 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126648817 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.103519665 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11751155 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129268089 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129732188 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.092785812 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129387909 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11794892 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137260316 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123590647 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127663385 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.094159967 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125876657 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128858517 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122615769 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107169971 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11876199 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12497852 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116277508 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095837529 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.144606816 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125186781 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12853796 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125372531 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128334224 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106780952 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.167708351 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129005187 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.1070907 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126126352 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131165324 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128354806 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12368852 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128267758 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129590252 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.104303255 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129206599 seconds)
  done (took 8.882831357 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130968979 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.114816451 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117465984 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.131018821 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128007689 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095818337 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118535849 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117663891 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095174537 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11450001 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.161025478 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117778126 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128092576 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128282237 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095375926 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118190139 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117113959 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.127305752 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091770618 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.145372318 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117238559 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128667143 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129642487 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126945842 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.13025854 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.102739067 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118397435 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117504624 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095054467 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117553943 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123232206 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116200166 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.127985115 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.092011827 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129162255 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117045157 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095194507 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124845549 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118195979 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123362367 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128529255 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136351134 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096256555 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117605011 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.131912838 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116756861 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095984793 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114252571 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116681609 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092276425 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131511898 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.131073602 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.13090346 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12815512 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116385414 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097387534 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117849215 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117360582 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095531053 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125150067 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12895873 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118014516 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.145102337 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117133054 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096497588 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12948107 seconds)
  done (took 8.738490161 seconds)
done (took 167.212414924 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.107291099 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.145617374 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.125366547 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.152705655 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.112813337 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.12297706 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.144992332 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.126202178 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.090530414 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.11211581 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.089217761 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.113837476 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.15455334 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.112568322 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.111070771 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.093951078 seconds)
  done (took 2.832760825 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.20865337 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.280743592 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.129662104 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.088511128 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.117394243 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.089204595 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.110956255 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.118639328 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.091878173 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.110388101 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.090389343 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.112502491 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.088440451 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.112673743 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.11157266 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.090963671 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.110426774 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.090259843 seconds)
  done (took 3.080499906 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.118544788 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.172407169 seconds)
  done (took 1.221487725 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.126946883 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.19099693 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.311080566 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.16161682 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.147252477 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.133664052 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.160323733 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.116166225 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.236649608 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.129490324 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.10808873 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.125011469 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.149940615 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.121879902 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.098537076 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.124888647 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.149980146 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.118821971 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.099793815 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.123062113 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.143760417 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.089398752 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.123455011 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.118766972 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.197339481 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.102948451 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.112500457 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.110620653 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.101123088 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.120693774 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.116785072 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.131835564 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.105147015 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.195705728 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.107261213 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.19177301 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.123749218 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.095962189 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.121373293 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.115948767 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.104411522 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.127095603 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.131399829 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.100889108 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.1143663 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.124787877 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.089783325 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.111656722 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.11873101 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.103299377 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.120924653 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.117989913 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.167877773 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.125092596 seconds)
  done (took 8.045104265 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.841140759 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.159888832 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.118770814 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.944082423 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120054713 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.132698181 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.831169962 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.139820394 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.243980628 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.83340973 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.137817085 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.130329827 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.243352654 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.247306331 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.026345678 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.330928282 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.725702808 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.106245754 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.14546275 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.163100846 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.123003189 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.140492612 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.112387419 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.459762733 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.098221909 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.117103271 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.120673111 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.102404849 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.193407627 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.094544957 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.119153402 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.187564282 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.282951982 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.217627468 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.098616467 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.115097423 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.092772737 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.204283656 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.278531712 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.230663034 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.185225064 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090977033 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.11538712 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.124304176 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.114131796 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.113487578 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.172714718 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.209079392 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.182143013 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.119658067 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.124421387 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.101817985 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.126208701 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.17507794 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.127537123 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.338457428 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.333550246 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.116892261 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122972041 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.10952391 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.276418015 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.129892862 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.242074201 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.142657981 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.228324061 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.093229375 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.793904379 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.200252279 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.093956936 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.122788875 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120182178 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.099936712 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.125256852 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.177118718 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.417413489 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.128821161 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.11692648 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.094530399 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.242407571 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.093395217 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.115773506 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.173190183 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.120324045 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.123106887 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.107715359 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.127091775 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.180175253 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.27053782 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.126933063 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.101443059 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.121115797 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.127624281 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.096793501 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.246098614 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.237384488 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.172413506 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.241581017 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.10374775 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.198910828 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.18055042 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.125786899 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.183972629 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.123826281 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.130109189 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.103402565 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.232574779 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.17699586 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.108362111 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.120695807 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.121799359 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.157314026 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.09622774 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.12417451 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.18088075 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.496305286 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.177745781 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.114261121 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.118315213 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.102540052 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.19424272 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100352003 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.279488839 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.126152259 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.181322484 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.122961925 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.112507404 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.10107922 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.198059856 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.105581931 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124618571 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.127297811 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.122528064 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.245289002 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.233455114 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.128193041 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.230643572 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.211142689 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.101382818 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.205269113 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.101981708 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.200672044 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.102193104 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.12528701 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120964976 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.786580635 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.104635946 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.123743429 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.119925187 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.19605631 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.09225143 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.130167068 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.116492788 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.090398449 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.820912476 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.118666497 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.127188749 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.109609616 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.122570934 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.122526979 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.099521497 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.121611288 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.172385727 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.246594227 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.126779609 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.122698277 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.093342827 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.194106873 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.097242541 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.117165363 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.115808055 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.095047169 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.1243786 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.119224942 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.108156848 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.202994212 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.174735573 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.23689293 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.568867125 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.093197891 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.117540543 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.245368568 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.115460643 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.304716431 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.101362705 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.241964989 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.198520421 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.104120514 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.329983232 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.200291927 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.196888991 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.095692125 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.209698881 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.089589134 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.123968937 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.197433606 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.095287558 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.12317645 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.173438408 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.130739458 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.127120477 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.976276324 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.093425434 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.259884823 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.091478312 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.205345316 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.099353232 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.125648804 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.313782316 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.115211562 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.111272562 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.199902291 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.096652363 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.117630867 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.88561683 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.09459967 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.127312755 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.123618768 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.240628593 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.174437273 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.123102956 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.100603202 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.126306924 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.19530782 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.219896241 seconds)
  done (took 46.218492556 seconds)
done (took 62.318480317 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.293401278 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.220586507 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.266704386 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.174921782 seconds)
  done (took 1.985489224 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.187308521 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.154570277 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.152717182 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.088939785 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.161159059 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.111365263 seconds)
  done (took 1.807514464 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.386257478 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.288210122 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.250135467 seconds)
  done (took 1.878138777 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.257793033 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.28076422 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.336182151 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.440142824 seconds)
  done (took 2.376299814 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.245381482 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.148195804 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.133331187 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.127668327 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.229857146 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.272683243 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.164784958 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.225130006 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.144608014 seconds)
  done (took 2.690850595 seconds)
done (took 11.698893617 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.1692773 seconds)
    (2/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.190929738 seconds)
    (3/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.135091308 seconds)
    (4/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.110781563 seconds)
    (5/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.131163981 seconds)
    (6/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.13501724 seconds)
    (7/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.109926435 seconds)
    (8/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.247737752 seconds)
    (9/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.106094322 seconds)
    (10/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.130705244 seconds)
    (11/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.252413247 seconds)
    (12/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.281236445 seconds)
    (13/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.097303324 seconds)
    (14/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.262012137 seconds)
    (15/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.176856017 seconds)
    (16/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.12094466 seconds)
    (17/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.236141889 seconds)
    (18/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.182134606 seconds)
    (19/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.157938295 seconds)
    (20/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.129680091 seconds)
    (21/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.118080917 seconds)
    (22/286) benchmarking ("sort", Int8, false)...
    done (took 0.203915413 seconds)
    (23/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.229966884 seconds)
    (24/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.097038918 seconds)
    (25/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.10434713 seconds)
    (26/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.221362438 seconds)
    (27/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.106874147 seconds)
    (28/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.182167227 seconds)
    (29/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.123014108 seconds)
    (30/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.157840548 seconds)
    (31/286) benchmarking ("sort", Int64, true)...
    done (took 0.24001718 seconds)
    (32/286) benchmarking ("sort", BigInt, true)...
    done (took 0.251200922 seconds)
    (33/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.103803807 seconds)
    (34/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.123787682 seconds)
    (35/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.125379071 seconds)
    (36/286) benchmarking ("sort", BigInt, false)...
    done (took 0.233718568 seconds)
    (37/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.174679026 seconds)
    (38/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.192797471 seconds)
    (39/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.103848253 seconds)
    (40/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.212471311 seconds)
    (41/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.159229332 seconds)
    (42/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.145638043 seconds)
    (43/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.145336529 seconds)
    (44/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.097147768 seconds)
    (45/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.139245896 seconds)
    (46/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.142301107 seconds)
    (47/286) benchmarking ("sort", Float32, false)...
    done (took 0.187172161 seconds)
    (48/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.124289875 seconds)
    (49/286) benchmarking ("sort", Int8, true)...
    done (took 0.260703681 seconds)
    (50/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.107261435 seconds)
    (51/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.124907804 seconds)
    (52/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.103065252 seconds)
    (53/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.200282303 seconds)
    (54/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.252470964 seconds)
    (55/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.110098405 seconds)
    (56/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.093716733 seconds)
    (57/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.14532121 seconds)
    (58/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.191343575 seconds)
    (59/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.152095585 seconds)
    (60/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.143011612 seconds)
    (61/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.122295443 seconds)
    (62/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.137946727 seconds)
    (63/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.126689002 seconds)
    (64/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.128851945 seconds)
    (65/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.138328136 seconds)
    (66/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.145433904 seconds)
    (67/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.122498815 seconds)
    (68/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.121071456 seconds)
    (69/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.143347271 seconds)
    (70/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.188388712 seconds)
    (71/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.141578642 seconds)
    (72/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.089480561 seconds)
    (73/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.130865185 seconds)
    (74/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.119898736 seconds)
    (75/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.170187631 seconds)
    (76/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.123839378 seconds)
    (77/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.089050028 seconds)
    (78/286) benchmarking ("sort", Int64, false)...
    done (took 0.115629379 seconds)
    (79/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.124553182 seconds)
    (80/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.133440216 seconds)
    (81/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.161559201 seconds)
    (82/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.187183947 seconds)
    (83/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.167629931 seconds)
    (84/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.177029616 seconds)
    (85/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.096988847 seconds)
    (86/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.124321037 seconds)
    (87/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.125453669 seconds)
    (88/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.079681603 seconds)
    (89/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.173287563 seconds)
    (90/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.144086221 seconds)
    (91/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.21062363 seconds)
    (92/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.093097717 seconds)
    (93/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.145509884 seconds)
    (94/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.200499777 seconds)
    (95/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.102478472 seconds)
    (96/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.146419923 seconds)
    (97/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.129547575 seconds)
    (98/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.094634288 seconds)
    (99/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.141772021 seconds)
    (100/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.168919956 seconds)
    (101/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.184957574 seconds)
    (102/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.069657308 seconds)
    (103/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.153263528 seconds)
    (104/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.079631678 seconds)
    (105/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.140393913 seconds)
    (106/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.092983121 seconds)
    (107/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.124837007 seconds)
    (108/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.06930197 seconds)
    (109/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.188011963 seconds)
    (110/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.115741516 seconds)
    (111/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.102290794 seconds)
    (112/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.0975961 seconds)
    (113/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.101200681 seconds)
    (114/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.094588012 seconds)
    (115/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.192536114 seconds)
    (116/286) benchmarking ("sort", Bool, false)...
    done (took 0.195940216 seconds)
    (117/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.09957968 seconds)
    (118/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.152965139 seconds)
    (119/286) benchmarking ("sort", Float32, true)...
    done (took 0.246666542 seconds)
    (120/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.250496803 seconds)
    (121/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.132859259 seconds)
    (122/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.139326255 seconds)
    (123/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.097378722 seconds)
    (124/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.092712062 seconds)
    (125/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.150575438 seconds)
    (126/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.123064829 seconds)
    (127/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.095868479 seconds)
    (128/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.212171997 seconds)
    (129/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.20906491 seconds)
    (130/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.124062375 seconds)
    (131/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.069842378 seconds)
    (132/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.190694722 seconds)
    (133/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.115539588 seconds)
    (134/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.100131346 seconds)
    (135/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.10249461 seconds)
    (136/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.134897366 seconds)
    (137/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.11531825 seconds)
    (138/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.070094875 seconds)
    (139/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.127584297 seconds)
    (140/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.096669156 seconds)
    (141/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.109326567 seconds)
    (142/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.090049924 seconds)
    (143/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.117817023 seconds)
    (144/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.098202141 seconds)
    (145/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.115039763 seconds)
    (146/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.079608278 seconds)
    (147/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.176809213 seconds)
    (148/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.124401444 seconds)
    (149/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.070034706 seconds)
    (150/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.068869313 seconds)
    (151/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.094722598 seconds)
    (152/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.131489572 seconds)
    (153/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.123567033 seconds)
    (154/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.069174352 seconds)
    (155/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.114728613 seconds)
    (156/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.0896129 seconds)
    (157/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.122114097 seconds)
    (158/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.181970448 seconds)
    (159/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.098014513 seconds)
    (160/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.11467287 seconds)
    (161/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.144403787 seconds)
    (162/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.071748887 seconds)
    (163/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.098560607 seconds)
    (164/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.128396646 seconds)
    (165/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.116547924 seconds)
    (166/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.153381993 seconds)
    (167/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.129839433 seconds)
    (168/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.124449748 seconds)
    (169/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.091266009 seconds)
    (170/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.121943842 seconds)
    (171/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.090177078 seconds)
    (172/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.116879278 seconds)
    (173/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.093051524 seconds)
    (174/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.172315348 seconds)
    (175/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.41576842 seconds)
    (176/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.177943419 seconds)
    (177/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.091771222 seconds)
    (178/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.123378049 seconds)
    (179/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.071871516 seconds)
    (180/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.14410827 seconds)
    (181/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.187482269 seconds)
    (182/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.094941478 seconds)
    (183/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.118598442 seconds)
    (184/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.126204721 seconds)
    (185/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.071051667 seconds)
    (186/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.068949964 seconds)
    (187/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.13153658 seconds)
    (188/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.071315196 seconds)
    (189/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.093897053 seconds)
    (190/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.092237545 seconds)
    (191/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.126774141 seconds)
    (192/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.069474606 seconds)
    (193/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.093607207 seconds)
    (194/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.100093298 seconds)
    (195/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.188817868 seconds)
    (196/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.132873649 seconds)
    (197/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.144749297 seconds)
    (198/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.098608351 seconds)
    (199/286) benchmarking ("sort", Bool, true)...
    done (took 0.23612488 seconds)
    (200/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.114510171 seconds)
    (201/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.073014058 seconds)
    (202/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.068956475 seconds)
    (203/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.096324611 seconds)
    (204/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.160351876 seconds)
    (205/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.090408601 seconds)
    (206/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.124560279 seconds)
    (207/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.070726388 seconds)
    (208/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.124210667 seconds)
    (209/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.142238308 seconds)
    (210/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.115085078 seconds)
    (211/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.179101329 seconds)
    (212/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.070484118 seconds)
    (213/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.068630389 seconds)
    (214/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.116304434 seconds)
    (215/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.119970707 seconds)
    (216/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.090849648 seconds)
    (217/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.0693354 seconds)
    (218/286) benchmarking ("sort", Float64, true)...
    done (took 0.270281617 seconds)
    (219/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.071271913 seconds)
    (220/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.089257882 seconds)
    (221/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.096634875 seconds)
    (222/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.069655635 seconds)
    (223/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.116472127 seconds)
    (224/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.069122715 seconds)
    (225/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.125461901 seconds)
    (226/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.092822482 seconds)
    (227/286) benchmarking ("sort", Float64, false)...
    done (took 0.18463598 seconds)
    (228/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.116730717 seconds)
    (229/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.090571492 seconds)
    (230/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.09532762 seconds)
    (231/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.070880081 seconds)
    (232/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.122773228 seconds)
    (233/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.109863622 seconds)
    (234/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.115380441 seconds)
    (235/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.078985753 seconds)
    (236/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.093968962 seconds)
    (237/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.090455331 seconds)
    (238/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.122328187 seconds)
    (239/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.072875372 seconds)
    (240/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.121261134 seconds)
    (241/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.090567231 seconds)
    (242/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.190222102 seconds)
    (243/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.124489023 seconds)
    (244/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.071216925 seconds)
    (245/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.116979146 seconds)
    (246/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.091228154 seconds)
    (247/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.071899008 seconds)
    (248/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.094690827 seconds)
    (249/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.187383023 seconds)
    (250/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.070893771 seconds)
    (251/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.0842234 seconds)
    (252/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.105109582 seconds)
    (253/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.090754621 seconds)
    (254/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.115800851 seconds)
    (255/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.124897783 seconds)
    (256/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.092194463 seconds)
    (257/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.1209585 seconds)
    (258/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.098337005 seconds)
    (259/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.093639479 seconds)
    (260/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.090082537 seconds)
    (261/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.117632681 seconds)
    (262/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.070034963 seconds)
    (263/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.11692922 seconds)
    (264/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.090249121 seconds)
    (265/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.11959964 seconds)
    (266/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.093271281 seconds)
    (267/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.12465435 seconds)
    (268/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.069514922 seconds)
    (269/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.114861399 seconds)
    (270/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.06914744 seconds)
    (271/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.117011385 seconds)
    (272/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.187499349 seconds)
    (273/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.081626218 seconds)
    (274/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.120614042 seconds)
    (275/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.093557051 seconds)
    (276/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.130975315 seconds)
    (277/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.070938875 seconds)
    (278/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.093864546 seconds)
    (279/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.097840489 seconds)
    (280/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.06952863 seconds)
    (281/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.094884088 seconds)
    (282/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.069049735 seconds)
    (283/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.115798116 seconds)
    (284/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.069703202 seconds)
    (285/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.093605669 seconds)
    (286/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.072521184 seconds)
  done (took 38.030958951 seconds)
done (took 38.992070574 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.111639176 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.161719426 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.124875034 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.119821668 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.129868109 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.119558614 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.10034213 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.128267891 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.103472268 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.132310517 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.127402817 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.07257114 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.126951977 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.101024546 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.127320231 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.150374872 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.103505935 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.123611009 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.122739477 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.09035669 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.123757584 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.08965972 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.118050659 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.072546366 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.127076518 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.098004137 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.122282363 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.124919609 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.090463319 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.115572533 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.095204581 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.124111434 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.089121129 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.130744576 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.12133989 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.099488378 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.127292021 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.099538342 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.11796436 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.1147056 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.099589206 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.115207965 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.098233709 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.123556474 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.097088734 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.122100909 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.123810484 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.104017936 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.148974115 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.119206583 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.100139368 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.125937514 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.100737292 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.123019604 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.093388296 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.125292546 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.120484176 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.122714197 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.12600738 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.119927788 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.099306107 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.124702357 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.09641986 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.125101767 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.123683981 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.10276812 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.12755565 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.096232751 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.127924395 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.119796579 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.092079564 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.123993529 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.094768317 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.115741687 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.099712528 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.127248966 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.089101163 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.122501759 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.122784247 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.096795563 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.115438377 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093868696 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.11874692 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.096633778 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.119241275 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.072042426 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.120444816 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.096742019 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.116609219 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.124814282 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.0981455 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.122545904 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.093785283 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.128611493 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.090417988 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.122266781 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.114778911 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.093045052 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.117512043 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.095788805 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.115608134 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093371217 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.125733271 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.092747009 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.123068127 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.128138293 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.091907955 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.122652213 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.090059059 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.115849068 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.130799239 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.103080321 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.116034134 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.09646799 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.114968837 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.098699234 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.115451375 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.089813804 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.116585858 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.114997204 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.098700707 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.115771313 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.094287723 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.1236234 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.10549743 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.116648224 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.095554894 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.119466776 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.115310549 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.097312554 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.11638961 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.091125772 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.118818189 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.081124323 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.11892681 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.091478829 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.127538185 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.095891688 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.129304753 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.120135349 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.101772443 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.120725876 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.096743057 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.124555927 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.091860168 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.106263691 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.096044382 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.122029436 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.095472587 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.116617951 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.116512634 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.092599854 seconds)
done (took 17.937335656 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.098493971 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.196134989 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.162406557 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.151901014 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.140486358 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.09319766 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.129491464 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.152547671 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.093113215 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.150248168 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.141798842 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.136197456 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.130987772 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.116899634 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.116018973 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.097483701 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.117833813 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.10800925 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.154565724 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.138274381 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.172644666 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.117216236 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.129313514 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.141979413 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.127174765 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.144243315 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.093789067 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.120974146 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.095454085 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.13421524 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.137284706 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.095974469 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.116012837 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.11522845 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.136274113 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.124477167 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.091669558 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.123453049 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.091639978 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.117182636 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.148108323 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.138093017 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.097849956 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.122966309 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.09836888 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.13329319 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.098889969 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.134412373 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.135136515 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.101141073 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.139839857 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.167456885 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.123022914 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.110598302 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.118131769 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.131374309 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.107486046 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.126583279 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.093239924 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.126307027 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.115814564 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.096190452 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.132595487 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.147215 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.095683429 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.133283714 seconds)
  done (took 9.233312176 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.115993125 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.151854562 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.134893594 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.110599228 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.118282445 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.091482785 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.118761203 seconds)
  done (took 1.863671723 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.099702879 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.149011005 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.118546196 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.145103498 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.159807913 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.118851064 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.129911158 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.117838011 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.112665734 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.11988418 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.141318694 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.134198773 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.120792368 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.125550901 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.121898735 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.118186138 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.144451299 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.094283639 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.120741118 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.119221728 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.121955331 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.140595979 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.095696084 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.118528386 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.110532777 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.11959678 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.171928155 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.097446466 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.121360042 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.121602014 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.092319359 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.159174438 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.136035415 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.104785929 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.119504943 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.135847179 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.113708009 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.117508219 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.110509691 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.124981419 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.137202571 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.095342515 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.119112553 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.091673095 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.123368248 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.105795637 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.123344353 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.120688382 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.097686655 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.142422351 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.093701771 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.138332758 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.093343082 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.12457228 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.119352694 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.099951255 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.129358081 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.093777319 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.142931301 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.119373424 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.114279229 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.139321138 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.135852788 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.11311076 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.122079424 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.111346795 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.137970226 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.121132638 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.09530077 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.122202868 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.112827197 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.117106371 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.119717739 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.108637742 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.120433824 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.12025786 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.148527632 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.122321647 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.103765837 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.122059337 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.092177241 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.120348225 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.146227618 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.096929676 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.119912447 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.096692381 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.122467886 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.115692139 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.09359355 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.122291775 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.091903373 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.120299478 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.095831177 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.12051324 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.094998641 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.140513304 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.120173082 seconds)
  done (took 12.605702021 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.101881253 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.123141622 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.097902782 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.122380157 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.093696505 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.121051076 seconds)
  done (took 1.693811607 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.13245767 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.123746118 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.13476041 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.100655557 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.163051269 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.139077126 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.112817833 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.129288416 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.139681019 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.106401788 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.139443531 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.140083719 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.145295739 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.101357706 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.138969656 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.125031445 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.113731299 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.132015312 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.133340474 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.101651882 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.144155957 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.126017574 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.101552544 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.141399335 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.123611657 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.099951721 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.131321177 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.132172577 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.106690914 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.130400087 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.128834337 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.098340019 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.127102353 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.128919692 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.113913309 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.129230748 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.127580916 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.100036305 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.13345669 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.125861861 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.114777458 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.127202441 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.132300604 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.099325439 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.130423323 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.127248982 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.099603434 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.133929919 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.140978401 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.1017061 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.128879071 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.099639495 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.124917885 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.124683788 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.100262097 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.129944099 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.125011776 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.112518264 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.128037938 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.127343053 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.097205836 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.124952558 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.1289524 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.09761741 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.136080887 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.125330073 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.101283787 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.127842674 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.12678787 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.100679561 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.125847195 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.122787915 seconds)
  done (took 9.865117214 seconds)
done (took 36.282551713 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.719652919 seconds)
  done (took 1.751220333 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.883466554 seconds)
  done (took 1.917525386 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.420858621 seconds)
  done (took 18.491970313 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.526365689 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.605618611 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.035686938 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.180286524 seconds)
  done (took 3.383307047 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.995968034 seconds)
  done (took 2.048368025 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.295486851 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.26578929 seconds)
  done (took 1.598533193 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.827697637 seconds)
  done (took 1.871411901 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.523251964 seconds)
  done (took 2.563898061 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.345417095 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.190139142 seconds)
  done (took 1.593681055 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.582461663 seconds)
  done (took 1.634591768 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.380657806 seconds)
  done (took 11.435699725 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.283954219 seconds)
  done (took 1.348853408 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.320186979 seconds)
  done (took 1.374455996 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.623742046 seconds)
  done (took 4.677051334 seconds)
done (took 56.729917304 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.110743583 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.135771663 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.106964993 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.130386876 seconds)
  done (took 1.529649308 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.117471516 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.128848207 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.108911438 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.126948037 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.135916417 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.099782003 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.130869789 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.132861716 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.100148476 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.128833711 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.128824799 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.102053825 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.130972394 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.102223241 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.124592595 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.130385497 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.105378561 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.127326743 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.129926233 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.101925565 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.123656527 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.102236657 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.13104076 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.124107493 seconds)
  done (took 3.931314194 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.112640156 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.129514673 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.100868289 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.124883154 seconds)
  done (took 1.524444649 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.112258592 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.142158849 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.10925189 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.132819816 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.138986824 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.110022813 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.124355687 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.101527174 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.125257983 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.129640505 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.095125497 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.146457047 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.137040471 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.10442145 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.132737948 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.092014195 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.122558025 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.137361054 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.103632036 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.13122763 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.097529021 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.130432507 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.119501122 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.114032174 seconds)
  done (took 3.947984569 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.182579739 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.133714086 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.144383352 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.100567799 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.168062068 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.146773799 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.093025939 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.14727275 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.120502574 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.109261485 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.125568797 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.168931997 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.108075002 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.120784331 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.120325932 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.09429707 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.133685883 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.106427517 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.123169778 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.134496653 seconds)
  done (took 3.648672509 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.110538415 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.130578962 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.099826757 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.127908592 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.103457054 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.127055215 seconds)
  done (took 1.760158708 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.109133852 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.125388613 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.098266238 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.122185129 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.098278038 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.120238174 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.091388362 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.122237805 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.119013088 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.094014807 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.120867472 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.093037977 seconds)
  done (took 2.376812391 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.533617229 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.128268114 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.125965189 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.093731438 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.134879017 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.127733242 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.11845973 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.13339523 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.157911294 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.101170888 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.12821855 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.103442003 seconds)
  done (took 2.956086142 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24894316 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139902075 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.307134353 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.404372907 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187288483 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.181132684 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.295646687 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1740398 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.238135254 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.171692367 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222029165 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195138951 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.169951716 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217826564 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145689139 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.14986069 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199934599 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.281089371 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170861253 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.260295114 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186414516 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.183063772 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.199216336 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168194335 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15219737 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191062979 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.107302218 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14573089 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229099496 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196932378 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20749263 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179525407 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.173708705 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.472125752 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.273733168 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210037984 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.309657104 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152128932 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.186058592 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.187403078 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.283747895 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153768444 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223467518 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177126877 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147880915 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.248874855 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.331929979 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.188270519 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.154839856 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157893644 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.244576556 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217317337 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.211993939 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154667521 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.351176253 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159716115 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.16892282 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203584828 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224849793 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.252027965 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208232799 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.136533607 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.210176339 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236754828 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204722082 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.170884836 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.198136105 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.164898202 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219464006 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.213932692 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193967138 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18544941 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.226849099 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125705146 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20950957 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.185266696 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179963112 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.273631939 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201780152 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.133533912 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180370041 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164079176 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118709236 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.202517822 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133871674 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231082598 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156800004 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.178492761 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257524087 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.172914303 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172306666 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202230425 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191997024 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162477838 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.093213274 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169843539 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.171330331 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188324389 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153152892 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.173348535 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167064767 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.146786746 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186271912 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.137887191 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20245924 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.100492187 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.361323618 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191719839 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.133219175 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170401391 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15552413 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.15638111 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191690333 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210212819 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15788203 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149918772 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227608286 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225666018 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.127278521 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.222234764 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.223086086 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.158733327 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165614368 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218756975 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.262630229 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156222293 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221399125 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164905772 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.150248593 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.117811723 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230968918 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17268359 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.176411134 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120375434 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.230593958 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219035747 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.141988982 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152939748 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215392422 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15010317 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146562313 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16170815 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134224398 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.150738026 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.155423161 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.161767762 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194106931 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194860808 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16945836 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171986691 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159261872 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261313408 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156988578 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.164374114 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162885627 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.10737695 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.24019845 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218541662 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145045103 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219312462 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.184892399 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.248280278 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180581523 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140248453 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.184451276 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107754391 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.126963387 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208699489 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.209201593 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175600259 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.212535947 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.249334017 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.200677678 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.199227913 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182347339 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221985483 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.155504172 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165298469 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.153303234 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177279511 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172461701 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.137806656 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.125836853 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.149988903 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163683509 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15936171 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150424803 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214662867 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1873998 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.241467777 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.175710934 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16404274 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.201672888 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.145145075 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188592541 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.421176697 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155294195 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.206565281 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.241313732 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207015907 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156141058 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220111961 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.135992633 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139147998 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.130776187 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.21202079 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123075456 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15210446 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178246989 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.200827705 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.371392521 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180076435 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.248829058 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196780329 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.207873517 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.1372908 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.184600063 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197541158 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196278991 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.19853914 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156575209 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.135541897 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.193112978 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169187409 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257138688 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185000448 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191601692 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.246113811 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.164847378 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118522289 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165939026 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186967331 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169118593 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.220244635 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132798791 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155190466 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.352199767 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.109766902 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.17094635 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229098254 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178152971 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195230834 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.166008113 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204221755 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143839658 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177694115 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.17562254 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181156596 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.12127064 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.34406063 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.231491454 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131260985 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.358575376 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193184142 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146202375 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.336387234 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221520146 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.378756497 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145462162 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165794935 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.17590295 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.180423307 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.329544389 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.186179297 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175726262 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232853215 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143024911 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.153308057 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153917239 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164879164 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168165479 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.118044547 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.164132536 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.225630498 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.122124824 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230086353 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162828485 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.172556123 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189343526 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.134639678 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.160485782 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167967218 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.265238025 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204049425 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206709769 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.163967439 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.194649427 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.250572584 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110466936 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148023801 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.149561406 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.194701732 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1513898 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211844288 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.23921588 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224080412 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200605529 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21785954 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.124636952 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.136162013 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.175616985 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18697524 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.255832665 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162048314 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.135468273 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.248522445 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.120326152 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148337318 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.180510125 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.314815206 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15102032 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226804699 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.091116567 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.306016165 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134783543 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139193599 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.173299821 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206267165 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.151895833 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.166649257 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181424618 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164823767 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.181237673 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166019188 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.241918614 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236640285 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249323963 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19911065 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.14838236 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.176047896 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.325177189 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195693672 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207140443 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.121551964 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20203815 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.244795843 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.211389169 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.160497598 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185225647 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185399017 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.175862648 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.236736406 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.123771378 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.252718282 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119153108 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245289372 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17094259 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159544109 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192895496 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.208844492 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148478439 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220680471 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205347711 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149645549 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.119779478 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175283254 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22692232 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168130379 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.112861814 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224890173 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.11058636 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.240720692 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255581634 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152251802 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.172332058 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161845557 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.151259253 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170343136 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176778785 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123251745 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.185064111 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212753138 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.150091883 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.2339989 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22371361 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188901642 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.359785476 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148562071 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.723633021 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.116451272 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.244802043 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134372665 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225893367 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135615916 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220189871 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.177459775 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186006199 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214892304 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176890497 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.249028198 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24261256 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.198331247 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147431304 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176442955 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162335308 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.131606755 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169602641 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182345688 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176881959 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.16144158 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.227528096 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17384312 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.119095875 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157578334 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216313568 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.164300276 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228699311 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.195983675 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.124642012 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220652274 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210583992 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148963434 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.201371876 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204084739 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158357969 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165114481 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.153724117 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.167777817 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.287618711 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.110245225 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200233083 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.237268709 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177597471 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186570494 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.16506178 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211967537 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174974946 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.2365965 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161031905 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.174049081 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.172916059 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127288953 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.146534854 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172260721 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185420828 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.16692378 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.179535738 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.184685915 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210358161 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.138287802 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130949347 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.341141609 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184599565 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225757103 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.150534168 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143957263 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173673251 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161904832 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.197544536 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197638275 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.152716081 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151419377 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.120893725 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.176547141 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.152661126 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16478583 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210103987 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.32710642 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.245695874 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.120831866 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.30012282 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156289752 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173546039 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.129446027 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.120331192 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16791652 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163850146 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170161817 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.21541881 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.29014623 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.164944186 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.150696528 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168473807 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.109260009 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151676071 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.183015916 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17894666 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197881753 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15863991 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.122900448 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174076905 seconds)
  done (took 92.299624135 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.189075796 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.145474913 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.156105344 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.210260086 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.185989357 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.302119604 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.217362874 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.262995649 seconds)
  done (took 2.8214268 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.105733497 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.16294224 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.173435748 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.15006195 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.098169051 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.128283984 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.406019489 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.147186361 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.102334521 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.165701662 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.163218796 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.136120308 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.607556053 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.103742397 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.134748584 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.119059615 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.09635965 seconds)
  done (took 4.146226427 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.268465198 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.514912323 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.108245554 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.20423288 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.16842339 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.122399311 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.741615798 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.126113068 seconds)
  done (took 12.411163878 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.13746648 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.160918573 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.178393769 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.150787493 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.166551851 seconds)
  done (took 1.955609692 seconds)
done (took 136.357936212 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.110225959 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.143236643 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.110545507 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.146270008 seconds)
  done (took 1.654337776 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.109177876 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.080483933 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.115250476 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.085760682 seconds)
  done (took 1.549628606 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.213379537 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.188923127 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.428573902 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.081891543 seconds)
  done (took 1.704379582 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.129485678 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.147417988 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.147760577 seconds)
  done (took 1.593960342 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.118581613 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.13552079 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.113755938 seconds)
  done (took 1.525131567 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.117987824 seconds)
  done (took 1.280895461 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.123987245 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.156942931 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.124257309 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.15607739 seconds)
  done (took 1.72472531 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.110825289 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.142640762 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.126165927 seconds)
  done (took 1.545632147 seconds)
done (took 14.141111667 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.119924022 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.442470332 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.433758198 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.123697201 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.742283065 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.424472212 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.042715891 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.164475463 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.187186878 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.136897937 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.124604306 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.716633941 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.063227087 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.358318697 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.05173704 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.479002934 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.688145048 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.134054495 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.102036298 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.128928723 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.024137772 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.133827744 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.133256014 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.104223088 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.715080439 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.439355059 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.108739142 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.479775231 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.105027919 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.145010076 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.391264793 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.136057805 seconds)
  done (took 17.730243109 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.11079465 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.197570723 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.145461237 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.105737057 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.135281171 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.105513659 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.134718884 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.13235879 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.194759267 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.107307738 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.156619682 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.103717145 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.142756023 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.13606564 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.128435846 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.136049829 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.138209979 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.106853622 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.135319472 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.107525556 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.154210546 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.103710623 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.13728302 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.132396819 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.103892349 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.143401295 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.132291104 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.103663663 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.131882971 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.114520806 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.138449774 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.106658016 seconds)
  done (took 5.331164391 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.157789727 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.208556637 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.148244899 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.171952652 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.192218245 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.107758078 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.217993843 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.163034665 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.2061159 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.135904235 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.127422136 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.136354368 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.172638056 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.108992892 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.158241815 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.104765629 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.137036083 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.128133732 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.105104739 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.136789597 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.121854991 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.135456582 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.133732577 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.104270111 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.136040674 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.149963197 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.106871553 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.133032305 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.105661461 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.144872106 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.137289707 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.108798343 seconds)
  done (took 5.714796676 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.109953189 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.138886158 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.122601327 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.155128779 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.13754676 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.109804899 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.140599895 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.108657694 seconds)
  done (took 2.196788229 seconds)
done (took 32.141462676 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.125344353 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.142322146 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.119769691 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.150847728 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.145676033 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.119609151 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.135620223 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.117702189 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.150520741 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.113123944 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.153032142 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.133553343 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.107161463 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.133196225 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.117348554 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.135114718 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.14775628 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.115333534 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.150345345 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.118380357 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.137865917 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.144545819 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.116367983 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.148469425 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.111624235 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.144652209 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.151122915 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.110397619 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.131375316 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.105808507 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.138126188 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.115440686 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.133139324 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.148205175 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.104445949 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.133716084 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.106406841 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.140795471 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.149012376 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.11802791 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.143605688 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.116344027 seconds)
  done (took 6.641080694 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.123799034 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.156886835 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.119984889 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.122969821 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.100751075 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.089013565 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.151376632 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.088909704 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.12177923 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.118176349 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.109507527 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.086130252 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.111723879 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.079706322 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.084563443 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.11026866 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.08386681 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.077379671 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.113706386 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.080809365 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.113391331 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.076948768 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.082058257 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.113406815 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.084181027 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.113795393 seconds)
  done (took 3.896249156 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.113184226 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.155023896 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.126221099 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.190185465 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.172635975 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.144368823 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.115656647 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.156269367 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.12197461 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.136478601 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.139828274 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.135695423 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.15463592 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.111567786 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.140588096 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.150779396 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.120011872 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.138660442 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.115058014 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.15822567 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.152324278 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.115805016 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.156816075 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.147213944 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.105963411 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.138386612 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.112658804 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.150478953 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.111952264 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.147341236 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.143599153 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.108161663 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.139486927 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.148102775 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.113010611 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.138093652 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.125756656 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.152456976 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.14572845 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.107296499 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.143066525 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.107418492 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.159536472 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.177432268 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.106042518 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.144934088 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.107458146 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.147975724 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.137948147 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.124537085 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.145908565 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.104266063 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.139870078 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.136038555 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.108108658 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.152400595 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.107029049 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.141202694 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.114011891 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.142522115 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.148294799 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.110206548 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.15310109 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.105132318 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.146580672 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.137381321 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.107491715 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.133773555 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.129601875 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.14332252 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.177595712 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.097885113 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.131388132 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.115392315 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.146379477 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.141752967 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.105975824 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.151789126 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.114316484 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.139959163 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.144970909 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.105058876 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.131707393 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.121289904 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.131790442 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.135986065 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.108273277 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.143784381 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.108599961 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.138162632 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.12003536 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.137079368 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.139732204 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.119636881 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.136686276 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.10682826 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.14426246 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.140327039 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.105549663 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.15138403 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.109899231 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.139682959 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.147506798 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.106963398 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.139914769 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.1146765 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.144124397 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.104801932 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.144136507 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.144887134 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.105537973 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.142181578 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.10877428 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.139820852 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.146449225 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.11399237 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.142258853 seconds)
  done (took 16.687500858 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.253598458 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.239543125 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.209128873 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.325773037 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.151334552 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.16424648 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.236609211 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.173975833 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.107880626 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.179131761 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.189952732 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.213450176 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.186116807 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.204745233 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.190809806 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.137456463 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.157485558 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.153230985 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.270656384 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.287600426 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.160335698 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.145976218 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.18079935 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.179709717 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.121001002 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.14755084 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.156126516 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.12172932 seconds)
  done (took 6.43448113 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.122828237 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.170851231 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.142794068 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.129416433 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.167721843 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.138109715 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.111616028 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.139015797 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.119247577 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.154103795 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.138593881 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.112286421 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.145932918 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.148503524 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.107278723 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.147065937 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.115276192 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.139954786 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.13897645 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.112256944 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.147043208 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.115385363 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.141225676 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.10403024 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.147997689 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.134195627 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.098557153 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.152187335 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.138967552 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.128440063 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.136599983 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.113760858 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.149936035 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.129181548 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.106115655 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.139507766 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.107838412 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.141482048 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.10758598 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.13766936 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.134742288 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.090948929 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.102937731 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.152336662 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.137408312 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.091159645 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.137296638 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.111246388 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.136462581 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.13421148 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.109239915 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.137984967 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.108969947 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.144410822 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.109283438 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.138191024 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.108601432 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.128314181 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.105913231 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.137685284 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.093050982 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.129483243 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.141126415 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.102172226 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.146759192 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.110549542 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.131947553 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.107663243 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.142175113 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.141295764 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.109264896 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.141318971 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.103627913 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.138999144 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.107830162 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.139235326 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.106635079 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.135719239 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.133686946 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.107251284 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.116284648 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.107308359 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.084442697 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.140440905 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.134427907 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.106096831 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.139596523 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.112852408 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.154305825 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.139977361 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.115352746 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.138104283 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.105331787 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.14140779 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.09287984 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.134052513 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.151714458 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.122187819 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.132666985 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.132845672 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.118522641 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.133115582 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.099825364 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.110844336 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.106783529 seconds)
  done (took 14.481749015 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.145690461 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.169801556 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.139550417 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.125197584 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.174263196 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.173973644 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.113536219 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.147578862 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.137958352 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.127150374 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.139355308 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.115322319 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.138612404 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.120366279 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.175548029 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.149026928 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.107859626 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.153734964 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.14040483 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.183878385 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.126500367 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.155251719 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.123786307 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.139423376 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.14310857 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.125263953 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.176390422 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.151994701 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.120878269 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.158884653 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.120682305 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.178052714 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.158578 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.10975886 seconds)
  done (took 6.074162671 seconds)
done (took 55.39104169 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.28218202 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.523897373 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.262576937 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.22090849 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.300701585 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.293873415 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.277064838 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.26835997 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.533687866 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.267844711 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.536116158 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.901212512 seconds)
done (took 59.859439287 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.335731476 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.420669604 seconds)
    (2/2) benchmarking "String"...
    done (took 1.563556745 seconds)
  done (took 4.175412948 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.82326095 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.217592959 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.528938972 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.291181399 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.267512186 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.559186209 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 3.103483224 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.691975776 seconds)
  done (took 28.84967958 seconds)
done (took 43.374494038 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.280242277 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.294758468 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.306648584 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.245306221 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.386108613 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.298012353 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.727097413 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.298342388 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.290295462 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.254713939 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.270295446 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.269853628 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.313894863 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.694437711 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.269248655 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.268769723 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.368868441 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.80469193 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.683558853 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.284660461 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.282246562 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.329817778 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.308588443 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.282339112 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.321030296 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.268527065 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.268510069 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.275445913 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.947789546 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.269750907 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.288232235 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.835364451 seconds)
  done (took 193.479597079 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.267747804 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.379902635 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.503648391 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.342245773 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.664282384 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.473513059 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.41844706 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.909322822 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.294992812 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.294619937 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.478835584 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.275149976 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.59785856 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.249701536 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.29933675 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.307756083 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.48382711 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.61892298 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.315450269 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.435038046 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.286162207 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.481166429 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.399161418 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.462313616 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.32989812 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.345147864 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.304863167 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.305468856 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.464754517 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.384990798 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.313682206 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.316541767 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.913768621 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.123806186 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.295613867 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.270709858 seconds)
  done (took 152.80112725 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.270851082 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.269577659 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.271260086 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.271682331 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.304712799 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.270952741 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.857421958 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.859102846 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.776791482 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.656029031 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.752954877 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.564684198 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.274545321 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.368277641 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.284054032 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.271861346 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.288060059 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.318942022 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.278194439 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.272672651 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.858041451 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.283418701 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.37270115 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.451446834 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.290959669 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.305133103 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.661425005 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.274436956 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.305529757 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.611184312 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.32748163 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.27210792 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.665261993 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.531675219 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.389241401 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.274498159 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.307252306 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.274863447 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.557683622 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.274076011 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.27537508 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.275857992 seconds)
    (43/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.273631686 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.959061167 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.27314849 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.858500481 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.272292919 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.24458227 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.272845951 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.272954456 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.937187543 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.986538467 seconds)
    (53/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.299921404 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.27468841 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.274247264 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.277308367 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.274965961 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.275395028 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.311391228 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.98295145 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.378123139 seconds)
    (62/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.2966546 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.275096625 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.278308847 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.308998087 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.275493805 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.351515863 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.276395424 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.371635988 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.351582203 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.492387321 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.862106809 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.273721324 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.37671353 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.397249011 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.27493266 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.276751767 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.275163324 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.276901792 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.388053513 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.274579322 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.695181421 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.455708619 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.296286566 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.756286401 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.382264359 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.276801167 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.726203888 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.282708758 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.277121072 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.05293896 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.375783274 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.277582549 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.277562722 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.275416441 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.694189517 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.865528101 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.578716528 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.284797423 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.894598449 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.281591607 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.714690625 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.854103625 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.006192919 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.286597098 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.392803834 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.459312201 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.297102048 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.276496255 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.751322679 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.286479418 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.331384155 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.275797038 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.67900494 seconds)
  done (took 375.796862957 seconds)
done (took 723.269219616 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.888857612 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.886642889 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.003722895 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.881394176 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.836048685 seconds)
  done (took 10.696374991 seconds)
done (took 11.8942698 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.480968756 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.477790748 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.344006308 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.480827433 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.313732894 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.498873201 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.457328425 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.297294619 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.385362571 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.365014335 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.385643809 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.333954535 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.31603881 seconds)
  done (took 19.337597216 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.612794201 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.614395081 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.342103568 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.622663179 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.318918576 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.619411157 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.495681201 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.507779646 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.50886579 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.313194944 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.290982786 seconds)
  done (took 17.450778233 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.621132708 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.614423739 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.343108815 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.619694843 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.320022763 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.613122141 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.492656831 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.508504418 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.509027827 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.313803425 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.291090496 seconds)
  done (took 17.44991947 seconds)
done (took 55.437477447 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.287639103 seconds)
  done (took 2.490963384 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.326873797 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.492656548 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.310632482 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.29354082 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.289620679 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.288160638 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.292756449 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.289451305 seconds)
  done (took 11.787037234 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.288138561 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.284598834 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.284412429 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.287414512 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.288002761 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.284867825 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.285949928 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.287159312 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.286497306 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.28612574 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.288080572 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.290277106 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.289227934 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.284615323 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.289684506 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.285102617 seconds)
  done (took 21.796417484 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.288702918 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.284592642 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.285308608 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.286326887 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.286548398 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.287015711 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.287260129 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.285882238 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.287550653 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.287399804 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.287986333 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.285378778 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.287085028 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.2866359 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.286100222 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.289320393 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.286001751 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.288251066 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.290934082 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.28664258 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.287888032 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.288570228 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.287767009 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.28942082 seconds)
  done (took 32.102601655 seconds)
done (took 69.377720703 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.92134256 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.956157703 seconds)
  done (took 7.084383563 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.349614505 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.34742439 seconds)
  done (took 3.902711481 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.291311841 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.287459637 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.289244111 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.2903488 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.288153845 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.287545818 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.289615974 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.288305068 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.289769791 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.287896095 seconds)
  done (took 14.094957925 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.288428626 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.288209885 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.288244568 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.289604269 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.289166123 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.288617987 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.288723473 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.28891663 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.288914773 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.287046583 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.289614757 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.287323779 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.289326937 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.288591277 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.289478377 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.286866689 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.285844743 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.287159071 seconds)
  done (took 24.392957227 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.291219763 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.315567185 seconds)
  done (took 3.813273778 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.416446458 seconds)
    (2/7) benchmarking "second"...
    done (took 1.331651937 seconds)
    (3/7) benchmarking "month"...
    done (took 1.404715717 seconds)
    (4/7) benchmarking "year"...
    done (took 1.388630103 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.330397852 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.312187036 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.335832105 seconds)
  done (took 10.724629256 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.293254349 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.47717069 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.583832349 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.896511593 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.297148964 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.299067138 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.183815043 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.300028868 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.296354179 seconds)
  done (took 14.830096772 seconds)
done (took 80.04808695 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.303558747 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.297976476 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.570103625 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.293836299 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.300094952 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.626037916 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.302561327 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.41551553 seconds)
done (took 38.30996368 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.285491323 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.275719467 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.097524512 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.293715832 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.371735245 seconds)
  done (took 19.242060331 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.354319559 seconds)
    (2/2) benchmarking "read"...
    done (took 1.614337469 seconds)
  done (took 5.17216776 seconds)
done (took 31.903836875 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.290205446 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.286671589 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.295003095 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.295649079 seconds)
    (5/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.292912718 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 1.286975712 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.294375985 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 1.290174609 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.287521988 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.294387357 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.298608787 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.29442536 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.293237677 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.295554729 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.288337896 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.290270421 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.293457283 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.287079481 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.290318253 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.288883322 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.292020755 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.295285137 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.288720831 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.287527911 seconds)
  done (took 32.199427271 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.292533858 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.291787324 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.292238201 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.295780517 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.294832867 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.29592029 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.296221142 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.289089618 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.293740765 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.29467382 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.290056162 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.29141135 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.291401616 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.290026385 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.292084771 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.292486867 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.294760955 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.289585317 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.291757346 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.291986381 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.294122498 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.293741103 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.295738366 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.295871593 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.290206119 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.293186562 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.293275355 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.293688838 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.29547531 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.291937044 seconds)
  done (took 39.996448313 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.300657526 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.302366033 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.2978669 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.297406892 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.297100368 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.298203717 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.295690584 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.298295591 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.2968827 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.294842326 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.296267919 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.297335628 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.296853049 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.2956695 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.299655489 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.294843359 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.295887995 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.298602087 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.297434741 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.29847781 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.297077518 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.296086445 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.296794882 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.295416967 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.296322996 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.296328502 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.299457352 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.29362642 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.298530762 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.296756192 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.298991354 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.300575981 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.296319839 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.298611786 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.29775081 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.292538189 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.300962831 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.301766504 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.298805291 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.296373873 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.298909373 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.297118572 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.295395775 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.294637101 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.300727101 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.299987536 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.295046338 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.300253473 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.299022566 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.296721627 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.298745188 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.297515213 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.299292357 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.300730915 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.297680271 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.298913474 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.297115954 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.302422738 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.300579798 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.296561225 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.301734508 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.298296629 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.302672454 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.301998379 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.302644124 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.301938351 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.299530446 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.299912979 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.30028042 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.302166445 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.302240775 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.301792513 seconds)
  done (took 94.690124259 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.303563813 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.2992692 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.296998156 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.300715716 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.295242364 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.296347685 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.29936546 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.300519464 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.296195719 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.301730686 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.30239931 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.298104325 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.299426 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.298370045 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.302191126 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.299647137 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.302666767 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.297296667 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.299848046 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.29958242 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.300651479 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.302106663 seconds)
  done (took 29.803562668 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.30570619 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.301605896 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.298129434 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.300470835 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.298988826 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.302155152 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.303003655 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.299136376 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.298715104 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.300297975 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.298830941 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.303747931 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.296786071 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.29515948 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.299998155 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.301405467 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.30198724 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.302241126 seconds)
  done (took 24.619071453 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.298488036 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.299059168 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.302191169 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.29607399 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.300539266 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.301488561 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.295926611 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.304114758 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.298059052 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.30035826 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.299332554 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.302425699 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.30189105 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.299218004 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.302049239 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.300963613 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.30406172 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.299158624 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.302220709 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.298753152 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.301150965 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.299203597 seconds)
  done (took 29.819160025 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.301118277 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.301262147 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.299705342 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.298728439 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.300335825 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.299360212 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.30105589 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.299839483 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.304162187 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.301887379 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.300446964 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.305395982 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.301780998 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.298908684 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.300315536 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.302390293 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.302918864 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.299863111 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.302522121 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.302676861 seconds)
  done (took 27.238870828 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.303192079 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.301066451 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.30270393 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.304341622 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.301604638 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.303793726 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.302586096 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.303401674 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.301597486 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.304360272 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.303945554 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.303364936 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.302866667 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.301859129 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.305005061 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.302293821 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.299776204 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.302468765 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.306146942 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.305540686 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.3039495 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.30373015 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.302953648 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.302143549 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.305152299 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.303651368 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.305425678 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.302623887 seconds)
  done (took 37.705597504 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.301812114 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.304738833 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.301878786 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.30208359 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.302264247 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.303655483 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.304899435 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.301935071 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.304836459 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.301717134 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.303928674 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.306355697 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.303376092 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.302283552 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.303305597 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.299048337 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.304851028 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.299559641 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.298452797 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.299170642 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.305612108 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.306142705 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.305638339 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.304164672 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.299790896 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.30882049 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.305157274 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.305654137 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.307793616 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.303044736 seconds)
  done (took 40.32063645 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.325157027 seconds)
    (2/2) benchmarking "in"...
    done (took 1.325198943 seconds)
  done (took 3.86742971 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.300726975 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.303175806 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.305062204 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.304828152 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.306153671 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.307354188 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.303698018 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.304498419 seconds)
  done (took 11.648516652 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.308874448 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.307479365 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.309843437 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.306272307 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.309581544 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.30456375 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.316071346 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.32525772 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.30917511 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.311650835 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.313889126 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.314556313 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.307382173 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.305551166 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.309294622 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.31234938 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.306564849 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.310946236 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.311782048 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.309496888 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.309162369 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.308226718 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.311804181 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.304714198 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.312603135 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.316522191 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.330628695 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.310030892 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.307785773 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.30834473 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.308062891 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.300698766 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.312484417 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.311384852 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.306476328 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.310120343 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.319754665 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.330525891 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.311420275 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.331691658 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.307873883 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.309275232 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.311288782 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.309476102 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.311441055 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.312770733 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.307514684 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.305414159 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.312060808 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.313626695 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.311815461 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.307552972 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.304539544 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.314876884 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.31256463 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.318013445 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.331572199 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.310753837 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.317681299 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.31855942 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.343123397 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.336007816 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.314189446 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.308022231 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.320073014 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.331478348 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.318075726 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.332412207 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.307657767 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.309091555 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.317832668 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.340825961 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.33486286 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.313381522 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.314087122 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.311034682 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.311487466 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.309410318 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.316853888 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.333944191 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.311410999 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.312455722 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.318169946 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.327858252 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.312670986 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.313439648 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.313137902 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.31104068 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.312458783 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.322652134 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.332300996 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.311459393 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.310581971 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.312968154 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.311824369 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.308882185 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.310680025 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.313650978 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.308364211 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.310675817 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.310176334 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.315260139 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.318841804 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.314812078 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.312375153 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.320046611 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.330307563 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.312506926 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.321326185 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.329827115 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.313186359 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.314425223 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.316418226 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.309339981 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.313270375 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.318177335 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.315272373 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.313334453 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.317191055 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.313632702 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.324375539 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.338671802 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.318650976 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.315087721 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.320989933 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.318981971 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.315579927 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.313438626 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.313926394 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.313884098 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.313088983 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.314666464 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.309091378 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.316989063 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.315306996 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.315679395 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.311353161 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.312580198 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.313941953 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.313409617 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.31289463 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.313593364 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.316153468 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.318135023 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.317306018 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.314528313 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.323381713 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.337036589 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.31565355 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.318340382 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.314256196 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.318362044 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.316539362 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.318206073 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.315160782 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.316991254 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.317329302 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.31596403 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.31695084 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.315029499 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.316020323 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.314983823 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.318020078 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.318856108 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.320773258 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.309742698 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.314275133 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.312706398 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.312247393 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.31667369 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.3174779 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.31452897 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.319833161 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.320194874 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.314481746 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.316052465 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.319980063 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.317911427 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.315576743 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.317561455 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.318370371 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.32664701 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.316515297 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.323080637 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.334590938 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.319714015 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.3195594 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.320024676 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.3149716 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.316613301 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.320597864 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.324532792 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.330747435 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.346789033 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.316806107 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.313787806 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.316870507 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.318534024 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.318787227 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.317385045 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.315464313 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.314124371 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.312924541 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.318909146 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.320717373 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.319581306 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.316933599 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.317547547 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.314500575 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.31930234 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.317499732 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.316863417 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.322009644 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.313764463 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.320155559 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.318123924 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.315656416 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.320142955 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.320531747 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.317987393 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.318848189 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.321128523 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.32359011 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.336730034 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.324141343 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.321345526 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.317294877 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.319017592 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.323947938 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.321669316 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.320007515 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.324985363 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.343230253 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.321654705 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.322959657 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.338444626 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.318872984 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.322500353 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.319235238 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.318675486 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.321507373 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.327774637 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.322872365 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.322482313 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.32310769 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.316891766 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.319853602 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.327165843 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.33405474 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.319840973 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.320905071 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.321975685 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.318777156 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.322189869 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.321766326 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.322604763 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.326278615 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.321216798 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.32421601 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.322638071 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.322240823 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.321056273 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.322095675 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.3237127 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.326181217 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.32986963 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.337417017 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.321761876 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.321713016 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.323667829 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.321043051 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.316276034 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.320335814 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.33028359 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.349124136 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.326759318 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.338196168 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.324104868 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.330222849 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.340024558 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.323098103 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.320163839 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.323157966 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.322778282 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.319945606 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.318875898 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.323148797 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.326549428 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.32737438 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.32646768 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.327642194 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.325020929 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.323447089 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.32661854 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.325341688 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.326902618 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.327174266 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.324648972 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.323469215 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.326481193 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.323686196 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.323852294 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.333463275 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.345868597 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.322548227 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.32432163 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.323778854 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.320940353 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.326845031 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.324227851 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.328268313 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.332631801 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.328950285 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.333757988 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.329203583 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.337253515 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.345869191 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.328373404 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.333197349 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.323986074 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.326109315 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.328321537 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.325418599 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.331878526 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.347297363 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.32781297 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.329714484 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.326179564 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.328361541 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.325078654 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.327703894 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.326975655 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.329188131 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.335382438 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.349783503 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.333655479 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.328856046 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.324483276 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.326832218 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.327455893 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.324305341 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.327784605 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.325261589 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.327291041 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.326151098 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.327954434 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.326850278 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.326888583 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.32796728 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.326139388 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.327567801 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.333817496 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.352373914 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.332015788 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.330167673 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.336282303 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.347843695 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.33580879 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.349628894 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.326270879 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.329121663 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.327056245 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.328299022 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.327943639 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.327952488 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.329074032 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.330041163 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.332302672 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.330095942 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.331985705 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.330536561 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.331178994 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.327729255 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.337634283 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.347399209 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.330180085 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.334206395 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.326421738 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.329446047 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.334048128 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.328174467 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.324400185 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.332753766 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.340088497 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.336097522 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.327687874 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.329799627 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.33100389 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.329749579 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.32757165 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.331842466 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.332051253 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.329397183 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.326159074 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.32868032 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.330543915 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.329811392 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.33065325 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.332242051 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.329665154 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.33936286 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.349666191 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.330383665 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.32970905 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.330290183 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.330673782 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.328526461 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.3291754 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.330720977 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.326469128 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.333265978 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.33636764 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.334768849 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.331805887 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.330421342 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.331050344 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.333738801 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.330436159 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.33449281 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.331768244 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.333863727 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.329629412 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.33185214 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.333102835 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.328185939 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.334093454 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.332683357 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.33399276 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.332742655 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.339849701 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.333379863 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.328856027 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.331624416 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.331662984 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.33204704 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.331126404 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.34188516 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.356945915 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.342942472 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.340429018 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.331363474 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.333346756 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.335558614 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.340623715 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.333125653 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.334998877 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.332741253 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.332103556 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.334516261 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.338287677 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.335627317 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.339528042 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.350907615 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.330294586 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.340126892 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.35745017 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.333815578 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.335840612 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.33836288 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.334532261 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.333052206 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.333321488 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.334457805 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.343209948 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.359160984 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.334361193 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.334872564 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.334422162 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.33525665 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.338627396 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.333304519 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.336073616 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.33026428 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.335910453 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.334822872 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.333482559 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.333047167 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.335048676 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.33740065 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.339819424 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.34155659 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.330425779 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.336440197 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.334924516 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.335240299 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.333777397 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.332581592 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.332291863 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.332955324 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.335890839 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.33547732 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.335239372 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.338387041 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.33508244 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.336556656 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.336388764 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.335735942 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.341357591 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.347241221 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.344615616 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.334137987 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.333651207 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.335388588 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.340870538 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.337782143 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.337057292 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.339114589 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.338682503 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.335942867 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.338758285 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.337350713 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.342069907 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.356127189 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.360031548 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.337573943 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.338479349 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.341054315 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.33818501 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.334914799 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.338884392 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.337932075 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.340038278 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.344195152 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.336818629 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.344097934 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.356651316 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.339023218 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.339584319 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.3410444 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.344828292 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.340706253 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.336482298 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.338792695 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.341085741 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.356383819 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.357337729 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.346213437 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.367708719 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.36096698 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.340939218 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.340025351 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.338535435 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.337231936 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.339116969 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.341551462 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.33946264 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.337784723 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.341805557 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.339723452 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.344236587 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.339095644 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.342205846 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.340033664 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.337454755 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.342827801 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.335687658 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.34094239 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.338218197 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.339984225 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.338270993 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.340537433 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.341237906 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.351013671 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.367581174 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.339980382 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.339540109 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.336125578 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.342972421 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.346203387 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.351510967 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.347424071 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.339827007 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.338254168 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.342893346 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.339310339 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.338344337 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.338258552 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.343099122 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.340008633 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.337743632 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.35276495 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.365495639 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.344511297 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.357133327 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.34331883 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.343963708 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.341592756 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.343277237 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.339583333 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.341967436 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.346181953 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.346112353 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.341449065 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.343548565 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.346723524 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.353158627 seconds)
  done (took 792.309264413 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.341273999 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.339100443 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.342578497 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.339330578 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.339169008 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.339200289 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.339249692 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.339518378 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.339455451 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.340928305 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.339541106 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.339287517 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.340080015 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.342642821 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.341687514 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.340919554 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.339725207 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.342825763 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.338762192 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.343511482 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.341545744 seconds)
  done (took 29.397710517 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.342779403 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.342730369 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.340181915 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.346243461 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.341707549 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.344058335 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.342178532 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.345195598 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.344387015 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.34128732 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.343839416 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.34452481 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.340595173 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.341739999 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.341279891 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.346207888 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.344345962 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.341084072 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.345631338 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.34443033 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.344482923 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.342496478 seconds)
  done (took 30.797436654 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.344371784 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.343822462 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.346646488 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.342568173 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.347395498 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.342666352 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.345392841 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.346143496 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.344790273 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.348495707 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.345876946 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.346742225 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.351936423 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.349500875 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.348323638 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.344055189 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.489868432 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.346072023 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.345777384 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.346165014 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.34246437 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.352027914 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.363159865 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.344288437 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.346175943 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.347429619 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.348714272 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.347293581 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.3499312 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.346135095 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.350138708 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.346917324 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.346494926 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.350326321 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.346321535 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.350167495 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.351674936 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.347945504 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.345836058 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.348462661 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.359805142 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.366341092 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.345184038 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.357032501 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.368305492 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.348911189 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.352674263 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.356870369 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.343719117 seconds)
  done (took 67.48669041 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.350080822 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.349456451 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.346238753 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.347719238 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.35071636 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.348264982 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.348944594 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.350290821 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.347097078 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.347961099 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.348901697 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.34592946 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.346369153 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.348388811 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.348090933 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.344701495 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.34895001 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.346106176 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.348856388 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.347899597 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.348038971 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.347298108 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.352352732 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.348023313 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.35001014 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.348009026 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.347218894 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.348774871 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.347642623 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.346360385 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.348945754 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.351434463 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.350791969 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.346877067 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.346365573 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.349968499 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.351796847 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.348068863 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.350679031 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.349637761 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.350221719 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.351521416 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.351414696 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.350815835 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.349461263 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.34920408 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.347283085 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.347948228 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.351039015 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.348720368 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.351551045 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.351863007 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.352872732 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.348859609 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.350915653 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.354531891 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.348142518 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.348858105 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.352298769 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.349284063 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.348448803 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.350627675 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.351355216 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.352634694 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.352281941 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.349615815 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.348164608 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.352816222 seconds)
  done (took 93.005357731 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.352904876 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.353042448 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.351802284 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.351378085 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.351352528 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.349965164 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.351089473 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.352491696 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.351502224 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.351936931 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.354670747 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.352735395 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.35242027 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.353812579 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.352371455 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.353184315 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.354817994 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.353930816 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.35275304 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.354944403 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.351310628 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.352554936 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.355075587 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.353843559 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.353843485 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.355878219 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.354832594 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.353988395 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.354209378 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.353589403 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.353819058 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.353982088 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.352456488 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.355459105 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.353272909 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.355479988 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.354415792 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.35799888 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.35687246 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.353923282 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.358371129 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.354233948 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.355663187 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.354953942 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.355546591 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.357141132 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.356934254 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.352999313 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.358436756 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.356608243 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.353957418 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.358737144 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.355428994 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.354732685 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.357535155 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.360978155 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.358677602 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.357544363 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.356531926 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.357052165 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.358821049 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.356412353 seconds)
  done (took 85.244516496 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.355984978 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.355587923 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.359033013 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.354347825 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.356660902 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.354106485 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.355401973 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.357060615 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.357074829 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.359206972 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.358458414 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.357459533 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.358268344 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.358929644 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.354215804 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.360096465 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.356116704 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.356337008 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.357962176 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.356014626 seconds)
  done (took 28.398105981 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.352983114 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.356583661 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.355473157 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.356018491 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.358281408 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.356287319 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.358546021 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.357237062 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.354546377 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.358566411 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.359975038 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.360005931 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.357213423 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.354071612 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.358971933 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.354584807 seconds)
  done (took 22.969730845 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.355907864 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.360926906 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.358989531 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.356843159 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.357574284 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.356396057 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.360690992 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.357770384 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.357507068 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.358866755 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.36116813 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.359152835 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.360318913 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.358489375 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.355849104 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.360034666 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.358432904 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.357671412 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.360430192 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.360700941 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.359369131 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.359929905 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.361008492 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.358136737 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.359163512 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.361061711 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.356309038 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.3582464 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.356593576 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.359593838 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.358715406 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.35769357 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.354968937 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.359389999 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.361301217 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.357473274 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.361545482 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.362822969 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.362272829 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.362748378 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.359440269 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.357897475 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.363282467 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.362445614 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.360077692 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.361538458 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.361417901 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.359516593 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.360014561 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.36054297 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.363169244 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.361286394 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.362065298 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.361632847 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.363555656 seconds)
  done (took 76.043390101 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.364813911 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.363985378 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.361232469 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.360950062 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.362778585 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.360504345 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.361160013 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.363291191 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.357903981 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.36142547 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.358115401 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.363005725 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.358531284 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.360179153 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.361027842 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.358702487 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.35975695 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.35873472 seconds)
  done (took 25.759922693 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.357922516 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.359919848 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.361920335 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.361606156 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.361207626 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.365772773 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.360968153 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.361078911 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.363299694 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.360043566 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.360086867 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.365491732 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.362849511 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.363709722 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.360144503 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.360976425 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.364720163 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.364139014 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.363349797 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.36029265 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.364651166 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.365930543 seconds)
  done (took 31.23386177 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.365746744 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.35683181 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.361247798 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.38242861 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.382364399 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.388800033 seconds)
  done (took 9.506527801 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.370745594 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.366322085 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.360684501 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.365864978 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.366642486 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.361765635 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.364645072 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.36263421 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.368022415 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.363829295 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.363460793 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.365380069 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.367543494 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.364257842 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.3678597 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.36716303 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.365052485 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.364532875 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.365926903 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.365199716 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.360882154 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.365840078 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.365893953 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.363359873 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.36283764 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.365585924 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.366360349 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.366144877 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.366269804 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.366187445 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.368762876 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.363623725 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.369438334 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.361729929 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.368049607 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.365848768 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.36603924 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.36555725 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.36550666 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.364471363 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.366474851 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.365834981 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.366816874 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.365401313 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.368564676 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.363903548 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.36553349 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.365884165 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.366224824 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.368724596 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.368991432 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.364644315 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.368883943 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.369709864 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.366932598 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.368918809 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.365725808 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.364212462 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.366561289 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.366434925 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.366113534 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.369359382 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.364812562 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.364454688 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.369769078 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.365558044 seconds)
  done (took 91.445746634 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.36775543 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.369059206 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.366371329 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.369541923 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.365360305 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.365375713 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.367925096 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.363202029 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.367922946 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.365879433 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.370053659 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.366848188 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.365918217 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.36653988 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.368697448 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.369420436 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.366127812 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.369016579 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.367952504 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.372753867 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.365492582 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.365609697 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.368092027 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.367023153 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.369154862 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.36910589 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.368622592 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.368306195 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.370470274 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.368122754 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.368705609 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.367210658 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.367444302 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.3668416 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.36870154 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.370626134 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.369345732 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.369882855 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.369691376 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.373081982 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.368248371 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.372076138 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.368160374 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.370124978 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.368818596 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.369447984 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.372160065 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.370139079 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.371929802 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.371374177 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.368757113 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.368526104 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.371083524 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.371980479 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.371409447 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.370230783 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.370664209 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.371196344 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.371736823 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.37298002 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.371860878 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.372801662 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.375628843 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.370299325 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.371067225 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.373910347 seconds)
  done (took 91.642931451 seconds)
done (took 1848.352359491 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.540055358 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.489632228 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.370580727 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.396383303 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.367055586 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.389389453 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.359716541 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.367071585 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.368787909 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.371688215 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.372336393 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.557275728 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.419207311 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.36780328 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.371791263 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.469286911 seconds)
  done (took 43.854657668 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.403562587 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.373043004 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.504397706 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.392201801 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.399325223 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.576937409 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.435910863 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.373262613 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.56132052 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.411848612 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 3.014473374 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.393167155 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.375747272 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.542971749 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.394275727 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.577595556 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.638521927 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 3.015136474 seconds)
  done (took 31.658617317 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.86255727 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.406669228 seconds)
  done (took 9.548910414 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.399568044 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.370441048 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.382193598 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.375824538 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.368617911 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.363206451 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.377458413 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.370917443 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.257683656 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.507824482 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.393670006 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.389021307 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.398283262 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.373108542 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.376835788 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.418405081 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.521773509 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.374995556 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.374150214 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.383620699 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.376573143 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.470969991 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.43179517 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.375392166 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.513986774 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.279032592 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.377688689 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.38751633 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.522281274 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.377814878 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.376237521 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.37891124 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.383622318 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.276136505 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.88275398 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.366961195 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.39985414 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.390285625 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.378607538 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.547315327 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.383710915 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.387045793 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.38521541 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.872292776 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.53149679 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.499897178 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.681126791 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.390108167 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.383650005 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.447765269 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.379864228 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.382649326 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.421606278 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.18498309 seconds)
  done (took 114.891606778 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.405223737 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.762621576 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.547537249 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.385679647 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.216116392 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.171677703 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.382999952 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.679305124 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.428465293 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.374609557 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.671070839 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.904325904 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.385281787 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.393739757 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.839885351 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.378827119 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.376740055 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.104122651 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.384184702 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.374937731 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.888087846 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.377834116 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.369326259 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.53042129 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.413378375 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.847016498 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.899125971 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.865128603 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.394810736 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.36744277 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.868451976 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.402204878 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.388162315 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.373598024 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.646962715 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.745940876 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.738090914 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.390722988 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.386222722 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.369949882 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.384028921 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.843723112 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.747854454 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.387423758 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.378595024 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.84218653 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.387407629 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.379981849 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.377915787 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.589969037 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.030945717 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.378092592 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.886375254 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.377676753 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.675451087 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.462869245 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.4664101 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.876013871 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.389346221 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.49494115 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.409762226 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.378425123 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.379891872 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.384027948 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.371661535 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.736719995 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.491356685 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.37913054 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.74026515 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.871779745 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.389313035 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.924275906 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.269678477 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.402776717 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.484614626 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.379095635 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.971365207 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.877647769 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.423758312 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.373091381 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.728920289 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.391347831 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.669012273 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.406147889 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.375337791 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.892181959 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.379596687 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.41861392 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.378337541 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.373832957 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.133595099 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.379697379 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.669820432 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.421234307 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.378645008 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.380734492 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.406204035 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.372991981 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.374854048 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.386642067 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.932139225 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.394461638 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.51442682 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.394414272 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.376407573 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.373547498 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.381006006 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.383604001 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.607002803 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.818229642 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.397704267 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.377351788 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.374351583 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.376150819 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.572921679 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.383533533 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.69895887 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.390985933 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.375481811 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.3736396 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.222704808 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.415093901 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.375958915 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.376223016 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.286244353 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.585078156 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.402320759 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.392055828 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.381543789 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.398611689 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.67346551 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.396638289 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.454781629 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.381816098 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.104840698 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.418150952 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.396372051 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.695852197 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.388190022 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.314607086 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.394304535 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.380791099 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.671110623 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.661197547 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.418945329 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.379702966 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.395964402 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.097095933 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.426230563 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.522662604 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.401895928 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.376188553 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.586162422 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.815107085 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.383789849 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.964896197 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.377871645 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.60675249 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.386369731 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.683839298 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.896516825 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.395403264 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.383814198 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.115606086 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.117367932 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.222928178 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.382733049 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.665903383 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.327978972 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.868867614 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.385749632 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.387297873 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.967690599 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.38715038 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.384758403 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.385956965 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.387879773 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.675655829 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.562081126 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.03675837 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.384234898 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.857214714 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.419765428 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.379825196 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.385416308 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.385569104 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.729939904 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.468054368 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.387815293 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.397881765 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.387710847 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.392302151 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.874490662 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.28053193 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.380904269 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.540202542 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.045106827 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.395128585 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.386866208 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.97743718 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.606220879 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.94823177 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.449637536 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.711827855 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.400718264 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.430245495 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.167285905 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.396235398 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.87160385 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.397098929 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.380158261 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.013173837 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.397170456 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.744690707 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.379237576 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.388099896 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.943509627 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.3978654 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.391140684 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.683771927 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.39981643 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.637526819 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.386208434 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.421278681 seconds)
  done (took 1123.45784856 seconds)
done (took 1324.686824094 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.390559766 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.382575705 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.368195198 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.391465439 seconds)
  done (took 26.827467723 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.406199206 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.394867981 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.396336608 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.394314738 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.397898147 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.392615094 seconds)
  done (took 9.679320494 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.436071437 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.380929415 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.390363 seconds)
  done (took 19.502546981 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.614900075 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.730210504 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.743423408 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.717075723 seconds)
  done (took 11.098982436 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.395522982 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.398748191 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.395895308 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.401746166 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.412013659 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.408520064 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.39922476 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.395777208 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.410918632 seconds)
  done (took 13.914134509 seconds)
done (took 82.316646417 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.877666306 seconds)
    (2/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 3.973583927 seconds)
    (3/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.859800359 seconds)
    (4/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.314664919 seconds)
    (5/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.433612162 seconds)
    (6/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.202969457 seconds)
    (7/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.673468907 seconds)
    (8/286) benchmarking ("map", identity, BigInt, true)...
    done (took 3.009792916 seconds)
    (9/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.427694577 seconds)
    (10/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.430912265 seconds)
    (11/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.669158657 seconds)
    (12/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.370012838 seconds)
    (13/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.41094346 seconds)
    (14/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.915758166 seconds)
    (15/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.569078197 seconds)
    (16/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.622887824 seconds)
    (17/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.588485247 seconds)
    (18/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.390808345 seconds)
    (19/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.168496299 seconds)
    (20/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.420831016 seconds)
    (21/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.272474089 seconds)
    (22/286) benchmarking ("sort", Int8, false)...
    done (took 4.418201166 seconds)
    (23/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.775729749 seconds)
    (24/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.198270155 seconds)
    (25/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.364229562 seconds)
    (26/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.395902251 seconds)
    (27/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.399045024 seconds)
    (28/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.647528053 seconds)
    (29/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.440835337 seconds)
    (30/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.260765592 seconds)
    (31/286) benchmarking ("sort", Int64, true)...
    done (took 6.406270573 seconds)
    (32/286) benchmarking ("sort", BigInt, true)...
    done (took 6.386768964 seconds)
    (33/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.753517608 seconds)
    (34/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.417281115 seconds)
    (35/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.515585403 seconds)
    (36/286) benchmarking ("sort", BigInt, false)...
    done (took 6.395656524 seconds)
    (37/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.15467759 seconds)
    (38/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.690670036 seconds)
    (39/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.421587225 seconds)
    (40/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.148286539 seconds)
    (41/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.369456683 seconds)
    (42/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.397570401 seconds)
    (43/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.488428025 seconds)
    (44/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.504839428 seconds)
    (45/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.674556422 seconds)
    (46/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.411908598 seconds)
    (47/286) benchmarking ("sort", Float32, false)...
    done (took 5.408221848 seconds)
    (48/286) benchmarking ("map", identity, Int64, false)...
    done (took 2.04261494 seconds)
    (49/286) benchmarking ("sort", Int8, true)...
    done (took 6.395333242 seconds)
    (50/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.927757235 seconds)
    (51/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.48459492 seconds)
    (52/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.393216002 seconds)
    (53/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.082577494 seconds)
    (54/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.461474085 seconds)
    (55/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.366411736 seconds)
    (56/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.463842629 seconds)
    (57/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.958810749 seconds)
    (58/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.376027461 seconds)
    (59/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.384749799 seconds)
    (60/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.404785375 seconds)
    (61/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.42256783 seconds)
    (62/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.197023681 seconds)
    (63/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.490763676 seconds)
    (64/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.566006388 seconds)
    (65/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.37284082 seconds)
    (66/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.505536363 seconds)
    (67/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.494617626 seconds)
    (68/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.403430595 seconds)
    (69/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.809611096 seconds)
    (70/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.4232173 seconds)
    (71/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.316689959 seconds)
    (72/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.165136431 seconds)
    (73/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.836709578 seconds)
    (74/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.425881131 seconds)
    (75/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.764890787 seconds)
    (76/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.472485005 seconds)
    (77/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.203902645 seconds)
    (78/286) benchmarking ("sort", Int64, false)...
    done (took 5.647802781 seconds)
    (79/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.507627729 seconds)
    (80/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.771138607 seconds)
    (81/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.184499785 seconds)
    (82/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.367159942 seconds)
    (83/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.643033672 seconds)
    (84/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.480249269 seconds)
    (85/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.375398719 seconds)
    (86/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.964054818 seconds)
    (87/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.763437672 seconds)
    (88/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.014216375 seconds)
    (89/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.40519404 seconds)
    (90/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.403331966 seconds)
    (91/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.379416184 seconds)
    (92/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.217465402 seconds)
    (93/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.914827865 seconds)
    (94/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.063574013 seconds)
    (95/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.398462688 seconds)
    (96/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.958011102 seconds)
    (97/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.827420036 seconds)
    (98/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.455017753 seconds)
    (99/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 4.066268683 seconds)
    (100/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.374245619 seconds)
    (101/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.270355972 seconds)
    (102/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.607233376 seconds)
    (103/286) benchmarking ("map", identity, Float64, false)...
    done (took 2.050193684 seconds)
    (104/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.77727688 seconds)
    (105/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.612767721 seconds)
    (106/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.459562891 seconds)
    (107/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.408914764 seconds)
    (108/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.37620668 seconds)
    (109/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.370500694 seconds)
    (110/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.40679812 seconds)
    (111/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.403350679 seconds)
    (112/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.622273458 seconds)
    (113/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.409713138 seconds)
    (114/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.44807363 seconds)
    (115/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.37737886 seconds)
    (116/286) benchmarking ("sort", Bool, false)...
    done (took 1.918915445 seconds)
    (117/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.436307649 seconds)
    (118/286) benchmarking ("map", abs, Float64, false)...
    done (took 2.059800948 seconds)
    (119/286) benchmarking ("sort", Float32, true)...
    done (took 6.401307607 seconds)
    (120/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.409186269 seconds)
    (121/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.487355161 seconds)
    (122/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.658693403 seconds)
    (123/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.209582041 seconds)
    (124/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.359753073 seconds)
    (125/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.675926358 seconds)
    (126/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.66215356 seconds)
    (127/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.499783154 seconds)
    (128/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.492206526 seconds)
    (129/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.420662335 seconds)
    (130/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.434431822 seconds)
    (131/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.63946176 seconds)
    (132/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.88291789 seconds)
    (133/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.409508104 seconds)
    (134/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.502969024 seconds)
    (135/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.776287839 seconds)
    (136/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.786097868 seconds)
    (137/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.366236404 seconds)
    (138/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.377852151 seconds)
    (139/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.402914676 seconds)
    (140/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.424755743 seconds)
    (141/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.933073391 seconds)
    (142/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.207373247 seconds)
    (143/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.509770482 seconds)
    (144/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.427078396 seconds)
    (145/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.814470341 seconds)
    (146/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.785027259 seconds)
    (147/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.3727979 seconds)
    (148/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.417156772 seconds)
    (149/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.829035109 seconds)
    (150/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.383237838 seconds)
    (151/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.309663025 seconds)
    (152/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.91221028 seconds)
    (153/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.437901745 seconds)
    (154/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.380186852 seconds)
    (155/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.837063021 seconds)
    (156/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.310152628 seconds)
    (157/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.410314814 seconds)
    (158/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.38228595 seconds)
    (159/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.437687371 seconds)
    (160/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.901847018 seconds)
    (161/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.268608556 seconds)
    (162/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.083464204 seconds)
    (163/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.401906178 seconds)
    (164/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.555502294 seconds)
    (165/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.485899612 seconds)
    (166/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.462621258 seconds)
    (167/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.522589369 seconds)
    (168/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.485799255 seconds)
    (169/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.668313835 seconds)
    (170/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.438060344 seconds)
    (171/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.525337797 seconds)
    (172/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.402333575 seconds)
    (173/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.52846777 seconds)
    (174/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.3796998 seconds)
    (175/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.55633976 seconds)
    (176/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.376175094 seconds)
    (177/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.473448491 seconds)
    (178/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.424453331 seconds)
    (179/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.380901236 seconds)
    (180/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.430309846 seconds)
    (181/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.492154729 seconds)
    (182/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.507935641 seconds)
    (183/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.536224767 seconds)
    (184/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.445183478 seconds)
    (185/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.894917871 seconds)
    (186/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.373453889 seconds)
    (187/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.148020374 seconds)
    (188/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.390610582 seconds)
    (189/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.668118412 seconds)
    (190/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.395570348 seconds)
    (191/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.028927659 seconds)
    (192/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.905199111 seconds)
    (193/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.375343298 seconds)
    (194/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.422309316 seconds)
    (195/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.383153513 seconds)
    (196/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.692945875 seconds)
    (197/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.399372603 seconds)
    (198/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.482655773 seconds)
    (199/286) benchmarking ("sort", Bool, true)...
    done (took 5.433996878 seconds)
    (200/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.469675802 seconds)
    (201/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.381897963 seconds)
    (202/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.376779461 seconds)
    (203/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.305786197 seconds)
    (204/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.374943349 seconds)
    (205/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.922889614 seconds)
    (206/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.613711706 seconds)
    (207/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.4994771 seconds)
    (208/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.399340293 seconds)
    (209/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.414648149 seconds)
    (210/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.08274217 seconds)
    (211/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.378565479 seconds)
    (212/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.056965402 seconds)
    (213/286) benchmarking ("map", abs, Int64, false)...
    done (took 2.095536622 seconds)
    (214/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.375146665 seconds)
    (215/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.419794506 seconds)
    (216/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.488287393 seconds)
    (217/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.427624712 seconds)
    (218/286) benchmarking ("sort", Float64, true)...
    done (took 6.411656807 seconds)
    (219/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.396589201 seconds)
    (220/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.438358585 seconds)
    (221/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.432326857 seconds)
    (222/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.690570959 seconds)
    (223/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.101443489 seconds)
    (224/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.919151393 seconds)
    (225/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.370566642 seconds)
    (226/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.484811638 seconds)
    (227/286) benchmarking ("sort", Float64, false)...
    done (took 5.728153269 seconds)
    (228/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.402560444 seconds)
    (229/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.782104535 seconds)
    (230/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.411328332 seconds)
    (231/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.280766613 seconds)
    (232/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.409126401 seconds)
    (233/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.974368627 seconds)
    (234/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.415311164 seconds)
    (235/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.780604905 seconds)
    (236/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.379914583 seconds)
    (237/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.642158614 seconds)
    (238/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.501051075 seconds)
    (239/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.397004849 seconds)
    (240/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.426101564 seconds)
    (241/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.39166001 seconds)
    (242/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.640977363 seconds)
    (243/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.792878371 seconds)
    (244/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.385915184 seconds)
    (245/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.521731522 seconds)
    (246/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.827408328 seconds)
    (247/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.419148587 seconds)
    (248/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 3.127450544 seconds)
    (249/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.413848937 seconds)
    (250/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.802924606 seconds)
    (251/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.379050028 seconds)
    (252/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.06980216 seconds)
    (253/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.421594418 seconds)
    (254/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.291209538 seconds)
    (255/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.444447201 seconds)
    (256/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.401084829 seconds)
    (257/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.434476162 seconds)
    (258/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.490425211 seconds)
    (259/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.804142439 seconds)
    (260/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.501211027 seconds)
    (261/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.502897461 seconds)
    (262/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.618853599 seconds)
    (263/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.530137071 seconds)
    (264/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.073856062 seconds)
    (265/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.463726216 seconds)
    (266/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.472335345 seconds)
    (267/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.219798305 seconds)
    (268/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.380127211 seconds)
    (269/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.342600663 seconds)
    (270/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.263579883 seconds)
    (271/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.424639314 seconds)
    (272/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.505161846 seconds)
    (273/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.386079108 seconds)
    (274/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.472394157 seconds)
    (275/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.41976652 seconds)
    (276/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.137406315 seconds)
    (277/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.40913327 seconds)
    (278/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.89246157 seconds)
    (279/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.44527693 seconds)
    (280/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.389508237 seconds)
    (281/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.399556498 seconds)
    (282/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.21935296 seconds)
    (283/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.44340546 seconds)
    (284/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.39307183 seconds)
    (285/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.395423248 seconds)
    (286/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.38345904 seconds)
  done (took 965.292099698 seconds)
done (took 966.587869071 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.449450787 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.445194818 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.416491963 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.442110207 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.540445459 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.439732697 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.429831146 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.423076293 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.467465899 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.469750674 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.425760716 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.439104552 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.428587048 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.427085721 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.418429652 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.442312677 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.536354151 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.424288641 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.444438453 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.431144468 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.443421574 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.423697775 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.470942835 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.443455647 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.425244095 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.424839306 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.430923897 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.447477467 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.540832501 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.431831358 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.422758658 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.441470068 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.53760509 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.41311375 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.418699611 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.447181858 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.442591055 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.433133013 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.426500766 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.456912011 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.970017208 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.439251983 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.430288932 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.420986263 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.423219579 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.42306995 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.431446769 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.42769856 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.444403569 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.442311623 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.958068001 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.455091455 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.430597447 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.419108653 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.433401232 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.427130718 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.422052754 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.444084824 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.449024702 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.442858419 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.51954139 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.420531538 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.424930236 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.447114352 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.437951891 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.996019498 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.428616655 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.429773073 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.971569692 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.437302512 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 3.001482925 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.448441695 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.420963912 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.442939962 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.460730287 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.541441849 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.410972292 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.423123248 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.43986598 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.425087957 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.429267875 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.445911479 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.431626157 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.422404488 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.44543423 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.439924715 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.435640637 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.429351708 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.432297184 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.450123011 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.435966551 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.442512416 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.422525572 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.419582084 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.436564281 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.426907732 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.43469454 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.43538048 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.427330626 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.435486128 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.976025626 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.465160847 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.416318228 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.424180006 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.423804361 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.447487742 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.97859861 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.443638014 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.446536499 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.471378996 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.430482451 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.532895494 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.430407087 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.445881715 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.435750976 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.431470865 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.41875636 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.529734766 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.966047523 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.457141035 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.427211247 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.430884943 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.451801481 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.420225072 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.422758772 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.546511477 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.418714338 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.451878702 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.551208448 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.434043159 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.465594578 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.427825515 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.430894337 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.450106601 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.453196507 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.459930615 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.423721566 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.450359017 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.445193564 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.418904155 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.441823769 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.43351903 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.426746833 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.431120633 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.419454033 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.446816745 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.448521624 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.445315386 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.440592148 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.553756592 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.424879928 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.532516146 seconds)
done (took 241.144332223 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.485751286 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.418690229 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.505248169 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.415898325 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.529541152 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.526043127 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.417721466 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.426213729 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.423998392 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.807871117 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.414014858 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.420865199 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.420166719 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.420893582 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.506242435 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.419728044 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.415439552 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.768011612 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.423501331 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.496788795 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.415786438 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.417865464 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.421516876 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.811656708 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.412541543 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.423095066 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.490816582 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.420241879 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.776927167 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.414860602 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.423515279 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.774453822 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.511577583 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.441798265 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.436903575 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.428806026 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.531632454 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.442478213 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.511595568 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.502735303 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.502249016 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.458341939 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.421338255 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.427817629 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.423635201 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.428362737 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.42138476 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.45680961 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.419502795 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.418223371 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.770405572 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.430854253 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.424687409 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.421395336 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.428091463 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.454222977 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.424655249 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.431357557 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.511677422 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.426737468 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.486028788 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.80857221 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.80287837 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.425208382 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.416797838 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.420826798 seconds)
  done (took 154.456774652 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.492704852 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.495710384 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.541096973 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.440609448 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.471155833 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.546154315 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.442082505 seconds)
  done (took 11.756453914 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.430854426 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.427636341 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.479638982 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.472352142 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.426979134 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.601222434 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.425100193 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.441151117 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.420247041 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.479375186 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.427131445 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.424516094 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.437418767 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.430681166 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.474464313 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.437028227 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.540684597 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.424088737 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.428181086 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.586714772 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.421977544 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.438384689 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.482651822 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.438162587 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.429000941 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.433376411 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.253726485 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.42342731 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.424999558 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.434096179 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.428838474 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.506460742 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.427713477 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.423663666 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.425249289 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.547592354 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.427105179 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.423766872 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.430632136 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.418876269 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.427937366 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.433562498 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.432091705 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.42843999 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.430578153 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.455148977 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.425271075 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.430332253 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.434451399 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.4275858 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.481620734 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.428505681 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.430143452 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.428633858 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.489490418 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.43091665 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.431074942 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.43019855 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.435131445 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.431040216 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.59655484 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.474671099 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.429644192 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.482672 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.435018183 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.436161227 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.433269779 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.436615793 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.484923152 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.433976551 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.476932034 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.426749786 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.619031089 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.455481232 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.432219922 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.437952799 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.431312549 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.432079792 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.426943708 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.436432498 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.425503676 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.433815726 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.435092166 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.430875317 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.431921176 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.602792699 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.539224319 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.429715362 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.447515221 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.439505269 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.425840807 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.486611755 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.430011532 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.427869814 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.486935016 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.544591949 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.487681123 seconds)
  done (took 163.054725935 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.435829969 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.437988496 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.43253693 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.456719692 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.446079117 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.429911673 seconds)
  done (took 9.971802373 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.438577044 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.436283547 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.436028843 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.436613725 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.438882455 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.433086941 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.430955283 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.438558987 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.437774534 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.429117265 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.438211592 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.437094276 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.432659747 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.431317299 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.436177716 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.431947896 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.439061444 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.434047513 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.439590762 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.440036845 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.539087904 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.433563785 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.433337604 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.43654259 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.436015246 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.431393457 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.441155563 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.433039563 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.436530816 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.446777419 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.4512338 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.436163775 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.434384535 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.444025347 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.439567137 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.434323759 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.442195813 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.441637019 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.431594162 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.439678486 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.44074449 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.43882491 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.435398624 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.44541859 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.43756968 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.438285569 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.443554621 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.447855432 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.433665167 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.438043969 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.443205384 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.436875079 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.443024416 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.44131463 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.438672469 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.461864578 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.444076196 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.436625653 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.438372715 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.43833214 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.435067556 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.440238105 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.437752539 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.439107039 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.433348415 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.443652634 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.438904904 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.443713038 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.437535318 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.435779965 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.44185191 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.435637062 seconds)
  done (took 106.000833048 seconds)
done (took 446.562356774 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.562303242 seconds)
  done (took 7.899972223 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.70332808 seconds)
  done (took 8.044412793 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 22.584686739 seconds)
  done (took 23.927125277 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.533769547 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.484644682 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.452572493 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.432831282 seconds)
  done (took 27.239303001 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.606167667 seconds)
  done (took 7.942171032 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.430843518 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.436407411 seconds)
  done (took 14.206251223 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.782597822 seconds)
  done (took 8.116325568 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.512845231 seconds)
  done (took 7.853420885 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.441053179 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.462703069 seconds)
  done (took 14.254151097 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.41526908 seconds)
  done (took 7.753203038 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.923217956 seconds)
  done (took 12.261843505 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.444873119 seconds)
  done (took 7.7843719 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.509591681 seconds)
  done (took 7.847963548 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 9.10645684 seconds)
  done (took 10.442843494 seconds)
done (took 166.912348293 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.435035793 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.437053736 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.42770161 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.431239586 seconds)
  done (took 27.066683298 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.47490278 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.4754158 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.480337544 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.485670296 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.476737797 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.477467145 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.468275082 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.469498756 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.48705718 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.478608033 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.481461542 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.478854556 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.477857703 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.469064796 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.478477146 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.485291843 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.486425281 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.480380294 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.470040167 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.478803381 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.445407343 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.490665973 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.479707253 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.44735192 seconds)
  done (took 36.762544154 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.968463697 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.513662364 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.59785952 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.496579135 seconds)
  done (took 7.915234647 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.496471515 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.496006907 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.510858961 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.548789384 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.572305533 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.507123443 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.472991527 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.467695097 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.454530898 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.49712548 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.57375768 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.514902675 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.581670713 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.446788769 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.631107088 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.444664538 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.445724602 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.494888174 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.548784973 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.569353519 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.445429755 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.497526486 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.502634063 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.517546172 seconds)
  done (took 37.578247213 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.444766586 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.463903628 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.444347899 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.443498997 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.454930543 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.446210014 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.447001301 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.447248116 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.445923377 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.451499986 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.443283112 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.459843309 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.445523865 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.446719742 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.453261403 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.44367186 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.454678425 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.443955645 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.444023489 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.452246127 seconds)
  done (took 30.319912134 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.439913825 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.325748136 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.787983612 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.696409045 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.439246781 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.432446206 seconds)
  done (took 28.460885265 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.525480323 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.698889522 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.451667202 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.843539828 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.927367175 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.457634509 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.446464874 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.705371924 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.082841888 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.059019324 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.504349769 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.52396487 seconds)
  done (took 21.57132013 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.443999224 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.443374532 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.457124996 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.459478891 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.505820723 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.463697275 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.452425091 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.43859691 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.510637894 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.522950341 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.468374539 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.512237357 seconds)
  done (took 39.021896251 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.529719853 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.489031016 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.510703538 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.529686592 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.153905536 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.646504036 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.494446306 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.270786112 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.467092064 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.720164934 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.459049989 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.525773508 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.699304413 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.445369149 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.445716257 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.50189771 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.681295904 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.988435408 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.44586634 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.923241056 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.462392487 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.458629813 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.884439054 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.704677461 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.675996527 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.425470368 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.705734609 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.221018839 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.763832353 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.461439699 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.455028438 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.446597523 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.716480489 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.452576107 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.532965729 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.691969577 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.465568778 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.982205943 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.465834965 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 5.766458243 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.448760893 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.441480986 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.456161818 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.444383842 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.381451977 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.462373114 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.548708945 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.445916104 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.157893785 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.447570936 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.740210725 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.543673669 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.450895072 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.015666838 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.478300334 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.444401284 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.451334784 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.544241216 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.032645334 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.038629789 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.45323662 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.380274374 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.448281266 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.785410866 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.104079395 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.463322854 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.450816583 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.450382271 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.38144821 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.779832721 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.453059369 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.595355535 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.465637768 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.096191484 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.163245969 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.459029997 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.395692328 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.062390666 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.450644353 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.384064213 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.676136441 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.22245286 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.383287311 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.392685611 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.385276282 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.237083401 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.457676882 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 5.108432194 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.468867558 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.280744645 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.716652172 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.486907836 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.472669259 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.671744293 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.326153688 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.451674597 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.454393714 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.571208815 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.465081019 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.258892198 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.403849122 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.442265907 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.704783988 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.661715173 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.452717626 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.519613891 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.320109587 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.445563877 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.484783926 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.453347879 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.6985806 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.107094975 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.485108088 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.082989423 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.460538871 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.230368532 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.280395047 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.460058899 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.45290554 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.452916521 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.7480735 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.287574143 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.333339377 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.520499549 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.454621721 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.449719907 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.803950908 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.290667212 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.334295981 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.681715765 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.470350142 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.462830635 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.45117827 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.397933032 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.447455975 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.456320295 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.222913093 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.678169419 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.45135406 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.728109586 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.385384627 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.598378274 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.452689841 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.66745815 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.748585177 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.470976472 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.712258698 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.469505405 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.470443067 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.465006467 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.472273766 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.555212841 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.47482639 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.460776473 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.711121276 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.45804548 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.457580971 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.82570981 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.226480648 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.45900347 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.458546423 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.461028878 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.09087896 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.452051009 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.457187088 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.365393588 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.470194705 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.520552126 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.461791801 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.704068454 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.864078788 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.469536309 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.474535801 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.464583824 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.671793514 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.46643139 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.806258157 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.525033109 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.012066069 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.107884867 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.487859542 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.389275586 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.164893951 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.147599873 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.455329543 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.654272519 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.455458571 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.701390884 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.487511683 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.462451749 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.088090319 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.474326955 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.799462138 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.456733067 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.46754581 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.756408957 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.475602767 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.849697358 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.088387434 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.455592647 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.468847307 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.597779856 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.470083415 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.390892402 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.971411247 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.462799272 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.456677249 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.232896139 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.490345376 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.806495455 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.793774335 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.734825669 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.453807705 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.74701377 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.079790055 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.48731956 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.453771812 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.456989745 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.463201867 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.469242955 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.458000771 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.467279329 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.807615884 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.887006188 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.020704471 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.222693273 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.048686164 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.905025133 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.47761378 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.352555879 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.275234999 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.412238231 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.115658 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.721018106 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.283340147 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.42258932 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.303259653 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.746577289 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.305471455 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.7481966 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.687870876 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.881479061 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.481373663 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.753352747 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.670092685 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.492391052 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.460323706 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.386949697 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.731377774 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.534093112 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.455480547 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.52973582 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.61512255 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.457712433 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.230021881 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.513233164 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.278149855 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.202886164 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.997889467 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.848710632 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.46368671 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.47186986 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.694651425 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.487745564 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.985442926 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.131354613 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.481396964 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.014781908 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.415213103 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.708106973 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.492424651 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.456292259 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 4.181090634 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.472301203 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.711048036 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.75291711 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.398516346 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.473180875 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.047649558 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.332393864 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.46741213 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.460437039 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.282627259 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.923950605 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.783027987 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.476123481 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.868679644 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.478092974 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.392646282 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.396844438 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.153909217 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.466612431 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.437666915 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.999018574 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.466923035 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.454946336 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.463564893 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.307948396 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.715148971 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.474722547 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.094502153 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.704267619 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.46234379 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.47679292 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.46794169 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.461361621 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.436763461 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.340951609 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.698070447 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.491009736 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.699707921 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.526127279 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.360120421 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.539509467 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.668232577 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.339855976 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.464123394 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.718626648 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.195069336 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.485450302 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.190536137 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.499187128 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.465361494 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.465769628 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.476315169 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.479170131 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.549564435 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.710014207 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.494703322 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.476983158 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.197183701 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.463031695 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.459858534 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.47798489 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.555577727 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.075832026 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.859870512 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.24801624 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.113007986 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.251204002 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.12049282 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.774146179 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.460110478 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.461322522 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.393905166 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.607166342 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.988500551 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.738488617 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.596538417 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.464230604 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.481189765 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.465319191 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.471606896 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.679735125 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.73758574 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.335627484 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.465870214 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.126873674 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.344528456 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.476476682 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.676906684 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.00924425 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.080783046 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.827276339 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.468633609 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.265792169 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.757214232 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.548228542 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.468537815 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.056112504 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.477137246 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.270868172 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.473464342 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.463627208 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.608191033 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.751414809 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.531793455 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.471086799 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.621432924 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.239299479 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.836798236 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.717402382 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.004841643 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.705376538 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.130779887 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.258485638 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.731732483 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.538056021 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.714425069 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.590955436 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.613103678 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.471093694 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.357512466 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.467650135 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.31363727 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.179571106 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.478095986 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.117322068 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.748748347 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.465700096 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.471481324 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.486297421 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.479281451 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.692241436 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.251574657 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.691580984 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.477874353 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.470121356 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.034954395 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.114838274 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.785314841 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.404402391 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.466496498 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.729058662 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.725491304 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.489780283 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.921079821 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.182582505 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.089735358 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.443149061 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.49121285 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.471346191 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.244199618 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.122717437 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.898723962 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.024554015 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.126986127 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.477087822 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.746006133 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.47724742 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.473861058 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.745869675 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.474167173 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.471323723 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.738029736 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.131893949 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.329069956 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.473747014 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.0188126 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.402860187 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.692695912 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.565792155 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.403073428 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.465866596 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.923463496 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.495906385 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.601012615 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.478228334 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.474606403 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.47758169 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.22414892 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.755969601 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.469787344 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.456958337 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.455745975 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.47952779 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.567802355 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.491133675 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.473290468 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.148083329 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.820719073 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.726426955 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.474819919 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.452960559 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.477488444 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.468913201 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.187049415 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.438218851 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.474260203 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.080438834 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.483784518 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.488698072 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.472000528 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.689335918 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.683947883 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.470775556 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.718237372 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.498384594 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.488354349 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.374016589 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.244748642 seconds)
  done (took 1746.368869404 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.518736623 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.488299592 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.517377169 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.588355021 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.485513861 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.517867752 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.559186263 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.493595895 seconds)
  done (took 53.54159359 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.465600819 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.630430778 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.510175415 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.481651761 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.475686667 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.478153294 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.988196711 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.494639538 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.475915486 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.47973581 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.478097962 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.472382904 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.185066349 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.497077147 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.485613998 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.464995191 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.476530677 seconds)
  done (took 67.918426971 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.881323716 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.817859915 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.830792013 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.493112498 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.515972777 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.49527027 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.894678535 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.485619629 seconds)
  done (took 55.788938263 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.481795703 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.479348151 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.482823311 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.479629201 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.484026543 seconds)
  done (took 8.782516931 seconds)
done (took 2162.434555171 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.475723881 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.47869301 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.474903195 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.480134716 seconds)
  done (took 7.284453815 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.449879268 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.150429962 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.456569496 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.471375751 seconds)
  done (took 18.904597687 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.505485702 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.480267283 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.270578527 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.177970641 seconds)
  done (took 5.825977464 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.226317261 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.232691352 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.220057872 seconds)
  done (took 8.054427396 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.47200434 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.477630333 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.478551393 seconds)
  done (took 20.805539831 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.778427016 seconds)
  done (took 3.157611085 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.621462352 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.671426621 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.809979324 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.826863835 seconds)
  done (took 8.307319217 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.865576924 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.847665089 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.672798913 seconds)
  done (took 6.765871889 seconds)
done (took 93.467205099 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.603685894 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.495318796 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.679384557 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.621156522 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.70044584 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.678123797 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.907241132 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.587851604 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.082133438 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.071111856 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.575997819 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.703513364 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.851068135 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.492360747 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.854597113 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.872617608 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.704111108 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.638618411 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.268252972 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.466787217 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.910210579 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.212745746 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.411511566 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.226232976 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.708809955 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.629214498 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.7953402 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.87814039 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.448462124 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.816227032 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.632454188 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.481082254 seconds)
  done (took 200.384693547 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.477551875 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.492332862 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.474570632 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.4752105 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.495137435 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.47627399 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.476316383 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.506699093 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.477869669 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.485501237 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.490825558 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.476223064 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.476154975 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.477248442 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.475630966 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.474865122 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.474423904 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.478942624 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.474626972 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.496606196 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.472876836 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.502703596 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.476611304 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.493464475 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.475969354 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.475631288 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.502832546 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.476970828 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.495995518 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.477324192 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.494072369 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.496875537 seconds)
  done (took 208.856617883 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.47724769 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.480514327 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.479398106 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.501542136 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.476279861 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.478254448 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.49419461 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.495664032 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.482139628 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.478628838 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.476941476 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.480625427 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.482914314 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.478782622 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.479956211 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.477870131 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.477916565 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.485752639 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.489848876 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.475672389 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.477900066 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.496089901 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.479410729 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.483291798 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.476942067 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.480159031 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.501986009 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.479754453 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.475466637 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.490164282 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.481694927 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.494506397 seconds)
  done (took 208.847973743 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.677539813 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.486688347 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.488728769 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.419314216 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.494355957 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.484935485 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.480124189 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.691505837 seconds)
  done (took 15.605679803 seconds)
done (took 635.073564976 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.904834976 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.596249411 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.694968713 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.505541837 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.375916916 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.524475237 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.506637267 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.69114488 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.448276034 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.701085243 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.821388974 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.523944212 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.977482502 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.50482604 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.777669567 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.615262957 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.441938639 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.567931869 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.8396545 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.138244378 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.780016394 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.012597558 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.709556856 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.450671995 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.988546619 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.014497988 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.289504052 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.425797365 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.523869701 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.858032081 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.31998608 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.57409275 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.555976909 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.578569458 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.636953088 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.613294474 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.526174634 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.570110723 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.717237507 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.777516674 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.135557608 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.258858111 seconds)
  done (took 99.858851977 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.471013495 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.470442903 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.469864205 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.470320858 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.471038204 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.471757003 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.469668729 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.468886505 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.47251802 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.468312326 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.470875031 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.470727158 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.472114731 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.474258847 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.469541843 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.471806412 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.474205648 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.4739981 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.468856471 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.471409356 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.472854272 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.470141667 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.470903441 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.469307445 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.476124899 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.471767453 seconds)
  done (took 39.639438739 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.493681734 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.752129819 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.926526144 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.501420663 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.492476526 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.494996535 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.576813635 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.492299238 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.495699488 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.496770731 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.648124825 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.493123089 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.526600067 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.958365884 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.495935953 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.490873768 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.492622896 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.493643057 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.759010825 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.499728797 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.599173765 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.491199583 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.585700902 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.510056577 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.518724741 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.491996111 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.499819253 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.084012254 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.513289572 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.655064694 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.384296313 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.58645409 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.052688167 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.974856883 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.39632994 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.504565346 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.493899981 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.669823923 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.502136551 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.491032229 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.583069738 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.503353328 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.945631329 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.18933869 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.515801989 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.492713229 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.110710382 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.673899997 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.767195577 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.503641044 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.96764022 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.496941321 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.495173748 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.495428831 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.769040649 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.502361771 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.493640573 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.12556435 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.519266773 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.578236893 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.498837803 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.493867685 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.762662476 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.494137225 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.753383675 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.495027832 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.502684032 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.519158751 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.939072878 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.497257668 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.206903643 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.513814931 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.496641118 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.65742904 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.749182933 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.141378197 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.516896541 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.766505165 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.05585869 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.595316796 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.498037313 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.076319955 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.59984891 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.496412088 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.495996817 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.499269394 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.496818931 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.541137314 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.584552104 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.145569493 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.213198086 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.146568861 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.602615366 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.503235009 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.4971725 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.121061077 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.516298046 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.500862265 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.939977405 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.206430394 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.517067011 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.505347179 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.209586861 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.518241974 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.584329515 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.503524777 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.946946025 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.499100858 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.561505178 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.50334894 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.506208284 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.521917816 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.583200882 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.499007457 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.498539624 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.176310153 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.684502178 seconds)
  done (took 196.861573556 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.513106815 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.4888161 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.494946826 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.489768395 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.492835719 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.502066261 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.493182945 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.491727789 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.498530851 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.492599657 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.488821717 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.502284573 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.497886333 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.502211982 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.50143729 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.49569732 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.100861947 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.492732806 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.510677325 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.494043144 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.316081625 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.499318696 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.508867864 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.491309904 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.495971452 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.498622163 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.501175831 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.492178546 seconds)
  done (took 156.743468294 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.501627236 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.117132011 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.518957025 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.645191459 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.523858977 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.501848791 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.650369233 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.565524774 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.520827035 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.496202752 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.502968904 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.833360901 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.502360232 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.071316245 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.714936239 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.673378657 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.072987506 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.5185091 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.499736573 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.50268909 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.647776019 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.504513027 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.834367007 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.126636786 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.521777641 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.129033571 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.486041708 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.5044811 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.50692542 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.131372717 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.517021808 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.845640049 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.588493547 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.572395739 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.155914518 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.085198669 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.087418822 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.668363705 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.502279673 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.500828358 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.505465209 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.485745402 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.157990116 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.527423108 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.504668489 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.14317141 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.529824694 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.50735609 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.512755382 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.50707353 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.574362324 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.588997277 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.875556869 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.169128789 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.613367315 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.513056866 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.656287621 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.909023471 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.504232879 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.072022988 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.485681539 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.162818788 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.533607678 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.485979657 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.502410647 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.507500599 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.675954878 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.660676344 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.073429623 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.521950714 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.067213168 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.691451756 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.509555495 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.50635134 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.507396651 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.130695553 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.088486342 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.689530837 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.660492783 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.729209263 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.49387556 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.50454934 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.486568274 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.593815536 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.509848507 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.165736284 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.097329586 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.518854544 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.503793288 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.504980188 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.507433095 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.703887239 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.185103064 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.619592013 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.066215849 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.877414322 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.862516381 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.513202674 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.570890021 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.519095662 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.861672935 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.511688254 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.568842614 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.969669646 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.855802653 seconds)
  done (took 179.8687606 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.766723839 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.757006184 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.603407926 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.668217154 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.154488025 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.09623563 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.855889641 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.651387279 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.624894618 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.78659318 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.748655764 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.61622894 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.748586999 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.5974515 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.302404536 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.597441336 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.621774813 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.664414986 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.680154331 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.561755045 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.212158648 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.804536781 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.706043815 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.475505145 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.605852314 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.352430667 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.097029378 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.026684593 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.700211273 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.880798175 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.093220196 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.674500834 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.57032606 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.269056607 seconds)
  done (took 71.974700479 seconds)
done (took 746.328093928 seconds)
SAVING RESULT...
DONE!
