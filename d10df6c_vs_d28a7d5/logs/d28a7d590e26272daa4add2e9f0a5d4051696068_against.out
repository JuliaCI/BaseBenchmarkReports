cset: moving following pidspec: 28532
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.337640463 seconds)
loading group "string"... done (took 0.487977293 seconds)
loading group "linalg"... done (took 8.022777546 seconds)
loading group "parallel"... done (took 0.173849427 seconds)
loading group "find"... done (took 1.299260815 seconds)
loading group "tuple"... done (took 1.980426763 seconds)
loading group "dates"... done (took 1.331816922 seconds)
loading group "micro"... done (took 0.251801831 seconds)
loading group "io"... done (took 0.681916422 seconds)
loading group "scalar"... done (took 42.355332763 seconds)
loading group "sparse"... done (took 12.830932197 seconds)
loading group "broadcast"... done (took 1.131032917 seconds)
loading group "union"... done (took 14.534937706 seconds)
loading group "simd"... done (took 4.872581138 seconds)
loading group "random"... done (took 9.781448696 seconds)
loading group "problem"... done (took 2.002977686 seconds)
loading group "array"... done (took 22.898212173 seconds)
loading group "misc"... done (took 1.456972061 seconds)
loading group "sort"... done (took 3.640575954 seconds)
loading group "collection"... done (took 19.782779566 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.546411228 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.148430395 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.158218888 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.15892371 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.206174399 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.14588174 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.16184837 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.114791708 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.004063606 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.19137306 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.160493244 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.51892699 seconds)
done (took 5.249098677 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.228576428 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.09710974 seconds)
    (2/2) benchmarking "String"...
    done (took 0.109252598 seconds)
  done (took 0.883324792 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.080026529 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.151317673 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.096631146 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.0969381 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.08262951 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.098989174 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.081712153 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.096095746 seconds)
  done (took 1.383587264 seconds)
done (took 3.260199297 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.742717078 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.286382506 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.224805243 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.481512112 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.184469113 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.2184925 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.691870786 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.382947734 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.270651111 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099654 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.152120352 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.411481954 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.137423712 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.663734295 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.092203237 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.128479756 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.189857986 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.504941699 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.085674119 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.112807596 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.118555304 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.144223114 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.129844157 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.094958867 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.186285099 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.099403272 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.190078339 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.111268988 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.083024373 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.292515696 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.20571833 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.695502516 seconds)
  done (took 11.127821544 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.119229535 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.141557519 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.100529444 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.159692117 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.139342763 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.086605332 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.103333936 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.083790891 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.125861708 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.181846407 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.136707689 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.14697842 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.096695956 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.086151501 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.122713331 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.249777705 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.12397835 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.108490126 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.103245525 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.108678763 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.125585593 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.116411349 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.114370071 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.113486195 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.16758129 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.208124104 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.113832206 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.127037988 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.097787396 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.117939144 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.146980748 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.146208988 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.09766901 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.084577316 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.17818056 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.126200274 seconds)
  done (took 5.298496303 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.194490305 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.124787066 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.172992411 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.165603201 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.146024669 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.162042087 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.118021732 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.253156365 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.11563883 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.182088028 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.147727801 seconds)
    (12/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.128571299 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.120055642 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083780502 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.10522019 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.082977612 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.745883967 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.169744645 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.138903195 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.121575035 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.107126479 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.089146877 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.725272996 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.105006289 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.082541065 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.102688751 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.067939927 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.165412473 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.101505058 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.209362507 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.104442347 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.104840129 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.137615466 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.212489463 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.114334747 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.137324414 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099744868 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.082057144 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.180899378 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.109111707 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.098817196 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.110519891 seconds)
    (43/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.128587434 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.138426791 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.141034576 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.100330706 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.085757793 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.212946056 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.09766354 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.118763451 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.957474363 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.194653693 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.096709838 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.100443666 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.344574956 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.10030518 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.100823141 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.097546297 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.254647789 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.136410051 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.100777469 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.082270516 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099440608 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.101880627 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.393936437 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.083374621 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.74899441 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.085620806 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.109040925 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.100048776 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.083271626 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.10741141 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.090330791 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.119157073 seconds)
    (75/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.078780682 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.099150232 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.101493081 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.082626067 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.100119688 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.084865445 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.110386136 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.10388164 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.082791909 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.167569094 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.083094712 seconds)
    (86/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.09503782 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.117529879 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.085606554 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.099138491 seconds)
    (90/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128968024 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.121532866 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.101384678 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.10144014 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.122577825 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.101063723 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.11149176 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.10033517 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.129497928 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.098782183 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.17577819 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.082069492 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.128812682 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.102108655 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.130894306 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.110729201 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085170857 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.105179412 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.081263406 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.09807888 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.163487954 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.083240734 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.101174475 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.085482427 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.114472704 seconds)
  done (took 23.534379949 seconds)
done (took 40.636721159 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.347583066 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.105216679 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.105401989 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.105719736 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.103496127 seconds)
  done (took 1.52248431 seconds)
done (took 2.250977432 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.286774218 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.176845005 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.096740461 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.171959135 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.095346513 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.179642801 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.179179677 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.097398006 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.205209854 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.079981692 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.184248406 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.079418625 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.095771924 seconds)
  done (took 2.682751242 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.09842303 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.118943661 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.08552386 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.114044072 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.096019888 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.098285519 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.112876845 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.103950763 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.112856381 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.104678319 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.079440162 seconds)
  done (took 1.851631817 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.097401505 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.116971338 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.08589694 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.114218385 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079805901 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.11302056 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.113610378 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.102863762 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.113491035 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.10433237 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.080030955 seconds)
  done (took 1.850230935 seconds)
done (took 7.104483915 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.098522309 seconds)
  done (took 0.821029113 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.020844314 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.067230479 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.120743747 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.161936353 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.334540866 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.191854308 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.607390333 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.132071965 seconds)
  done (took 15.585454177 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.132874226 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.102462421 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.101843291 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.088442685 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.103580387 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.103327941 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.086688812 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.101873732 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.104432944 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.090789074 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.104148177 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.101635257 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.088776206 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.100084458 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.088920633 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.105648944 seconds)
  done (took 2.394330979 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.138358986 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.138273084 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.093219854 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.109994754 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.106825328 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.090465109 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.110020149 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.107577779 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.088606444 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.106216924 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.109143997 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.107183746 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.089973395 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.098062291 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.109027022 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.095946379 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.104238794 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.109118883 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.108846944 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.095307208 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.109773133 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.097784442 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.089766403 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.109403246 seconds)
  done (took 3.339352148 seconds)
done (took 22.869173017 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.165988122 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.111503624 seconds)
  done (took 1.009676801 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.104868415 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.121777896 seconds)
  done (took 0.960138654 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.1117402 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.097102088 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.13868837 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.118330352 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.098206015 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.082482311 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.134265949 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.098582569 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.082326107 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.098960334 seconds)
  done (took 1.797537187 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.090581265 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.117589104 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.109095546 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.121042107 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.095945597 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.102296933 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.112560312 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.088958331 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.119307332 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.099666408 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.094369203 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.117565682 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.107624795 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.120139201 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.112099734 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.092283593 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.110569605 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.105835275 seconds)
  done (took 2.656899066 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.082745944 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.102943482 seconds)
  done (took 0.924857138 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.087724 seconds)
    (2/7) benchmarking "second"...
    done (took 0.098699287 seconds)
    (3/7) benchmarking "month"...
    done (took 0.087818043 seconds)
    (4/7) benchmarking "year"...
    done (took 0.10342083 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.098545723 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.083696925 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.098540379 seconds)
  done (took 1.39662916 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.486224686 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.13694738 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.259174554 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.104287515 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.124940444 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.328403928 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.082869178 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.10530669 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.104779024 seconds)
  done (took 2.511288451 seconds)
done (took 11.991957626 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.097112777 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.119694536 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.13440568 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.4725646 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.124699664 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.082534316 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.164177346 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.261173475 seconds)
done (took 2.199064954 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.154265234 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.33197747 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.11950737 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.083339628 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.083413421 seconds)
  done (took 1.364936279 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.082848466 seconds)
    (2/2) benchmarking "read"...
    done (took 0.101603081 seconds)
  done (took 0.92859002 seconds)
done (took 3.19510276 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083671359 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.099269024 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.081558596 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.099270369 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.080143538 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.097816215 seconds)
    (7/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.132957392 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.083081888 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.097069801 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.082898512 seconds)
    (11/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.098354225 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.082113699 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.083151235 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098440776 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081996914 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096131585 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083179796 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.096081724 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080557882 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.096063202 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083145786 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.097098173 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.09603278 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.083137359 seconds)
  done (took 2.985027138 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.113051386 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.100061512 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.104232498 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.090065453 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.103475611 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.105819175 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.088729569 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.099224178 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.104619683 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.086328292 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.102831028 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.102818674 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.085448604 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.103540439 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10161065 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.08809777 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.104948078 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099000191 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086198498 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.103544501 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.105231635 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084088123 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.103559717 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.10409548 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.087499442 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102769378 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.101092766 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.084279005 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.105082606 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.103398922 seconds)
  done (took 3.70240771 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.088995405 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.095774686 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.081942287 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.104647319 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.080524333 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.101447497 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.096630126 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.081809307 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.098060002 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.080594338 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.097948978 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.080360551 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.096958496 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.082061187 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.097889054 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.100081582 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.093304311 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.096494143 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.080742545 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.098047159 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.085253659 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.097588817 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.099502006 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.080565845 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.095697945 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.081787293 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.097703905 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.081194727 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.097943996 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.096163558 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.084020764 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.100923676 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.081243906 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.103915356 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.084655049 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.096568475 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.084617942 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.097603093 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.097518766 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.080719929 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.096508341 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.081150073 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.096851511 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.088617378 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.10088117 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.083756011 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.098090503 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.098060832 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.082420451 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.100083519 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.081120321 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.096856306 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.083057941 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.099269189 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.099951917 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.08180191 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.098041907 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.080832887 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.098281981 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.080836694 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.097215788 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.09594312 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.084262653 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.098351526 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.096864735 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.104635995 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.081759924 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.099163557 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.100797851 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.083806679 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.099030042 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.09677862 seconds)
  done (took 7.37378745 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.086622262 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.108458629 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.083482898 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.09954249 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.09495227 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.081023537 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.100733076 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082115225 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098924106 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.114966276 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082688831 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.099240537 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098480577 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.085351248 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.097279836 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.083959199 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.10796863 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.096097957 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.081340699 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.101325577 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.081868779 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.101601414 seconds)
  done (took 2.825988638 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.217425227 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.107802679 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.144121725 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.124360722 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.117389819 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.097457602 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.104447511 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.107035316 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089367713 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.103237876 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102251412 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089428721 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.106769378 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.1031134 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088189198 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.104316766 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.104649675 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.088345661 seconds)
  done (took 2.757437605 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.097639157 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.101599822 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.12266366 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.084585386 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.101315317 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.086945487 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.107707988 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.116102315 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.103268287 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.084938014 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.110918896 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102290952 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.088177106 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101408881 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086165701 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.100380254 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.102699183 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085149433 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.110931745 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.107805833 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.090661791 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.109903155 seconds)
  done (took 2.965746699 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.100240105 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.1033151 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.120997917 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.087260849 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.099972397 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.085646356 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.107055153 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.099549832 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.093312709 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.102101821 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.10054986 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.08635441 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.107213599 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.099608044 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.089391224 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.100835093 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.086092004 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.100509875 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102761457 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.083186021 seconds)
  done (took 2.719982882 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.124796458 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.101999821 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.211070745 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.110183496 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.102717529 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.102065555 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.124872171 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.086091283 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.102761445 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.1284471 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.085726674 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.102693753 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.125404015 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.123117103 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.086445419 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.126714474 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.12646278 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.125461222 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.086034991 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.102367927 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.130121769 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.102665543 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.10980373 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.102880385 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.101190435 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.085023753 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.10262555 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.121220829 seconds)
  done (took 3.906265449 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084901461 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.099863372 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.082312547 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.098092087 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.081715442 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.098198982 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.081513903 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.098481474 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.085002022 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.098249427 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.099737239 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.08433234 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.099150666 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.084035633 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.100282656 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.083991908 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102588571 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.081157923 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.097219914 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096866052 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.084807777 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099946085 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.084499896 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.098282541 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081667028 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.099627986 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081665388 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.097600415 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.099536727 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.082265198 seconds)
  done (took 3.513364914 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.094997796 seconds)
    (2/2) benchmarking "in"...
    done (took 0.108968998 seconds)
  done (took 0.974240738 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.082546275 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.118094986 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.080717834 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.104693224 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.106151344 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.084924991 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.110209463 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.106731176 seconds)
  done (took 1.561494739 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.10358955 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.119744176 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.090485711 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.119347147 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.116032478 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.117755068 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.163123233 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.08985378 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.108024709 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.08234333 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.119259441 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.100373509 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.090407319 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.100836387 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.090082986 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.106966704 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.100605724 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.100154824 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.107867004 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.083260534 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102725613 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.11209778 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.086975872 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.098771394 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.102071735 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.095655897 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.111640861 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.086275706 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.104720768 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.110785654 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.090516712 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.094973865 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.10115048 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.090320254 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.101637628 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.098066329 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.115169661 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.103923514 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.092781822 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.107192461 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.127076397 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.083658173 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.106840073 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.107718692 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.094905243 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.107004458 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.090131341 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.100589675 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.098370416 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.086958391 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.099810903 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.085727219 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.09578537 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108275996 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.088931172 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.115740741 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.08599901 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.102638977 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.104191639 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.087961893 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.107991136 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.087130133 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.103080489 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.100422781 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092417445 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.105647243 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.109062991 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.083874426 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.095122464 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.08691038 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.11062879 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.12425934 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.095133219 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.107302642 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106514581 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.086278318 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.105241327 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.091038937 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109806768 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.110040746 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.089674031 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.122988381 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.109826585 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.085583001 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.104670097 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.11481177 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.084008952 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.104328 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.082739977 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116662639 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.100762952 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.08596112 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.098687291 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.093938932 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.10495837 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.102222286 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.082613991 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.10901688 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.079359162 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.106840408 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.107001454 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085534907 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.112102104 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.111375764 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.095902578 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.109928247 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.1131114 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084894629 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.105347956 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.081649447 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.108422526 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.104832336 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.09225158 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.095850855 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088194451 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.104148514 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.106281053 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.093483921 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.099943905 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.089842142 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.110903404 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.109014801 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.084353121 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.098834299 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.089012692 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.105823204 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.110634598 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.093131871 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.100760845 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.082376142 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.100387682 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.105984078 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.088947447 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.10737308 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.112104649 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089224313 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.096387481 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.085621152 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.112162427 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.109752068 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.084955108 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.102954284 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.10756521 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.086562967 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.101267329 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.091160812 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.104206113 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.083894494 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.107287694 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.103588781 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.084710782 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.111109849 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.103907042 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.084101565 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.104927783 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.094220937 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.105174844 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.106888563 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.084896165 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.108505318 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.090752371 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.101120448 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.101144217 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.083720619 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.111912201 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.087257047 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.100898695 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.099577518 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.098219867 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.099314153 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.089883467 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.101749513 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.10479326 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.091372697 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.103641521 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.085243357 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.104450518 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.133409091 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.09913372 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.109393134 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.10839557 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.094874967 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.106054999 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.103688984 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.089637447 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.108505672 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.090642971 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.111023375 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.107216149 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.095632614 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.105171241 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.081566925 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.107961891 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.109536307 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.084347954 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.10328831 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.083964956 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.107108824 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.109393173 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.089355528 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.107561753 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.100374831 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.086110268 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.110922335 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.087718516 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.105912599 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.100892049 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.09075648 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.102339087 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.114420407 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.091371069 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.113332599 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.105944728 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.083917025 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.11234796 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.084191716 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.108900416 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.101145208 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.083832782 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.101579757 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.091208829 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.101588725 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.088923258 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.097311687 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.110058023 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.09394295 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.103277781 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.08562498 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.107874474 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.111436063 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.088020673 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.10662669 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.088857656 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.108729533 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.117371996 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.08435178 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.105138809 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.111991628 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.091116141 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.097269707 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.091200176 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.101511406 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.102144416 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.085165734 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.100199681 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089249009 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.117820326 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.107806949 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.079274267 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.106230807 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.100455738 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.084002055 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.101726939 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.092870889 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.107498429 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.104749107 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.094946169 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.108255813 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.091044363 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.107511033 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.106581941 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.091209633 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.108842365 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.104999862 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.091073355 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.104298455 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.084993768 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.106178385 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.083802774 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.104231978 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.104798996 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.091209076 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.103581819 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091899379 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.106197647 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.102517226 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.087822949 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.108886363 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.087093028 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.104088418 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.101146763 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.089335862 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.103349804 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.085194623 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.106263381 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.100820364 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094176649 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.106264786 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.093478879 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.10352046 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.098599389 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.092074796 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.104809419 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.112336932 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.091097284 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.10880116 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.086790905 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.107279197 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.104975676 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.095872644 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.10131637 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.09650574 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.108835059 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.103222178 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.088950131 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.104510461 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.087845619 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.102183398 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.104906023 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.091793792 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.102805617 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.085972441 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.107974667 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.105765584 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.085992647 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.105171347 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.091409992 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.10415156 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.104176229 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.080352613 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.102081713 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.0858561 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.1077791 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.110508096 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.091384339 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.105947128 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.085427698 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.10957928 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.10160923 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.082555587 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.11820267 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.119185938 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.091717113 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112656348 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.084896412 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.105115951 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.113587942 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.081055097 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.102676316 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.087098717 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.102250693 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.112201505 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.091709199 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.112794559 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.08555443 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.104080615 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.101075942 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.091072739 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.101924667 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.088850247 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.105064492 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.106237885 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.088744441 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.102657389 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.091562279 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.105758952 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.091707275 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.111910035 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.102407286 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.087477857 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.10771225 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.083134348 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.101920902 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.102486236 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.089155575 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.108531948 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.083201054 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.100822527 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.106606996 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.087900749 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.104053013 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.086066029 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.106180006 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.110718161 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.086680295 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.10706667 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.095107308 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.098656842 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.106335829 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.085788694 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.106470879 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.084757547 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.107908702 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106420996 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.092253514 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.112162691 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.09041 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.105513673 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104244986 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.087451188 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.107425248 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.089812596 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.108887266 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.102715454 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.091810069 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.112812703 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.08723309 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.105573239 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.104085841 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.086813922 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.108263154 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.091368355 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.106591449 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.117557254 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.08859589 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.105159499 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.110122517 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.090263967 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.106990485 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.0911824 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.105443482 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.110566884 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.084894543 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.113783077 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.103735777 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.092483234 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.105370245 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.084438345 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.106450381 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.086609065 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.104368085 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.108212178 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.091353142 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.102996581 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.085338813 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.104987397 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.104852076 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.095103813 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.111875088 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.106125615 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091184972 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.101457484 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.083599595 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.10949177 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.084797952 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.106128302 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.106664984 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093254732 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.107798635 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.086325735 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.104656721 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.111108343 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.092465205 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.110214707 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.100446103 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.092034057 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.109408731 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.088910428 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.105000495 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.104081332 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.089046759 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.109872168 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.087397183 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.104212611 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.113290803 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.091815077 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.109670246 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.087888942 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.105645409 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.104457756 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.085925864 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.110657164 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.089291816 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.111707361 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.107047639 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.088150542 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.115126932 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.085539213 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.105282395 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.114267806 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085974141 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.112223811 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.103651178 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.087886202 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.110891962 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.092173852 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.102948205 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.102919089 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.086018682 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.1069185 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.086529144 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.102853292 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.097250693 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.113199644 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.107291067 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.086085548 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.103538187 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.084888751 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.103496546 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.103080659 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.093683018 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.106826787 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.095921891 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.104315281 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.104270761 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.085378999 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.105224947 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.090153244 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.107590794 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.101341979 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.085835905 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.10294618 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.089529509 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.112731458 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.10321242 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.091981091 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.108574138 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.089534809 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.106343168 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.11355787 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.084195775 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.109012455 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.097774065 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.111103628 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.106493324 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.093634384 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.113335556 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.110250716 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.08658325 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.110563737 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.089528271 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.105238953 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.11102189 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.08905939 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.120342582 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.089494698 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.104905814 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.104603569 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.090284957 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.104715633 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.093873247 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.111564987 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.110540889 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.091994074 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.107746912 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.12020487 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.090384093 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.111454207 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.107081262 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.090788897 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.104337239 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.087502252 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.102771764 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.085345545 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.106531816 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.111142954 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.09306896 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.118313113 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.104307989 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097155053 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.113957089 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.109765779 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.084193338 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.104038203 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.087163141 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.103130405 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.092062174 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.103461557 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.102939682 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.085115163 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.104492411 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.087872768 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.111379956 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.106945429 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.092756044 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.105741347 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.082151898 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.107457633 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.089297278 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.106110134 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.101927501 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.09131136 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.111524956 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.093569551 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.117258668 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.105674606 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.089755186 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.107172836 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.087347288 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.103863793 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.111872848 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.086323131 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.108409976 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.086416085 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.105927977 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.110957844 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092048564 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.11682457 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.107392774 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.090103234 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.115111429 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.093715318 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.102861299 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.102220291 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.094081701 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.106772718 seconds)
  done (took 60.349738102 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.152598736 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.092437333 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.100947946 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.081845887 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.11999861 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.105462097 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.08242995 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.105250929 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.105867167 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.089382933 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.10131575 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.083320451 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.114959675 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.129520119 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.118939714 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.110199326 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.083357015 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.105834072 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.081677402 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.105315034 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.116970347 seconds)
  done (took 3.005962391 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.109569649 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.120652419 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.119481108 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.123145431 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.111437073 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.101183017 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.118447162 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.120332681 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.123437545 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.113606676 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.10541382 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.120157097 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.114513659 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.113263334 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09537922 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.116375141 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.12284059 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.111657825 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.101554148 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.118886374 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.117284305 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.119203437 seconds)
  done (took 3.337085081 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.095919599 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.107737866 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.092803006 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.10105683 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.087114818 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.100534691 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.113710765 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.084503426 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.10999121 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.085607781 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.103680927 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.086191835 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.110598672 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.099851835 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.087266925 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.103270103 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.159837643 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.1100183 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.091220077 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.107095608 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.084330821 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.107325391 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.102866119 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.086287089 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.104553591 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.099691418 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.10683019 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.087866599 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.105122221 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.104068539 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.09147142 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.102798284 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.08873537 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.106935838 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.084939264 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.104220284 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.106032385 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.090830113 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.103943399 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.087674495 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.107104271 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.085832453 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.110524498 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.107095512 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.08868386 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.103308427 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.087955476 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.107028143 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.082415452 seconds)
  done (took 5.695403146 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.120788708 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.159191484 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.089158489 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.129803689 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.125523691 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.121116045 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.111198661 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.148896254 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.084320052 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.110207285 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.129221497 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.124795926 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.091309843 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.116344762 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.110131369 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.091687555 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.112034711 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.106452323 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.095924325 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.107090646 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.116073511 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.113389543 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.104864674 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.122918158 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.11583359 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.108845161 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.087594557 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.116193784 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.122732391 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.115512497 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.096934061 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.117831358 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.126948049 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.11265712 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.087219778 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.113430571 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.128288271 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.092338447 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.11276447 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.104945212 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.094611415 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.116556877 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.114749499 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.127745167 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.091129106 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.113661356 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.110788307 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.084939769 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.122831102 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.114417598 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.12116219 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.104257272 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.114830171 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.11101217 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.116491724 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.106411138 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.109940022 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.109141884 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.095328707 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.121870114 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.104265292 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.115516268 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.104434047 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.112977185 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.119740535 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.124826377 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.092758429 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.115753597 seconds)
  done (took 8.576507308 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.120069464 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.118536906 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.130205264 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.130063566 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.118025755 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.099072888 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.119352974 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.118810098 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.118333018 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.105715175 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.118526202 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.165055906 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.113402616 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.123351894 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.09958177 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.119171515 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.119138374 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.118665006 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.100223143 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.118073565 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.119571181 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.130282118 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.119311189 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.129504925 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.108857485 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.112665673 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.119355678 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.118310817 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.130175972 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.099443886 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.129999919 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.119357103 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.118798595 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.128913873 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.12783658 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.09927624 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.110943685 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.118843179 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.099881797 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.118644042 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.112958762 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.128864344 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.098400915 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.114132878 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.118975468 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.118886133 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.128634424 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.109099357 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.123070737 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.125621283 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.120009378 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.131643624 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.119064445 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.098969853 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.129478443 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.134786748 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.128905627 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.12928066 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.119030935 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.129733932 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.129192907 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.135089153 seconds)
  done (took 8.24528831 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.14146472 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.102442299 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.128472446 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.104669669 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.086571441 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.116093999 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.105116333 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.085431927 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.121318708 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.12194397 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.123959022 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.096573633 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.119412272 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.124651243 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.1153834 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.11979878 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.09610946 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.116295844 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.122116985 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.115539629 seconds)
  done (took 3.092891806 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.097040652 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.129100445 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.108731913 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.096914594 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.113001421 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.115253881 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.090868732 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.111257724 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.108714729 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092093167 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.121842792 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.120686413 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089302864 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.116894796 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.120324887 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.115542567 seconds)
  done (took 2.577771897 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.101641414 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.130741971 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.128527401 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.108394826 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.086255746 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.105277287 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.090783558 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.105498657 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.104286312 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.104728244 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.109130228 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.114530528 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.091628762 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.106435904 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.084971744 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.114280651 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.103994176 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.086051908 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.110968014 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.129814244 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.100618617 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.107372967 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.11191221 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.09148584 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.109291846 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.115700448 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.088838282 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.108279036 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.086123515 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.111375807 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.108698636 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.096699138 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.104745429 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.1075925 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.087103347 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.105865307 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.090963942 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.112033541 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.114808761 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.091307114 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.107570204 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.1087215 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.092530756 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.110887547 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.085581133 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.112004093 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.10397294 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.095091158 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.1063277 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.108313963 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.091575614 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.110668485 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.090666636 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.120404987 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.113525043 seconds)
  done (took 6.561128393 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.103430308 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.113372821 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.08261635 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.106681269 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.111619197 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.090204065 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.112823893 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.091440803 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.111020696 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.106437122 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.09099968 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.113805033 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.109906888 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.092749466 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.111183573 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.09213584 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.103984542 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.109464021 seconds)
  done (took 2.691843384 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.095226261 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.109119236 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.096309916 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.11003096 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.108658105 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.091433714 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104052789 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.086342327 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107171535 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.088542811 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.109296855 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.111434604 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08685618 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.111018045 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.088650628 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109447715 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.11099907 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.087397037 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.109149518 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.084937187 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.111588839 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.10628809 seconds)
  done (took 3.06233428 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.125696761 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.129489842 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.116370001 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.218638838 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.106537762 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.135809332 seconds)
  done (took 1.673153814 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113572197 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.146224061 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.110304604 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09224945 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122280538 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114389099 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093375815 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115281717 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125428162 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.126313648 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114006393 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106332089 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125602685 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126069953 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122185902 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121823249 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094649941 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115287402 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109799113 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134049445 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094974369 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.1254015 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11517892 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114486908 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095597124 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12591301 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125731113 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127404662 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114108806 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125272968 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10222663 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113997575 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127401956 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128394797 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.092669017 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126053193 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115738401 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134205023 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121664828 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125650305 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.092939539 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123379763 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127123319 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121129743 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106126039 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114643389 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121708052 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115179926 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094597719 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141377987 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122188406 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124947089 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123031861 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.1261309 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.104857186 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.160811302 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127607359 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105132125 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121747646 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126993813 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.126739695 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122011278 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125188004 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127091299 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102062919 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126774332 seconds)
  done (took 8.658022231 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129547149 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.111572371 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115121542 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.127373069 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12630066 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094826216 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11578077 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115614988 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094566934 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112095749 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.15937967 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115260153 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126283795 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126581971 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096186301 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115595328 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115661078 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125847879 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090870584 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.142138669 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115259003 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126372561 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126181265 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125041831 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128136663 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.102391509 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115846095 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115186359 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094718633 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116553275 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122420708 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114905811 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124877244 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.090434689 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126614539 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115616142 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.0944943 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121982332 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115948778 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122412626 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126184353 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134886821 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094877025 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115569446 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129024511 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11536553 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095260042 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112171072 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115569072 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09139383 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128121612 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128686787 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129192635 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126542067 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115402616 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095619307 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116152757 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116635608 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095552687 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122639793 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125935679 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115101563 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.141891898 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115401088 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094386966 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126846219 seconds)
  done (took 8.544282171 seconds)
done (took 162.098802415 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.104140661 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.144162856 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.123256237 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.151446104 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.109862965 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.123547429 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.142292288 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.124328008 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.089005817 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.109486257 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.089167276 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.112431563 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.155895494 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.10982433 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.10969479 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.091517182 seconds)
  done (took 2.734862944 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.205694235 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.277226902 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.127389307 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.087479545 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.115323067 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.089097268 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.109550498 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.116583651 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.09051747 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.108505597 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.089797165 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.11044197 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.087876862 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.109806533 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.110001344 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.089418766 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.10845057 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.089379402 seconds)
  done (took 2.982485266 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.117600364 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.150694531 seconds)
  done (took 1.126377971 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.123413841 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.187922054 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.305718303 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.158301157 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.144882934 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.132084528 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.15952957 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.115011758 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.230894167 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.128065724 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.106432106 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.12303825 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.146184041 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.120301679 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.098386793 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.122726244 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.148431028 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.117018786 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.099183449 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.120956545 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.142441088 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.088995344 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.119643814 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.117996595 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.192356338 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.104017117 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.109120132 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.109766969 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.099564234 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.119664082 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.115982418 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.130888423 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.102587278 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.194624166 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.106439135 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.189249388 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.12185322 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.094859474 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.119204154 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.114578271 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.102230774 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.123443532 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.129934762 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.101001405 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.111707384 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.122374397 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.088003986 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.109342821 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.117122194 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.102590829 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.117294643 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.116410773 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.164281732 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.122466073 seconds)
  done (took 7.863667547 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.828672312 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.155853944 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.116848826 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.932945836 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119216201 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.13141029 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.822716476 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.138204264 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.24184556 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.808300673 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.135745972 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.125293042 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.242578347 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.247818225 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.004689803 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.328954901 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.697338906 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.130898987 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.144252017 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.162836458 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122425854 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.14241997 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.113248426 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.459696541 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.09757634 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.11634358 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.121388865 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.102984162 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.191729715 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.093967141 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.119386127 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.190572007 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.283496207 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.196317929 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.119578475 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.11486464 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.091892699 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.203360948 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.280471594 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.230420106 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.183825712 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.091015674 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.115206691 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.124912022 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.113424536 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.111688461 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.17401937 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.206713796 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.182350297 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.119148333 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.12441899 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.10082726 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.123811387 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.174927081 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.126840454 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.335902239 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.334433512 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.115335724 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123688612 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.110140713 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.275054953 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.128962075 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.240305823 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.141061359 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.226936107 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.09229465 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.792504866 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.179586887 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.114065708 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.120694764 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.099193536 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.120669939 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.124491474 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.176703999 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.415625757 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.12748867 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.096127855 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.114363946 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.239882167 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.093679943 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.114477403 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.172012828 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.120563573 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.122226008 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.105956612 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.125673666 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.180378856 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.267416327 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.126378939 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.101120412 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.120010732 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.127174102 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.09818358 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.242374685 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.23607397 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.174582928 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.241331704 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.102914366 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.196509312 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.179307778 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.124932306 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.182674543 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.121909876 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.129529927 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.102727776 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.231907969 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.174409702 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.106343086 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.119389145 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.122184258 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.156790567 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.096089568 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.12216308 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.181390592 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.493981793 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.18004513 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.111374676 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.118621239 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.10164354 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.193558508 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100609459 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.278394238 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12531337 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.181616967 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.12237608 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.111664612 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.100597552 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.196872462 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.104857618 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122909958 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.126018712 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.12241931 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.245657525 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.231791803 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.127786162 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.229413399 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.187966382 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.122080811 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.205547643 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.101672116 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.197909097 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.102019436 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.123539045 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119711373 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.784345899 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.104369569 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.121870653 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.119295738 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.194817165 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.092551647 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.128798252 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.115218131 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.089891985 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.833218981 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.118420503 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.104810977 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.129881749 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.121729047 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.12153194 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.098724298 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.119449347 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.173162312 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.244078129 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.124504618 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.122343717 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.093813175 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.191672012 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.098166429 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.1156879 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.115911277 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.094491349 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.124379974 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.097583262 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.130570846 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.199559352 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.173014259 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.236231562 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.567586383 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.093067753 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.116221245 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.244922458 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.116394918 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.302408462 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100642143 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.242858941 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.19810933 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.105057201 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.328218245 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.197899888 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.195033214 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.096026778 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.205881541 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090240867 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.122359988 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.196669352 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.092637835 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.12308535 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.173572 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.128529345 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.126236329 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.997146229 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.093882805 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.258062841 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.089709555 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.202930685 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.098352766 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.126742148 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.30978615 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.115377518 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.110299447 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.198005853 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.096911526 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.116270908 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.882875814 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.093841902 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.125733387 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.121652741 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.235768605 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.17509771 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.122941763 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.10019733 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.124378442 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.174169483 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.244130381 seconds)
  done (took 45.916996769 seconds)
done (took 61.473703843 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.282825689 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.216510728 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.258703385 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.168575908 seconds)
  done (took 1.888699954 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.181970366 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.14970055 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.14919164 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.087259957 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.157232992 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.108808399 seconds)
  done (took 1.721161566 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.37064587 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.280516037 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.243285003 seconds)
  done (took 1.782955183 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.253205629 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.274431793 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.332547778 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.42411273 seconds)
  done (took 2.276090432 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.238815442 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.144532341 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.131904399 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.127223671 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.224190982 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.266413356 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.161222819 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.217361907 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.142135121 seconds)
  done (took 2.587871432 seconds)
done (took 11.149384247 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.273108401 seconds)
    (2/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.179818039 seconds)
    (3/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.222273971 seconds)
    (4/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.197793883 seconds)
    (5/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.144962121 seconds)
    (6/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.16015578 seconds)
    (7/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.234940099 seconds)
    (8/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.255217493 seconds)
    (9/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.178755779 seconds)
    (10/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.153910864 seconds)
    (11/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.118483205 seconds)
    (12/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.21606148 seconds)
    (13/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.10606943 seconds)
    (14/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.14672083 seconds)
    (15/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.127185968 seconds)
    (16/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.250142981 seconds)
    (17/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.096395077 seconds)
    (18/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.206672027 seconds)
    (19/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.195827118 seconds)
    (20/286) benchmarking ("sort", Int8, false)...
    done (took 0.211467286 seconds)
    (21/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.132411792 seconds)
    (22/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.139466628 seconds)
    (23/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.138807676 seconds)
    (24/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.107235393 seconds)
    (25/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.207650285 seconds)
    (26/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.246873106 seconds)
    (27/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.20742878 seconds)
    (28/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.122515421 seconds)
    (29/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.187267578 seconds)
    (30/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.088850236 seconds)
    (31/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.127522473 seconds)
    (32/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.182699569 seconds)
    (33/286) benchmarking ("sort", Int64, true)...
    done (took 0.236596229 seconds)
    (34/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.088550395 seconds)
    (35/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.122658959 seconds)
    (36/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.079489764 seconds)
    (37/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.17339911 seconds)
    (38/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.124138059 seconds)
    (39/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.094544966 seconds)
    (40/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.236925072 seconds)
    (41/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.129179514 seconds)
    (42/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.176813552 seconds)
    (43/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.107219586 seconds)
    (44/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.195355244 seconds)
    (45/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.12000677 seconds)
    (46/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.088120709 seconds)
    (47/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.14173155 seconds)
    (48/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.120246632 seconds)
    (49/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.096990368 seconds)
    (50/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.107121828 seconds)
    (51/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.08881923 seconds)
    (52/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.224432049 seconds)
    (53/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.1266564 seconds)
    (54/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.098106992 seconds)
    (55/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.114995965 seconds)
    (56/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.200003793 seconds)
    (57/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.135646106 seconds)
    (58/286) benchmarking ("sort", Int8, true)...
    done (took 0.234738835 seconds)
    (59/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.116317438 seconds)
    (60/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.143697121 seconds)
    (61/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.102101655 seconds)
    (62/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.123955795 seconds)
    (63/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.175679958 seconds)
    (64/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.195966493 seconds)
    (65/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.090786249 seconds)
    (66/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.193655422 seconds)
    (67/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.157392453 seconds)
    (68/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.198703257 seconds)
    (69/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.085183888 seconds)
    (70/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.119604614 seconds)
    (71/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.097489787 seconds)
    (72/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.11741558 seconds)
    (73/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.101368154 seconds)
    (74/286) benchmarking ("sort", Int64, false)...
    done (took 0.112270193 seconds)
    (75/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.240856098 seconds)
    (76/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.161193771 seconds)
    (77/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.078396869 seconds)
    (78/286) benchmarking ("sort", Float32, true)...
    done (took 0.245364614 seconds)
    (79/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.174837865 seconds)
    (80/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.068783384 seconds)
    (81/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.123317267 seconds)
    (82/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.20815401 seconds)
    (83/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.097468426 seconds)
    (84/286) benchmarking ("sort", BigInt, true)...
    done (took 0.248490575 seconds)
    (85/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.140170457 seconds)
    (86/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.072128819 seconds)
    (87/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.124928812 seconds)
    (88/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.142623019 seconds)
    (89/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.07117444 seconds)
    (90/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.125339094 seconds)
    (91/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.184801108 seconds)
    (92/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.153248246 seconds)
    (93/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.111563272 seconds)
    (94/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.130521489 seconds)
    (95/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.179168515 seconds)
    (96/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.128928128 seconds)
    (97/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.093700074 seconds)
    (98/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.143172542 seconds)
    (99/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.119224667 seconds)
    (100/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.092134845 seconds)
    (101/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.137931794 seconds)
    (102/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.069030828 seconds)
    (103/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.123730003 seconds)
    (104/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.100376863 seconds)
    (105/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.094386583 seconds)
    (106/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.133896351 seconds)
    (107/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.160857568 seconds)
    (108/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.191407569 seconds)
    (109/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.140578932 seconds)
    (110/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.09536913 seconds)
    (111/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.111446765 seconds)
    (112/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.103360316 seconds)
    (113/286) benchmarking ("sort", Bool, false)...
    done (took 0.192164309 seconds)
    (114/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.122094153 seconds)
    (115/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.121019813 seconds)
    (116/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.08888838 seconds)
    (117/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.142339917 seconds)
    (118/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.120645433 seconds)
    (119/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.149684003 seconds)
    (120/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.116327676 seconds)
    (121/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.06979156 seconds)
    (122/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.123501674 seconds)
    (123/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.097176478 seconds)
    (124/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.119381959 seconds)
    (125/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.147147766 seconds)
    (126/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.096679962 seconds)
    (127/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.120690735 seconds)
    (128/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.127365791 seconds)
    (129/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.121695608 seconds)
    (130/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.122098015 seconds)
    (131/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.116906137 seconds)
    (132/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.144433985 seconds)
    (133/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.070729883 seconds)
    (134/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.171213302 seconds)
    (135/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.092049564 seconds)
    (136/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.102010353 seconds)
    (137/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.095337204 seconds)
    (138/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.090497551 seconds)
    (139/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.122379014 seconds)
    (140/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.089148864 seconds)
    (141/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.09346005 seconds)
    (142/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.150768772 seconds)
    (143/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.150038277 seconds)
    (144/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.175707572 seconds)
    (145/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.096020382 seconds)
    (146/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.12531022 seconds)
    (147/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.096488287 seconds)
    (148/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.122600988 seconds)
    (149/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.143174756 seconds)
    (150/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.071241493 seconds)
    (151/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.173457013 seconds)
    (152/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.115160742 seconds)
    (153/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.179689223 seconds)
    (154/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.113555185 seconds)
    (155/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.140319408 seconds)
    (156/286) benchmarking ("sort", Float64, false)...
    done (took 0.183493665 seconds)
    (157/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.160935212 seconds)
    (158/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.114866857 seconds)
    (159/286) benchmarking ("sort", BigInt, false)...
    done (took 0.232354679 seconds)
    (160/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.129536138 seconds)
    (161/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.071171269 seconds)
    (162/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.092957658 seconds)
    (163/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.121031317 seconds)
    (164/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.095186774 seconds)
    (165/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.09636029 seconds)
    (166/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.092251278 seconds)
    (167/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.092902408 seconds)
    (168/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.176990582 seconds)
    (169/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.180215896 seconds)
    (170/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.074260383 seconds)
    (171/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.116596716 seconds)
    (172/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.174451401 seconds)
    (173/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.32047045 seconds)
    (174/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.069715813 seconds)
    (175/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.094961192 seconds)
    (176/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.069229936 seconds)
    (177/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.124614192 seconds)
    (178/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.071853293 seconds)
    (179/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.121378819 seconds)
    (180/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.086761917 seconds)
    (181/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.101415794 seconds)
    (182/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.144707995 seconds)
    (183/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.094768703 seconds)
    (184/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.088923027 seconds)
    (185/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.093048199 seconds)
    (186/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.135395041 seconds)
    (187/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.094438332 seconds)
    (188/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.098961147 seconds)
    (189/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.093209499 seconds)
    (190/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.09208414 seconds)
    (191/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.141999551 seconds)
    (192/286) benchmarking ("sort", Bool, true)...
    done (took 0.233871927 seconds)
    (193/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.112042522 seconds)
    (194/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.125371969 seconds)
    (195/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.114119657 seconds)
    (196/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.069084756 seconds)
    (197/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.094817404 seconds)
    (198/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.070493081 seconds)
    (199/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.069930938 seconds)
    (200/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.156514749 seconds)
    (201/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.100273698 seconds)
    (202/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.120947562 seconds)
    (203/286) benchmarking ("sort", Float64, true)...
    done (took 0.243256487 seconds)
    (204/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.096137783 seconds)
    (205/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.099557006 seconds)
    (206/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.069166766 seconds)
    (207/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.120428678 seconds)
    (208/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.072481955 seconds)
    (209/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.118723927 seconds)
    (210/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.115871843 seconds)
    (211/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.068831767 seconds)
    (212/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.09147358 seconds)
    (213/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.112755498 seconds)
    (214/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.111451343 seconds)
    (215/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.099088394 seconds)
    (216/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.127836836 seconds)
    (217/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.078751821 seconds)
    (218/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.140002036 seconds)
    (219/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.068993199 seconds)
    (220/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.120110816 seconds)
    (221/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.089814697 seconds)
    (222/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.092930866 seconds)
    (223/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.09127973 seconds)
    (224/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.111951623 seconds)
    (225/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.077765091 seconds)
    (226/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.09567527 seconds)
    (227/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.06990513 seconds)
    (228/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.071628642 seconds)
    (229/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.112981808 seconds)
    (230/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.091668625 seconds)
    (231/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.138937552 seconds)
    (232/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.188124931 seconds)
    (233/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.069920969 seconds)
    (234/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.095962867 seconds)
    (235/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.088699546 seconds)
    (236/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.112286223 seconds)
    (237/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.074501661 seconds)
    (238/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.114722561 seconds)
    (239/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.166324023 seconds)
    (240/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.096099908 seconds)
    (241/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.070825099 seconds)
    (242/286) benchmarking ("sort", Float32, false)...
    done (took 0.184970983 seconds)
    (243/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.094707787 seconds)
    (244/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.072013417 seconds)
    (245/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.122255691 seconds)
    (246/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.089709882 seconds)
    (247/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.114175221 seconds)
    (248/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.098352386 seconds)
    (249/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.166271773 seconds)
    (250/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.114369655 seconds)
    (251/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.097526396 seconds)
    (252/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.12078779 seconds)
    (253/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.069411788 seconds)
    (254/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.093722979 seconds)
    (255/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.089216798 seconds)
    (256/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.114600938 seconds)
    (257/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.077675212 seconds)
    (258/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.092857174 seconds)
    (259/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.089679787 seconds)
    (260/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.119014872 seconds)
    (261/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.069483738 seconds)
    (262/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.112350942 seconds)
    (263/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.072777449 seconds)
    (264/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.070085032 seconds)
    (265/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.185320325 seconds)
    (266/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.121801382 seconds)
    (267/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.087752856 seconds)
    (268/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.112867463 seconds)
    (269/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.096751134 seconds)
    (270/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.103106042 seconds)
    (271/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.114604785 seconds)
    (272/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.122366365 seconds)
    (273/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.113222041 seconds)
    (274/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.070531304 seconds)
    (275/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.119077955 seconds)
    (276/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.090210069 seconds)
    (277/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.119093691 seconds)
    (278/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.077682797 seconds)
    (279/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.114888534 seconds)
    (280/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.093271863 seconds)
    (281/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.115400339 seconds)
    (282/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.080041242 seconds)
    (283/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.132532763 seconds)
    (284/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.097115295 seconds)
    (285/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.139911322 seconds)
    (286/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.070485144 seconds)
  done (took 37.473857517 seconds)
done (took 38.368535878 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.105272325 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.154529391 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.123717199 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.118839297 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.127980749 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.117544298 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.098549474 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.124778579 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.102728435 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.129017744 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.12546878 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.071470724 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.123907674 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.100360577 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.123972261 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.146616104 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.103872772 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.121264224 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.122264524 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.08882115 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.121980769 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.089938238 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.115524144 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.071385688 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.124807176 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.097738527 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.119186443 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.123854375 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.090020002 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.114241857 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.095401147 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.122681491 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.08922522 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.127587178 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.119835825 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.098713074 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.124954186 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.10038905 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.115847478 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.113207076 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.097682254 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.112944718 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.097089454 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.120963065 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.096585014 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.119034454 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.122430261 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.102886894 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.145775951 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.118626718 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.098885905 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.124945429 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.099784151 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.121442872 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.09312197 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.122785223 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.119332123 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.122646114 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.12316168 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.119365373 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.097770794 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.12208788 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.094856132 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.121939199 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.122002022 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.101652433 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.125189814 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.095892806 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.124891719 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.118663088 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.089575876 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.122687694 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.093904886 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.113445476 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.099084127 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.125260854 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.089237974 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.119221249 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.120615243 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.096824671 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.112862544 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092488355 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.116144127 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.09698713 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116478655 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.071984651 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.118019395 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.095904864 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.113453302 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.125324854 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.097231587 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.120936202 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.091453449 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.126030738 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.089850508 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.119430336 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.114054868 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.090446986 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.1157309 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.094164041 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.113635852 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092794917 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.122870978 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.092295349 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.119886716 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.127194844 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.091533594 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.121574562 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.089991578 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.113540153 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.129196141 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.101403963 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.114440056 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.09496498 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.112871034 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.098522105 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.114188351 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.090113494 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.113509311 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.113465835 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.09590578 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.113994 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.09346864 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.121762624 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.104985899 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.114200981 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.094237285 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.117221617 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.114168091 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.096381518 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.114714968 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.090148026 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.116530583 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.079646022 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.117824102 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.090528901 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.121765538 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.0933661 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.122796306 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.115616069 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.100093765 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.118920405 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.096354539 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.119396526 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.090305182 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.100102649 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.09604336 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.116420425 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.092793508 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.11411421 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.115860691 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.089927927 seconds)
done (took 17.59473273 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.090808643 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.188015061 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.159661966 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.150185947 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.136596584 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.090275051 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.125652535 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.14736242 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.092698812 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.146961492 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.139801986 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.134861456 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.129787897 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.114039803 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.114463505 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.095111159 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.116295734 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.107040428 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.153359835 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.136873839 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.170326265 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.113383073 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.126844337 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.139021557 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.124475437 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.132414585 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.091654202 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.118942011 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.094540416 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.140872008 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.135031077 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.095331386 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.11527273 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.113698881 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.132917218 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.122756968 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.090394651 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.121927165 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.090791844 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.114919977 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.14669814 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.136452764 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.095937147 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.120992391 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.094125213 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.123505636 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.092082514 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.123175471 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.125695979 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.095285982 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.130952425 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.161752128 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.118949992 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.108353462 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.113382942 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.126729508 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.10699689 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.123254445 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.09139697 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.122733807 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.114893079 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.094258985 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.131490593 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.14558768 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.094608344 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.130364294 seconds)
  done (took 8.96630642 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.108688689 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.145021204 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.133829832 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.109975884 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.115654159 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.091797263 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.115625226 seconds)
  done (took 1.777617061 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.092584025 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.141758263 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.134842981 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.141911994 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.140657439 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.11949156 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.121089186 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.116253761 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.112385368 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.117055826 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.140819184 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.132819685 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.118252534 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.123922571 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.119795928 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.115982403 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.142724616 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.092707749 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.119383358 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.119008119 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119999377 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.135920152 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.09428075 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.117050277 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.110646955 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.116805897 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.165303805 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.097301272 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115570344 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.119477135 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.090494718 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.156720816 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.134753806 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.100177099 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.116168937 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.111050625 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.135044946 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.11458378 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.108750464 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.122258409 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.13447956 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.093233957 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.118494249 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.089977245 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.121622507 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.106016059 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.120687591 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.0925127 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.120539359 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.140597125 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.0928471 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.134781805 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.093266575 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.121383542 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.118212195 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.095736063 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.126901653 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.093342061 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.141681157 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.114507358 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.112901056 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.136604667 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.134773 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.112162384 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.120294625 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.109555729 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.134672485 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.120004176 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094726818 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.120710939 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.112066035 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.114882145 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.095003953 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.131811611 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.118355361 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.121313563 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.144448628 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.12097375 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.103580129 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.11988432 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.093958184 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.117498185 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.144383515 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.095992042 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.117293369 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.097009249 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.120508129 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.114415652 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.091445968 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.120406397 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.093639959 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.118725369 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.095867186 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.118120367 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.095140771 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.137808407 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.118258063 seconds)
  done (took 12.349370039 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.094099038 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.119089959 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.096449409 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.118524381 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.093597058 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.11854933 seconds)
  done (took 1.605095504 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.124733863 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.120659458 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.132823805 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.09967637 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.16087846 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.137250956 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.112776801 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.126403848 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.137354211 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.105410664 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.136399273 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.137794117 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.142776697 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.099350513 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.135801876 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.122919881 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.112404946 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.128642476 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.130339111 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.100068567 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.139715849 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.123887456 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.100697301 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.138163397 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.121919943 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.099253872 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.129688383 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.130723552 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.105719015 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.127194154 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.124206833 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.09748433 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.124508764 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.127205844 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.112850233 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.125654557 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.124201957 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.097881196 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.129859191 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.121108496 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.113394109 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.124739616 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.129793718 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.097429568 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.127928031 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.125024301 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.098027842 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.129107362 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.136389073 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.097296447 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.123539751 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.098739647 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.121909005 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.122484869 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.100369651 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.129514835 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.122324186 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.111390396 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.124485458 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.125118331 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.096689087 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.122640464 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.127033551 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.096120374 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.134070946 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.123287213 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.099469568 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.12475216 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.125635825 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.09990847 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.122860191 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.120718706 seconds)
  done (took 9.62691432 seconds)
done (took 35.27479943 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.69547432 seconds)
  done (took 1.659306438 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.831065436 seconds)
  done (took 1.798184633 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.069793277 seconds)
  done (took 18.067302816 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.502966177 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.583440415 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.029020077 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.179721731 seconds)
  done (took 3.265192137 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.945307648 seconds)
  done (took 1.933007049 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.286229355 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.261479876 seconds)
  done (took 1.524491701 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.781791608 seconds)
  done (took 1.762192596 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.466046489 seconds)
  done (took 2.44662935 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.330699037 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.191315042 seconds)
  done (took 1.511324499 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.566491773 seconds)
  done (took 1.550530233 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.317663169 seconds)
  done (took 11.304747538 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.276772757 seconds)
  done (took 1.27402437 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.309426253 seconds)
  done (took 1.297233396 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.526509697 seconds)
  done (took 4.514641474 seconds)
done (took 54.878750564 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.103355334 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.131585652 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.10564813 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.128013472 seconds)
  done (took 1.448265045 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.109394739 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.125621291 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.108810709 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.123335231 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.135018017 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.099854752 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.128686266 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.131483775 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.099833627 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.126557276 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.124355303 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.099544606 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.127807151 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.101338438 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.122251518 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.128027046 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.103857098 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.125469337 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.128787429 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.100402389 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.122370578 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.101846796 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.12866959 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.123278006 seconds)
  done (took 3.815674448 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.103629237 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.12284234 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.100076251 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.122356506 seconds)
  done (took 1.438024613 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.105345674 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.136146113 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.109877086 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.129454364 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.136311756 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.108425938 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.120758118 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.096601242 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.123337095 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.127712397 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.094755229 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.143943212 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.135505956 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.102789309 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.130988972 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.093518496 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.119723597 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.13562204 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.103339798 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.130638873 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.097052789 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.128879416 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.119745648 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.113817128 seconds)
  done (took 3.83531817 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.177610271 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.1312712 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.143210208 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.099784794 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.165337035 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.144929669 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.092280575 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.145191177 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.116702561 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.108266687 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.12279614 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.163986134 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.107400443 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.118049812 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.116787728 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.092087715 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.130833456 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.106042576 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.120544164 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.131745648 seconds)
  done (took 3.532893321 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.101765041 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.120584767 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.09211237 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.120729073 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.102965958 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.125430164 seconds)
  done (took 1.660385708 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.100477231 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.118621673 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.097694182 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.119839082 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.098574738 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.117920051 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.091928272 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.119164302 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.118679554 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.092054599 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.11929752 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.092352458 seconds)
  done (took 2.284148885 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.51817276 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.123168462 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.124600155 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.092332854 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.127980402 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.11796367 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.108916968 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.122487448 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.146938185 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.092227446 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.118641086 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.095291702 seconds)
  done (took 2.792286391 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233890584 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129650827 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.288274337 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.363672721 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203584156 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.169674071 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.285518432 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.170537212 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.20627733 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160847234 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234288269 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18457011 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158616922 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209340585 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143076233 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.146108304 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197448253 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.2720757 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157426648 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.244615679 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173697612 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.170762652 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.186080009 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155918884 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142856123 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17787426 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.099497843 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135287275 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188705699 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206897395 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196233691 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167025284 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160863057 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.460241647 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.263290335 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198407324 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.289483079 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140915204 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.17488961 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.173207961 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.263412659 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143411063 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210831683 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164989789 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134722828 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207342786 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.345542647 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.18431861 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.15017421 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146155277 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201685682 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226659958 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.198713502 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14208928 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.330192821 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155567889 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.166562468 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197650647 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212948874 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233130062 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19610821 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.124800069 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.194588926 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225124453 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19339611 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.159791519 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.186769958 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153435887 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178568041 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.223661027 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179479403 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17468189 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.210680649 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11759875 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170834919 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.20134854 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174625259 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.263988893 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190285341 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.124093036 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172464433 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152539462 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111489034 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.20058043 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129200388 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217864577 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144562754 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.16633275 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214859127 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161043017 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162381249 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216132384 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179478792 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150847417 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.086943424 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159378309 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.160149253 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176762492 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142333908 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160953456 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155540714 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.135611865 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174829508 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.100109498 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215784663 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.092869079 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.360833325 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187660795 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.12979966 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.167042303 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153379745 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.154322786 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18850124 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201649314 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145303684 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138257954 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215562549 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213622833 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.117947028 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.207093048 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.207123429 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.147452341 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153740702 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204638998 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245956239 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14583253 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20686575 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153484645 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138719123 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.109498208 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216192934 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160953275 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.165092565 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112178145 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.216983097 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205941685 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.130237939 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140679753 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202255507 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1380384 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13600547 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150669898 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151307484 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.113445077 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.145452638 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.151941293 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179878097 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183482426 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158396434 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167934205 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148652876 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245033676 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146038388 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.153765582 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150380908 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.098197598 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.226963291 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204705268 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134214391 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20617181 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.173150602 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234378908 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175138531 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13752493 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180822496 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106997902 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.124881512 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224472961 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168433536 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163699867 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.198940741 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230425166 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.187691459 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.187893156 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170365516 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205723718 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.144151013 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153841479 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.140724166 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.164554785 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15929951 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.126769359 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.144329365 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.112103698 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153042064 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147172203 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139806294 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200418527 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203587254 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.196215071 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164214621 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154635424 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.187380897 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.132529429 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176160647 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.406903751 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153581426 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.200217356 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224697259 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191619967 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145055223 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207248265 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.124504824 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128322634 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.147913203 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.171759424 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113279362 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139207578 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165598849 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.186699717 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.358728993 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177482131 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24229999 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184214055 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.197735751 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.12553505 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.172751306 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183013014 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182271245 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.182471617 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1437051 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.126264544 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.210973686 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129051675 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239273885 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172438477 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179353368 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228954452 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.153214041 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108236936 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151156102 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17393518 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158604734 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.204248016 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123194509 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142989852 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.342015819 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.108007113 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.165759372 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212093294 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166562337 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182188741 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.154546791 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191949806 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131696009 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166658666 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.164107862 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166998411 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.111100114 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.333007193 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224595748 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121848417 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.343464281 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187829495 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134878804 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.314630558 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206005452 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.364560401 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141603042 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160765572 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164650811 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167688198 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.320878335 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.182832621 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162737291 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21921031 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159946662 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.113329786 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14323854 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154772055 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15697522 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.109049857 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.152048197 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.21022474 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.112717602 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215220265 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151791567 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160934479 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175136957 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.155306472 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.121815346 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156353358 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248107924 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190751914 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19347709 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.15259659 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.180856064 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235240877 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129366093 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10870526 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.137536283 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.182025259 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139936604 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198779876 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.219838719 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207815334 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215449978 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175889856 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116019191 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.124341815 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163505723 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173963601 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.237041579 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149584084 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.153058967 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203230746 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.139215463 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109962762 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.168894709 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.323089748 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.122374216 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220109231 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.082694174 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.291259296 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129887065 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137140833 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167626584 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189752081 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.140854995 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.156919351 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1971112 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156101135 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140825814 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152764152 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.224954479 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218984423 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235488437 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18622921 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.13830316 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162927838 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.320460008 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217809126 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164373169 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.112112007 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192069747 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22930016 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.198544895 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.147533017 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173899939 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17263105 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16253494 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220900253 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114557832 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235994727 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137746797 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202399718 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158196049 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147919097 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178991589 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.22241631 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116694952 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214552348 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190104454 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138097905 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10987277 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163988214 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211472378 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154334213 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.104322196 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211563517 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.101873489 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225774461 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241040568 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14023999 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160184806 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150035528 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140105849 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158976288 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164327528 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142697758 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.142669037 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225467715 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.11220794 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218243169 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209013444 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176088182 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.34477215 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146600981 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.713304631 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.107140383 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228258749 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152159146 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183591744 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154399352 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177295191 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16433448 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173220519 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201304302 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161801801 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.2372367 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228813488 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.184693017 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135729948 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16565668 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152770866 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.14890874 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156943053 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172221253 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162161449 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.123127191 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.213814367 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161832942 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.11023596 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144322323 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.23176121 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12367081 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213737273 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.182452601 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142386134 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177749188 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194021929 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137919993 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.186760305 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219512248 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118207619 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153332326 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.141722856 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.156866462 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.273141205 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.100641684 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215676023 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192933697 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164449268 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172397387 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.151878193 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197541172 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189256185 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193183894 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147892958 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.161982797 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160956575 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143902897 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.107549222 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160221746 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171285797 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.154791819 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.166762391 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.170666861 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200468837 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.127058056 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148780582 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.29316247 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179701806 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245486531 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.111096605 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139893826 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164437448 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149376475 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.184064881 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185458219 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.13979548 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140162863 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.139713413 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.135661847 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.141465923 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160627617 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201159639 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.320764877 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237234154 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.141780798 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.285044742 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115843567 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160109276 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.11852058 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.110681427 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155058744 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151105849 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157086071 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.226504333 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.272075197 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.124207997 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.138034343 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156933424 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.129235353 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112427684 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.170500067 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165135808 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211997359 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118748513 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.110917997 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161402021 seconds)
  done (took 86.675489547 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.225979633 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.168035731 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.157010752 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.207452074 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.183108996 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.298940537 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.214824786 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.260985707 seconds)
  done (took 2.805712393 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.097100357 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.156682781 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.160364147 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.139324094 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.094597842 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.122951923 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.39049773 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.135829663 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.095224233 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.154999909 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.151053336 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.1224726 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.646424917 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.123805157 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.122300413 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.159612379 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.120474195 seconds)
  done (took 4.076472158 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.171004492 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.50091667 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.981889749 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.19829946 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.16373422 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.120160217 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.719536667 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.123289065 seconds)
  done (took 12.06959899 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.128230407 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.149154138 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.16686379 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.139303863 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.153357885 seconds)
  done (took 1.830089813 seconds)
done (took 129.242632352 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.101265779 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.132150711 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.101650053 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.134230068 seconds)
  done (took 1.550354581 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.100204297 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.072689066 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.103662879 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.077290972 seconds)
  done (took 1.445540037 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.199338728 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.173046381 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.400444819 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.074050675 seconds)
  done (took 1.601673747 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.118943856 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.136589022 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.135947999 seconds)
  done (took 1.492701549 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.109621435 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.132804548 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.106144494 seconds)
  done (took 1.439879323 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.110174815 seconds)
  done (took 1.207441351 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.115246644 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.144411931 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.115690014 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.142052145 seconds)
  done (took 1.614860818 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.101820971 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.130553229 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.116204758 seconds)
  done (took 1.446886073 seconds)
done (took 13.263532663 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.11054621 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.428146628 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.421941115 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.115021183 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.732481231 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.412093163 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.029093336 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.150162999 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.174498453 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.12493806 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.114513555 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.706004565 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.085512997 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.348952902 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.072594352 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.473456628 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.689977659 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.123344509 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.095778222 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.125477792 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.012647519 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.124134312 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.12449441 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.095934388 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.707519383 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.428810442 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.098039092 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.47495854 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.096440782 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.133097123 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.383348457 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.125378082 seconds)
  done (took 17.426851471 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.101396671 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.185140465 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.134529381 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.098018721 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.132673746 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.0970323 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.127870706 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.124444104 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.188475324 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.097735644 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.145787045 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.096274673 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.129144968 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.125567239 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.117756571 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.124415364 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.124492286 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.096599126 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.124367149 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.098077585 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.143312348 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.096041346 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.127252287 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.123817419 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.098377425 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.139862648 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.125034858 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.096313291 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.124830926 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.105628694 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.127730458 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.098868273 seconds)
  done (took 4.977932106 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.14870166 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.195453583 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.137108376 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.159094475 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.179030113 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.09900893 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.204168024 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.151204128 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.191774922 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.124736352 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.11562173 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.124323188 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.158823638 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.098645033 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.146523362 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.095914154 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.126541072 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.123952501 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.096398343 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.125368338 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.115708269 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.124658819 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.125813808 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.096231915 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.125914505 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.14057911 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.099460876 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.124205258 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.095983652 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.133134781 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.126984995 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.098635595 seconds)
  done (took 5.315159797 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.101224574 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.128825832 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.112958774 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.143248851 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.126919663 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.100758818 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.129434035 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.098880579 seconds)
  done (took 2.049815958 seconds)
done (took 30.868736971 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.114075133 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.130700345 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.110733185 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.138881331 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.134475891 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.109769337 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.124189925 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.10843125 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.138661401 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.10463363 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.141671638 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.12329589 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.09903798 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.124112193 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.110401067 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.129735446 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.13875318 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.105501421 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.139292426 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.10931026 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.12697832 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.135884686 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.106847018 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.139875563 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.111431083 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.139631457 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.141550244 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.103286554 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.126566491 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.097581861 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.129973094 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.10821439 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.127007541 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.140648309 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.101561123 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.130115679 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.098563431 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.12978559 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.137452945 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.108577127 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.132804066 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.107527435 seconds)
  done (took 6.21378261 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.114811891 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.146443615 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.109832247 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.112842394 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.090536403 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.082970384 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.142454159 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.081468584 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.112951025 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.112901576 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.106029522 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.079632333 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.109452659 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.075447668 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.07821642 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.107333811 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.081422949 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.077580548 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.10747192 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.079174288 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.110219935 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.075468433 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.081844067 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.1092495 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.07765862 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.110849008 seconds)
  done (took 3.687792327 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.103590886 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.145202138 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.116809814 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.179558323 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.16009207 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.133368404 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.108597094 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.14467994 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.112767721 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.125315184 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.128105313 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.125732244 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.142683711 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.102853868 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.128263393 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.140888996 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.110471762 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.127237133 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.106415957 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.145163969 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.140908262 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.106210778 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.144417834 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.136568682 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.096656835 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.126537595 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.104826403 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.138291975 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.103609684 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.13483741 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.131418522 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.099554475 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.127561967 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.136430084 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.103324078 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.126281704 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.115654532 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.139823379 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.134127077 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.097700082 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.133821355 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.098611025 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.14703681 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.164376955 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.096644031 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.133201647 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.098830591 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.136642751 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.126664314 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.114692228 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.1351266 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.096555582 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.128610172 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.124729248 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.098771657 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.141069229 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.097822457 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.127578408 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.105950128 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.130599521 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.137883559 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.105194171 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.145340435 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.096389549 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.132812724 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.125391148 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.097341139 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.123433773 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.118982892 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.13110908 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.16660497 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.097068966 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.127324146 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.106725666 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.132614122 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.131980208 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.096809235 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.142431214 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.105574561 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.128534311 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.136708646 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.10000957 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.127488277 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.115162367 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.127851165 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.127217114 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.098375102 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.1325204 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.099489549 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.127556785 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.111387526 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.124917908 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.127541932 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.110620383 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.126080874 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.097146341 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.132500599 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.130804641 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.095479388 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.139305824 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.101844378 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.125873276 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.136135547 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.097324938 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.128238503 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.10574698 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.130477252 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.096483049 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.130053749 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.132916438 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.097767282 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.129871422 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.099459196 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.128474025 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.136264892 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.104810302 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.131281595 seconds)
  done (took 15.433377716 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.237969334 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.224666161 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.194627721 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.30276405 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.139111816 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.150875864 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.221521056 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.161653533 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.096617787 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.165748445 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.175187481 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.192575886 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.17668174 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.18642538 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.176845536 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.126534296 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.145405442 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.142414065 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.252944409 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.279833529 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.14763061 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.135326929 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.166441912 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.165877119 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.110800654 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.136723683 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.1422646 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.109392272 seconds)
  done (took 5.990230911 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.11359858 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.158771059 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.131119285 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.11900767 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.153835721 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.126444606 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.101058543 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.127926743 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.109728113 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.141422955 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.126090036 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.103182163 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.133428516 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.135849016 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.097758186 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.135639329 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.106362936 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.128419845 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.127934717 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.10207408 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.137299675 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.105564884 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.130113176 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.09573606 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.136276911 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.125057991 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.089580318 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.148447362 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.125712158 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.118225151 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.124891683 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.104600686 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.139221702 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.127311427 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.096129384 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.128608183 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.098787255 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.128312887 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.098262282 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.124115107 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.124531895 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.080462409 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.095438973 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.141971897 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.133039957 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.083097822 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.133237091 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.102700166 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.127125745 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.123315323 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.1005444 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.130538995 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.102164879 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.134523391 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.098933257 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.127969799 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.099500589 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.118381837 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.103478792 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.128003847 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.086648224 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.125213088 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.130871877 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.09206773 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.135062964 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.101999636 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.126158102 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.098668295 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.130087402 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.131898025 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.099590615 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.132307384 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.095471905 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.12846135 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.098905811 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.132400171 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.099172706 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.125026796 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.125990119 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.097497229 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.106535682 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.097018954 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.076225589 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.129282855 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.124158838 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.096037982 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.128414043 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.103498243 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.141955698 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.127728126 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.105085826 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.127606713 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.095214673 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.129230449 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.085192025 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.129721819 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.14292959 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.116976116 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.127162764 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.123458463 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.111816014 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.129632334 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.097016301 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.108752849 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.106187881 seconds)
  done (took 13.449976651 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.136070028 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.157446862 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.129069977 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.115578164 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.161877945 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.162343538 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.103538425 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.135530843 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.127499547 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.117079628 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.127076974 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.106758089 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.1268535 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.111257551 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.161603788 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.138107743 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.099642652 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.142177866 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.13145793 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.174459364 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.118189632 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.151045 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.11509343 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.127375444 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.132430004 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.114667021 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.1655287 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.142027383 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.111055424 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.146762811 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.111409856 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.164181523 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.147769492 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.101052388 seconds)
  done (took 5.658949381 seconds)
done (took 51.540258722 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.216853143 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.445068898 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.199205872 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.066632035 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.233917174 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.221832989 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.214038006 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.19940785 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.329124939 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.204622889 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.479472777 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.690314702 seconds)
done (took 58.628305955 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.241241289 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.352630074 seconds)
    (2/2) benchmarking "String"...
    done (took 1.536422614 seconds)
  done (took 4.014699658 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.754136962 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.144325272 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.460663129 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.220063969 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.202195244 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.49385829 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.901055316 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.581603012 seconds)
  done (took 28.129351269 seconds)
done (took 42.26606894 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.211668699 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.218876001 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.246465439 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.180309521 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.314199178 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.23066126 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.616872225 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.230917582 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.219343699 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.182136995 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.223701863 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.2201728 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.227096312 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.569553395 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.205494193 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.213026664 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.298187692 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.725929647 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.608739154 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.206565316 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.207753839 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.263293369 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.235140358 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.206031038 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.287078392 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.202782676 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.220646768 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.224553624 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.766751476 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.205569256 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.217224706 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.75794659 seconds)
  done (took 191.071189718 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.204515085 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.234585893 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.323015545 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.234777239 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.661289624 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.406756252 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.351300431 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.753385223 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.225725453 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.227054858 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.428192054 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.20387322 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.48956734 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.175576989 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.233608019 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.282609029 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.474118718 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.489597037 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.241449598 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.362631621 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.215001457 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.325287651 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.250675888 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.385203322 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.2377949 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.271060619 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.22928195 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.25107289 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.396224322 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.404631515 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.216944198 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.249846375 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.838181574 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.060015728 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.215671231 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.233578596 seconds)
  done (took 149.911644057 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.205553229 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.206369568 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.207052904 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.240005673 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.205552568 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.795053053 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.788377199 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.723850279 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.450421909 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.560707684 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.514681655 seconds)
    (12/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.209414054 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.205671671 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.30078708 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.218568162 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.207660738 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.221406017 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.249235951 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.210131252 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.207074095 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.780857409 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.220454766 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.221129277 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.382699832 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.224334069 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.240396296 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.59578683 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.207063347 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.239129293 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.539878242 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.258056919 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.207146804 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.603229715 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.755944274 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.321129385 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.209604697 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.241940048 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.207833793 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.489558915 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.208782086 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.207919546 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.210738688 seconds)
    (43/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.208706491 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.903971124 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.211631507 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.796132364 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.211900694 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.191674632 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.211415031 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.208214119 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.026584617 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.902062899 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.229273682 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.207380184 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.210205369 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.20828569 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.209097616 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.241678574 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.72862503 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.306549553 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.226286755 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.211485448 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.242479511 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.209360033 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.321030739 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.226532551 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.251068962 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.269106185 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.314615852 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.790970251 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.211803644 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.308384344 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.330323737 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.209318919 seconds)
    (75/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.209554104 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.209382333 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.209196571 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.210163731 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.321112203 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.20895881 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.622969016 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.3872518 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.227505945 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.568826866 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.30868103 seconds)
    (86/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.209585576 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.210752032 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.210100756 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.209333977 seconds)
    (90/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.627209242 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.975302017 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.308488138 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.209534007 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.211143055 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.210430752 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.623033858 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.780341533 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.473776123 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.216366018 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.159600423 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.211640783 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.642263287 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.772000462 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.893170445 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.215829091 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.325115878 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.389268617 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.229875535 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.212490954 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.621335782 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.215867171 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.268011368 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.212999764 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.610399226 seconds)
  done (took 367.911897286 seconds)
done (took 710.021206052 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.832014499 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.817616446 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.931039884 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.81508579 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.773263143 seconds)
  done (took 10.303951669 seconds)
done (took 11.439772223 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.405889429 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.403976027 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.273482234 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.404097824 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.244527593 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.422710767 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.383554517 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.233565792 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.315098631 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.295980557 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.314420701 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.265190101 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.246651257 seconds)
  done (took 18.345307346 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.535697695 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.524791313 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.276247536 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.535070869 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.252783201 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.52958667 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.438932134 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.426029842 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.431121402 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.246492969 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.226651808 seconds)
  done (took 16.560607414 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.541842749 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.53606179 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.280585038 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.554786431 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.254002282 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.574282046 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.418389914 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.440083765 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.455511857 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.246215936 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.226989415 seconds)
  done (took 16.665662343 seconds)
done (took 52.708233262 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.222275733 seconds)
  done (took 2.359171424 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.257192763 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.425081887 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.240656995 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.227505636 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.222213138 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.225102651 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.228459688 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.225128192 seconds)
  done (took 11.189937869 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.220590603 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.223634766 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.22108981 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.222729278 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.220083887 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.222629615 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.220680521 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.220709906 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.222744032 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.222913519 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.223549846 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.221215677 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.220993971 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.219887816 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.223076492 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.222085444 seconds)
  done (took 20.687394362 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.222911311 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.22032538 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.221078057 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.221734297 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.222792716 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.221700242 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.221905301 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.22065214 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.22053981 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.221479983 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.221855478 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.221815023 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.221686509 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.221325792 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.22165334 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.222334954 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.22187217 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.221700238 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.226686271 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.22131144 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.222185037 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.221210857 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.223348753 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.223161203 seconds)
  done (took 30.467819062 seconds)
done (took 65.842136786 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.843618701 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.774542033 seconds)
  done (took 6.758248165 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.281916021 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.286323512 seconds)
  done (took 3.709045031 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.224346706 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.223454463 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.225439131 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.223534457 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.22426781 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.223667146 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.225024017 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.223821702 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.222929855 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.224025198 seconds)
  done (took 13.38042919 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.222969426 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.223263522 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.221627068 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.224463552 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.223387848 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.221227041 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.223823315 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.223912927 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.225365137 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.221332711 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.225325556 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.221851951 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.224111199 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.223035294 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.223914963 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.221977853 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.223064484 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.222186744 seconds)
  done (took 23.15897032 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.224244468 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.245142087 seconds)
  done (took 3.608859162 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.351731594 seconds)
    (2/7) benchmarking "second"...
    done (took 1.262957729 seconds)
    (3/7) benchmarking "month"...
    done (took 1.333211354 seconds)
    (4/7) benchmarking "year"...
    done (took 1.319931267 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.263409333 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.242660802 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.264782617 seconds)
  done (took 10.179477905 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.225566659 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.395537557 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.500918484 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.8193302 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.225620482 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.229083499 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.057676519 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.23005963 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.231792073 seconds)
  done (took 14.056721214 seconds)
done (took 75.992846525 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.228141031 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.235318712 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.485818643 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.235082346 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.251544323 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.516486539 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.267975513 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.345485039 seconds)
done (took 37.708948823 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.218133661 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.194916873 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.95823775 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.222012438 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.281279013 seconds)
  done (took 18.796998458 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.258873316 seconds)
    (2/2) benchmarking "read"...
    done (took 1.553106915 seconds)
  done (took 4.950996961 seconds)
done (took 31.107689135 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.224343565 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.223630899 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.221805387 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.224526169 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.221144498 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.220537831 seconds)
    (7/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.223546614 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.224312095 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.221153681 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.223910582 seconds)
    (11/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.22120718 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.224922349 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.223468466 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.224090521 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.221123978 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.222521817 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.223920897 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.221047562 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.221311855 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.222027251 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.224879562 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.222334253 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.221186527 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.224969272 seconds)
  done (took 30.488610251 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.224432443 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.223967304 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.224588284 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.225776661 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.222602142 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.224773355 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.224801524 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.22217967 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.22534882 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.224832172 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.222121575 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.222671974 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.224597928 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.222858009 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.225763594 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.223296052 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.225669684 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.223099968 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.226255852 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.224441081 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.225215607 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.224166063 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.224340032 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.226183645 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.224185397 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.223613497 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.225431883 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.225238036 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.225971795 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.223427954 seconds)
  done (took 37.873309201 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.231873088 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.233594552 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.226293754 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.226750033 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.22613003 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.226486905 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.22611016 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.227147353 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.227515472 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.22692253 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.226872268 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.226646731 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.226758365 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.227713311 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.227855557 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.226965567 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.227588756 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.22773482 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.227540983 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.227245593 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.228141389 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.228087626 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.228350142 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.22758477 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.227833111 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.228221432 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.229038445 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.228841932 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.227306281 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.227963622 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.226475174 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.228718434 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.228877385 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.228686992 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.2280183 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.227797935 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.233202256 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.234648918 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.229481937 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.228929722 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.227457875 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.229443156 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.229437485 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.22943189 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.228647662 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.228997894 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.22886979 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.228656227 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.228371921 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.229398025 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.229668817 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.229615281 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.229533274 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.229961549 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.230479597 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.230743567 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.229368578 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.229579955 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.229960678 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.229849477 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.229950519 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.229498199 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.230291524 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.229662802 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.22939736 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.231460379 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.230271726 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.232286394 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.230988158 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.230991697 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.231130267 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.230845875 seconds)
  done (took 89.626219636 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.231091081 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.22899159 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.227609908 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.228479607 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.229264114 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.231531785 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.228821038 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.232026738 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.228640958 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.231004082 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.231340006 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.229279628 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.228725751 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.231496621 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.231891752 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.2289577 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.232550377 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.23102136 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.231694856 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.232412151 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.232213635 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.22899562 seconds)
  done (took 28.214931394 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.232158137 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.234391965 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.235851418 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.23299299 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.231657739 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.233901514 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.232520295 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.234348272 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.232407924 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.229230959 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.230823492 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.233189064 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.231577057 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.229262678 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.229534661 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.231514451 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.234481576 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.231246902 seconds)
  done (took 23.3290363 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.230667162 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.230269206 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.233839475 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.229864204 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.231487811 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.233055633 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.231290525 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.233718273 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.232511036 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.231128826 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.234281974 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.233713447 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.23393529 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.231107347 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.233120696 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.233556494 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.233826166 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.229499961 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.233177185 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.231456821 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.230802906 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.233928108 seconds)
  done (took 28.258903333 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.233613489 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.233731249 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.23004855 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.229582057 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.231145498 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.232669457 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.232734583 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.229947145 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.234039435 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.234002747 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.230294519 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.232596256 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.23253732 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.231846059 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.231533797 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.23054413 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.232960721 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.233137718 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.23377661 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.230352383 seconds)
  done (took 25.78971532 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.234423599 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.235172257 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.235248228 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.235239106 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.235182876 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.235603639 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.234254261 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.234494835 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.235142208 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.235569639 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.234957587 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.23506207 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.236025071 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.234302511 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.234111723 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.23477428 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.23501517 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.234213927 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.235491901 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.234924011 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.23571651 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.23433208 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.234393742 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.234753784 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.233912584 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.234771676 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.235284595 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.234357535 seconds)
  done (took 35.725420607 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.235376333 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.234304297 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.231739775 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.232344803 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.232604892 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.231046315 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.232920936 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.233631556 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.234232259 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.231937069 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.235564307 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.235150781 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.234820433 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.234311499 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.235433996 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.236285832 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.235476761 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.232359127 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.233128245 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.232661136 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.236358123 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.236049634 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.235505542 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.233642638 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.233309789 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.236906557 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.232982708 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.233748235 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.235943757 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.232294683 seconds)
  done (took 38.172445075 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.255437621 seconds)
    (2/2) benchmarking "in"...
    done (took 1.254425959 seconds)
  done (took 3.65977942 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.232946214 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.236240421 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.23612583 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.233967533 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.234128654 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.236340907 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.237329537 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.233155096 seconds)
  done (took 11.03058968 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.236341616 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.237497819 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.237340839 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.236878549 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.237458571 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.23798804 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.247065183 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.257258856 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.237853664 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.238730084 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.244224957 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.245289905 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.239984348 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.240583328 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.23769349 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.240862475 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.237841975 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.238271261 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.238403521 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.237986537 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.23885978 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.241710803 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.240745349 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.235593849 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.240245928 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.250102303 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.261523305 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.238800183 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.239006885 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.243544899 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.237436152 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.236033781 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.238888367 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.238832663 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.238457218 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.238574212 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.248274387 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.262464737 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.245846837 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.256938866 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.237647632 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.235427375 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.238366856 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.239401115 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.240418264 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.239707353 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.238864677 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.23605957 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.237878474 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.241986781 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.243756996 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.238164082 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.235443481 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.242480916 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.239147365 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.245969212 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.257919456 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.240751873 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.246985217 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.250900854 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.270462821 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.263192541 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.239886623 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.238553991 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.248789603 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.26247545 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.247299181 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.255007193 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.235297016 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.239555086 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.24611311 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.270947036 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.264045551 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.238659992 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.239345906 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.238215609 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.238671552 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.238092145 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.247954695 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.260778735 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.23900191 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.239199788 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.249590427 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.262987068 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.239442899 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.239865643 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.239348423 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.238819422 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.241277589 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.250311969 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.258429054 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.240443643 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.238639231 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.243844523 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.241834864 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.240377334 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.239182416 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.240670842 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.237425043 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.240215763 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.239626945 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.243570254 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.249395289 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.240758787 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.241172608 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.248342392 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.259488481 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.240039264 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.248567018 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.259023093 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.240768483 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.242422501 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.246744146 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.237990628 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.24437388 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.248312762 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.240611193 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.241795125 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.242015181 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.241630929 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.252099623 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.267039035 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.241208615 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.240859776 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.246887971 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.25260292 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.242937354 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.244115348 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.241655083 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.238818864 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.239330139 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.241680598 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.241823817 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.242167247 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.242254118 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.242262876 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.239231372 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.241689503 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.242114492 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.242328673 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.243696587 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.243004502 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.242674583 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.245522914 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.24313856 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.243718321 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.249751099 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.259767375 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.241810984 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.24347341 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.240202953 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.243619107 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.243367527 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.241933994 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.24209468 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.243095638 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.242823964 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.24315259 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.244176895 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.243493453 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.242794074 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.244693533 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.245866947 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.242994455 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.245838721 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.242269777 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.241072188 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.241697777 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.243342974 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.241883732 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.24358124 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.241941904 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.24669288 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.250165881 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.244357821 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.243078923 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.246184011 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.244191142 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.243330438 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.243260423 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.246910368 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.250258006 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.243378309 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.252256042 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.260674009 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.2430976 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.242869483 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.242615867 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.242230484 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.242099654 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.247913495 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.249636714 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.255064376 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.266804011 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.243302007 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.245939078 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.243863083 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.246335111 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.246677661 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.242638338 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.242516965 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.242934504 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.242421156 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.242508787 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.244089759 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.242328626 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.24275316 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.242660567 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.241987328 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.243816164 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.243425906 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.242597823 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.244335581 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.239860104 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.243320595 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.242950581 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.242381415 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.23992376 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.242942305 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.242189728 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.245515362 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.244692992 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.251718881 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.258400683 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.245998681 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.24527802 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.243732056 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.24247711 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.245207005 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.245769031 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.243761703 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.251976539 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.262411469 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.245058367 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.251669691 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.262256361 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.24370611 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.247092495 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.244354673 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.24196375 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.248269201 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.252541077 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.245127111 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.24553541 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.245376071 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.245122335 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.245094605 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.252514243 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.261638691 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.245417809 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.24594453 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.247497373 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.242392647 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.246057757 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.246546854 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.246893376 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.247954428 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.245749303 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.246993488 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.246271363 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.24699226 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.247393784 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.248988927 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.249832498 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.253414864 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.252955084 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.26371515 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.248169215 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.247640753 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.24871646 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.247134569 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.245871605 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.245829504 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.258350899 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.271403034 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.253011091 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.265672979 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.246603255 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.25352236 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.265979515 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.250246653 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.246541682 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.246335424 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.245610722 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.246657266 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.244643243 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.246341708 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.24731328 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.248437975 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.249670575 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.252129091 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.248410658 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.247292023 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.247866113 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.248350171 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.248397833 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.247824697 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.248572584 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.249203939 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.250138169 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.247352782 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.247626356 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.256421919 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.266227046 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.249650344 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.248091843 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.248612134 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.247686321 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.249488434 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.24879818 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.252055583 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.256266247 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.252793793 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.256748493 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.251052768 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.260899826 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.267658412 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.252970151 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.256527022 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.24610803 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.248110293 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.248518716 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.249277362 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.257380088 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.268435881 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.251390731 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.254356017 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.248509852 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.249964813 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.250410726 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.249604713 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.250797584 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.249103846 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.258876994 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.27287796 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.253603336 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.251469559 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.246483082 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.249898233 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.250571838 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.249321188 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.254023257 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.251401206 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.249767241 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.250227348 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.249778103 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.251488249 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.251564539 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.251805253 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.24898461 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.250975185 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.259358431 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.270409763 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.254408719 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.252029164 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.259676721 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.269296179 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.258655316 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.269935328 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.251734575 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.250546763 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.251124574 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.252891061 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.250350398 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.251878029 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.252687353 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.252774192 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.25460846 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.252357667 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.253301345 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.251503702 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.251550356 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.251996057 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.262100511 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.274103752 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.25370435 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.255221269 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.249329833 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.2547601 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.256212749 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.252619294 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.251712966 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.255304603 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.263459179 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.260297899 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.252789702 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.252727868 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.253119134 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.252729444 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.253194204 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.254108426 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.253372312 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.253452838 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.253259323 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.253356828 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.25572769 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.253646673 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.25426035 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.255519424 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.255087289 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.264518187 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.272132091 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.254254491 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.254028446 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.254608618 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.254442744 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.253969675 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.254353442 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.255585297 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.25666897 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.256765873 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.262484728 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.26090258 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.256660405 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.253641005 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.255265463 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.255112767 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.256200355 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.255023976 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.254938815 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.255100183 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.256522141 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.254813841 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.255326516 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.253857572 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.254005493 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.255766833 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.256063753 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.259415794 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.262592563 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.255189802 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.253442616 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.254948953 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.255073912 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.255049843 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.255540354 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.264027649 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.277146234 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.26658372 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.264286761 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.260911356 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.256293273 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.259344533 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.263506316 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.256802756 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.256960238 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.256668361 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.257734964 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.25689798 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.260054305 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.257363891 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.263353054 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.275048731 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.25581271 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.266503757 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.277779763 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.256485195 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.259092296 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.260786502 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.257535251 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.2545714 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.257264706 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.257178602 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.265459047 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.276945878 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.258043881 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.259295889 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.257586328 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.259469751 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.262023341 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.258682906 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.258954634 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.256048056 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.258289597 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.2589489 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.258184783 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.254862734 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.257417922 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.257893991 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.261870433 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.264381541 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.255118892 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.26093304 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.258316897 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.261007435 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.260560294 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.260228348 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.257313555 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.257778482 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.259442169 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.259011749 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.260821103 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.262077042 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.259515625 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.261628645 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.261029517 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.260633828 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.263413137 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.26993025 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.267856546 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.258091337 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.260379087 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.259895861 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.262087369 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.261026098 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.260349291 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.260310303 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.261153727 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.260794229 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.261368786 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.260518641 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.264522641 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.275981013 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.281767354 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.260228826 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.26119549 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.26310643 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.260381768 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.258140478 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.261676392 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.26277397 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.263875517 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.267709602 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.261556326 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.26825249 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.279575277 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.262111253 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.265744837 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.264862042 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.268462593 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.263842361 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.26190156 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.261508257 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.266688293 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.277570385 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.281185435 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.271926189 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.291545035 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.279414425 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.26326762 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.264814275 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.26516533 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.264984632 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.264262738 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.262548689 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.263404644 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.263726826 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.263413988 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.264253067 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.268725516 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.26421879 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.263068927 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.262543895 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.262794183 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.265468031 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.261600211 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.263624341 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.263651831 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.264220543 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.263208708 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.264337708 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.263603141 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.276617614 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.289137046 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.264064002 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.263972076 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.261137219 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.268562069 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.267978993 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.274197542 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.272041122 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.264383686 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.264837458 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.265795607 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.265233801 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.263981117 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.266158549 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.263921395 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.263731004 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.261889087 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.278213739 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.287989519 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.270296469 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.284329616 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.265165 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.264868702 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.265794268 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.265863404 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.265627581 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.265603006 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.268438296 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.269772241 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.265543271 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.264960754 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.268815165 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.272075303 seconds)
  done (took 747.722815509 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.2640549 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.262789328 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.262782399 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.263234757 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.263132838 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.263334969 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.262983424 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.264606344 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.263561538 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.263815178 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.263924296 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.263563836 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.264413761 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.264083409 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.264325103 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.263983113 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.264904467 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.265267924 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.264429309 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.264727976 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.265409693 seconds)
  done (took 27.721790184 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.267826508 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.264826695 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.265756373 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.267180822 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.26524581 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.267114031 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.265445759 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.268251741 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.267551064 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.265611422 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.268562166 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.26774436 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.265962705 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.265515802 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.266113717 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.26919685 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.268967411 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.265347581 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.26915376 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.26673482 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.268321555 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.265776559 seconds)
  done (took 29.051767323 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.270793843 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.272896792 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.271761216 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.269327991 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.271302041 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.268936957 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.270548243 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.268897806 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.269191337 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.270193595 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.267897167 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.270161947 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.27597992 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.27432785 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.270518974 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.268795892 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.413526835 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.270275724 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.269900165 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.269795104 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.266790031 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.276644412 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.285865452 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.267043229 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.268716958 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.270575958 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.270428283 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.269955863 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.271796212 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.271799985 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.274773755 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.270191661 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.269666403 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.27326985 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.270388979 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.272134173 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.274181644 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.271877753 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.268386758 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.270249675 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.280932516 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.289785245 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.269871257 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.276974619 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.290102618 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.268617454 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.274459603 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.277263878 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.269539869 seconds)
  done (took 63.668503482 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.270750438 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.270338978 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.268702916 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.270123264 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.271083076 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.270844135 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.27141667 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.269783508 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.267799573 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.267361926 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.271704942 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.269213354 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.26828804 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.271040999 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.270568426 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.267860823 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.268395337 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.269052338 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.268500357 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.268595953 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.26783788 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.271373374 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.272224306 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.269490527 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.271642194 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.270171191 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.268766968 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.271760589 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.269876805 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.269402911 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.272338193 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.272437231 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.273352941 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.271283118 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.269155762 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.27195066 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.273039022 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.270580361 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.272266911 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.270055717 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.273170866 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.273528681 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.272774519 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.27334872 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.270833623 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.271321039 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.270825171 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.271344414 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.271342459 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.274354459 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.274375157 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.270467606 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.273715013 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.271804381 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.274424431 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.273921683 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.272434027 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.271326103 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.273810458 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.271817837 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.272065479 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.274351928 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.272898001 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.275444331 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.273324536 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.272316681 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.272165947 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.274592224 seconds)
  done (took 87.63209647 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.275153738 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.274406957 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.274097239 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.273440144 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.274902218 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.274753718 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.273813285 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.273959148 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.275697258 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.274307557 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.274045133 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.27431929 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.274153346 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.274455139 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.275068983 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.273950458 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.275050071 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.274983623 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.275474432 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.274394455 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.274834977 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.275058827 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.275300051 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.275119268 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.275786 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.274981635 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.275609432 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.2755848 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.275507921 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.276035752 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.27647766 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.275058572 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.275136031 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.276425703 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.275972904 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.275386703 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.276035669 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.275796251 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.275571893 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.275352054 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.276191831 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.276898304 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.27616198 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.276800495 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.277852856 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.277347145 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.277943791 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.27708312 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.27672374 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.276927662 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.277605887 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.27777196 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.27782206 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.276447875 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.277254044 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.277419415 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.276040697 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.277034194 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.27763739 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.276658612 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.277416484 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.27745386 seconds)
  done (took 80.284502601 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.279719266 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.276518217 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.276228606 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.274212221 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.278031802 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.276830213 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.277926717 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.278198074 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.278001115 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.277924163 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.279306425 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.276591982 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.277190642 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.2794396 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.277347009 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.277929946 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.27718484 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.276075993 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.278798271 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.277475362 seconds)
  done (took 26.738819787 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.275337775 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.278012057 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.276287684 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.276613825 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.278157149 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.275462013 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.279095326 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.279135847 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.276312672 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.279997294 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.279759832 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.280341225 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.277475392 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.276337272 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.279988165 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.276247289 seconds)
  done (took 21.633129772 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.277342696 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.279536939 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.279169356 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.279922217 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.27757223 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.277828695 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.279999188 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.277268217 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.277709343 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.280515609 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.280756264 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.280157759 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.28096706 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.28003865 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.278480265 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.280479862 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.278416857 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.277615427 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.281402365 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.280975895 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.279551715 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.278715376 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.281183282 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.281459382 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.278437129 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.279578016 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.27926344 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.278305575 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.279524396 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.282124674 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.277876213 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.280043837 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.278523475 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.278787633 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.28330347 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.280759085 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.281510387 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.283367197 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.281943548 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.281922496 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.282155355 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.280768788 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.283645037 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.282070437 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.280497217 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.282826893 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.280061505 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.280725784 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.279082331 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.280429932 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.282470626 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.282852902 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.282751782 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.283235039 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.282470256 seconds)
  done (took 71.610249478 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.284648713 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.284006677 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.280058442 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.283702861 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.283900792 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.280986148 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.283306601 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.282527069 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.280449383 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.284603724 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.281877848 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.284370906 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.281660011 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.283867746 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.281076262 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.284525225 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.281928395 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.281978175 seconds)
  done (took 24.283945085 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.282609688 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.282172589 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.284680372 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.282136931 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.281806984 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.285607579 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.282051596 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.284850228 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.28610974 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.282675942 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.282761014 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.285046398 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.285067942 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.285500432 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.283153109 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.28206876 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.285230265 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.285331409 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.283385854 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.282438185 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.286081332 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.286268635 seconds)
  done (took 29.44194375 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.285157473 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.285638823 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.285573537 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.301499591 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.303781417 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.307201962 seconds)
  done (took 8.965392509 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.292008985 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.286225227 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.283440297 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.286102368 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.286381055 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.283681478 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.284226035 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.285406042 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.287373118 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.283671106 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.284262584 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.286535518 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.287619378 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.28518355 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.287387401 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.287109894 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.285168855 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.284927988 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.285507266 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288782812 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.284451243 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.28714732 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.285461344 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.284664944 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.285691243 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.28451158 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.287839905 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.286205512 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.284258251 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.286820707 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.288244797 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.285009809 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.287413976 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.285215091 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.289088539 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288031976 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.287255551 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.288994268 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.288408516 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.286069636 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.28873616 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.289706434 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.288850621 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.285872282 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.288834012 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.286122102 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.28703375 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.285957767 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.286183618 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.288419846 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.28804492 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.285475917 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.289057877 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.28873776 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.28886792 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.289629517 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.287823444 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.286707249 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.289501413 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.287746378 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.287523323 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.289917064 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.287222476 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.28723927 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290472335 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.287539962 seconds)
  done (took 86.157215584 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.287686906 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.286953621 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288440518 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.28959665 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.287718519 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.287967284 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.289122436 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.288596913 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.289358145 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.287668452 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291462028 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.288465251 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.289268119 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.289097046 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.287771942 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.288538002 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.289006975 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.289021259 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.289184842 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.291950103 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.289080148 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.288695797 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.28933277 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289262887 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290503745 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.291742461 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.289687749 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.288584851 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.289328886 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290470333 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.290324229 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290427463 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.28983716 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.289096785 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290338769 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.290027003 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290444068 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.289422488 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29000369 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.293672516 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289867924 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.293126578 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290072004 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.290474001 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291140104 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290162009 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.290707857 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.290540694 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.291102424 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.290833155 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29074984 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291219022 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.291380655 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290196777 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291067626 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.291630916 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.292815073 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.291798952 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291966469 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.293410203 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291639973 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29117212 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294218768 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292286342 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292458181 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.293007209 seconds)
  done (took 86.357943415 seconds)
done (took 1744.57970698 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.457454226 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.411899702 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.291944586 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.286709742 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.29212402 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.316683125 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.306842858 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.294065212 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.293757054 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.294503883 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.294021762 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.482875357 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.287408466 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.294259898 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.293240687 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.389697991 seconds)
  done (took 42.492270585 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.32030366 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.30177859 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.406620398 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.315170617 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.321518929 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.477240876 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.351470327 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.299995014 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.459056224 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.335547825 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.770037633 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.321172086 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.299217859 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.344531778 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.31585965 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.475795722 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.533676929 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.805335327 seconds)
  done (took 29.659141355 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.719903342 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.318697969 seconds)
  done (took 9.244582871 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.317960574 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.29881732 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.300965943 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.298925607 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.290742319 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.291170912 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.298582478 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.296303903 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.727862211 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.420038224 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.322974854 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.309393692 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.317816299 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.300507483 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.296714828 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.336694383 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.440661492 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.298920214 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.296017201 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.306070772 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.299574049 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.398836867 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.355975608 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.299529433 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.417328052 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.719458594 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.307267849 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.30702201 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.439057536 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.299605242 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.298842002 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.299814147 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.301065535 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.171675237 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.809535155 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.296689455 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.340969741 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.307940792 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.297074864 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.442860112 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.300816632 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.306201048 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.292148382 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.772288228 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.42512721 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.406001676 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.411239969 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.316627422 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.30168988 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.3573187 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.301140915 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.301379284 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.343866905 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.061942909 seconds)
  done (took 109.292410051 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.352518835 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.682625268 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.462574047 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.311698569 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.994678996 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.949356608 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.31060021 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.560257393 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.36107664 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.293925331 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.575272553 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.781405508 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.3146052 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.299623793 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.773077243 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.382175758 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.295087401 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.126690891 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.310112036 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.296988058 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.769920489 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.294805577 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.315550527 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.476640557 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.330810275 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.72705343 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.568495569 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.668336686 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.315035963 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.294842283 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.743932062 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.310733098 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.329410865 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.295375549 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.545873105 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.627490697 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.618630071 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.313922031 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.305087142 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.296451318 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.317133793 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.727365135 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.633784844 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.312657802 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.314132148 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.725988321 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.310596641 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.301401072 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.296226151 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.50232484 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.953445342 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.295882527 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.573717751 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.296430977 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.581201056 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.383847729 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.374668814 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.756201222 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.31499328 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.345820156 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.337307874 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.296985647 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.305821002 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.300941352 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.30178645 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.621851112 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.420334172 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.298700676 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.616860514 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.753226418 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.31072978 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.804577819 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.204169586 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.330068164 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.396248442 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.298452442 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.977544313 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.761572237 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.325101417 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.298438143 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.604351998 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.31654176 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.564567098 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.316676131 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.311966342 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.789938974 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.304439233 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.338582589 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.298160284 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.297884527 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.064256767 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.298899598 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.566534858 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.335944889 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.299820706 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.299070935 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.343165972 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.299281062 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.298924247 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.29900496 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.805138448 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.312736416 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.258161773 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.323607136 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.298084318 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.299057068 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.300539299 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.299022938 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.521366455 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.711023853 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.321951447 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.299409398 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.299398999 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.307385172 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.467836631 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.30340453 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.580680769 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.318231962 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.300100232 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.301640748 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.956695376 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.367060403 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.299339874 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.29945753 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.170460172 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.506295825 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.317086 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.300439368 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.300552047 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.315095031 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.481821312 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.321502933 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.38065267 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.292492193 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.970147078 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.328047324 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.299103668 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.581045772 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.273095489 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.052715302 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.294542872 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.274806805 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.552978818 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.52638217 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.312599147 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.288975954 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.274202382 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.952371712 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.301583092 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.409004267 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.292727405 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.298940044 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.470649603 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.707450287 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.2754768 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.868396826 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.275552866 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.490464301 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.279544609 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.575721144 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.746802854 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.29240623 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.283879027 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.960336237 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.956672112 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.04286512 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.278273541 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.538930591 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.221840554 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.755529591 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.274537783 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.276918461 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.844610261 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.279786869 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.279940455 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.275854413 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.27544642 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.553072117 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.446971881 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.967871091 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.27997245 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.699855271 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.339726651 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.276430396 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.289112997 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.278538537 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.621324142 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.282620421 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.279585087 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.30198253 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.270394318 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.26734102 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.70852855 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.195232058 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.257678989 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.402473334 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.861322996 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.267613251 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.254980788 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.827011318 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.485625597 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.778673783 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.324234204 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.535840782 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.278510237 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.290021042 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.897767841 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.268730571 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.701208195 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.272399081 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.254684859 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.828162173 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.268878292 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.615962391 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.253942732 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.255092605 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.768019876 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.268443504 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.257387653 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.48780863 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.285415513 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.505293123 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.254756404 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.274966322 seconds)
  done (took 1099.417092507 seconds)
done (took 1291.308993971 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.255738532 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.25496605 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.240184358 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.260105526 seconds)
  done (took 26.183259864 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.271894596 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.261189061 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.262964067 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.261336095 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.263244651 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.262238185 seconds)
  done (took 8.756010613 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.343878231 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.256936528 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.261955587 seconds)
  done (took 19.036900833 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.457213408 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.474553872 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.576583397 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.395755384 seconds)
  done (took 10.077444526 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.262394772 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.263919885 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.262924475 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.264499203 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.273719766 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.275267087 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.266429608 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.266543178 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.275164617 seconds)
  done (took 12.585928279 seconds)
done (took 77.811192029 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.816093123 seconds)
    (2/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 4.987721943 seconds)
    (3/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.34636356 seconds)
    (4/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.597062425 seconds)
    (5/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.585884035 seconds)
    (6/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.256566886 seconds)
    (7/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.23810512 seconds)
    (8/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.443054685 seconds)
    (9/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.817139498 seconds)
    (10/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.069798071 seconds)
    (11/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.492659667 seconds)
    (12/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.25189791 seconds)
    (13/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.375030947 seconds)
    (14/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.25878038 seconds)
    (15/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.304383692 seconds)
    (16/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.737424487 seconds)
    (17/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.283288454 seconds)
    (18/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.235725653 seconds)
    (19/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.751916759 seconds)
    (20/286) benchmarking ("sort", Int8, false)...
    done (took 4.277025685 seconds)
    (21/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.698282806 seconds)
    (22/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.077590434 seconds)
    (23/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.600328053 seconds)
    (24/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.555144373 seconds)
    (25/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.914492613 seconds)
    (26/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.276105674 seconds)
    (27/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.434297171 seconds)
    (28/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.340308202 seconds)
    (29/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.016297969 seconds)
    (30/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.672054585 seconds)
    (31/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.357049645 seconds)
    (32/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.25906812 seconds)
    (33/286) benchmarking ("sort", Int64, true)...
    done (took 6.258362365 seconds)
    (34/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.153044062 seconds)
    (35/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.386869178 seconds)
    (36/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.08385293 seconds)
    (37/286) benchmarking ("map", identity, Float32, true)...
    done (took 1.956763903 seconds)
    (38/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.28277717 seconds)
    (39/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.277486649 seconds)
    (40/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.251764921 seconds)
    (41/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.274698288 seconds)
    (42/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.24072488 seconds)
    (43/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.019797769 seconds)
    (44/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.253635914 seconds)
    (45/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.36920089 seconds)
    (46/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.734303067 seconds)
    (47/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.844275216 seconds)
    (48/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.369753124 seconds)
    (49/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.521843258 seconds)
    (50/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.250835766 seconds)
    (51/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.137010119 seconds)
    (52/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.753573635 seconds)
    (53/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.272272558 seconds)
    (54/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.348538633 seconds)
    (55/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.318968665 seconds)
    (56/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.239951942 seconds)
    (57/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.240408689 seconds)
    (58/286) benchmarking ("sort", Int8, true)...
    done (took 6.276126055 seconds)
    (59/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.337901268 seconds)
    (60/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.270388445 seconds)
    (61/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.271697306 seconds)
    (62/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.311279637 seconds)
    (63/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.241964281 seconds)
    (64/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.655914141 seconds)
    (65/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.260602054 seconds)
    (66/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.357496871 seconds)
    (67/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.593820109 seconds)
    (68/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.241332625 seconds)
    (69/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.255622101 seconds)
    (70/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.476401555 seconds)
    (71/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.358412137 seconds)
    (72/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.323793988 seconds)
    (73/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.346114149 seconds)
    (74/286) benchmarking ("sort", Int64, false)...
    done (took 5.4132547 seconds)
    (75/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.240346673 seconds)
    (76/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.241285249 seconds)
    (77/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.976248117 seconds)
    (78/286) benchmarking ("sort", Float32, true)...
    done (took 6.261316414 seconds)
    (79/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.20627805 seconds)
    (80/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.727849246 seconds)
    (81/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.287858127 seconds)
    (82/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.241395304 seconds)
    (83/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.288936225 seconds)
    (84/286) benchmarking ("sort", BigInt, true)...
    done (took 6.262587054 seconds)
    (85/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.497710536 seconds)
    (86/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.244558748 seconds)
    (87/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.272962503 seconds)
    (88/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.08844567 seconds)
    (89/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.257256333 seconds)
    (90/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.426158108 seconds)
    (91/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.242047428 seconds)
    (92/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.467225935 seconds)
    (93/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.65200845 seconds)
    (94/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.719088698 seconds)
    (95/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.363062812 seconds)
    (96/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.431830966 seconds)
    (97/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.079930514 seconds)
    (98/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.96843073 seconds)
    (99/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.385601712 seconds)
    (100/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.369669576 seconds)
    (101/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.461267885 seconds)
    (102/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.048639334 seconds)
    (103/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.323240895 seconds)
    (104/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.874396048 seconds)
    (105/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.360679905 seconds)
    (106/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.087410936 seconds)
    (107/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.244878076 seconds)
    (108/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.439094662 seconds)
    (109/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.306977086 seconds)
    (110/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.389801946 seconds)
    (111/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.346476189 seconds)
    (112/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.413656094 seconds)
    (113/286) benchmarking ("sort", Bool, false)...
    done (took 1.779612704 seconds)
    (114/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.302950448 seconds)
    (115/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.289288159 seconds)
    (116/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.816356325 seconds)
    (117/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.280409019 seconds)
    (118/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.543504371 seconds)
    (119/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.20815216 seconds)
    (120/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.342954913 seconds)
    (121/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.257804164 seconds)
    (122/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.264957274 seconds)
    (123/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.314080463 seconds)
    (124/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.979809036 seconds)
    (125/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.463851168 seconds)
    (126/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.995436211 seconds)
    (127/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.526517256 seconds)
    (128/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.852431281 seconds)
    (129/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.376174597 seconds)
    (130/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.265201283 seconds)
    (131/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.300301894 seconds)
    (132/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 3.626171057 seconds)
    (133/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.255113694 seconds)
    (134/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.244825384 seconds)
    (135/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.454042953 seconds)
    (136/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.281630376 seconds)
    (137/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.292061501 seconds)
    (138/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.019999016 seconds)
    (139/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.292618441 seconds)
    (140/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.594368509 seconds)
    (141/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.274077158 seconds)
    (142/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.263150148 seconds)
    (143/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.854536732 seconds)
    (144/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.474209583 seconds)
    (145/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.291606005 seconds)
    (146/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.266551217 seconds)
    (147/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.014004025 seconds)
    (148/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.288631538 seconds)
    (149/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.266439363 seconds)
    (150/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.475405852 seconds)
    (151/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.362329733 seconds)
    (152/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.274159706 seconds)
    (153/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.957663571 seconds)
    (154/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.159868809 seconds)
    (155/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 3.636046906 seconds)
    (156/286) benchmarking ("sort", Float64, false)...
    done (took 5.480231941 seconds)
    (157/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.085128282 seconds)
    (158/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.295561714 seconds)
    (159/286) benchmarking ("sort", BigInt, false)...
    done (took 6.271956805 seconds)
    (160/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.41517904 seconds)
    (161/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.255658061 seconds)
    (162/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.261867184 seconds)
    (163/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.691778847 seconds)
    (164/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.273666889 seconds)
    (165/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.29972838 seconds)
    (166/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.617487554 seconds)
    (167/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.286478621 seconds)
    (168/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.512812188 seconds)
    (169/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.507679094 seconds)
    (170/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.24760294 seconds)
    (171/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.406085704 seconds)
    (172/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.252513017 seconds)
    (173/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.29345523 seconds)
    (174/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.626979102 seconds)
    (175/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.247273665 seconds)
    (176/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.755620558 seconds)
    (177/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.309826518 seconds)
    (178/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.24689592 seconds)
    (179/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.276905179 seconds)
    (180/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.737252472 seconds)
    (181/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.514285321 seconds)
    (182/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.270058037 seconds)
    (183/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.249334764 seconds)
    (184/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.058144694 seconds)
    (185/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.597090038 seconds)
    (186/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.042934514 seconds)
    (187/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.253119924 seconds)
    (188/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.279177392 seconds)
    (189/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.254187886 seconds)
    (190/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.416083614 seconds)
    (191/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.169658269 seconds)
    (192/286) benchmarking ("sort", Bool, true)...
    done (took 5.300553876 seconds)
    (193/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.340519331 seconds)
    (194/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.884721776 seconds)
    (195/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.278188106 seconds)
    (196/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.502859005 seconds)
    (197/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.253378861 seconds)
    (198/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.287824379 seconds)
    (199/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.254244358 seconds)
    (200/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.606244193 seconds)
    (201/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.22577809 seconds)
    (202/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.4707882 seconds)
    (203/286) benchmarking ("sort", Float64, true)...
    done (took 6.270215543 seconds)
    (204/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.249235438 seconds)
    (205/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.390770676 seconds)
    (206/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.766628931 seconds)
    (207/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.036869995 seconds)
    (208/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.251230395 seconds)
    (209/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.29207452 seconds)
    (210/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.333236526 seconds)
    (211/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.152561617 seconds)
    (212/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.296319086 seconds)
    (213/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.517986276 seconds)
    (214/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.325554781 seconds)
    (215/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.279169832 seconds)
    (216/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.584652472 seconds)
    (217/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.485634905 seconds)
    (218/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.353172587 seconds)
    (219/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.445034772 seconds)
    (220/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.311375837 seconds)
    (221/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.893152406 seconds)
    (222/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.774112311 seconds)
    (223/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.355994583 seconds)
    (224/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.401050865 seconds)
    (225/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.629706543 seconds)
    (226/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.250419519 seconds)
    (227/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.459510957 seconds)
    (228/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.706644855 seconds)
    (229/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.991951499 seconds)
    (230/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.374703496 seconds)
    (231/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.101203833 seconds)
    (232/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.301540067 seconds)
    (233/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.250649439 seconds)
    (234/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.257018943 seconds)
    (235/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.472254162 seconds)
    (236/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.12729777 seconds)
    (237/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.256914736 seconds)
    (238/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.274734872 seconds)
    (239/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.2710843 seconds)
    (240/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.316301543 seconds)
    (241/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.25236537 seconds)
    (242/286) benchmarking ("sort", Float32, false)...
    done (took 5.268695478 seconds)
    (243/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.250376664 seconds)
    (244/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.266353478 seconds)
    (245/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.674002746 seconds)
    (246/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.160188318 seconds)
    (247/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.27502519 seconds)
    (248/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.302675505 seconds)
    (249/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.291000017 seconds)
    (250/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.285852591 seconds)
    (251/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.299606879 seconds)
    (252/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.357742884 seconds)
    (253/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.984085554 seconds)
    (254/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.878387875 seconds)
    (255/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.80209206 seconds)
    (256/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.274367395 seconds)
    (257/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.636856519 seconds)
    (258/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.625497243 seconds)
    (259/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.879881241 seconds)
    (260/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.298919061 seconds)
    (261/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.045878468 seconds)
    (262/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.692322633 seconds)
    (263/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.266503845 seconds)
    (264/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.252645579 seconds)
    (265/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.388072319 seconds)
    (266/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.355850102 seconds)
    (267/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.354761138 seconds)
    (268/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.404095221 seconds)
    (269/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.299986034 seconds)
    (270/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.514503949 seconds)
    (271/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.289983891 seconds)
    (272/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.082300688 seconds)
    (273/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.274894955 seconds)
    (274/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.25888759 seconds)
    (275/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.315534277 seconds)
    (276/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.668968208 seconds)
    (277/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.332329365 seconds)
    (278/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.648346866 seconds)
    (279/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.307492515 seconds)
    (280/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.402246639 seconds)
    (281/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.40032411 seconds)
    (282/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.60644976 seconds)
    (283/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.582082754 seconds)
    (284/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.296880866 seconds)
    (285/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.557966684 seconds)
    (286/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.179931345 seconds)
  done (took 914.749814252 seconds)
done (took 915.924026504 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.307198805 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.311550607 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.284978077 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.307539284 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.404849233 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.30713841 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.295854591 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.28841312 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.333554397 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.335824968 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.292727339 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.306494405 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.294593348 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.294141288 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.285257089 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.30842176 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.283963601 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.296435193 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.31193812 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.294839766 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.310884638 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.293336832 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.336228084 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.306667172 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.290028101 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.289076026 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.29719797 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.315043217 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.407127242 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.298599859 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.289490386 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.304939164 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.283237008 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.286115099 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.282513569 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.315481419 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.306110921 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.297818052 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.292267598 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.328512732 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.667922602 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.309490748 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.297204468 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.287756768 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.288166949 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.291550058 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.295840715 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.293960466 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.310029076 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.311950553 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.654115747 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.325198672 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.299211169 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.288759803 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.299107253 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.296024812 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.291394715 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.314456714 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.315587205 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.3148364 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.269895024 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.294189734 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.291272409 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.312200232 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.304196668 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.692399602 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.299187289 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.292089424 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.669877429 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.309211493 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.692547155 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.320330375 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.290423689 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.310888297 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.328172934 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.287850151 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.284523229 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.289305516 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.305120747 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.29569837 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.299933791 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.312371972 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.294652033 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.290589374 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.313549441 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.31240851 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.299880725 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.299832122 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.299102022 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.317754271 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.305747689 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.309736436 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.293466111 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.286437249 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.300855461 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.294226458 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.302428829 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.301861595 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.295896152 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.301695637 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.668338662 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.333211227 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.289292757 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.288533316 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.29102504 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.313935711 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.668879763 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.316063792 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.313001657 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.340099552 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.295202488 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.284988019 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.305049177 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.319233122 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.301766937 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.296530284 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.288989922 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.276867318 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.662055669 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.331126333 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.293453345 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.298154755 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.318944076 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.295182848 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.290274623 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.292474863 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.294841743 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.316403469 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.421897512 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.304497608 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.333230904 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.29998533 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.295993234 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.315192587 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.319096842 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.333859205 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.296304541 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.318761653 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.318263261 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.291198976 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.31149303 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.303665686 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.295158148 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.299904662 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.288628922 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.315617219 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.316368439 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.316265741 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.314397778 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.423295823 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.291809251 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.279021275 seconds)
done (took 218.585873813 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.354619079 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.29007065 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.378672176 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.290390321 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.39065438 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.392966408 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.288358399 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.289066549 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.289024044 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.677672101 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.288863305 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.289377139 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.289085205 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.289673492 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.37587724 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.292127588 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.289597689 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.639970112 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.291541342 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.366170532 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.28755048 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.289734733 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.292472051 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.678285674 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.288064864 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.292377053 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.366845727 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.29386042 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.64276381 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.293479047 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.290443917 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.641360721 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.383433402 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.309939494 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.301826975 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.301064896 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.394175926 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.309908623 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.377048008 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.37617661 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.380001302 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.333356737 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.292861142 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.287485947 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.294752282 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.294290379 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.291982945 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.319990422 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.286280779 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.292133204 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.641245296 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.302820093 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.302057093 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.292606559 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.292031014 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.314177662 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.292675693 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.295508255 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.384256215 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.295326236 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.357983179 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.679020919 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.679282911 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.293955911 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.290277499 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.292201207 seconds)
  done (took 145.744937657 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.361286807 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.367100316 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.403626795 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.312029775 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.345603332 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.408329247 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.31136956 seconds)
  done (took 10.71299303 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.302075431 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.295547313 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.34525775 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.344620906 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.296301068 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.474757012 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.296114439 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.307047609 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.294301246 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.346326115 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.298281027 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.296465507 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.303364306 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.295147754 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.344687395 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.30800509 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.412054784 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.297330311 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.297487988 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.457915726 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.294711857 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.303223302 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.348474836 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.307171787 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.299442898 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.302947178 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.133423441 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.297731948 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.294255167 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.297660477 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.294766797 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.39210331 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.298444886 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.291538171 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.294520918 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.412120731 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.299037918 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.295451885 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.29849816 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.295050322 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.298561547 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.299049619 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.297835067 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.295376309 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.29862026 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.319799821 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.298091938 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.299375763 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.298393205 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.299221649 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.349090898 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.29864233 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.29511837 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.297488168 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.352296887 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.306285632 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.299483384 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.295819909 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.299929603 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.297131248 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.459651448 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.346661012 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.300059981 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.347659648 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.300305594 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.300760782 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.300079583 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.299282007 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.353437996 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.30032284 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.347648885 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.296601619 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.480254607 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.323325776 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.302077197 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.303228409 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.302263292 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.301002478 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.301968554 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.305581626 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.29743444 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.30167882 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.306869617 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.29838257 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.297744302 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.471289351 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.406588458 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.297698979 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.312574493 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.307732038 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.298694672 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.353827649 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.300027439 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.298382604 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.35273095 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.416564734 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.352715648 seconds)
  done (took 150.208725743 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.306469811 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.309753232 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.304103958 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.325281912 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.319028551 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.301619086 seconds)
  done (took 9.074943278 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.305147051 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.301848812 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.301484443 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.301553552 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.301902733 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.303082341 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.302389693 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.303428097 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.305913537 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.302029838 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.303123105 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.307267805 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.304337619 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.303890959 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.302799758 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.303428565 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.30318788 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.301186331 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.303679052 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.303972773 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.398319816 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.303063557 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.303588001 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.30445141 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.307146913 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.303279873 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.312145438 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.303893194 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.304286552 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.3089655 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.32346271 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.306228122 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.305301882 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.308808222 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.307809197 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.306333855 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.307435335 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.308883257 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.302284972 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.305359944 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.309428937 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.3050702 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.305258683 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.309560237 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.306960592 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.30927327 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.311841542 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.312601642 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.305424291 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.309652425 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.309919743 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.306235995 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.306223623 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.310550383 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.307577582 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.325720562 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.312378471 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.306043988 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.30697868 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.30662941 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.305609927 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.307132565 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.30790917 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.308281981 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.313455645 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.310963412 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.307482651 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.309555318 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.307431752 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.306349185 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.311162712 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.30469484 seconds)
  done (took 96.391240883 seconds)
done (took 413.332767633 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.648819802 seconds)
  done (took 7.863024471 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.381122034 seconds)
  done (took 7.596626616 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.56681727 seconds)
  done (took 21.789246331 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.338997981 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.386117971 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.299794763 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.30697577 seconds)
  done (took 26.545237713 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.544010893 seconds)
  done (took 7.758196067 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.299367954 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.316561419 seconds)
  done (took 13.832176524 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.777539995 seconds)
  done (took 7.992295174 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.701331765 seconds)
  done (took 7.924928421 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.313191934 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.343920656 seconds)
  done (took 14.127499132 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.280054057 seconds)
  done (took 7.494438504 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.379027647 seconds)
  done (took 11.595248465 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.316094919 seconds)
  done (took 7.533042997 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.343389926 seconds)
  done (took 7.559683624 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.155656974 seconds)
  done (took 9.370591852 seconds)
done (took 160.196847606 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.301393773 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.308594078 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.308884792 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.308351251 seconds)
  done (took 26.441755594 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.342231758 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.341411138 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.343809975 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.352741273 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.34556554 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.341785982 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.334765668 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.335969632 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.353281147 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.346023307 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.344436366 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.344532738 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.34228612 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.334725987 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.34547302 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.345514975 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.353955182 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.343693764 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.335587592 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.345934698 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.309596835 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.353593312 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.346128287 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.30962115 seconds)
  done (took 33.407720176 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.831811609 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.38094592 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.462987823 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.361337317 seconds)
  done (took 7.254048875 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.360861414 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.363825511 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.373932496 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.413984697 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.441766676 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.37502483 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.342678133 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.338491572 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.323184396 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.367480842 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.441690606 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.37980531 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.501160605 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.310529971 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.491781237 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.310594462 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.31107243 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.36399127 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.413626727 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.428946619 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.312032446 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.364090384 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.366837035 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.380550993 seconds)
  done (took 34.295541528 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.31184478 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.328813066 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.309220235 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.309105075 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.319431007 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.311398863 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.311244035 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.311956275 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.309820472 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.31694964 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.310318507 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.325326746 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.310781294 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.310438812 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.31692913 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.312255562 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.317241969 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.312181515 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.31290618 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.317060212 seconds)
  done (took 27.504759714 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.304946747 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.158221678 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.657085175 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.56018595 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.304908107 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.306459959 seconds)
  done (took 27.511941024 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.37912728 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.529887132 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.314112044 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.653266266 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.750857153 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.328711407 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.314596114 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.54765442 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.856332723 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.845521888 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.373599233 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.376604572 seconds)
  done (took 19.489639273 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.306605661 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.328858494 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.318623432 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.328960742 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.366009825 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.333283788 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.320258777 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.307958035 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.372190362 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.384817075 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.332291186 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.367594743 seconds)
  done (took 37.290018097 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.393934693 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.353504791 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.256169324 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.350570103 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.044019814 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.519509244 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.373577805 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.033391481 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.33058883 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.58231173 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.314105889 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.398410727 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.564276579 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.318397454 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.316481859 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.260624318 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.558155238 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.771244115 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.313170802 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.275692641 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.337995216 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.309377843 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.344538884 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.543477442 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.547023863 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.287394375 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.572168832 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.09490578 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.584004896 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.330163789 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.321362704 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.310475581 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.584446608 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.205473657 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.406972794 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.519358472 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.33664246 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.939622611 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.309070441 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 5.269258502 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.322164429 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.313466544 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.321072259 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.311994797 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.244752301 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.311621514 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.338235571 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.317891877 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.024116066 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.311830891 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.558775754 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.415082062 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.316389293 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.880896761 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.396511351 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.317105671 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.315017718 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.402939834 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.903014368 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.51747463 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.325901863 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.252445827 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.318897608 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.261175299 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.907764667 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.334972635 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.317532091 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.3169082 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.247448011 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.266524238 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.336191268 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.460970913 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.337646481 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.948988172 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.976717075 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.333455213 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.246003729 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.841201387 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.316134793 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.255439923 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.541647727 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.090554331 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.249150658 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.261174903 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.246977187 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.989434981 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.322317937 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.731057101 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.336297546 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.042875469 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.543600587 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.356852622 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.337897552 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.536681236 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.191046819 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.315794473 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.313984437 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.45928797 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.335492484 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.017935621 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.267592028 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.318265164 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.570322722 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.525798564 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.325359506 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.28680342 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.070734025 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.330087123 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.341236034 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.316545793 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.53132495 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.896867405 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.346716793 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.523732655 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.338279358 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.090971493 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.034603749 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.320838911 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.327178016 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.31563508 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.596323889 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.052291222 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.209912329 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.383398096 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.320972696 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.317340495 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.298680293 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.170128675 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.212936848 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.509722292 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.34046477 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.33333582 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.318114446 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.267042756 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.314625416 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.325264499 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.096647927 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.541663703 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.318597028 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.613053539 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.251742871 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.466226992 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.326591935 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.54039421 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.472770396 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.339458879 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.576594003 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.329817691 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.325649423 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.351155975 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.336906012 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.4180747 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.339793469 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.330096113 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.580911726 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.321372975 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.322128162 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.307837368 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.103265035 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.32577106 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.324446989 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.333966146 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.878753 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.312662772 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.324646527 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.208029046 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.333871443 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.387445663 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.32572455 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.530991192 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.526359237 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.341306242 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.324938546 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.325813245 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.544607607 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.328643708 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.300679074 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.404741947 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.79498526 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.898630231 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.349897474 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.254063486 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.031441129 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.01338695 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.320722937 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.509070783 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.321957658 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.530786632 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.357830225 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.32073865 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.884027046 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.340577533 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.316280306 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.332792327 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.33341364 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.582068204 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.341282166 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.501356326 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.572887356 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.341503322 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.339449586 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.464955242 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.336417085 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.255522754 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.838579554 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.326325847 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.323467551 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.096687237 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.35662283 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.312585301 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.517247882 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.605065704 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.340200173 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.570842919 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.385171818 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.35471173 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.318393956 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.323620036 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.345125811 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.346578789 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.331386586 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.333554167 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.304383867 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.767280938 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.888869153 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.022483956 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.848490305 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.576646461 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.344161281 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.213026926 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.060932596 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.276910443 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.979156651 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.551238314 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.04600092 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.286845661 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.100831015 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.476184747 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.084953986 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.574208198 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.558029073 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.554011464 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.343321973 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.580820224 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.544477512 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.358219942 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.328619424 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.25944981 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.840403508 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.346228792 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.334164398 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.406810814 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.356451344 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.33880999 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.104219447 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.399212686 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.012048142 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.985757428 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.870935564 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.711800641 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.333920315 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.33204908 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.501252132 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.353158776 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.851432368 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.926178647 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.353220132 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.806881349 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.281449187 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.537766386 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.361591035 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.322569024 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.81757299 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.348568729 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.584615191 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.576918797 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.268742634 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.336427364 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.841290004 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.198804969 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.332562192 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.757430715 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.043673937 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.337051457 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.609850366 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.339714957 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.512316726 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.34944814 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.261242851 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.26143954 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.020111106 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.338566268 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.301947844 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.794916766 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.330980939 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.342433994 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.331780271 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.178877005 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.583786013 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.34251364 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.891741749 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.576068011 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.333282199 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.351675653 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.332666201 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.341046134 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.314103035 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.224163472 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.563874318 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.410782143 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.553168359 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.271037974 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.234921014 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.361865079 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.540555607 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.22693702 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.342743502 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.558672477 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.062146715 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.349954415 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.028647587 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.375838239 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.33017729 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.36161022 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.334825608 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.351119926 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.419112266 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.544499451 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.365594942 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.340493205 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.983580966 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.331081192 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.352915885 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.344499647 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.423856607 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.578083606 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.521355662 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.123340853 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.899406653 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.056519822 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.928699966 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.602340646 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.339361398 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.332739468 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.265775755 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.479106363 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.857211675 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.605429091 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.460762656 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.330683506 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.355141213 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.332083602 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.343878883 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.552562035 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.608451301 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.202179373 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.340081146 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.996535949 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.491271706 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.344950891 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.54291253 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.803961209 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.867591033 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.617787002 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.333296889 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.064918926 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.62734217 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.423313508 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.333536785 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.921656919 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.344053794 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.033273315 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.338233547 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.336519522 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.483851957 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.581422817 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.272086673 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.343562942 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.494563717 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.106262727 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.335459165 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.592275679 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.759837239 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.553674008 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.924776812 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.03650745 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.60165401 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.40423971 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.546899613 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.461450069 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.481718665 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.335612912 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.222786027 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.336868377 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.185911117 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.047517862 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.345303628 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.910304724 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.615015374 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.340895068 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.339497747 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.36464969 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.344946562 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.558866634 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.020940239 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.559784504 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.344469299 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.344875892 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.904937021 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.912953329 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.604442421 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.27555158 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.339779772 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.559322556 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.595421626 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.361162512 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.788573403 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.046458706 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.873332626 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.308275759 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.358359701 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.338612858 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.029210622 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.910393131 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.544130141 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.829189797 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.99445542 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.34997836 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.6178034 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.342233163 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.339976151 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.619975466 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.340138716 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.341522315 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.558793558 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.929116843 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.107802998 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.346039769 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.386178808 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.280239996 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.563970544 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.429131992 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.273859078 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.340031694 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.751461163 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.358106359 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.467828052 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.349357136 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.339920388 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.342517371 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.094455259 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.616597358 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.344432897 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.337362092 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.32233696 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.359958002 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.434410213 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.322263048 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.34506396 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.012346918 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.690503637 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.595287555 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.347654686 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.321862461 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.343742173 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.340791234 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.056341262 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.308125063 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.35361663 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.878122147 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.345692748 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.355076203 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.344274455 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.556127707 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.552036888 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.347101065 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.556388718 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.377521702 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.361621575 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.238982118 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.108112023 seconds)
  done (took 1667.424852709 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.380191748 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.380297979 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.363310924 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.427611183 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.362631244 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.406459725 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.436481365 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.417528163 seconds)
  done (took 52.426110521 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.35200253 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.4988658 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.37187885 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.341179989 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.369135454 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.351183567 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.792494043 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.362953023 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.34988796 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.35062321 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.344515676 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.351215839 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.961243352 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.351654016 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.351973952 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.348556092 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.355532816 seconds)
  done (took 65.46286713 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.319127007 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.618290063 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 11.102294325 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.412064635 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.382226653 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.343410046 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.847683415 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.35881897 seconds)
  done (took 58.637987406 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.353446967 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.353435449 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.354017382 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.353627197 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.353547523 seconds)
  done (took 8.021619284 seconds)
done (took 2066.384696803 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.346985144 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.350013972 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.347829943 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.349143145 seconds)
  done (took 6.647282407 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.322323029 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.003369513 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.325140331 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.339656641 seconds)
  done (took 18.244954937 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.35404291 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.374714098 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.999384581 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.94511398 seconds)
  done (took 5.200153667 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.106590244 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.107456609 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.092083623 seconds)
  done (took 7.561381803 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.344251173 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.35021835 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.34853053 seconds)
  done (took 20.297689484 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.635413272 seconds)
  done (took 2.890337658 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.492787766 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.541407028 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.660179242 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.665965502 seconds)
  done (took 7.616143781 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.732246316 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.71733301 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.533367943 seconds)
  done (took 6.237449188 seconds)
done (took 88.678448553 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.075651677 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.590464693 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.549102972 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.089237689 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.573749617 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.55144943 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.553274962 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.054505524 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.55476939 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.542507908 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.050013459 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.573914301 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.714807814 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.583849278 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.714679605 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.711139553 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.751638862 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.115960542 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.730171487 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.966948198 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.559738651 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.684529921 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.881199315 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.700721113 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.751950941 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.492606564 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.264849817 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.71092489 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.904208153 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.282449119 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.492310303 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.144394386 seconds)
  done (took 192.173515238 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.34601256 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.346409611 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.348051316 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.345551954 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.37166609 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.346264165 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.347582891 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.365868614 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.35946143 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.346377458 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.367461524 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.347280967 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.349624292 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.347432929 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.349708442 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.348711976 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.36081059 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.361125285 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.347870711 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.348457259 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.348961649 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.364184162 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.360462976 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.348377828 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.349415041 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.349238787 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.359216258 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.34775101 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.348691184 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.364069259 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.36358082 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.350616056 seconds)
  done (took 204.563821318 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.359538186 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.353124426 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.347749896 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.352859406 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.348545815 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.365327693 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.367834057 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.349770243 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.349926725 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.349809009 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.365357152 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.357809563 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.350969725 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.350130202 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.380770895 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.349382967 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.350758633 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.364810433 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.349066314 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.365962014 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.352421828 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.350941712 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.349771566 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.360133865 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.356319558 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.363730105 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.349345815 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.364917836 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.365039163 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.367726462 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.375929504 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.371302643 seconds)
  done (took 204.717237427 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.553429363 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.357985478 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.358082094 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.3107563 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.360117868 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.357897247 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.353475893 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.547512999 seconds)
  done (took 14.4601595 seconds)
done (took 617.169822155 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.601278407 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.316484074 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.551760938 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.37896102 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.091792804 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.393851165 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.379107587 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.541878532 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.272714727 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.549047154 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.628051442 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.397371961 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.767220247 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.380917319 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.630544978 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.478209282 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.26537055 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.384090241 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.68876461 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.891927948 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.634795067 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.798452918 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.562235245 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.261935855 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.759299736 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.792808199 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.045163211 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.251952985 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.394449152 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.695327977 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.956216778 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.290617028 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.417239971 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.435780785 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.493305918 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.473796108 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.268815456 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.431289642 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.57158234 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.560666256 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.868112066 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.086156227 seconds)
  done (took 91.901758748 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.342255527 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.341582553 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.341186327 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.341662636 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.343213875 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.340750926 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.34152201 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.34133126 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.34125414 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.342241175 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.340959872 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.343021008 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.341075445 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.343871712 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.342688937 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.341686702 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.34187682 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.34329238 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.342495307 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.342697177 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.343857599 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.343317134 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.343960609 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.342410967 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.344133255 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.343710852 seconds)
  done (took 36.167221184 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.363264901 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.604326641 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.770536253 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.372706124 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.362596507 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.367396354 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.439079131 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.366873813 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.366042928 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.368107398 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.512067442 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.366281721 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.396477575 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.794513157 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.373387111 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.364477339 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.363168089 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.363683053 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.612304418 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.373286518 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.459257153 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.373204512 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.438836029 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.380926797 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.38572279 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.365863788 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.368881097 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.933892169 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.388541776 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.513219852 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.125600858 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.441971532 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.891511519 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.799896767 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.13508081 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.372318663 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.366778262 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.522501824 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.366408914 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.365423464 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.440202464 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.366788437 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.7880566 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.033415053 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.385156085 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.365836886 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.950891986 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.540252464 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.599964326 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.380407336 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.810363557 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.373464765 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.368026842 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.368018301 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.60262163 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.376791094 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.366253107 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.966225039 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.392931013 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.442067451 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.370812203 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.367488311 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.622760408 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.370734201 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.613362386 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.372967149 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.376125369 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.3867301 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.785353771 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.375832354 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.056280473 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.388956447 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.36769457 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.514226686 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.613092237 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.98987863 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.392426168 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.62761793 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.90974879 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.460720679 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.379632093 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.925904633 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.465115994 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.376847771 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.371038815 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.369677554 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.368309056 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.41911042 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.440468454 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.99681234 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.065362104 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.995951144 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.465524886 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.380039528 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.369752776 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.968074638 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.389467222 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.369136296 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.778565748 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.061933174 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.388362372 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.377381783 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.0545202 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.391660353 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.446649341 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.383067992 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.790582226 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.374789408 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.419627328 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.371406045 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.376018715 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.396085983 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.448693665 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.384869849 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.375425828 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.026511374 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.546875039 seconds)
  done (took 180.556099658 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.365908032 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.363699979 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.366632513 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.363515277 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.365141999 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.37234178 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.364315066 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.363915665 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.369061293 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.364858998 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.36524011 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.363746213 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.365585012 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.370230321 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.39569706 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.372550432 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.9754587 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.366326537 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.366103741 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.386759733 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.152791233 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.373391679 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.37663246 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.366124585 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.369192426 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.36902154 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.368916072 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.386708368 seconds)
  done (took 153.022393457 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.372971398 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.914668414 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.389323688 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.49817873 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.396975118 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.369734859 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.496993197 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.428013949 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.391563844 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.371498487 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.370841909 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.666035069 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.375897798 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.874121109 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.563910775 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.514347754 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.876268747 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.393536663 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.37076441 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.371479384 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.500340852 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.378021545 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.66926884 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.929796356 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.394796426 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.926438808 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.360729217 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.374003413 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.372552051 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.928272595 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.393762905 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.669177438 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.453800734 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.435971995 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.943157001 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.899948917 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.890224984 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.513924287 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.375222569 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.373028231 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.372596201 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.355483186 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.920111237 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.392211304 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.375307901 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.907016808 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.392590005 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.37540453 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.378929949 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.372761197 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.430754857 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.447927 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.687145348 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.93027056 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.467150134 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.389942682 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.500939547 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.735472748 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.376838589 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.872528625 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.356476749 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.931144318 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.39943121 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.356642983 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.375208866 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.380154369 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.517810889 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.50550298 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.873913407 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.390573411 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.871977231 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.534572906 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.377908391 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.374983052 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.378229409 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.925830871 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.891978382 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.534183145 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.513293659 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.567404592 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.361588624 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.374860952 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.35857679 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.450712717 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.379628955 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.926313972 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.890352658 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.394055983 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.379167477 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.3781042 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.378264962 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.545508024 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.955656404 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.470885302 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.866789949 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.687801495 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.673537261 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.379428785 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.432900834 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.392609308 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.675147585 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.379454868 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.431810707 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.796008941 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.67463464 seconds)
  done (took 163.440023504 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.615553857 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.523487772 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.463384974 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.525465907 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.965684674 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.937047653 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.637748891 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.516472617 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.483225983 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.632188793 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.516675938 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.483540425 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.58654956 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.458405544 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.097715884 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.460440623 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.483852599 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.522854693 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.529456311 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.387595874 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.056657901 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.652954216 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.558983678 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.271888534 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.46761638 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.11607385 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.924319759 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.887319429 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.553659775 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.64869757 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.893151585 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.487556418 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.316539316 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.057812928 seconds)
  done (took 66.002612076 seconds)
done (took 692.350954448 seconds)
SAVING RESULT...
DONE!
