cset: moving following pidspec: 8523
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.238154955 seconds)
loading group "string"... done (took 0.628717048 seconds)
loading group "linalg"... done (took 7.586069616 seconds)
loading group "parallel"... done (took 0.157092895 seconds)
loading group "find"... done (took 1.111330806 seconds)
loading group "tuple"... done (took 1.816316706 seconds)
loading group "dates"... done (took 1.215710994 seconds)
loading group "micro"... done (took 0.229493332 seconds)
loading group "io"... done (took 0.901477269 seconds)
loading group "scalar"... done (took 36.602423831 seconds)
loading group "sparse"... done (took 11.467843989 seconds)
loading group "broadcast"... done (took 0.916954202 seconds)
loading group "union"... done (took 12.260376899 seconds)
loading group "simd"... done (took 4.322427386 seconds)
loading group "random"... done (took 8.757964165 seconds)
loading group "problem"... done (took 1.800403168 seconds)
loading group "array"... done (took 19.830287897 seconds)
loading group "misc"... done (took 1.640118797 seconds)
loading group "sort"... done (took 3.107990899 seconds)
loading group "collection"... done (took 17.075713312 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.531273931 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.131783302 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.137792234 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.123733315 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.152489998 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.122928848 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.12967239 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.090837859 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.850813013 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.153848154 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.118321801 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.411797449 seconds)
done (took 5.34741661 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.176410025 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.08611876 seconds)
    (2/2) benchmarking "String"...
    done (took 0.087995041 seconds)
  done (took 1.249155148 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.070618277 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.130735663 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.072088381 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.072896275 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.072575323 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.072134745 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.072113044 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.071742318 seconds)
  done (took 1.639608214 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.07838302 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.073577076 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.071211979 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.073172595 seconds)
  done (took 1.371980356 seconds)
done (took 5.593889828 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.770209358 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.211645396 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.192057527 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.394405613 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.132834796 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.175217863 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.640677745 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.325224213 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.190564637 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.080427172 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.111563073 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.346533382 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.125351776 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.645423801 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.079056354 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.094561102 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.143368669 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.4247414 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.073178879 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.087638558 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.094297666 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.133686652 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.08894751 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.078567585 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.150777626 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.072901067 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.138422809 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.085391267 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.07134938 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.217010574 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.177683541 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.660975152 seconds)
  done (took 10.321143114 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.106836033 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.102899612 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.074275775 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.130071246 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.102387428 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.075119035 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.081140216 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.07294458 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.095203244 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.134335772 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.09614506 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.11025634 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.070957576 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.074058287 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.087765467 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.213129523 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.084856904 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.086139238 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.075845438 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.083667967 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.112326469 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.082670777 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.084860195 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.085153358 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.133735249 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.186061067 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.10235573 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.102878742 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.071342633 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.085758191 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.119831306 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.131478663 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.07091121 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.070886373 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.129671032 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.102410278 seconds)
  done (took 4.74262864 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.972875249 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.090805747 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.145228432 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.093018273 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.136378746 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.070288725 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.111777414 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.071172929 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.085687507 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.210132859 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.448108725 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.577097633 seconds)
    (12/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.115621974 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115210256 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.107469002 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072741073 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.073835873 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.072257829 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.484974799 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.104344098 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.112262598 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.086286833 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.075907439 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.074519979 seconds)
    (24/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.070971583 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.073555965 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.069795433 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073079823 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.11784535 seconds)
    (29/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.079723256 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.306982102 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.127164467 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072905307 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 1.027158711 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.074973343 seconds)
    (35/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.306772214 seconds)
    (36/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.072698345 seconds)
    (37/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.106325711 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096290695 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.142672416 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.074031778 seconds)
    (41/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.070657725 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.162650076 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.070205172 seconds)
    (44/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.075451666 seconds)
    (45/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.071266109 seconds)
    (46/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.089422515 seconds)
    (47/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.108858249 seconds)
    (48/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.127669949 seconds)
    (49/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.070970665 seconds)
    (50/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.07125999 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.172430406 seconds)
    (52/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.070549234 seconds)
    (53/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.083446672 seconds)
    (54/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.141787069 seconds)
    (55/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.157349336 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.071363974 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.290662312 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.095334738 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.075115816 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.070863656 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.17008205 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.122975809 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.072900206 seconds)
    (64/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.096006931 seconds)
    (65/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.07206024 seconds)
    (66/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073479536 seconds)
    (67/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.073627726 seconds)
    (68/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.383974248 seconds)
    (69/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.070954094 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.898998766 seconds)
    (71/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.07564101 seconds)
    (72/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.085237139 seconds)
    (73/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.075659813 seconds)
    (74/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.074996107 seconds)
    (75/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.077876809 seconds)
    (76/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.077682423 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.094191949 seconds)
    (78/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.071375377 seconds)
    (79/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.078024859 seconds)
    (80/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.071379673 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.071454116 seconds)
    (82/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.072095166 seconds)
    (83/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.088101336 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.362973091 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.071306339 seconds)
    (86/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.068694399 seconds)
    (87/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.071848277 seconds)
    (88/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.06913903 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.093784752 seconds)
    (90/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099458996 seconds)
    (91/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.071065518 seconds)
    (92/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.069818946 seconds)
    (93/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103373715 seconds)
    (94/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071424696 seconds)
    (95/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.070014609 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.070077032 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.086146876 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.073713023 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.116445154 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.069703527 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.09914874 seconds)
    (102/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.068144397 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.097641494 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.072383567 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.10223059 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.081613619 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.078551794 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.392987552 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.068609296 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.071113561 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.068679459 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.070772179 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.069873232 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.080563987 seconds)
  done (took 21.914349847 seconds)
done (took 39.026886297 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.248842648 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.075335501 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.075391716 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.075433218 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.075424774 seconds)
  done (took 1.712797512 seconds)
done (took 2.897556009 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.124712963 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.103260392 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070246799 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.101526499 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.069687204 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.107251767 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.104190063 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.081995377 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.103008573 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.069808888 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.100710998 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.070546937 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.069588218 seconds)
  done (took 2.336457366 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.088143994 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.088837581 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.075277855 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.087766461 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.069387851 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.088183413 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.087056448 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.093814662 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.089055711 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.077777486 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.068947409 seconds)
  done (took 2.055324139 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.087732186 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.088786121 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.075365389 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.087199127 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.069355006 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.086801291 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.087549482 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.091026646 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.087019709 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.079410424 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.069002321 seconds)
  done (took 2.046442632 seconds)
done (took 7.574803257 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.0815815 seconds)
  done (took 1.209098412 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.526936618 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.629101222 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.084402677 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.108928052 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.191495609 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.11409145 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.243685222 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.08884531 seconds)
  done (took 8.271092472 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.10638912 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.074088 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.076665367 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.074746966 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.073254772 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.073796089 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.076337167 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.074779636 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.074790512 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.077080957 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.077298053 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.076777402 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.073319297 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.074126354 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.076947252 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.07565315 seconds)
  done (took 2.437074834 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.095697256 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.095701357 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.078282804 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.079271657 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.076883521 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.076762243 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.078918529 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.077986598 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.075664606 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.077282024 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.079761685 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.077497772 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.075993501 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.068889813 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.07814023 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.08069261 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.075306675 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.078676412 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.079640391 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.079756586 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.079652649 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.068889384 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.076375232 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.078498236 seconds)
  done (took 3.114062134 seconds)
done (took 16.169154597 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.110277626 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.072480703 seconds)
  done (took 1.318809234 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.084237226 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.084550009 seconds)
  done (took 1.310438995 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.084100907 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.069507463 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.090631956 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.080663515 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.070571788 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.070380006 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.089197891 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.069951654 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.070037069 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.069966649 seconds)
  done (took 1.907083504 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.071974605 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.079622962 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.073846046 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.083383513 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.07660208 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.068340183 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.074995506 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.072189402 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.079631759 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.067258997 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.075346377 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.087413221 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.074563563 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.088810026 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.07512825 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.072589355 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.074271932 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.071371039 seconds)
  done (took 2.513797722 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.07026506 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.071746397 seconds)
  done (took 1.291075419 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.070673692 seconds)
    (2/7) benchmarking "second"...
    done (took 0.067842773 seconds)
    (3/7) benchmarking "month"...
    done (took 0.070368877 seconds)
    (4/7) benchmarking "year"...
    done (took 0.070231744 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.067827063 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.067095293 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.067978012 seconds)
  done (took 1.627034772 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.387140831 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.121748488 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.30343124 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.076915705 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.086067509 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.256779073 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.071090216 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.076531874 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.076526113 seconds)
  done (took 2.638004983 seconds)
done (took 13.757833622 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.084990564 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.09079009 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.099734387 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.378691778 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.096885497 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.072859428 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.11894394 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.181081246 seconds)
done (took 2.282070664 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.212306522 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.658479472 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.403019014 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.209049445 seconds)
  done (took 2.41982028 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.333705417 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.092785986 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.065779897 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.073001179 seconds)
  done (took 1.725125427 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.071812793 seconds)
    (2/2) benchmarking "read"...
    done (took 0.074766387 seconds)
  done (took 1.300992708 seconds)
done (took 6.815471437 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.071773849 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.089214408 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.184035702 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.07205572 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.069317746 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.071247492 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.069315997 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.070057241 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.071402857 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.071591204 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.071613556 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.071642925 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071540661 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06905724 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069069945 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071351988 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.068836393 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069073659 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.071089479 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06917688 seconds)
    (21/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.071422844 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071141603 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.069258698 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.069384336 seconds)
  done (took 3.005887237 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.087487969 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.070573699 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.075501127 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.07522499 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.073160066 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.074956659 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.075129062 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.071269278 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.075373568 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.073464526 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072891995 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.073087164 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.073717878 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.073162569 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073782777 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.073252705 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.075156513 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071366427 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073467321 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.073275374 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.075133089 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070985581 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.073031308 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.075066314 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.073117519 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073663623 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.073863355 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.071123382 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.075587571 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.073751337 seconds)
  done (took 3.384901267 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.074767708 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.068457591 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.069117503 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.076977582 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.068799972 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.068987695 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.067793574 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.068914679 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.069427205 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.067889933 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.069275439 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.06801416 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.068133614 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.06852268 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.068469547 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.072333461 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.084515292 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.06801888 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.068302534 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.068909838 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.07206236 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.070882812 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.068426775 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.067844482 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.068118747 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.067615793 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.069411111 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.067949738 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.068851044 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.068175088 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.071698362 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.072809673 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.067728112 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.07651214 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.072428448 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.068104618 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.072887673 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.067876409 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.068484443 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.067715023 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.067780415 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.067977819 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.068129137 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.075836753 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.068503771 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.069594989 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.068192548 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.069652758 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.06852233 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.069922785 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.068080054 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.06800426 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.069994182 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.069969919 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.073325761 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.067806115 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.069017661 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.068027492 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.068700767 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.068584337 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.068002669 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.068106718 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.071316279 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.068913854 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.084973368 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.076294496 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.068107938 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.069891435 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.069183521 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.072095503 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.069665273 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.083694844 seconds)
  done (took 6.22420307 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.091271155 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.092240857 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.071767937 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.070824633 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066548402 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.068766205 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.074464447 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068986811 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070916208 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.088117573 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069978321 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.071212242 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070751286 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.073061039 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06924762 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.071084911 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.077011767 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06657245 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.068659795 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.072764215 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069261847 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.074129239 seconds)
  done (took 2.798109 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.15331984 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.075120641 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.109485953 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.080268727 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.075444514 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.079480555 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.075306778 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.07494458 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075099161 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.073156223 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072904281 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074710454 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.075067856 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072537912 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072552365 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.072719718 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074663015 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.073027172 seconds)
  done (took 2.632798684 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.082370166 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.07178272 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.092687716 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.071688479 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.071227585 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.074145654 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075035975 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.078777935 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.073380535 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.071746219 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.078449417 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073440623 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.073507569 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071208502 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073659731 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.071199172 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.073571165 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071760508 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078417505 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.075256096 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.075326829 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078569707 seconds)
  done (took 2.830740699 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085053864 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.073538483 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.0855031 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.072841009 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.066697632 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.069432796 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.075367406 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.071117285 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.075127316 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.073027317 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070804615 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.069044696 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.074067267 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070991857 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.073990702 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070943447 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.073096551 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071631407 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073400123 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.066381495 seconds)
  done (took 2.637673142 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.089068706 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073020091 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.072687483 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.078609877 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072398293 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.072130302 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078858904 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.07241911 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072754593 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.092832151 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.072485487 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.072748728 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07898595 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.079333909 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.072356369 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078626981 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.078496607 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.078449945 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.072534199 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072539709 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.093803356 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.073616482 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.078941272 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.072473458 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.072164298 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072269611 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071998709 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076395123 seconds)
  done (took 3.320114359 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.072170764 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.072184638 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.069323016 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.069496693 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.069301013 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.069547663 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.069336747 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.069519604 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.071536582 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069203667 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.071764287 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.071627136 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.071805905 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.071685213 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.07194016 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.071838978 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071362679 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.070005283 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069401341 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069933797 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.072132438 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071855992 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.071354171 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069211225 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069175596 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.071270545 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069044841 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068842774 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071442616 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069421416 seconds)
  done (took 3.297727301 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.079816837 seconds)
    (2/2) benchmarking "in"...
    done (took 0.077606238 seconds)
  done (took 1.339386677 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.067235064 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.085717976 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.06783629 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.077254588 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.074453953 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.07198546 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.078010108 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.074854834 seconds)
  done (took 1.775091845 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.086150811 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.079785302 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.071591228 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.080846409 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.079649563 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.087448685 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.128152562 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.071054777 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.078331527 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.069894 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.08414653 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.071174957 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.079168092 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.071812976 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.078232565 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.078743004 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.06862177 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.075513474 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.072350441 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.069475692 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071384405 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.080078083 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.074964614 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.06676782 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.073517965 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.094496832 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.082164541 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.070260271 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074619347 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.079090542 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.077418039 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.065355549 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.070680797 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.070892888 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.06915072 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.079642345 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085172494 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074296513 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.079953117 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071890506 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.07889035 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.066149001 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.076004164 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.079170245 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.082764809 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.070931606 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.071000093 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.066222316 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.069951085 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.0743111 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.066199195 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.072320917 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.065933049 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.079038702 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.075128026 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.082397649 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.069534654 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.073249539 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.074722096 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.074581668 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.078275447 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.073718092 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.0752031 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.071130939 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.082708754 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.077081955 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.079357182 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.066440244 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.065523043 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.069246623 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.080842224 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094643473 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.077263231 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.070985284 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071005972 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.069023782 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.074772845 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071689209 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076961702 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.078002879 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.070681954 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.075309262 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.078868065 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.072496611 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.074000876 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.076720375 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.069418937 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.073181486 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.069648665 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.086576921 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.071769209 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.068276208 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.069522572 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.081119204 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.075474705 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.0692087 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.069196246 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077928349 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.064479323 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.069551336 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069812502 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071255123 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.079295513 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.072364244 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.072990125 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.078805388 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.075760706 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.071491484 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.072643825 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.066661717 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.194788822 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.072995028 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.080701509 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.065959675 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07532416 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.074187648 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.071499151 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.080472154 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.069309812 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.070543655 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.08023099 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.077917478 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.069583049 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.068449989 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.074798651 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.071060337 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.073373031 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.080099975 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.069610327 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.066176001 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.066244896 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.075085623 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.069798662 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.075189296 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.075346529 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074799371 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.065715065 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.069157361 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.07426966 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.079873308 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.072811454 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.073069582 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.076867624 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.073264173 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.070115637 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.078342058 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.074105266 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.070911422 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.077410379 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.072367363 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.066899635 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.072921409 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.075529939 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.069593044 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.075780209 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.07276774 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.073593786 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.071052448 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.069490473 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.076153 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070890628 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.070688884 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.071968292 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.069549883 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.081430901 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.073406046 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.06633139 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.068713503 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.077337178 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.070121045 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.069853675 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.071523275 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.073845343 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.070914448 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.069042679 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.069879849 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.073639281 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.078460087 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.073444484 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070982472 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.076716105 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.083701304 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.069802538 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.073899318 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.069971575 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071478068 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.071193978 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.08065016 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.077664712 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.074298386 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.074083046 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.068000688 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076631134 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.079543134 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.071211887 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.068508927 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.07120247 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.074202189 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.078045942 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.073943915 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.071361114 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.069262797 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072805179 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.072851319 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.074292169 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.069283299 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.070690103 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.074930567 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.068540509 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.075172899 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069853636 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.080694825 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07353814 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.065317942 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071297328 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067703198 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.076622373 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.064736521 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.068991156 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.069718653 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.069622409 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.068625897 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.072298534 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.064213554 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.205640846 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.080930662 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.073532316 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.072959443 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.071058789 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.079167902 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.073838741 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.075455366 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.07642674 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.077929234 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.082415989 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.071354961 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.075901367 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.084872594 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.070797159 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.065333466 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.077068751 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.069454112 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.069312729 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.069815523 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.068714827 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074873925 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.078317978 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.077759672 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.06535773 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.074193942 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.069815212 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.071124917 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.066314435 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.075884604 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.074157824 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.072256529 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078716367 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071798661 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.070838788 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075261668 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.070206202 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.070477913 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.070700234 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074029377 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.070589653 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.07328793 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.070823952 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.074013927 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.07101344 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.06873973 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.072951 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.070505122 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.071746256 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07607193 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.069825976 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.072405275 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.073692648 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.070519916 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072662365 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.072249682 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.070977081 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.074707147 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072932187 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.072612652 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.074168016 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.066075757 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.079299395 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.070479757 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07947628 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.072512767 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.068752568 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.076391754 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.074126164 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.07565413 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.071139434 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.071308634 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.073559101 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.069837143 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.073938662 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.078521963 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.070462215 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.081841356 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.078363713 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073173297 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.074516602 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.07226608 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.073195451 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.070821371 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.072815517 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.07114932 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.07240424 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.070591096 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.075619622 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.074459154 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.07186771 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.073778176 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.070960595 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.072432667 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.071589037 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.066231189 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.070746272 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.070707011 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.069416255 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.079094077 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.069748202 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.071041894 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.069549793 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071279648 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.068677457 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.066946024 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.075882358 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.075891669 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.069267843 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07641212 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.069744445 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.072116908 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08038584 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.064569663 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.067783817 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.197619212 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.07186153 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.080390378 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.07194063 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.081753277 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.073011313 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.071840874 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.068677602 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.072205059 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.069610058 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.066101084 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.069412162 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.075693777 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.071080425 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069762609 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.07068442 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.074053565 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071056845 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.080027242 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.070785949 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.072786428 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.070783412 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.068562798 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.071274338 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.071120447 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.074347095 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.071293307 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.070108513 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.068688131 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.069673277 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.072438733 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.073581141 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.070339239 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.072858123 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.078590239 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070595362 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.074181752 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.07306577 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.06610974 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.074615818 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.070835169 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.070344016 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.071641324 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.074753716 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.077315583 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.071395759 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.081140143 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.070387767 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073157361 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070656603 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.068750558 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.069837735 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.070194988 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.070254805 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.07073143 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.071507349 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.079216285 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.068721601 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.074512012 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.072367805 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.072497793 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.07804163 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.071367285 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.074169047 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.076191634 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.07274352 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.0734824 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.080036523 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.074368014 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.075020696 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.07164303 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.072864175 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077221085 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.07102012 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.078294813 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.072837411 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.071159979 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.073318465 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.069826318 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070279083 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.07071646 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.0700081 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.077352115 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.070817802 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.070925744 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.071370175 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.068854862 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.073225219 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.073494578 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.079935285 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.074208447 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074889164 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.066534709 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.068563088 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071240084 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.070258638 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.073468486 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.074007185 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.077553435 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.073280004 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.071695466 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.06904765 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.079992349 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076569484 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.074391686 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.069583938 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.074977875 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.07011679 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.072769366 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.071950516 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.07127792 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.07055903 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.074757588 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.07234831 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.070417317 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076182548 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.073184576 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.199681481 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.074408402 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.073756254 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.073742112 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.066797923 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.071954573 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.07509333 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076258803 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.074171023 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.07104761 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081916527 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.069946129 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.072583587 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.07297442 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.070018335 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.076495726 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.066692536 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.073859889 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071677955 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071597423 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.066746714 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.072122733 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.07020293 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.074500973 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.071397632 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.066311065 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082802207 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.081718227 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.074263364 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069723451 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06973333 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.066493014 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.066078847 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.070974147 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071036344 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.073367904 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.081936551 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.071350453 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.07103884 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.066061492 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070845833 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075520639 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.074897744 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.067877285 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.066777484 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.071136302 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.074511406 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.07770209 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.069444619 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.070013019 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074126818 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.073900273 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.068884907 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073196333 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.068231405 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.074952069 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083647791 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.070518533 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072799979 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.07736739 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.079144777 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.07083231 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.066551906 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.071796113 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.074742383 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.07215088 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.071140558 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.071455679 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.085784216 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074913175 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.071271208 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.069448117 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.074217684 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.073978633 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.079632396 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071558801 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.070992606 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.076159555 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.073407384 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.077662712 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.075726713 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07824514 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.074776159 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.07487466 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.070076176 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.072518073 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.069377341 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.071265573 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.071512893 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.07090672 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.074825715 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.076734506 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.071194119 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082113529 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.080453316 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.073644741 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.068362482 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.070949111 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.070709742 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.065736878 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.070494511 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.068346996 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.06871327 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.068376313 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.06940272 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.072561222 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076107049 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.072052802 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.070026624 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.069785966 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.064963297 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.07413994 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.072632004 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071372953 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.067183065 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.068773021 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.200003485 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.077070922 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.073938732 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.070915625 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.07441222 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.074006559 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072972871 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.066643422 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.07887408 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070614692 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.07417019 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.071090454 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071317138 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.072059282 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074802134 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.074856239 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.071572907 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.074544961 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.075354785 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.073118865 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.06914667 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.068394915 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.07712614 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.069752637 seconds)
  done (took 45.424495072 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.103319012 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.06781755 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066328825 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.066112042 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077282421 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067646877 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066871553 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.06752447 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.06826539 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.069100378 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.066933506 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066297288 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.074005605 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.0811247 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.076297609 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071550498 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066723344 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067525231 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066524202 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067771801 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.07421467 seconds)
  done (took 2.761109643 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.076590038 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.082028561 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.079282867 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.086061664 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075056651 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.074024973 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.078901609 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07400759 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.082111134 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076696655 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.081803104 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073885269 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.076941496 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.076634875 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076833629 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074047431 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.082299919 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.075442704 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.073701826 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.07858743 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074746482 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.078781092 seconds)
  done (took 2.960926484 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.07175133 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.070720713 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.0732678 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.066738757 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.070114677 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.065581731 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.07299244 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.068638969 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.072776175 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.070648625 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.070884798 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.070739613 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.072960482 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.065770645 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.071444598 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.068792685 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.110022183 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.072880377 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.070345737 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.070563202 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.066180283 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.080837363 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.065958727 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.066850718 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.071017513 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.07244364 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.070797862 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.068911427 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.070045147 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.070391545 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.070134841 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.068629368 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.072728334 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.071373528 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.070164298 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.070389471 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.070318847 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.072826381 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.066170962 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.069212947 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.071301406 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.066778667 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.071385597 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.072800308 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.068568791 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.068773235 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.072973864 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.070003363 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.066335512 seconds)
  done (took 4.737420745 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.081119526 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.112792929 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.072355122 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.092655668 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.083351117 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.076194762 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.074690385 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.092923658 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.067973668 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.068457406 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.084902197 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.08166333 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.069748432 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.073982229 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.074982603 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.069752171 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.071009774 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.069137809 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.073018304 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.069218416 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.072978013 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.076455633 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.082932093 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.081371176 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.073256612 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.068798865 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.068915076 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.073377197 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.080550796 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.073859458 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.074043449 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.074854666 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.083610185 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.074805243 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.068990652 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.072122604 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.084200639 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.069683857 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.072126622 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.067583643 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.071761882 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.073970046 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.076882365 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.08448261 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.070052823 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.074754213 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.069540389 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.067330609 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.080766953 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.071901403 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.076352477 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.082468446 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.073871875 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.070596691 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.073585473 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.08350313 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.069776262 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.068627748 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.07275465 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.080741053 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.068050012 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.073217499 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.08165418 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.071848603 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.076328276 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.08218429 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.075091713 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.073615182 seconds)
  done (took 6.525713838 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.079585684 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.100488872 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.086952022 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.086411216 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.080154063 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.080119373 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.079687543 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.079680299 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.079920112 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.084150276 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079722747 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.120010945 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.084543105 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.082435943 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.080120805 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.080409931 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.080323513 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.080424541 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.080309294 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080423623 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.079927868 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.086130513 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.079933723 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.086687205 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.083680553 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.07608482 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.080726855 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.080270299 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.086096574 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.080157598 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.082803404 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.079947193 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.080148293 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.086088657 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.083008933 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.07964156 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070167587 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079676615 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.079928632 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.079973191 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.076196799 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.08658551 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.0798321 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.075962784 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.08001067 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.08014962 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.086275877 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.083112486 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.08181339 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.083585782 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.080119403 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086375164 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079927236 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.08038591 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.08648416 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.088424288 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.085771999 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.086193194 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080066634 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.085788689 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.08649788 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.088601981 seconds)
  done (took 6.419543696 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084418028 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.076638681 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.08618863 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.066496959 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.071771581 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.076263369 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.069344688 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.068841676 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.077254048 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.07724157 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079249998 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.076563998 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078967471 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079260879 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.076670077 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079053565 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.076535833 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.076461307 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.077260053 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.076754037 seconds)
  done (took 2.813636397 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.080770211 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.087580824 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.071976455 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.076320788 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.074495311 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.076321911 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.073129588 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074154788 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072348265 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074139346 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.080005699 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.07985979 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072522794 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.076074873 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.080275688 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.076259231 seconds)
  done (took 2.497199509 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.087306093 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.076345538 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.08300726 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.086613853 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.071493101 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.06703493 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.069564372 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.066102199 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.066754212 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.082515882 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.069722642 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.081106889 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.069600902 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.068668808 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.066956654 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.075660626 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.066559573 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.067490878 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.070601565 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.081293782 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.073770038 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.068617063 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.073987122 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.069787157 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.072775372 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.074114908 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.069206584 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.071065446 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.067447604 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.07053348 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.073543157 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.073998062 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.067494667 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.068002625 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.069626041 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.068002849 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.070057043 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.070441823 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.075895504 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.069812438 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.068417725 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.072734633 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.070460299 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.070680584 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.067311037 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.07024825 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.066684719 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.072854943 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.068278624 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.072825707 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.070348026 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.07206596 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.070495101 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.076887851 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.072743084 seconds)
  done (took 5.226908461 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084848261 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.074695057 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.066238179 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.068680305 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.07334374 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.071938303 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.07477715 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071727644 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.072703294 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.068649463 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072073467 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.073668389 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072355924 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.07394042 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072384372 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074566253 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.066101542 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071556364 seconds)
  done (took 2.605609804 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.076701762 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.070527396 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.078437954 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.070720899 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.070870168 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.072223313 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066005155 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.068719875 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069138682 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.071086016 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07078525 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.073410085 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069497357 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.073412436 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.07122404 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070895545 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.073265775 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.068927721 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.071137723 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066394582 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.073130742 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068716983 seconds)
  done (took 2.85801119 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.097370166 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.087694888 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.142924531 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.083969506 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.091213665 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.076670203 seconds)
  done (took 1.871063245 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096611963 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104083137 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.071219012 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073820356 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079256863 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074851171 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074600284 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074807903 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081492806 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079460503 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074672229 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084180298 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082099147 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080730789 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07948637 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07996343 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074614384 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074640559 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071247061 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086138609 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074728884 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082281928 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074914357 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075091195 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074600784 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080885397 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081221492 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079663964 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074423155 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081651468 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079858077 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075100743 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082177874 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07961563 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074079399 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081529291 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075043836 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086247151 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080147857 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081168862 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.073523021 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079881446 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081523813 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078615319 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081794899 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074738013 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078470442 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074508172 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074832607 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088023994 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079988834 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080528609 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079234486 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081892384 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081394151 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087717403 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079106413 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081068175 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079581171 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078943691 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081508772 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079771945 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080729914 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079585765 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080159726 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081681645 seconds)
  done (took 6.545665125 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107987286 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.071617267 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075106056 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079601566 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081085629 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074481792 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074743554 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074917555 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074565358 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071930356 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111552793 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07552386 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081077326 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081158372 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074758557 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074561156 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074972104 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081100529 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071965716 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087720837 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074401858 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08070057 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080904548 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080774049 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078944004 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079580248 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075163262 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074767574 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07507882 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074619895 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078739474 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075064581 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081538317 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.07206673 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081183047 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074990618 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075442993 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078679868 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074950671 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079370279 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081086049 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086046023 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074825841 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074606698 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079310444 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074520396 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074741804 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071821386 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074437001 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072127219 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.0791755 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07930325 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079319485 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081327889 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075035912 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074747615 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074603374 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075161548 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074893828 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079711446 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08103095 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074591478 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087792821 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074522122 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074766989 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081214024 seconds)
  done (took 6.472653349 seconds)
done (took 134.123447292 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.197547335 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.174948194 seconds)
  done (took 1.65348745 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.073648442 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.100146138 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.080669467 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.133070237 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.071287924 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.105858282 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.103453883 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.08164211 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.070962755 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.071097442 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.070967598 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.072911503 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.136246652 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.071019253 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.070916268 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.07358433 seconds)
  done (took 2.687318176 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.101756214 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.159177141 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.105672745 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.070509604 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.101786046 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.076032054 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.070420948 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.081627796 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.075778895 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.070370871 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.076356935 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.074580887 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.070636156 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.074528219 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.075192103 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.076612617 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.070728908 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.076485275 seconds)
  done (took 2.810417744 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.100406618 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.094246318 seconds)
  done (took 1.499390402 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.159860699 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.137861938 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.205534851 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.338533352 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.157731012 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.149379188 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.146137887 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.144628836 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.116701159 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.140309836 seconds)
  done (took 2.9970167 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.104078293 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.151980166 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.27374541 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.120835187 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.077950121 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.09453873 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.121879566 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.083733765 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.08370957 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.083178369 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.0834731 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.08013439 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.103844907 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.077518232 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.07901039 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.080043542 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.106517591 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.078414409 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.079865913 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.079776228 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.104567713 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.071342756 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.077791289 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.078265843 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.080694767 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.080549948 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.07115668 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.07152099 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.079871579 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.079926425 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.080487843 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.093484826 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.080865332 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.105295202 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.075854984 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.106246397 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.080776936 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.077336098 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.079417074 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.077427652 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.081212568 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.08175948 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.078409353 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.080079419 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.071429899 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.080510543 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.071376725 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.07194788 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.081749124 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.072335998 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.081516109 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.080848958 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.105468679 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.072220078 seconds)
  done (took 6.137227078 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.110792173 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.110375302 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074892845 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.115766269 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10866048 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.074141782 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.108982299 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.102668929 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.111095577 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.075019254 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.073022284 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.074385414 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.083368241 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.084583057 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.119630513 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.111220329 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.077217992 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.073844258 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.111063209 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.111584392 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.07376648 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.10567212 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.101050996 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.110172618 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.072332295 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.074331979 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.073544902 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.074126699 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.079800486 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.0815483 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.073822917 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.082460269 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.087094986 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.080940776 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.072242881 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.072994936 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.073201475 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.082480456 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.082328765 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.082675629 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.080130527 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072286779 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.073162471 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.074149305 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.073814547 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.072916622 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.081360298 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.082467665 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.080831591 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.073281535 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.074835414 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.073410186 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.074046308 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.082260406 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.080425563 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.083119052 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.08232553 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.07332638 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.073194422 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.076023344 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.082842416 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.082375684 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082171631 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.074096282 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.082686153 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.076074412 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083278281 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.085943367 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.073379207 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.074419606 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.073642252 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.07387986 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.074293935 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.080734817 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.080547997 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.074514911 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.073481145 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073051308 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.081631155 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080780071 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.073246446 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.080163167 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.072576156 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.073003046 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.073771621 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.073683583 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.079264905 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.081371916 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.073657604 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.07314732 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.072666092 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072066016 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.070986837 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.077649023 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.080073754 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.079234299 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.078880773 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.073566142 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.079312408 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.079308293 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.205370958 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.082285101 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.074012731 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.075860096 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.075495156 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.081265213 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.081170266 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.082584437 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.073683663 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.073346207 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.081232421 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083373396 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.074497893 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.080719789 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.082194326 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.081488953 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.072527279 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.08429742 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.074644535 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.082897648 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073782605 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.082942883 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07359906 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.08253332 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.07340939 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.072833323 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.073291175 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.081794317 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.074982778 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.073978857 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.074324814 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073067707 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.081056067 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.085163769 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.075206963 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081348781 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.081513924 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.074489272 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.080124997 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.07313905 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.082059006 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073336927 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.074354205 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072833457 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083622937 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.073423617 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.073360192 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.073022031 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.082243001 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073301478 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.0824976 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.079994151 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.07251218 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.084283359 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.082768608 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.080308838 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.082909873 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074799089 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.073564047 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.073215 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.073193135 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.080258682 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081729972 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.074423948 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.073010756 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.080253262 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.082533514 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.072102282 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.080476296 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080790357 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.081278777 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.073894616 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.074036865 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.083648988 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.083000053 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.080897992 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.080838211 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080900203 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.073521541 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.08067756 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081176885 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073462239 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.086491556 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.073811752 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.085004374 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.081199234 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.079900124 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080395935 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.081927907 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.081809935 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.081987382 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.084038992 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.072023181 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.072195501 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.079487026 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.071995364 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072351441 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.078315879 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.073481806 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.072958333 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.083339144 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.072541593 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.214958745 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.073568581 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.08247267 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.073222158 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.075321421 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.086981092 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.073656145 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.074694771 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.081774615 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.076187966 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.081530337 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083643436 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.081700245 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.073868915 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.075116307 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.082236169 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.082709307 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.074225232 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.074158692 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07475816 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.080746363 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.080534551 seconds)
  done (took 19.441623679 seconds)
done (took 38.542623505 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.195911656 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.148758993 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.161290617 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.116157644 seconds)
  done (took 2.009753718 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.113379987 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.102699079 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.092608326 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.070258449 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.098631136 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.070117885 seconds)
  done (took 1.891080947 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.274434213 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.191477523 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.176245839 seconds)
  done (took 1.979228784 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.199944246 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.186405961 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.427191287 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.263766689 seconds)
  done (took 2.513962405 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.140793354 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.089000041 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.071278602 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.087795993 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.128591549 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.156446413 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.099253725 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.124335301 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.08288316 seconds)
  done (took 2.364631138 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.146950273 seconds)
done (took 12.243567075 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.125258516 seconds)
    (2/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.095805465 seconds)
    (3/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.255796902 seconds)
    (4/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.203680663 seconds)
    (5/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.076950373 seconds)
    (6/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.241418777 seconds)
    (7/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.059056383 seconds)
    (8/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.07326084 seconds)
    (9/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.087236006 seconds)
    (10/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.095025786 seconds)
    (11/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.109402259 seconds)
    (12/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.07833252 seconds)
    (13/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.206698828 seconds)
    (14/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.07851947 seconds)
    (15/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.094306287 seconds)
    (16/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.080379445 seconds)
    (17/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.070107242 seconds)
    (18/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.081296619 seconds)
    (19/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.189146822 seconds)
    (20/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.121578456 seconds)
    (21/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.192605502 seconds)
    (22/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.080546856 seconds)
    (23/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.078719754 seconds)
    (24/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.420489301 seconds)
    (25/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.092023021 seconds)
    (26/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.082046347 seconds)
    (27/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.082200416 seconds)
    (28/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.079385364 seconds)
    (29/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.229314847 seconds)
    (30/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.113394313 seconds)
    (31/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.074396766 seconds)
    (32/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.159250566 seconds)
    (33/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.226066266 seconds)
    (34/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.203458953 seconds)
    (35/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.095485764 seconds)
    (36/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.097055542 seconds)
    (37/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.185891617 seconds)
    (38/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.180523567 seconds)
    (39/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.102015381 seconds)
    (40/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.077894335 seconds)
    (41/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.079178762 seconds)
    (42/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.176985711 seconds)
    (43/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.078721404 seconds)
    (44/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.070795001 seconds)
    (45/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.14432719 seconds)
    (46/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.093569626 seconds)
    (47/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.172774359 seconds)
    (48/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.091317515 seconds)
    (49/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.126435962 seconds)
    (50/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.079329415 seconds)
    (51/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.158245762 seconds)
    (52/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.069494813 seconds)
    (53/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.085391274 seconds)
    (54/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.177464546 seconds)
    (55/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.094527701 seconds)
    (56/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.078316605 seconds)
    (57/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.108018607 seconds)
    (58/309) benchmarking ("sort", Bool, false)...
    done (took 0.149676978 seconds)
    (59/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.1283313 seconds)
    (60/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.136888793 seconds)
    (61/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.102487436 seconds)
    (62/309) benchmarking ("sort", Int64, false)...
    done (took 0.072186452 seconds)
    (63/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.172423094 seconds)
    (64/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.171580682 seconds)
    (65/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.077557722 seconds)
    (66/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.082478899 seconds)
    (67/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.154939068 seconds)
    (68/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.098142271 seconds)
    (69/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.070412173 seconds)
    (70/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.078413342 seconds)
    (71/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.056857649 seconds)
    (72/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.142635906 seconds)
    (73/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.068747445 seconds)
    (74/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.05715581 seconds)
    (75/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.168264939 seconds)
    (76/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.078611115 seconds)
    (77/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.078647399 seconds)
    (78/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.080082159 seconds)
    (79/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.192410909 seconds)
    (80/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.19559829 seconds)
    (81/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.078006889 seconds)
    (82/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.260483448 seconds)
    (83/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.186033756 seconds)
    (84/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.111045134 seconds)
    (85/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.069725394 seconds)
    (86/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.071678439 seconds)
    (87/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.119480402 seconds)
    (88/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.081939357 seconds)
    (89/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.081387068 seconds)
    (90/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.070688384 seconds)
    (91/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.084142978 seconds)
    (92/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.091327938 seconds)
    (93/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.114380345 seconds)
    (94/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.215860151 seconds)
    (95/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.09242497 seconds)
    (96/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.0778908 seconds)
    (97/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.218369795 seconds)
    (98/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.192710684 seconds)
    (99/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.0947814 seconds)
    (100/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.072003704 seconds)
    (101/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.071505943 seconds)
    (102/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.116112015 seconds)
    (103/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.07835269 seconds)
    (104/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.09484426 seconds)
    (105/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.095964114 seconds)
    (106/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.057975383 seconds)
    (107/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.068408987 seconds)
    (108/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.070727691 seconds)
    (109/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.072024683 seconds)
    (110/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.081186099 seconds)
    (111/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.072603882 seconds)
    (112/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.076647048 seconds)
    (113/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.058393367 seconds)
    (114/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.074059976 seconds)
    (115/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.057456966 seconds)
    (116/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.070719038 seconds)
    (117/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.070528819 seconds)
    (118/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.195706422 seconds)
    (119/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.1095731 seconds)
    (120/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.057452269 seconds)
    (121/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.077709398 seconds)
    (122/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.181510872 seconds)
    (123/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.082711487 seconds)
    (124/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.07859557 seconds)
    (125/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.069078184 seconds)
    (126/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.071573981 seconds)
    (127/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.096436413 seconds)
    (128/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.108171754 seconds)
    (129/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.094565094 seconds)
    (130/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.079629985 seconds)
    (131/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.079521739 seconds)
    (132/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.182331414 seconds)
    (133/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.057333726 seconds)
    (134/309) benchmarking ("sort", Float32, false)...
    done (took 0.136163718 seconds)
    (135/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.074718287 seconds)
    (136/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.081449685 seconds)
    (137/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.080066981 seconds)
    (138/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.07263166 seconds)
    (139/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.072457484 seconds)
    (140/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.162304996 seconds)
    (141/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.078720896 seconds)
    (142/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.073522338 seconds)
    (143/309) benchmarking ("sort", BigInt, false)...
    done (took 0.194244474 seconds)
    (144/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.077309571 seconds)
    (145/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.069632771 seconds)
    (146/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.077735407 seconds)
    (147/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.152726766 seconds)
    (148/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.082475916 seconds)
    (149/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.070691189 seconds)
    (150/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.073283279 seconds)
    (151/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.107990842 seconds)
    (152/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.077717392 seconds)
    (153/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.069107601 seconds)
    (154/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.159259921 seconds)
    (155/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.077612531 seconds)
    (156/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.079132227 seconds)
    (157/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.144655038 seconds)
    (158/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.076051795 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.071472765 seconds)
    (160/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.07286063 seconds)
    (161/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.057201835 seconds)
    (162/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.069399316 seconds)
    (163/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.069032455 seconds)
    (164/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.118398415 seconds)
    (165/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.058555506 seconds)
    (166/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.078600957 seconds)
    (167/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.067973072 seconds)
    (168/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.069263959 seconds)
    (169/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.056814083 seconds)
    (170/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.083211194 seconds)
    (171/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.10069904 seconds)
    (172/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.154645039 seconds)
    (173/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.117791338 seconds)
    (174/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.191897832 seconds)
    (175/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.14795151 seconds)
    (176/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.057409402 seconds)
    (177/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.060141838 seconds)
    (178/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.124318451 seconds)
    (179/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.076541097 seconds)
    (180/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.15156451 seconds)
    (181/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.057629084 seconds)
    (182/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.068704737 seconds)
    (183/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.07618813 seconds)
    (184/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.116963808 seconds)
    (185/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.082782163 seconds)
    (186/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.13371724 seconds)
    (187/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.096685358 seconds)
    (188/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.084491817 seconds)
    (189/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.150916135 seconds)
    (190/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.145650274 seconds)
    (191/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.075002316 seconds)
    (192/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.057472434 seconds)
    (193/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.057226639 seconds)
    (194/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.092047542 seconds)
    (195/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.191096928 seconds)
    (196/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.069405503 seconds)
    (197/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.069145232 seconds)
    (198/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.068997049 seconds)
    (199/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.081711443 seconds)
    (200/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.177479625 seconds)
    (201/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.076032852 seconds)
    (202/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.056794866 seconds)
    (203/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.055921735 seconds)
    (204/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.056140337 seconds)
    (205/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.148949278 seconds)
    (206/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.069473075 seconds)
    (207/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.058132579 seconds)
    (208/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.056956013 seconds)
    (209/309) benchmarking ("sort", Int8, false)...
    done (took 0.145308867 seconds)
    (210/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.056373307 seconds)
    (211/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.115152219 seconds)
    (212/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.055888958 seconds)
    (213/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.070757659 seconds)
    (214/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.077129589 seconds)
    (215/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.089486764 seconds)
    (216/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.070167241 seconds)
    (217/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.07619928 seconds)
    (218/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.115553561 seconds)
    (219/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.055091323 seconds)
    (220/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.0692044 seconds)
    (221/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.05640769 seconds)
    (222/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.067373974 seconds)
    (223/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.092460892 seconds)
    (224/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.146705164 seconds)
    (225/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.074620862 seconds)
    (226/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.056287059 seconds)
    (227/309) benchmarking ("sort", Float64, false)...
    done (took 0.131776556 seconds)
    (228/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.1563312 seconds)
    (229/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.069270178 seconds)
    (230/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.077448738 seconds)
    (231/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.07656464 seconds)
    (232/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.120498299 seconds)
    (233/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.140484172 seconds)
    (234/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.056505632 seconds)
    (235/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.05615204 seconds)
    (236/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.07522454 seconds)
    (237/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.057455999 seconds)
    (238/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.055826691 seconds)
    (239/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.075415391 seconds)
    (240/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.071167632 seconds)
    (241/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.092882023 seconds)
    (242/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.056577462 seconds)
    (243/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.076839103 seconds)
    (244/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.098307577 seconds)
    (245/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.068505979 seconds)
    (246/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.056862511 seconds)
    (247/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.076582864 seconds)
    (248/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.056229749 seconds)
    (249/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.059109105 seconds)
    (250/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.055751395 seconds)
    (251/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.058647336 seconds)
    (252/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.07947221 seconds)
    (253/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.169598418 seconds)
    (254/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.129652761 seconds)
    (255/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.091694384 seconds)
    (256/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.069654607 seconds)
    (257/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.06671411 seconds)
    (258/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.055255993 seconds)
    (259/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.055678109 seconds)
    (260/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.056398149 seconds)
    (261/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.168680879 seconds)
    (262/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.077246953 seconds)
    (263/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.06848941 seconds)
    (264/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.080199621 seconds)
    (265/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.055553547 seconds)
    (266/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.076163516 seconds)
    (267/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.056810573 seconds)
    (268/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.079323668 seconds)
    (269/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.092475993 seconds)
    (270/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.068974682 seconds)
    (271/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.076591401 seconds)
    (272/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.07626903 seconds)
    (273/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.056300733 seconds)
    (274/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.069100054 seconds)
    (275/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.09221778 seconds)
    (276/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.055423114 seconds)
    (277/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.074885401 seconds)
    (278/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.127531173 seconds)
    (279/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.069366815 seconds)
    (280/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.07959024 seconds)
    (281/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.075552567 seconds)
    (282/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.116662703 seconds)
    (283/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.067921925 seconds)
    (284/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.068455 seconds)
    (285/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.069326469 seconds)
    (286/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.056953879 seconds)
    (287/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.055218474 seconds)
    (288/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.072300584 seconds)
    (289/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.056279237 seconds)
    (290/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.055631491 seconds)
    (291/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.109121249 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.075767598 seconds)
    (293/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.089116187 seconds)
    (294/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.068890173 seconds)
    (295/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.06878567 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.075156714 seconds)
    (297/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.075207441 seconds)
    (298/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.108301561 seconds)
    (299/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.108468281 seconds)
    (300/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.05577649 seconds)
    (301/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.081399488 seconds)
    (302/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.107877428 seconds)
    (303/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.057775211 seconds)
    (304/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.088031264 seconds)
    (305/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.068534103 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.346540192 seconds)
    (307/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.064025722 seconds)
    (308/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.060581387 seconds)
    (309/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.096146001 seconds)
  done (took 32.154828009 seconds)
done (took 33.505914881 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.089949381 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.101151528 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.084350096 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.102048595 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.090756656 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.087067663 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.08354719 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.088402413 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.090862358 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.092267586 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.089043914 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.065310207 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.085265816 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.0853938 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.085230818 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.100931775 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.090027614 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.083985651 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.083011234 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.073517599 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.083076207 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.075002085 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.076616133 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.064610614 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.088057858 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.081257832 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.083553481 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.083313682 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.07466328 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.074792057 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.078748891 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.083118975 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.074014368 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.088342245 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.082220985 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.082077547 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.083476892 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.086238019 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.07505406 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.073630586 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.083678069 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.073875257 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.081435831 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.082193837 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.080765108 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.079446066 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.081574905 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.084678967 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.097556937 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.075142487 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.083501164 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.083700112 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.084619316 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.080387236 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.077438278 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.080821683 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.078461125 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.097507836 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.080963951 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.075144052 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.082198434 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.080882645 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.078255909 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.080671088 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.080401752 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.083050675 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.084251473 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.078406727 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.082674578 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.07913126 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.072309618 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.080384146 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.076900258 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.072184517 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.083380231 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.087320993 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.070833085 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.078368005 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.080498834 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.080158007 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.070996234 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.074401868 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.073353684 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.079040428 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.074019406 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.061651754 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.076037971 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.079138896 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.070599266 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.079986815 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.079175276 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.079896198 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.07325057 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.083810369 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.071380378 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.077464544 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.071613801 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.072267128 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.073312421 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.076180997 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.071564251 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.074376313 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.082703145 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.073218644 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.078152642 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.084762209 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.071216164 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.078903614 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.070187953 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.070307801 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.084832714 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.081799842 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.071493366 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073464714 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.070125855 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.078497854 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.070831584 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.070985822 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.070769136 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.070899125 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.077661448 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.071385978 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.073979299 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.078789236 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.224006127 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.072930983 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.077361142 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.074663765 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.072202437 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.079160546 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.072025016 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.072061572 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.073659847 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.069523678 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.074328066 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.073056441 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.079443032 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.074167179 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.079652734 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.072802725 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.08052585 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.077133947 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.07846542 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.078025995 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.071195454 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.066878027 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.07389815 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.074230395 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.074336272 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.072072901 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.073179071 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.072272568 seconds)
done (took 13.599134601 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.072279919 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.137205469 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.09764829 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.099847698 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.089627857 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.073223484 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.080543973 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.100244411 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.073940254 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.102846981 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.093244699 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.091439395 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.113796481 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.070656091 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.071932434 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.076721563 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.073758035 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.085695055 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.100522397 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.092361462 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.116373622 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.07133164 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.095849208 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.093417107 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.090718566 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.097113643 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.073144399 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.076584193 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.076569533 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.104681218 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.094423686 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.07633578 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.072635545 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.099902009 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.098546697 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.086856624 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.072213644 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.086808434 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.072529303 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.071422732 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.073064098 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.100129254 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.084262491 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.08447331 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.075756402 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.082138007 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.073012996 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.086181722 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.092583415 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.082755564 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.088832562 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.10201072 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.074037329 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.08747464 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.070394189 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.088541488 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.080397211 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.074364503 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.072179775 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.079285925 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.071805123 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.07539038 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.084370023 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.083647892 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.075276284 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.087587188 seconds)
  done (took 7.106461278 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.089333634 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.099068195 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.088536406 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.091221771 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.071563753 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.072859317 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.072210566 seconds)
  done (took 2.076370026 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.073468571 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.091728367 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.093102666 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.093420223 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.085553852 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.096394898 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.081461751 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.072416506 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.09760407 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.0735577 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.092112351 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.102150916 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.075525818 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.085887098 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.094867592 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.072226439 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.095377153 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.072435864 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.074814015 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.094198125 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.078197121 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.10241518 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.079969971 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.073299071 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.085473704 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.072526133 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.117879929 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.076046561 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.074587541 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.075255011 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.07374859 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.111067933 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.084878133 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.079715155 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.072972447 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.087673651 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.086536186 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.075550771 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.083145545 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.081094057 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.085110482 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.072931765 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.073244387 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.073805308 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.076353648 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.082105744 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.073660717 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.076931356 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.075351577 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.091211292 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.071845068 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.085407103 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.075013045 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.077882988 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.074425908 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.078757557 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.082876826 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.073777341 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.091220763 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.074226788 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.088133488 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.087291068 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.085562965 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.087059051 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.074935212 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.085103162 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.085741765 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.07521677 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.074685763 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.076508809 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087433434 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.071464379 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.07425437 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.082077407 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.074797463 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.094410428 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.094106738 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073993708 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.086045365 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.073161958 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.073424154 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.073166177 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.09432537 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.077768237 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.072708766 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.076573262 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07630946 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.075588648 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.071553359 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.07665123 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.070413427 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.078913284 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.075175158 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.075605883 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075496052 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.087025639 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.075344964 seconds)
  done (took 9.371502165 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.07532432 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.073671977 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.075219259 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.073948589 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.073224665 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.073936784 seconds)
  done (took 1.964218575 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.095443081 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.074402495 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.085132686 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.076835274 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.108338863 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.091214365 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.091152874 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.081503366 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.087929444 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.083784581 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.090849289 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.092302677 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.096303077 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.07757912 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.09103236 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.076618473 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.09167956 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.079424294 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.083160912 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077862659 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.090676718 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.077395935 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077511145 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.085555995 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.080651802 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.076607406 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.083461459 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.083856767 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.083043828 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.082047504 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.076945294 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.0801097 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.075489392 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.081869366 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.090812751 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.076310686 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076775643 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.081725918 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.076788535 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.083275791 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.091854058 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077315472 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.078948201 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.082152533 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.081959114 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.075834248 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.081823703 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.083860171 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.091269988 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.081782447 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.08161851 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.076302891 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.080293 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.081823696 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.075651626 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.081613107 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.08207134 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.091892962 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.077384007 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.075960729 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.074483946 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.081199647 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.081766498 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.081123146 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.082235531 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.082079581 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.075458757 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077206997 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077264647 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.07639406 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.082070205 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.074579421 seconds)
  done (took 7.420636331 seconds)
done (took 29.418435691 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.540923758 seconds)
  done (took 2.012356779 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.608380448 seconds)
  done (took 2.111232334 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.515855832 seconds)
  done (took 8.017002889 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.370987039 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.473052938 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.712883405 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.138872192 seconds)
  done (took 3.228282489 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.723344717 seconds)
  done (took 2.231002365 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.239739586 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.229810892 seconds)
  done (took 1.983914504 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.380812002 seconds)
  done (took 1.882635858 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.123854387 seconds)
  done (took 2.627459855 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.242469628 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.181367497 seconds)
  done (took 1.933270279 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.445539199 seconds)
  done (took 1.953559708 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.877713756 seconds)
  done (took 6.388103885 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.230671875 seconds)
  done (took 1.776795829 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.2412366 seconds)
  done (took 1.748902507 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.755448093 seconds)
  done (took 3.264892472 seconds)
done (took 42.67449083 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.088335756 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.090987292 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.091410371 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.086884244 seconds)
  done (took 1.846605197 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.082114979 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.078579192 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.08083539 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.077985312 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.0821119 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.078014389 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.080039438 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.081204966 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.077502324 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.078226382 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.077891805 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.077611918 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.080157175 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.079325168 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.076838393 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.080330038 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.081116882 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.077654823 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.080583096 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.078309146 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.076332679 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.079906743 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.080093471 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.076870296 seconds)
  done (took 3.410369017 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.083850243 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.078971806 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.080305071 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.077409632 seconds)
  done (took 1.837447459 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.083737291 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.094764605 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.092797871 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.084560666 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.095152608 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.090489861 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.07398834 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.074155565 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.075374788 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.083420663 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.073694634 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.099264328 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.092621163 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.083888041 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.085738909 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.070669138 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.072417627 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.091415058 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.084170328 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.084202449 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.075854923 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.083874782 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.073836187 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.093605629 seconds)
  done (took 3.526372732 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.089758675 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.105339554 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.085343105 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.095338134 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.097035384 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.070528826 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.091869849 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.097167718 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.131006565 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.070995101 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.076694661 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.070689998 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.079787872 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.071230288 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.085185816 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.115294071 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.116609147 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.074346756 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.102359042 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.071215903 seconds)
  done (took 3.321656208 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.077553945 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.074494867 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.075108349 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.070520613 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.08255587 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.077674639 seconds)
  done (took 1.9817202 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.073129466 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.073309181 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.07309802 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.071996121 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.077003498 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.072294238 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.071852376 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.073112425 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.073936187 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.072642313 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.072215369 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.071204141 seconds)
  done (took 2.395063222 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.185933366 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.074449081 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.074291638 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.071753326 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.076119221 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.071747404 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.086303875 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.072798957 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.0966506 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.072158683 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.072011872 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.074468668 seconds)
  done (took 2.551132908 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196556281 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080655329 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226734809 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152430811 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11023543 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114829145 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114176215 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113770394 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.138025299 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101561146 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162361179 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162098489 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109111447 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138008267 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.093339843 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.106784062 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151366513 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16419296 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108662945 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162963571 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14303858 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128888383 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145634673 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104191219 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10776879 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120555946 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.077046084 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083952164 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165241567 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132274214 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142302941 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113891384 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09894359 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173565894 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163916532 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139386131 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149962715 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087858167 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.105745466 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.13338708 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192277962 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.092663382 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.301657055 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11494334 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.085006376 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133888565 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120031317 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.121377116 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.106005579 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094015093 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143529239 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176159807 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.133339029 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.09029481 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124825549 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112574384 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.11319452 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115197163 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172555247 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156432901 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129260845 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.076794752 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113809966 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148201927 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132250265 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.109457175 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.123872133 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096563581 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132883028 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151400945 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122605189 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140047935 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.117168702 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092123166 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122030141 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137549057 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126938412 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158342637 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125488354 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.078314214 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122587408 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101899808 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085278022 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.147967364 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080426314 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172782185 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102977261 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.108962591 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12536146 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110193356 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110203733 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152778444 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.284525561 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107411661 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.073422311 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109921325 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.120598387 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143166919 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091640463 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110362099 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117995738 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.082389058 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132614637 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.080907788 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124015878 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.082797046 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125351511 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130468631 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.082356242 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123188352 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107616468 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.105012707 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130593478 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156517808 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091893671 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085404612 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161846367 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122582313 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.10440277 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140658823 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153978231 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.105383951 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101082117 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144412984 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166651545 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.093096787 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159628921 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106309772 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.087319431 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.091896441 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123627251 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11219849 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.124686417 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086435764 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.118534189 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162345156 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.08013281 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099317863 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135325894 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082720053 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084629481 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107238985 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105082851 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.0988648 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.100847555 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.103574008 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134195948 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.27097654 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111706419 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125362897 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101769364 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162330983 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091392006 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.106604247 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106719741 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.075659297 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.130479151 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151949468 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083245007 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156126108 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.122371585 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117268268 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121098245 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087662385 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137239186 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083354156 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.075417781 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139793632 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.113153542 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111186782 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.146899673 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116937871 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.12434578 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.118948501 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130275991 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129384489 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.129456448 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109167183 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.092795832 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114321554 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127361328 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.078472257 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.092608176 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.084004362 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10761178 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097307321 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087598336 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140016298 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122654096 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11375078 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113935842 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099938777 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145294592 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.080745212 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126376088 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.120329731 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098212742 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.147520678 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147646349 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131830877 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101420994 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.279863178 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.075983604 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079734666 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.090622884 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12416618 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087825409 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.087559807 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115113538 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14386782 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127368619 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134088777 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124389393 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119869011 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151222389 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.075808745 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.121376551 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141499078 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121595899 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.10675956 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09447773 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.102263687 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139967021 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106951172 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172001146 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115419652 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126464233 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152967571 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.10578827 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084043639 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105081668 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131454533 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104225053 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139428766 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101582196 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092026856 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110201315 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.083180646 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099953045 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126315755 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118190712 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134205507 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.115280873 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133312167 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082488011 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115885608 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123209227 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120434276 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.0695974 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117920681 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152938063 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098032552 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117570336 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.294995444 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083599521 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.137620808 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167043151 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14224392 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.088448115 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108190694 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121097794 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126017115 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119368589 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136248866 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10606559 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136815582 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112908486 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.089190691 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090828571 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09941032 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107098858 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.098178335 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.10369242 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.114521451 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.099030557 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130341876 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105561825 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112152109 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119110763 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.102771048 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.096578396 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099906118 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170003164 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118896593 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165296243 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.104220407 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.139162869 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157613372 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079446098 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083417533 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.082671334 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136627073 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088604082 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130421223 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.112607489 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117630824 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12389805 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138088847 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099383087 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.074031037 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110887412 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131013104 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124920813 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100923873 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.103373406 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156229271 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.100936301 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082369245 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.258678439 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11864988 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106760135 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163870854 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.06859072 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108798707 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081992843 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083742721 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125600749 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147635321 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.084554341 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.102920595 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121618774 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11393966 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.124725549 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100777665 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113736625 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125182115 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1445452 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127486262 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.09309784 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111766235 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125703603 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15078575 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104705957 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.101017979 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168239525 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14843621 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.155029116 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.089463947 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115585034 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115695362 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110755287 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136480522 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087643001 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157418978 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085893571 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135108824 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104041619 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091528971 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128233873 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.113101711 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092061391 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143017881 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118004777 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086048949 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081422217 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11644506 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118698818 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10484962 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.07860772 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.282851645 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.079400454 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133431123 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156116666 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084740163 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107358463 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098964647 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084096851 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106408706 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104236946 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090545562 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.10323834 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165057872 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.089286089 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143938481 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132443923 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113393158 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132990873 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10548478 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.643470483 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.082262066 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147651588 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116161585 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165760996 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102222474 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118856801 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111631809 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121227429 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140847951 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103454636 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.180462892 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130558024 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.11732979 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083290642 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104549051 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106004637 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.090917459 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109917922 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115169138 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116024475 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.095787286 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.117310958 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123473058 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.08659808 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099558988 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152091125 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116607434 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141051976 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136350971 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087698013 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117946153 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134406268 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231222448 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.118972815 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147594115 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107578836 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102502683 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.085851493 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.101170656 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154840563 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.078260526 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153470931 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123707922 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127825912 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11536174 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.109890865 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130509539 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105927246 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121911131 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095022904 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.109560978 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115104205 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085304952 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.081201184 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107005718 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111978706 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.101991691 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098463491 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.10292191 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148113437 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.077208511 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101220675 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117018512 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140611057 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167172039 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.092422177 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.087368095 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120136259 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117087233 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.113619001 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122414546 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.083343737 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085917424 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.083364385 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.08697519 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.109474722 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11526395 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115741275 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111865587 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157810581 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.087655347 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.228218002 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098027077 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106724625 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.074880122 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.081759325 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098568098 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098365695 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.253771734 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114750931 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155378877 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.099091654 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.093328411 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093808099 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.079789965 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087340882 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.125919839 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109132361 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118775672 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102920904 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.068789335 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107210479 seconds)
  done (took 59.35741443 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.112726057 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.087938594 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.101979842 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.148991412 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.126610114 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.204914951 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.160724135 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.193379661 seconds)
  done (took 2.761515347 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.074173134 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.098988159 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.108218425 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.088335308 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.071704944 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.074314712 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.225766148 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.086867089 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.071590608 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.098099042 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.082593304 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.074425234 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.409904638 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.071656136 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.07296136 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.067622772 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.072437417 seconds)
  done (took 3.462400271 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.389160071 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.621096848 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.345742956 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.082715172 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.933219372 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.096924477 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.296507037 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.140614897 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.084201866 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.55882381 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.411559337 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.133730953 seconds)
  done (took 18.718753992 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.086980014 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.080081013 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.093483201 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.093028407 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.082712585 seconds)
  done (took 2.058006528 seconds)
done (took 108.771171273 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.087979392 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.41736957 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.059917173 seconds)
  done (took 2.122961697 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.092260164 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.089537593 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.089531673 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.087116319 seconds)
  done (took 1.991366347 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.080338258 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.082154836 seconds)
  done (took 1.785418288 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.228414494 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.17016318 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.09985409 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.088184341 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.084324174 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.084732232 seconds)
  done (took 1.88605339 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.077492717 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.079767841 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.077130812 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.080405274 seconds)
  done (took 1.937326371 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.081240839 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.057850839 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.059811277 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.062576489 seconds)
  done (took 1.88739515 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.091878024 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.087321263 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.083577733 seconds)
  done (took 1.884126437 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.104299358 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.091362138 seconds)
  done (took 1.821109854 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.086548621 seconds)
  done (took 1.710644673 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.09743056 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.102617904 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.13591778 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.117941219 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.141066745 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.117312361 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.089388406 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.089774691 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.083968064 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.090520207 seconds)
  done (took 2.687459221 seconds)
done (took 21.920330398 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.084436928 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.37683263 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.364671358 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.093060908 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.674217606 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.36186534 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.988032901 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.096802951 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.14412489 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.073012098 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.09006382 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.653151539 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.978732755 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.335619796 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.966514735 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.335026683 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.659055135 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.074266632 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.073498222 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.073563679 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.974504843 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.073135019 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.073442826 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.074420678 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.654874626 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.377754692 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.073822091 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.335683149 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.073272517 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.075258245 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.37736893 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.074032741 seconds)
  done (took 16.334768689 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.075782533 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.123433266 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.077235227 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.089133765 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.074958472 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.074694509 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.077149861 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.073944039 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.125276905 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.073713382 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.09048836 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.073905878 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.077453301 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.074873857 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.092635113 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.073901812 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.07473671 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.074372613 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.076238701 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.074599723 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.092023394 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.073505876 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.074301961 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.074315576 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.074246997 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.085818199 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.074510121 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.074253019 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.074947285 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.076145986 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.076991324 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.074780624 seconds)
  done (took 4.210673588 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.122158889 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.127440551 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.078655654 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.109117181 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.11754305 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.076290747 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.148477479 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09846807 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.132109331 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.073555558 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.091037101 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.073999814 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.106133825 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.074995149 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.093480275 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.074490947 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.074889461 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.07453156 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.0738682 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.074684338 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.092887847 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.073683414 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.07407875 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.074436406 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.07455342 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.087398666 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.074122009 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.074220723 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.074237998 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.075875499 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.077599588 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.074277849 seconds)
  done (took 4.461745465 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.077615463 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.079617602 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.086932158 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.08812622 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.074089722 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.076809878 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.079136002 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.074956769 seconds)
  done (took 2.279439275 seconds)
done (took 28.916792551 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.085114115 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.074136796 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.078732459 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.093639577 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.079492869 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.082878022 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.071956233 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.081402757 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.078275679 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.078981101 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.079601808 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.072539653 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.077065053 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.072066075 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.079688494 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.073334538 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.083940459 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.077568343 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.083256616 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.084015293 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.075550872 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.078620622 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.080742479 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.083681651 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.083065571 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.083426385 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.081999271 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.077900881 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.073471751 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.075905012 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.081568114 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.089125892 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.073248386 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.083429678 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.072736722 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.072777526 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.076857797 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.072970587 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.083259013 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.081202963 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.074607013 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.081591554 seconds)
  done (took 4.937899474 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.093847966 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.096982185 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.090335773 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.067101289 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.073615714 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.071562283 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.094574055 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.066063984 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.066566592 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.09353518 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.063370848 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.065560193 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.069095407 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.060659759 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.066239477 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.063841027 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.067454938 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.06151492 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.066121357 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.065918206 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.094449009 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.060550883 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.082001908 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.068944878 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.06280791 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.068028815 seconds)
  done (took 3.549308331 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.080060412 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.087821052 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.095249843 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.146722616 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.114932173 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.082559079 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.08348006 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.09728261 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.098942655 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.072182772 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.076263149 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.098408451 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.092539956 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.079252351 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.072625467 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.089591692 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.090656412 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.07436245 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.078162696 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.097230257 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.091017357 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.090627517 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.096724481 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.089221068 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.07199587 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.075415164 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.076949724 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.086525782 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.075770046 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.082282899 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.07619597 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.076492632 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.074826547 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.084427918 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.075604891 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.074510115 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.098843749 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.082605491 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.083925843 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.073334737 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.08071344 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.074038726 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.096500584 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.128530511 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.072141691 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.078424803 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.076496293 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.082547282 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.0721304 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.099615332 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.083795422 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.072734783 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.0758314 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.072101712 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.07231386 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.075137534 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.074849475 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.074842274 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.081504177 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.078366412 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.096552635 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.077931403 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.088878042 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.072707159 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.081198729 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.072105249 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.073313285 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.071684503 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.09733726 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.07440884 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.11224063 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.073279193 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.073885207 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.081935191 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.081236257 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.079497011 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.072766733 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.088270839 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.084182214 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.076459192 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.081221303 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.075907864 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.07601144 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.100891708 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.075272679 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.07454021 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.073672073 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.077730904 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.0753802 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.073705851 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.086071205 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.072423156 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.075640795 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.089185624 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.073158869 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.074013518 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.078242139 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.076975096 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.072533725 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.084046874 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.077330867 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.073595327 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.082745242 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.073265124 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.075490891 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.084939871 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.079400161 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.071762315 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.076431642 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.077373908 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.073703742 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.07401472 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.07481216 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.074596202 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.080794004 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.080154038 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.076916052 seconds)
  done (took 11.225155316 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.166740141 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.154710992 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.075771419 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.148638246 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.08149558 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.082893227 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.14996683 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.097660634 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.073463505 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.07364745 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.073241925 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.113607428 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.107611116 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.118268214 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.083217644 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.072811764 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.094844076 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.116226666 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.151434323 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.147658112 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.095692715 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.081166518 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.075358671 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.074494396 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.075269961 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.082414534 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.089605064 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.082085394 seconds)
  done (took 4.522141288 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.085058552 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.107134677 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.079931463 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.095955045 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.09360603 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.073215715 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.07506074 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.074858978 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.090032907 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.082092829 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.07302638 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.07710173 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.079049663 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.075778614 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.07351045 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.079815255 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.078933863 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.07375894 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.07636119 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.077933929 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.083307815 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.095887223 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.07609968 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.074317162 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.077655251 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.072231212 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.067488058 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.087813794 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.073473697 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.097762879 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.070504136 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.077560325 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.086829312 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.074049352 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.072847706 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.072640862 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.073010784 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.072917312 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.074738898 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.071287117 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.07163069 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.063530454 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.072859774 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.082583012 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.085746301 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.062109544 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.077140002 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.079262062 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.078298161 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.070698526 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.075825524 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.076179208 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.075959723 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.080167931 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.07714738 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.077975527 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.074669295 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.081536309 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.081319191 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.073496783 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.070261524 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.0714012 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.078013104 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.069519056 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.087754215 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.077946164 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.072054728 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.072930766 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.07483706 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.086227938 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.072679256 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.077957723 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.070729405 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.075466796 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.077518218 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.074858336 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.074027986 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.071434536 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.072685277 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.073412357 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.061285874 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.072826264 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.058833715 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.075665661 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.071126357 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.071936043 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.072823444 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.077269129 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.083361152 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.074029803 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.079167746 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.074335243 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.072263105 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.076013035 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.065652985 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.075916655 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.083164456 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.086081154 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.073113329 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.070793811 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.085847368 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.077414724 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.072305206 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.063037096 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.077363103 seconds)
  done (took 9.714017599 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.095793543 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.074774556 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.087509141 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.094056656 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.090995301 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.080141232 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.083582688 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.074325826 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.089794962 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.079306452 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.082668302 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.073800039 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.083683033 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.082570559 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.07500177 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.083204624 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.076857707 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.087644549 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.087435072 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.073249712 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.081959461 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.085297036 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.094413749 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.086029498 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.08398191 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.086243759 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.093927404 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.082420958 seconds)
  done (took 4.036515008 seconds)
done (took 39.62198321 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.74969137 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.890309868 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.718235406 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.044481122 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.94280848 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.728513977 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.930784402 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.71369984 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.931894768 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.748096121 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.040373098 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.820040355 seconds)
done (took 65.033790148 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.77201024 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.848582286 seconds)
    (2/2) benchmarking "String"...
    done (took 1.942508869 seconds)
  done (took 5.428429241 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.961182649 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.288119061 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.952916398 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.709605622 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.713063294 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.105083886 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.503018586 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.218283224 seconds)
  done (took 30.127060506 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.852137469 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.939092768 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.409111953 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.441885489 seconds)
  done (took 15.327237158 seconds)
done (took 62.343161603 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.704822851 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.743589869 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.746755723 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.693946733 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.770039741 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.722735285 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.172631232 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.747999757 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.709123056 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.697503558 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.710472172 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.138714022 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.707714341 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.349027138 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.70675928 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.711870977 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.762071441 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.34347528 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.854295569 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.712594442 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.702755748 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.766191917 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.696263912 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.70721752 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.709520363 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.696895065 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.092583795 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.708577378 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.318210965 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.698498798 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.725208865 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.702683684 seconds)
  done (took 201.870142639 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.698868819 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.525790737 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.594945235 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.728393537 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.026277459 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.875543191 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.80403446 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.120437986 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.69879765 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.712095949 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.887572908 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.692176936 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.877839797 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.681256825 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.719041573 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.777967752 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.862699801 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.915717124 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.722364066 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.844774056 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.705768226 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.688106809 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.640165674 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.886502551 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.719152869 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.71143735 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.705734821 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.869839134 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.882348769 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.83380453 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.698825102 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.691326486 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.910545458 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.562779179 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.698759394 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.71153974 seconds)
  done (took 166.309322582 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.875101135 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.690244995 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.68946292 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.689556506 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.689702412 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.701630876 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.690338759 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.810935934 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.8172693 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.313762035 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.380093957 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.74168552 seconds)
    (12/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.689770918 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.494460216 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.689229638 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.758134399 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.701708698 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.690386176 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.703941138 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.717392387 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.689222832 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.691681338 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.813973644 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.701741469 seconds)
    (24/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.691001465 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.696400519 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.689812618 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.694943796 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.060612667 seconds)
    (29/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.689666723 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.722959954 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.685942944 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.694191623 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.75590742 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.943757557 seconds)
    (35/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.68886374 seconds)
    (36/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.687093274 seconds)
    (37/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.529511502 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.768601703 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.689030865 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.692543021 seconds)
    (41/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.688363269 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.906074527 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.687617121 seconds)
    (44/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.688043348 seconds)
    (45/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.690351279 seconds)
    (46/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.690596401 seconds)
    (47/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.822117687 seconds)
    (48/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.686919948 seconds)
    (49/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.808265724 seconds)
    (50/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.68893528 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.175873547 seconds)
    (52/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.68675283 seconds)
    (53/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.687886711 seconds)
    (54/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.402897021 seconds)
    (55/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.273402432 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.68585506 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.689978869 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.687829376 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.685015892 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.692284837 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.436016345 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.76119142 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.686753742 seconds)
    (64/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.685536949 seconds)
    (65/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.689349466 seconds)
    (66/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.692000308 seconds)
    (67/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.68632977 seconds)
    (68/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.721135608 seconds)
    (69/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.689096917 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.950933851 seconds)
    (71/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.743218357 seconds)
    (72/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.915809975 seconds)
    (73/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.807562797 seconds)
    (74/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.687373651 seconds)
    (75/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.752094155 seconds)
    (76/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.781195236 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.685222808 seconds)
    (78/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.684872049 seconds)
    (79/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.686900712 seconds)
    (80/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.684549289 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.765282227 seconds)
    (82/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.687014918 seconds)
    (83/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.816865818 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.696087852 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.689380833 seconds)
    (86/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.685517423 seconds)
    (87/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.736277937 seconds)
    (88/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.754747467 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.687455446 seconds)
    (90/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.541172593 seconds)
    (91/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.690473776 seconds)
    (92/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.68606804 seconds)
    (93/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.957739557 seconds)
    (94/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.750936034 seconds)
    (95/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.686247995 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.686200428 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.816394843 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.809146179 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.413787794 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.687702552 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.571835086 seconds)
    (102/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.6891502 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.834084583 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.688084851 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.819533579 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.687075369 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.768528683 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.69169363 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.687731567 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.71928386 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.687370231 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.743524586 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.690090699 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.063094686 seconds)
  done (took 392.614633922 seconds)
done (took 764.366213041 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.281845654 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.248494156 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.343344167 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.263231855 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.245979131 seconds)
  done (took 13.000187393 seconds)
done (took 14.617873214 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.771946544 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.776731662 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.708480195 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.77479974 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.704095396 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.77568874 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.755912221 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.708419294 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.741492605 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.707963609 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.741335052 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.709259555 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.697615462 seconds)
  done (took 24.190365269 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.92474561 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.931916203 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.756666975 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.930232341 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.731782018 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.925713413 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.85531199 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.837125231 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.844916329 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.702797413 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.700275578 seconds)
  done (took 21.759534 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.929043002 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.929070095 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.766126601 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.93085968 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.73729455 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.921884415 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.85929169 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.84275951 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.841808415 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.703219622 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.699268684 seconds)
  done (took 21.778404407 seconds)
done (took 69.344887172 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.696334778 seconds)
  done (took 3.31457642 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.721681707 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.889173456 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.700083312 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.698201841 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.695868622 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.696286461 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.698740219 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.697395999 seconds)
  done (took 15.417153685 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.69431962 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.692116159 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.693768248 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.692581479 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.692973932 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.691512389 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.694597664 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.6937736 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.693066791 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.695707575 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.695952905 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.695240012 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.692694006 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.696171407 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.695232744 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.695101076 seconds)
  done (took 28.723735768 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.695583783 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.692927093 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.693140001 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.693296784 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.693138894 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.692999128 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.694451137 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.694003299 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.693956731 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.693888712 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.695094294 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.693777264 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.69316642 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.695337667 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.694795613 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.693942633 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.694510973 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.694736119 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.69752857 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.693910914 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.694216779 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.693769809 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.693417919 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.693929901 seconds)
  done (took 42.28342305 seconds)
done (took 91.357809762 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.437141444 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.42720308 seconds)
  done (took 9.484194899 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.696358625 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.695929445 seconds)
  done (took 5.015865397 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.697042213 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.695731598 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.696708981 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.696051997 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.696342646 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.696687291 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.695676638 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.69614605 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.697691676 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.697124821 seconds)
  done (took 18.585241566 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.697122772 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.6960505 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.69369647 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.699458835 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.696898853 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.69409771 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.696400752 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.700481752 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.696461603 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.694133614 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.696709822 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.694113569 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.697433598 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.694028105 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.697576198 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.69519101 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.694898705 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.694372323 seconds)
  done (took 32.149750648 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.698592749 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.697873588 seconds)
  done (took 5.017240545 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.69420654 seconds)
    (2/7) benchmarking "second"...
    done (took 1.69417176 seconds)
    (3/7) benchmarking "month"...
    done (took 1.696082352 seconds)
    (4/7) benchmarking "year"...
    done (took 1.69774847 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.695646182 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.696040309 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.694818534 seconds)
  done (took 13.49155281 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.698939081 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.843962314 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.904455849 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.357370224 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.700220138 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.70280028 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.64695513 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.700673803 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.703834416 seconds)
  done (took 18.879786353 seconds)
done (took 104.243202654 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.531653007 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.693431279 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.926589412 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.742621381 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.714267608 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.0373351 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.710378375 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.976303026 seconds)
done (took 41.953542313 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.777943226 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.408899515 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.450002507 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.72021632 seconds)
  done (took 15.201256369 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.683871236 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.115305424 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.707778807 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.598225327 seconds)
  done (took 21.945566584 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.069561224 seconds)
    (2/2) benchmarking "read"...
    done (took 2.050957158 seconds)
  done (took 5.753395277 seconds)
done (took 51.301684796 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.70489007 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.704089461 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.702439123 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.705510447 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.701823279 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.705604871 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.702103619 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.703166899 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.705822004 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.705211188 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.705196437 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.704768315 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.706206446 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.703148747 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.701912464 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.705731145 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.706931759 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.703020629 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.707319008 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.702699792 seconds)
    (21/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.705814331 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.70538389 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.702611339 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.703398911 seconds)
  done (took 42.534022065 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.705675179 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.704159876 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.705163271 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.706707429 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.703362067 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.706439141 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.705543657 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.704106049 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.705955867 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.709760802 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.703702089 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.705160221 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.706082151 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.704097798 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.706763732 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.704490912 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.706435018 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.70515067 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.70746809 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.705993358 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.706641805 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.704609906 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.705471196 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.707274806 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.704981321 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.70464866 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.709569489 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.705469394 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.706922016 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.703971807 seconds)
  done (took 52.801740925 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.711080906 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.713388734 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.706012787 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.707574642 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.707540971 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.707155389 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.706862671 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.709218767 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.707714126 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.709204107 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.707400964 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.707610955 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.707989036 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.709957131 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.707190597 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.708479107 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.707838213 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.707695345 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.707911245 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.70702365 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.708416652 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.708075148 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.708553913 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.707936076 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.708414201 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.70830035 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.70854499 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.709242927 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.708273295 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.708873805 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.708802138 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.709141934 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.708087417 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.709380913 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.708931211 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.709024819 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.712108912 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.715307296 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.709263544 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.70939004 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.709660528 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.708391418 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.708545151 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.708893368 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.710238076 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.708664194 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.709274625 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.709151299 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.711004291 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.709597489 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.708983433 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.709562719 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.709077906 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.709822009 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.710140115 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.709406544 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.710771069 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.710145439 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.709984383 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.710111433 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.710184269 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.709140904 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.710647376 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.710389819 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.710822218 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.710063989 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.71166166 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.710158117 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.71052877 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.709974198 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.710623481 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.71048263 seconds)
  done (took 124.697037545 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.710817806 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.708197955 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.708206772 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.708797662 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.707636466 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.709837434 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.708375941 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.711331051 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.708821439 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.711357472 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.711305892 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.7090642 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.70881191 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.711333396 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.710958035 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.707752785 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.71076491 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.708178089 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.711023744 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.71141321 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.711359237 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.709594026 seconds)
  done (took 39.248140962 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.711480678 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.712514285 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.70855715 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.711726845 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.709092618 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.71203851 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.712303784 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.711795399 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.711587451 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.709028145 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.709420914 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.711323051 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.710236648 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.71059231 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.710576702 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.708921902 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.711732276 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.710592565 seconds)
  done (took 32.42768212 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.711755146 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.710539612 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.712360647 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.710124673 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.710291339 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.711839652 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.712506621 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.711698428 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.712481768 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.709645445 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.713194823 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.713425694 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.713294313 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.709589229 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.712479015 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.709935865 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.712771511 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.710587221 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.712481031 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.71020212 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.711284354 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.713592504 seconds)
  done (took 39.291766072 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.71449701 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.711964247 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.710596036 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.710924019 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.709796362 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.713163761 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.714858526 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.710552364 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.713812999 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.713362106 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.710993574 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.713194008 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.710931052 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.711870757 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.711388132 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.710501093 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.715750209 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.712208368 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.714925571 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.711809803 seconds)
  done (took 35.882776319 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.715948391 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.715856439 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.716127693 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.715591647 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.715719617 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.716879678 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.715194449 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.71476327 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.71773062 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.716227664 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.715617013 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.716026447 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.717449099 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.716193268 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.718792264 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.716888056 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.717044824 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.71632796 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.717027554 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.717538757 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.718007269 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.716209012 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.717622707 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.717157508 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.716098892 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.717113284 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.716885852 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.716433748 seconds)
  done (took 49.701844126 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.71521515 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.71810218 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.712512254 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.713548865 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.713281767 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.713538241 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.712927425 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.712742638 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.715366503 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.713986759 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.715242416 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.715733577 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.715837436 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.715236853 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.717369978 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.715681913 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.715276147 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.713948805 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.714647776 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.713335582 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.716347529 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.715813632 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.716757207 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.713595646 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.713214545 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.717622828 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.714284352 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.714441348 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.716663741 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.715147721 seconds)
  done (took 53.085823913 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.735134471 seconds)
    (2/2) benchmarking "in"...
    done (took 1.736070417 seconds)
  done (took 5.110149558 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.713895077 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.718149115 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.719281181 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.713530122 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.715297969 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.71738902 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.718203734 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.715119822 seconds)
  done (took 15.370514318 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.717538958 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.718425344 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.718426718 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.718349372 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.721045435 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.718479275 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.725672888 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.718309107 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.719311585 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.719571761 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.725099542 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.725192075 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.723295874 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.719393061 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.718346447 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.719322783 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.71780818 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.719387501 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.719559762 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.718450582 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.719790866 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.721571991 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.720502588 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.715853077 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.72099571 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.728129704 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.723694258 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.718032246 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.720718374 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.723343379 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.721309245 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.715708759 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.719010661 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.720029303 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.718654555 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.72147253 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.72932848 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.720141595 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.725692673 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.720836778 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.718620703 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.717997024 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.721911011 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.720862434 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.720930093 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.722361107 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.71998573 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.718393088 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.719007804 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.722587907 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.726498709 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.719550378 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.717578348 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.723505728 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.723714034 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.728661706 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.721790032 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.721962125 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.72764634 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.732160461 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.736008942 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.728720575 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.723153768 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.723898345 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.72946124 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.743266888 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.726974016 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.718513802 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.71861241 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.721653906 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.728074518 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.736626628 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.731048403 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.723556036 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.721678781 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.720982665 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.721811644 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.7229456 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.728417536 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.726170651 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.726239372 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.723598131 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.730661246 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.742545708 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.721277301 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.721670936 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.724234747 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.722833269 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.723773528 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.733705401 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.7239156 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.72202507 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.722624184 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.722825828 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.723459376 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.722962054 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.721671572 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.72325708 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.721734248 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.722423905 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.722724321 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.724683794 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.732009618 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.723466859 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.721561717 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.729859171 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.722532245 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.723049769 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.730538131 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.722606879 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.723341147 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.725407905 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.728680841 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.720635971 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.725828787 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.733560888 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.724262922 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.726326085 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.724215682 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.7242127 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.73219643 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.74841042 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.724918932 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.724751804 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.727956938 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.736467059 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.725506922 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.727392305 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.72500173 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.719907723 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.720337404 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.727575878 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.724025959 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.725849365 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.724888287 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.725995102 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.724370556 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.723742696 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.724668283 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.726169315 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.728904514 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.724944459 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.72657215 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.727691545 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.725312445 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.7278132 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.73391598 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.72497203 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.727086573 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.727143988 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.727096091 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.72518619 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.725614915 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.726129283 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.724619192 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.725024242 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.725402169 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.726313593 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.724876784 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.724509164 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.725431734 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.726249251 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.729543661 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.727063671 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.730191233 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.726216229 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.724030991 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.726741603 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.72901717 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.726000018 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.726206952 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.725567356 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.728771802 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.73528687 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.725395075 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.729339215 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.728486669 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.727303656 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.727163512 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.727189743 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.729077195 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.733164751 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.727219981 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.733285783 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.727250876 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.733149412 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.727420507 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.725548325 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.72589657 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.728376661 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.729096289 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.733792342 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.741067722 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.734604891 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.728162663 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.730466782 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.726576091 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.731757475 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.732534118 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.727308098 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.729071409 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.727638073 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.73041814 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.729200406 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.728178551 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.727434807 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.727819189 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.727795152 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.726879838 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.729164526 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.727993151 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.728127369 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.728944125 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.725793161 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.727740441 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.729059653 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.72710673 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.725220097 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.72855611 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.729540675 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.730316509 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.729364372 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.734940114 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.724791487 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.729754328 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.729232863 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.727715394 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.727049962 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.728907979 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.732517146 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.728644982 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.736737491 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.729920249 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.729082241 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.736149336 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.728659948 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.728598304 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.736423406 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.728857019 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.726609083 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.732839689 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.735050438 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.729135691 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.729473798 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.731275172 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.728263275 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.728906274 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.73512459 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.726983006 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.728913746 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.729680776 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.73244471 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.727595904 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.731878828 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.733046971 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.732888663 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.733622982 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.728935696 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.729474307 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.733187245 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.730219126 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.730981693 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.730250591 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.731871062 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.737389649 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.733524942 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.730899362 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.735243052 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.72982106 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.733804152 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.730108545 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.731684275 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.733169563 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.744785314 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.740263714 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.738438052 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.731547642 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.730744633 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.734787679 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.732331256 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.735429537 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.730395291 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.731193786 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.731148328 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.730714629 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.728256404 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.732251609 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.731084171 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.732525816 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.735776406 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.734941133 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.731836633 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.730347601 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.732301375 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.73242854 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.732349332 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.731506088 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.731446477 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.734202719 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.735250729 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.732029889 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.732256242 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.738749776 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.731201786 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.732912266 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.731604413 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.732550367 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.731661322 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.734150551 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.733014688 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.734732978 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.740069156 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.735081052 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.741666662 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.732477262 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.740091831 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.733099792 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.73581764 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.741164772 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.731541597 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.731006551 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.731769949 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.733058206 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.73916682 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.735674484 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.733327252 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.736821787 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.734380007 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.734702659 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.733401004 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.735005195 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.733920979 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.733613372 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.74401555 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.735470667 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.736578233 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.737901856 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.731283196 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.736173058 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.735097895 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.733514622 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.739685984 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.735886125 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.734453943 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.733669781 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.734481168 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.732946182 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.73406524 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.733179429 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.731081872 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.733798979 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.743992941 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.735853287 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.739568683 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.735368732 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.744340551 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.735833359 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.74269697 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.738480359 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.736953848 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.735214584 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.734192524 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.736941061 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.734388232 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.735455844 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.735740192 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.735192432 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.73784441 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.735163381 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.73856721 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.736731237 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.736713297 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.73479438 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.743315522 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.759281065 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.7383335 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.740234958 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.732930633 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.736594546 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.740491867 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.736216788 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.734567115 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.739117838 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.744774255 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.742426604 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.735987845 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.736999592 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.736214166 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.7386998 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.736697933 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.735614301 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.737884824 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.736732008 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.738522708 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.738689891 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.740059172 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.736079448 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.737254287 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.737535116 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.738080761 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.746831163 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.738187047 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.739741444 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.73770593 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.73579323 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.738651189 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.737769441 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.739754349 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.737902927 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.737879958 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.739889431 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.743228662 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.743961858 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.741375614 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.73685147 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.7395644 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.737717542 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.738165965 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.739800679 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.73831803 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.737816095 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.739656881 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.738644994 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.738030826 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.737789019 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.737254644 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.741014483 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.739181634 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.740837574 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.74447139 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.738690098 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.734351339 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.738038637 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.737751895 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.738784716 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.738679762 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.747254671 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.741185657 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.748418636 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.745366228 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.743991746 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.73870135 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.740386191 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.747327849 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.73761537 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.740661656 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.739664476 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.739681304 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.740259135 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.742635401 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.739339535 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.745626703 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.739732019 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.739598871 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.750073935 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.742633666 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.740967268 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.739643106 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.743179528 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.739386806 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.736924371 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.739032294 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.741598377 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.746785251 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.741235838 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.740806848 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.743663877 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.737878305 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.740443417 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.748414456 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.737728035 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.743541788 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.737548687 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.742437967 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.741799709 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.740734908 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.737658349 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.74166961 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.740585047 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.743963514 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.746989443 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.737238512 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.743559156 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.741438207 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.743063055 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.741520369 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.740605191 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.739778358 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.738331565 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.741085723 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.741970535 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.741641414 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.745770307 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.740053077 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.740029073 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.741367844 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.741549946 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.745438851 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.751246398 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.74787301 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.738395403 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.742465696 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.743147518 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.746240317 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.742058931 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.742229599 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.743121297 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.743942709 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.741073758 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.742887193 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.741060094 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.74407442 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.758814195 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.742151018 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.744502898 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.741767927 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.746280316 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.74337607 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.740220376 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.741838477 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.746862822 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.745613704 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.750845721 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.745230023 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.75115011 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.743847696 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.744337123 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.747901078 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.744013668 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.751245429 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.748398331 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.745539544 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.743986783 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.747370837 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.758804998 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.744001369 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.751852299 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.772230575 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.745803948 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.746147567 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.744668143 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.742162453 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.744589819 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.747333566 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.74411107 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.742744412 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.742814631 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.74443125 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.746570557 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.750113518 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.746481651 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.744597144 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.743959036 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.743880374 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.745888068 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.740757502 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.74574544 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.744522553 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.745065656 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.744947042 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.745150533 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.745801846 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.758692637 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.755893989 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.744687045 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.747489534 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.743648442 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.749344719 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.74671038 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.753967835 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.752315076 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.746716384 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.745789207 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.746757408 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.747288227 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.741898641 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.747164045 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.744686709 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.745870655 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.74282994 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.759246079 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.754735829 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.751693165 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.750338459 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.746539274 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.745440691 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.746408258 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.747419883 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.746856617 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.747033532 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.746679157 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.750383097 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.745986038 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.746443601 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.7489417 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.753391783 seconds)
  done (took 1035.223494404 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.742363065 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.743536068 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.74337876 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.745931962 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.743334524 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.743283583 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.744247059 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.744003683 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.743455129 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.744745534 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.743693743 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.744902341 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.744604085 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.74403581 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.743991476 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.745481872 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.743095942 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.743624827 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.74462463 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.744385137 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.745184652 seconds)
  done (took 38.293607742 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.746432869 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.745315565 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.745470372 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.74594669 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.745124769 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.748069246 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.74401999 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.748318645 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.747813744 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.744283702 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.746861938 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.747403929 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.744635093 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.744125166 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.744857576 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.749338773 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.748410637 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.745625085 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.747973127 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.744756739 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.748123366 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.748053294 seconds)
  done (took 40.090383002 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.747740245 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.750917787 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.748639035 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.745578037 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.74947147 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.746341513 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.750412323 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.749654176 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.748243318 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.749040498 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.74865578 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.74844226 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.754549224 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.753032555 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.751970367 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.748099439 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.89369147 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.751191057 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.750649061 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.75028643 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.746891986 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.753998605 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.746712722 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.747452674 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.74869716 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.750199988 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.749104306 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.749256327 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.749133663 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.750064138 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.755291952 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.74904944 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.748695727 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.751413241 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.748411519 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.750942061 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.75290584 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.74996836 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.747879192 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.749550534 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.758648831 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.769472725 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.750412732 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.757542815 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.755371594 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.750633696 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.754042121 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.759226748 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.747062996 seconds)
  done (took 87.606237131 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.750955692 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.750908824 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.748282922 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.750417318 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.751483275 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.749801464 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.752564051 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.750361994 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.74752189 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.749438729 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.750316814 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.753842498 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.74898831 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.752100192 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.751150513 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.748108895 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.748064586 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.749108046 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.748428036 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.748468281 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.747393033 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.752458141 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.751345249 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.748692436 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.749969616 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.748276624 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.748580475 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.752482273 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.751290535 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.750028117 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.75064245 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.752370329 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.751837917 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.749358044 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.749024716 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.751472803 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.751262853 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.748707638 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.752052427 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.748990605 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.75091838 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.752260527 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.752260224 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.75188023 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.748892477 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.751454121 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.752077154 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.749127353 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.749469224 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.754001822 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.752335178 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.750304968 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.751617915 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.750673255 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.753248114 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.752514164 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.751240634 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.750008599 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.752471292 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.751032615 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.749944352 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.751745048 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.751467008 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.757412394 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.751665634 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.750070342 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.75056125 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.753742032 seconds)
  done (took 120.724788633 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.754693196 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.754202899 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.755414076 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.755727193 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.754413168 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.754776385 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.755186799 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.754640258 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.754032953 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.754892841 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.754953628 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.757129397 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.754747979 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.753033605 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.755662985 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.754953465 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.755945335 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.755529723 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.755784116 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.755037566 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.755171306 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.754931841 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.756938888 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.754989995 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.755292525 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.755055472 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.75622788 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.755949917 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.759644784 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.756786149 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.756734684 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.756525969 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.756560986 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.756624666 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.756607451 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.755953086 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.755951286 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.755655723 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.756225052 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.756251505 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.756144547 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.757674872 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.756438862 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.757551771 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.758033593 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.760685897 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.757105192 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.757571574 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.756563333 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.756934747 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.756722308 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.759322301 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.757574987 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.758122493 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.756995071 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.756555408 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.759870379 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.757544065 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.757965441 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.757386237 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.758418415 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.756574345 seconds)
  done (took 110.569301248 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.755326359 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.755839208 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.754343233 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.753773091 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.755402733 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.754554907 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.75673037 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.755870724 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.756259007 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.756505512 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.756856205 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.753569778 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.754294179 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.756566093 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.754113404 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.755546033 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.756122225 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.754758489 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.756967751 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.753963714 seconds)
  done (took 36.787937649 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.756525207 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.758902473 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.754599182 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.754193021 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.757699724 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.754424436 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.756728168 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.757878178 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.754530306 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.75675632 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.75826487 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.756937723 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.756241189 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.755986463 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.757336352 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.75624797 seconds)
  done (took 29.780706545 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.756985826 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.757583922 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.759188398 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.761409219 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.755680927 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.755930875 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.757752301 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.755891044 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.755662463 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.758998841 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.758004697 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.758758949 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.759076521 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.761542071 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.754893823 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.758273747 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.754779741 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.755735436 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.758665347 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.762511624 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.755863433 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.75588445 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.757545709 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.758384099 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.755954982 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.756772608 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.755001373 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.756497919 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.756313479 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.758800613 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.757582442 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.756009127 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.755873773 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.756384819 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.760855552 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.756077718 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.759659555 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.759082318 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.759434069 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.759894388 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.759426196 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.757403607 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.760964608 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.759445162 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.758058018 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.760593598 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.7571781 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.757409892 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.757620651 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.757688583 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.760256397 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.760994046 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.76052147 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.761000936 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.759845588 seconds)
  done (took 98.373594784 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.759629607 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.759670171 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.757977952 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.759055347 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.760658997 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.757481918 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.760224394 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.757498192 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.759193408 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.759668469 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.760024268 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.760900684 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.758068299 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.76205192 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.759189582 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.762374576 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.758633786 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.759034326 seconds)
  done (took 33.353222113 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.759421794 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.758643473 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.761123773 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.759511438 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.758893604 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.762767831 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.758389641 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.761692387 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.761946238 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.759417792 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.758510913 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.761233759 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.760948041 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.761667618 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.759945592 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.759199837 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.761901949 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.762745707 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.758534553 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.758304437 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.761870202 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.761603974 seconds)
  done (took 40.410930822 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.762882772 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.760237624 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.776838848 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.781738056 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.783044108 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.795996563 seconds)
  done (took 12.343666365 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.760343474 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.763950436 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.76109453 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.762559099 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.763787055 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.762114669 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.762188091 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.761017435 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.763839179 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.762142875 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.763317611 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.765271844 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.764089604 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.762030449 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.762740189 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.764870155 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.761955893 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.76107785 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.761794634 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.765038773 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.761169357 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.76477258 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.762824623 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.762226274 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.762149637 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.761383989 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.76610183 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.764934054 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.761849833 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.76528305 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.765019519 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.76149939 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.765813132 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.764075996 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.763686665 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.763873199 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.762487835 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.764223187 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.765682908 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.763393415 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.763670996 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.765884959 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.765387087 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.763758356 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.767062169 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.764454266 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.761432145 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.762493327 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.760776712 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.766522073 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.766506906 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.76302964 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.766597183 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.764868138 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.766497172 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.766287581 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.764305089 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.763661873 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.766520626 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.764731996 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.764537867 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.768059827 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.766992272 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.76444375 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.766399108 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.764495397 seconds)
  done (took 118.100995101 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.765836717 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.764579093 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.764519764 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.764674404 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.762463278 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.765108765 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.767043614 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.76409925 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.764430431 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.764333624 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.767762344 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.764722705 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.765779131 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.765577755 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.765878766 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.765369191 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.764432179 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.764691481 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.764317965 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.769074443 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.765129173 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.764897536 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.765567772 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.76512481 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.7658881 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.76826424 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.765330095 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.765281268 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.764835542 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.76648398 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.765920367 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.765279935 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.765239223 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.76535245 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.766558555 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.765478885 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.764151728 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.764894818 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.764855064 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.768660605 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.766388 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.767252352 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.76661426 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.766089651 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.767459678 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.766889269 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.765596442 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.766895447 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.767072691 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.766786698 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.767764163 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.766385444 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.766216387 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.764940279 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.766694377 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.765708056 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.766326448 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.76763303 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.765874632 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.770177217 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.764718241 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.765581221 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.770214761 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.767173815 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.768164016 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.766687507 seconds)
  done (took 118.245586005 seconds)
done (took 2411.690282806 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.750449566 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.77795286 seconds)
  done (took 15.21914566 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.924795642 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.878892392 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.764039937 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.77109623 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.764356266 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.785075344 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.784400545 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.765081785 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.76424267 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.765152154 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.764377433 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.952596756 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.770395931 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.764574911 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.765002822 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.858077217 seconds)
  done (took 50.535329183 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.768198565 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.770200448 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.780918095 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.771610936 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.769028717 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.782640425 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.803336687 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.772301877 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.804375228 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.783393993 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.839280055 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.779677919 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.768035808 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.818489003 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.783416706 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.784512811 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.861007013 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.847312552 seconds)
  done (took 33.975665884 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.84665307 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.771955029 seconds)
  done (took 10.314658616 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.789926223 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.806913389 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.765854091 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.787155478 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.7922839 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.794150794 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.802331775 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.806515555 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.777067047 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.800340447 seconds)
  done (took 69.614843239 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.776292893 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.770862765 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.770686406 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.768083817 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.762677049 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.767660889 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.770768932 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.767303371 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.430556917 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.805645096 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.776998982 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.775722023 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.768351914 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.770151533 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.769241725 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.793108768 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.867871998 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.766979143 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.767134041 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.776101465 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.77359078 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.82050918 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.783357222 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.771731597 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.799759758 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.427649878 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.777639637 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.775855332 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.892550428 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.767412251 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.770015731 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.770326332 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.772065928 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.164195604 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.040382182 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.771296984 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.784042294 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.777301223 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.769359063 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.869827713 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.771754077 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.776293118 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.519387824 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.019309731 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.879674907 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.81279875 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.098098196 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.790228606 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.77236963 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.799392089 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.773994902 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.772848043 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.784985137 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.262170041 seconds)
  done (took 126.829209025 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.769531542 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.118824183 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.936382733 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.767929804 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.057395206 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.975525409 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.769190963 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.817278649 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.766786746 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.00199608 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.027155329 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.876226021 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.768989477 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.765257985 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.767950697 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.764852837 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.926947272 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.843827231 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.771820358 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.76613863 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.797947086 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.012386847 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.89318734 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.770833567 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.798013403 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.982513 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.892956438 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.874117129 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.549455403 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.767702437 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.833489848 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.769004414 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.769115942 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.767851955 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.927221197 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.865673358 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.853271266 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.76923141 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.767126867 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.766308217 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.527744452 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.970182432 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.866283155 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.910729036 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.918076364 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.976156626 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.554846166 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.767525011 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.515358062 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.933400793 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.99960715 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.005651484 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.893689292 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.771429984 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.109542453 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.767222804 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.767660096 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.021009752 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.912111601 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.868410997 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.770387079 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.767488569 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.767711084 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.070202203 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.771756065 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.867517839 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.770795744 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.768321585 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.868410246 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.872432254 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.910506633 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.984527044 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.802324178 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.504457363 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 3.979041735 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.018976819 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.836682188 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.020771355 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.77079943 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.767890354 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.850991355 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.613652212 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.025088036 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.059565831 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.025118395 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.806720706 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.494930351 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.769935785 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.998930672 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.993275467 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.034394479 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.919354468 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.007349842 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.109630439 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.76963344 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.769101516 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 3.992350649 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.90968562 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.772273317 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.119623416 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.005202977 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.320463556 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.791366359 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.079577773 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.905281811 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.774295749 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.412119914 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.771141198 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.004727668 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.814228226 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.772522365 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.771802788 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.992395228 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.766767405 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.770220758 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.414304878 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.835515556 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.774676988 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.006778876 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.773288072 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.042753995 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.773285514 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.013248094 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.237127224 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.805787381 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.949570877 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.919289536 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.774600194 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.019178757 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.018763122 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.889651386 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.995218173 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.392886562 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.770842199 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.063262604 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.774566296 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.770878324 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.944477254 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.775346142 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.919741225 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.774805714 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.06913338 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.800152558 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.006847305 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.775678328 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.033525592 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.809381197 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.825862604 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.775074482 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.895777158 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.774092497 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.611362528 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.932753097 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.773962665 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.773770399 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.326101393 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.774383956 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.924474365 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.008105693 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.798051632 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.292643117 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.446665278 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.773018369 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.855146741 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.798712514 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.166356258 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.772009015 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.026864001 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.776174708 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.773066151 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.772925936 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.069192745 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.958920679 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.775649724 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.77262526 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.687230367 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.773605491 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.773282214 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.958967929 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.276810344 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.77375948 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.984380817 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.776643481 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.90348098 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.77597576 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.851496186 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.11248809 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.773639343 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.77895887 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.774231179 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.77341307 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.775414697 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.984879729 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.806631182 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.296900354 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.913651913 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.053623143 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.088635194 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.025247099 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.821214159 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.777315065 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.031552324 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.775886422 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.844766343 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.776269014 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.797270758 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.00885213 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.778045741 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.986997788 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.05591313 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.626030157 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.825383446 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.777435133 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.77555676 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.774906681 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.923386908 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.861178341 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.777956269 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.775774718 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.893884435 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.898892405 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.988179854 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.776938233 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.80536132 seconds)
  done (took 880.308274753 seconds)
done (took 1188.486613114 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.775692794 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.778525903 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.764163271 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.777730147 seconds)
  done (took 28.798123489 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.783687879 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.780803443 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.78353282 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.781527304 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.785362587 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.780569278 seconds)
  done (took 12.397408294 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.796791064 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.775992318 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.776467235 seconds)
  done (took 21.050961441 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.849872247 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.165980627 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.885510621 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.203555565 seconds)
  done (took 9.807941597 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.784779617 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.783565985 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.784644141 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.784111593 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.784218559 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.788185515 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.782596752 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.783543936 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.78604693 seconds)
  done (took 17.767007534 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.051338964 seconds)
done (took 95.574104478 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.148033192 seconds)
    (2/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.861370623 seconds)
    (3/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.735731887 seconds)
    (4/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.090826388 seconds)
    (5/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.851778264 seconds)
    (6/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.26731383 seconds)
    (7/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.733703493 seconds)
    (8/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.884808317 seconds)
    (9/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.867224387 seconds)
    (10/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.799129705 seconds)
    (11/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.778373355 seconds)
    (12/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.076074292 seconds)
    (13/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.220888859 seconds)
    (14/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.11423357 seconds)
    (15/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.407266184 seconds)
    (16/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.799382662 seconds)
    (17/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.064184173 seconds)
    (18/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.91656015 seconds)
    (19/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.842535565 seconds)
    (20/309) benchmarking ("map", abs, Float64, true)...
    done (took 1.998649428 seconds)
    (21/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.883436974 seconds)
    (22/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.936677118 seconds)
    (23/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.940954778 seconds)
    (24/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.979976013 seconds)
    (25/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.181236672 seconds)
    (26/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.784616555 seconds)
    (27/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.038198053 seconds)
    (28/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 2.870851994 seconds)
    (29/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.788623269 seconds)
    (30/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.931485425 seconds)
    (31/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.85525966 seconds)
    (32/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.831148586 seconds)
    (33/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.188411901 seconds)
    (34/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.783508806 seconds)
    (35/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.088344008 seconds)
    (36/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.436513521 seconds)
    (37/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.962494594 seconds)
    (38/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.950724657 seconds)
    (39/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.092921259 seconds)
    (40/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.873910794 seconds)
    (41/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.808648843 seconds)
    (42/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.778190468 seconds)
    (43/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.810411673 seconds)
    (44/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.133312036 seconds)
    (45/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.784743431 seconds)
    (46/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.790397605 seconds)
    (47/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.870385037 seconds)
    (48/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.098105803 seconds)
    (49/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.903339934 seconds)
    (50/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.955271728 seconds)
    (51/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.876027312 seconds)
    (52/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.891296464 seconds)
    (53/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.915057819 seconds)
    (54/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.913305763 seconds)
    (55/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.801777027 seconds)
    (56/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.107879912 seconds)
    (57/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.639589687 seconds)
    (58/309) benchmarking ("sort", Bool, false)...
    done (took 2.006829993 seconds)
    (59/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.895192917 seconds)
    (60/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.781686886 seconds)
    (61/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.18169312 seconds)
    (62/309) benchmarking ("sort", Int64, false)...
    done (took 5.45209198 seconds)
    (63/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.172627249 seconds)
    (64/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.859645215 seconds)
    (65/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.038995513 seconds)
    (66/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.916983583 seconds)
    (67/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.848939927 seconds)
    (68/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.828633778 seconds)
    (69/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.939582001 seconds)
    (70/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.804380317 seconds)
    (71/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.141363976 seconds)
    (72/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.786319146 seconds)
    (73/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.877123647 seconds)
    (74/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.941877817 seconds)
    (75/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.016516219 seconds)
    (76/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.869220058 seconds)
    (77/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.806861307 seconds)
    (78/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.78335903 seconds)
    (79/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.457021726 seconds)
    (80/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.110090897 seconds)
    (81/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.794931184 seconds)
    (82/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.770865284 seconds)
    (83/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.88058743 seconds)
    (84/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.774626243 seconds)
    (85/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.062367712 seconds)
    (86/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.481839595 seconds)
    (87/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.902223542 seconds)
    (88/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.942799401 seconds)
    (89/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.802352038 seconds)
    (90/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.032925467 seconds)
    (91/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.803946552 seconds)
    (92/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.731017487 seconds)
    (93/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.898413706 seconds)
    (94/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.880417285 seconds)
    (95/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.268099613 seconds)
    (96/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.175309324 seconds)
    (97/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.772309839 seconds)
    (98/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.224683912 seconds)
    (99/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.802799705 seconds)
    (100/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.882235816 seconds)
    (101/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.787668417 seconds)
    (102/309) benchmarking ("map", identity, Bool, true)...
    done (took 3.611120361 seconds)
    (103/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.87381753 seconds)
    (104/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.713191117 seconds)
    (105/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.793534125 seconds)
    (106/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.171428662 seconds)
    (107/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.914606244 seconds)
    (108/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.061936471 seconds)
    (109/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.78944832 seconds)
    (110/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.965602664 seconds)
    (111/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.881587995 seconds)
    (112/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.805485406 seconds)
    (113/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.059367168 seconds)
    (114/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.82405678 seconds)
    (115/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.316109081 seconds)
    (116/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.056519505 seconds)
    (117/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.193123048 seconds)
    (118/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.347311973 seconds)
    (119/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.900395798 seconds)
    (120/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.775755882 seconds)
    (121/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.981730578 seconds)
    (122/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.15897987 seconds)
    (123/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.792573184 seconds)
    (124/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.910301061 seconds)
    (125/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.978462281 seconds)
    (126/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.936651322 seconds)
    (127/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.608039123 seconds)
    (128/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.873082932 seconds)
    (129/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.790607036 seconds)
    (130/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 2.149377121 seconds)
    (131/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.871456328 seconds)
    (132/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.78589851 seconds)
    (133/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.1493941 seconds)
    (134/309) benchmarking ("sort", Float32, false)...
    done (took 5.49228798 seconds)
    (135/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.856624221 seconds)
    (136/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.788817391 seconds)
    (137/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.920759595 seconds)
    (138/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.978186163 seconds)
    (139/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 7.083097725 seconds)
    (140/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.854384212 seconds)
    (141/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 2.522739312 seconds)
    (142/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.850650645 seconds)
    (143/309) benchmarking ("sort", BigInt, false)...
    done (took 6.787920222 seconds)
    (144/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.047831624 seconds)
    (145/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.774374889 seconds)
    (146/309) benchmarking ("perf_countequals", "Bool")...
    done (took 3.438958958 seconds)
    (147/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.079860415 seconds)
    (148/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.794977214 seconds)
    (149/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.015411102 seconds)
    (150/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.855096566 seconds)
    (151/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.85710244 seconds)
    (152/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.815745139 seconds)
    (153/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.968229343 seconds)
    (154/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.412170994 seconds)
    (155/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.804876412 seconds)
    (156/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.831951494 seconds)
    (157/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 7.699416343 seconds)
    (158/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.296709523 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.08753771 seconds)
    (160/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.930777477 seconds)
    (161/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.098306154 seconds)
    (162/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.922875299 seconds)
    (163/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.80722938 seconds)
    (164/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.031929605 seconds)
    (165/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.264784336 seconds)
    (166/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.79304273 seconds)
    (167/309) benchmarking ("map", identity, Int8, true)...
    done (took 3.577340487 seconds)
    (168/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.895405879 seconds)
    (169/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.149704229 seconds)
    (170/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.806493643 seconds)
    (171/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.794821181 seconds)
    (172/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.885788522 seconds)
    (173/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.045375483 seconds)
    (174/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 7.108211734 seconds)
    (175/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.92346281 seconds)
    (176/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.893117759 seconds)
    (177/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 7.099317877 seconds)
    (178/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.977534556 seconds)
    (179/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.888519493 seconds)
    (180/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.778365036 seconds)
    (181/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.961455367 seconds)
    (182/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.026288953 seconds)
    (183/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.883096472 seconds)
    (184/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.952445625 seconds)
    (185/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.312583808 seconds)
    (186/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.891211072 seconds)
    (187/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.443761323 seconds)
    (188/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.648437799 seconds)
    (189/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.9421685 seconds)
    (190/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.787993712 seconds)
    (191/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.297979731 seconds)
    (192/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.094905897 seconds)
    (193/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.216409773 seconds)
    (194/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.733494355 seconds)
    (195/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.235735953 seconds)
    (196/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.134742266 seconds)
    (197/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.119872542 seconds)
    (198/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.739680519 seconds)
    (199/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.376794591 seconds)
    (200/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.801409931 seconds)
    (201/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.982139756 seconds)
    (202/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.890602533 seconds)
    (203/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.097457854 seconds)
    (204/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.221233318 seconds)
    (205/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.795235284 seconds)
    (206/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.17668967 seconds)
    (207/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.27528066 seconds)
    (208/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.8908317 seconds)
    (209/309) benchmarking ("sort", Int8, false)...
    done (took 4.698665632 seconds)
    (210/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.7024267 seconds)
    (211/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.248475464 seconds)
    (212/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.903087177 seconds)
    (213/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.802892672 seconds)
    (214/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.816762362 seconds)
    (215/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.724051361 seconds)
    (216/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.795776638 seconds)
    (217/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.94422102 seconds)
    (218/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.966979356 seconds)
    (219/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.010425914 seconds)
    (220/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.897557162 seconds)
    (221/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.884419652 seconds)
    (222/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.782328052 seconds)
    (223/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.608820327 seconds)
    (224/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.800278011 seconds)
    (225/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.033309739 seconds)
    (226/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.701588297 seconds)
    (227/309) benchmarking ("sort", Float64, false)...
    done (took 5.570398357 seconds)
    (228/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.893780147 seconds)
    (229/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.797324271 seconds)
    (230/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.732459886 seconds)
    (231/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.996965165 seconds)
    (232/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.313027329 seconds)
    (233/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.794223738 seconds)
    (234/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.86622811 seconds)
    (235/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.948914057 seconds)
    (236/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.88450298 seconds)
    (237/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.191100955 seconds)
    (238/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.099953561 seconds)
    (239/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.945596564 seconds)
    (240/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.967827235 seconds)
    (241/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.817944968 seconds)
    (242/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.77794412 seconds)
    (243/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 2.532924013 seconds)
    (244/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.910905401 seconds)
    (245/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.930773239 seconds)
    (246/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.780624032 seconds)
    (247/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 3.078437883 seconds)
    (248/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.918714596 seconds)
    (249/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.782217268 seconds)
    (250/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.26452185 seconds)
    (251/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 7.132865221 seconds)
    (252/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.899528417 seconds)
    (253/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.793866641 seconds)
    (254/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.925666645 seconds)
    (255/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.904866638 seconds)
    (256/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 3.233817771 seconds)
    (257/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.935187301 seconds)
    (258/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.032852711 seconds)
    (259/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.980684442 seconds)
    (260/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.046081418 seconds)
    (261/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.964796459 seconds)
    (262/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.812691184 seconds)
    (263/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.055551269 seconds)
    (264/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.485459165 seconds)
    (265/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.975734767 seconds)
    (266/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.812902262 seconds)
    (267/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.23828654 seconds)
    (268/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.51244769 seconds)
    (269/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.911788555 seconds)
    (270/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.484992777 seconds)
    (271/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.136730294 seconds)
    (272/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.818432435 seconds)
    (273/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.779164814 seconds)
    (274/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.889682152 seconds)
    (275/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.544288886 seconds)
    (276/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.011083026 seconds)
    (277/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.813436679 seconds)
    (278/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.807738852 seconds)
    (279/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.861753493 seconds)
    (280/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 3.368022835 seconds)
    (281/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.829880759 seconds)
    (282/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.820689565 seconds)
    (283/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.036112247 seconds)
    (284/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.796658063 seconds)
    (285/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 8.169810604 seconds)
    (286/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.277903805 seconds)
    (287/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.042527839 seconds)
    (288/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.78682907 seconds)
    (289/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.05867558 seconds)
    (290/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.03922911 seconds)
    (291/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.893905615 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.6402762 seconds)
    (293/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.737881633 seconds)
    (294/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.111820511 seconds)
    (295/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.80050503 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.918669988 seconds)
    (297/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.815662562 seconds)
    (298/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.781038164 seconds)
    (299/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 8.020148693 seconds)
    (300/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.42489886 seconds)
    (301/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.708988698 seconds)
    (302/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.913870138 seconds)
    (303/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.781581394 seconds)
    (304/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.858625314 seconds)
    (305/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.147691041 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.016207577 seconds)
    (307/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.094389316 seconds)
    (308/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.785518308 seconds)
    (309/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.035180085 seconds)
  done (took 984.047429331 seconds)
done (took 985.821538488 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.831263225 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.821268347 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.806167345 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.827789693 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.917988102 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.833764521 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.817420884 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.807702257 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.853954963 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.856354575 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.801950082 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.832856955 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.807354684 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.807598836 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.806327157 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.821585329 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.11200959 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.834467095 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.823496799 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.816850902 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.823525632 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.806154408 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.856306098 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.831853396 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.810214239 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.808584146 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.810221821 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.824833572 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.918227227 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.808178347 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.808870319 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.816753493 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.113146825 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.831001645 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.802341381 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.826336695 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.81908233 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.81977226 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.811782821 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.839798293 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.196949436 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.842421834 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.809910473 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.808848383 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.807110093 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.810565683 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.810112953 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.813593747 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.820110514 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.821532017 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.191445344 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.859110634 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.811467312 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.812560549 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.818735841 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.808244839 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.811547412 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.824489095 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.828653625 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.824175075 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.096677341 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.837887708 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.81042507 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.825695555 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.816366739 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.226204272 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.837863733 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.812418441 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.198299282 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.850482783 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.227361635 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.852750248 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.811296623 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.824297172 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.841957293 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.114126281 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.830760339 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.807563485 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.817023788 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.806992615 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.819275676 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.821920135 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.814701707 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.81067266 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.824364573 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.839794087 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.821711613 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.81148034 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.819013401 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.828930806 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.817341285 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.821891381 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.813268966 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.806291775 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.819488674 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.81452847 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.812046485 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.813548489 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.815697255 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.820050188 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.196707497 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.862478513 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.808524767 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.80663289 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.80917179 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.825417713 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.197193251 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.847978158 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.833858495 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.858432786 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.812732418 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.100047658 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.839678601 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.827800594 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.820644115 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.812994685 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.80768584 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.100707481 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.220582413 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.860099073 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.812541762 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.807372069 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.826467383 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.814044807 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.808475814 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.1170668 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.839112951 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.826582519 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.933303527 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.822313268 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.843234851 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.80933296 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.814719736 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.845249914 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.828953993 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.844157302 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.813949185 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.827954782 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.828381847 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.809247926 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.822152555 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.823227136 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.815566565 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.817846787 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.806840598 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.843682242 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.825094427 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.825462923 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.835092603 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.933788561 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.813405367 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.099471374 seconds)
done (took 284.483289148 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.879691416 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.810892826 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.909533713 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.809632089 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.888887164 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.893037549 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.806872649 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.807013964 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.806013964 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.181494919 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.806789591 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.807033823 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.80634485 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.808289048 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.891019128 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.810801787 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.807034751 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.142213157 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.812431303 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.881928483 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.810261417 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.808161573 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.810371858 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.180986776 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.811643107 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.811297568 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.880921739 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.811169763 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.146122738 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.80895688 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.807188084 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.147323592 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.900283042 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.828617557 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.820637132 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.818521126 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.891871468 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.815101647 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.892785993 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.892057254 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.910238039 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.853984913 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.813675186 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.809592696 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.81317319 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.812672284 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.807482668 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.838708076 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.81220481 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.810168816 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.1488949 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.821692387 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.818409255 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.809557554 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.809505244 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.834684344 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.809737475 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.813216355 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.901383937 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.814662276 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.873918334 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.183379681 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.182638874 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.813083598 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.808411856 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.808921531 seconds)
  done (took 180.324423405 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.877293224 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.889372267 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.877272985 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.814798375 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.861797399 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.879024216 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.814844083 seconds)
  done (took 14.745170762 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.817963114 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.812101733 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.862819509 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.863144073 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.81519703 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.96499455 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.813311636 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.823388938 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.810727721 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.864173444 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.813462811 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.813003742 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.820124263 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.80848283 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.862373807 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.822920944 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.929004408 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.814301884 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.817140699 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.96428654 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.811165677 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.819977631 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.845897698 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.823749952 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.814074455 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.81924796 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.40697164 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.814337357 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.811304729 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.814276032 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.811232769 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.853631576 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.813598589 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.811345902 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.811157524 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.927681308 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.813655241 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.811770678 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.815378412 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.813386811 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.814113691 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.812392126 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.813103295 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.811331014 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.812638839 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.836487929 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.812842384 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.813622571 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.812849708 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.812711148 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.844771708 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.812815069 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.808389691 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.810384863 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.866108259 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.818030616 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.814150827 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.809581635 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.812259009 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.808769456 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.962112991 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.863489736 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.813380478 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.860784256 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.810670122 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.810158256 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.810788776 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.810832484 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.903245822 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.806568378 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.85641406 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.804406214 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.96524645 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.830954373 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.811569352 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.814294776 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.812885893 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.813085215 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.812281029 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.814344071 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.804029516 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.80967366 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.809708814 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.801091507 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.800640252 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.916270339 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.91115622 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.80319507 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.819846906 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.810393376 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.802924125 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.84131361 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.808761608 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.801342048 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.862139604 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.919933212 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.85773853 seconds)
  done (took 200.035301389 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.80868752 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.810459427 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.805617041 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.820134331 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.80437789 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.802496815 seconds)
  done (took 12.57728839 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.80405293 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.805275498 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.803027864 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.804321974 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.80449143 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.802627543 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.80233321 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.804510364 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.805577218 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.801224839 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.805670884 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.802368513 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.80421047 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.803756439 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.804636189 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.802086547 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.805877338 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.79990044 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.803849741 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.804687485 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.954447379 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.805242318 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.803181267 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.803196666 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.806873782 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.801115434 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.809742546 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.801222168 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.801270637 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.807305155 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.805955104 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.803493982 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.801228545 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.809743342 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.807676525 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.803161921 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.807388312 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.803308292 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.80104728 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.802293502 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.805733088 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.806459287 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.804019688 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.806903588 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.805064291 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.809321785 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.808159514 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.812304293 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.806381974 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.802450559 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.804142522 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.804230194 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.805745333 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.806791507 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.806393354 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.808980848 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.809126308 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.805725689 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.803004764 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.805914341 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.804310022 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.805225776 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.804971327 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.810366625 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.811915028 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.805493921 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.805941432 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.809565103 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.806875452 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.807125212 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.804406465 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.80044828 seconds)
  done (took 132.840524097 seconds)
done (took 542.266130616 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.893602597 seconds)
  done (took 8.615594793 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.004335851 seconds)
  done (took 8.786612145 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.116153207 seconds)
  done (took 9.856842251 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.832555105 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.845718779 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.828339124 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.814826663 seconds)
  done (took 29.085515335 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.921410339 seconds)
  done (took 8.659235479 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.837131328 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.815430161 seconds)
  done (took 15.429626148 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.959833673 seconds)
  done (took 8.698774978 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.897540973 seconds)
  done (took 8.659965245 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.83027765 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.848170499 seconds)
  done (took 15.431327007 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.801572533 seconds)
  done (took 8.544138584 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.45331493 seconds)
  done (took 11.28397803 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.832576163 seconds)
  done (took 8.674383138 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.833125682 seconds)
  done (took 8.571440565 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.893614632 seconds)
  done (took 9.631671318 seconds)
done (took 161.653467328 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.8322718 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.811374001 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.814649295 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.812036669 seconds)
  done (took 29.008330395 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.848690297 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.849304447 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.852853354 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.861685416 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.851356292 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.84955229 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.846386301 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.843180507 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.861166159 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.852024253 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.851365885 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.852511378 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.851278494 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.843786459 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.852626869 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.853737261 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.861983688 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.853157213 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.843288051 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.852584392 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.819069867 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.861018768 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.855463299 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.817917222 seconds)
  done (took 46.122081993 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.011648603 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.88890975 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.971058247 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.868876033 seconds)
  done (took 9.476894184 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.869947372 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.87056743 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.881245669 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.919732969 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.944538812 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.880370355 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.845582055 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.838444788 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.828287498 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.872518634 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.946169661 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.863562066 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.962692886 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.818266301 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.005055948 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.817585891 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.818709485 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.869959594 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.921045144 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.938185779 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.816765845 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.868489131 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.871504659 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.865997978 seconds)
  done (took 46.872344498 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.818337378 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.825384836 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.82571359 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.818702214 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.818386865 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.820537256 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.823615818 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.819854151 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.8412334 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.821480883 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.819755384 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.820254403 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.819296972 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.820213133 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.819858942 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.833612526 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.834634731 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.81970954 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.825080348 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.825714751 seconds)
  done (took 38.210654449 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.813543292 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.664207232 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.164030363 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.067874211 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.81327604 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.81344706 seconds)
  done (took 31.074261276 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.831610831 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.821315455 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.817613358 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.874546889 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.956833966 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.82398909 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.81580334 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.828790482 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.863511911 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.880148244 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.839488592 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.849101765 seconds)
  done (took 23.939376818 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.813421175 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.819640265 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.811100538 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.836698114 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.823836287 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.820007277 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.827336607 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.804873135 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.824545445 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.829502284 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.814379038 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.820750328 seconds)
  done (took 43.583902914 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.893025606 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.693439361 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.442618661 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.521089786 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.34561143 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.010767993 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.32887752 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.97428272 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.805562909 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.075193063 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.338885261 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.069224613 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.07300927 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.81799302 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.891402231 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.284055511 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.116398525 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.047335234 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.844829956 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.500461383 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.224342999 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.769584687 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.577227023 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.947823022 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.029820094 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.951824177 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.080363348 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.773978691 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.949427275 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.855449971 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.833300317 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.82018596 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.092566187 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.031736123 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.948782145 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.828195771 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.470886554 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.5355174 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.8079802 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.540774712 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.439515479 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.957970276 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.829749567 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.82213772 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.754051089 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.444045078 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.008146715 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.825404263 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.522462267 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.819756013 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.828126947 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.909187575 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.82115295 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.636657331 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.770434017 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.097221545 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.818577737 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.824435072 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.390825061 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.885367665 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.540432833 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.776466917 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.915333871 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.550728992 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.295103671 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.976447118 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.826948935 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.82748348 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.75764945 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.497152912 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.948524804 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.971551136 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.846027282 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.475809046 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.142677978 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.453033487 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.91024953 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.113588445 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.696236151 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.777800608 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.051748574 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.777113134 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.758733073 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.659802601 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.754139331 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.08607803 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.852866245 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.454285569 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.855511023 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.988767584 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.834122886 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.838093507 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.825262664 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.040346553 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.699668017 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.81645914 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.322663439 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.108912444 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.846011792 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.996428875 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.758836545 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.825457463 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.075482648 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.030647375 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.154862868 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.290266234 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.977778305 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.820049794 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.914171383 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.823874292 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.841946131 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.089362549 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.881983989 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.883227502 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.956247546 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.78173681 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.118289356 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.851035134 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.006098599 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.392142368 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.092621728 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.149347377 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.070423683 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.903821525 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.830163947 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.821746959 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.559612577 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.444253595 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.040758874 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.817616359 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.398837485 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.841287887 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.817828484 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.74851664 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.655328338 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.394523077 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.930377211 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.035372775 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.81355414 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.09477334 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.745781187 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.957863743 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.926690787 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.034658563 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.454142002 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.887147468 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.070789504 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.398469497 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.171647915 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.839729127 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.832224645 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.931530822 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.83465098 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.345187886 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.083180618 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.817274187 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.817445792 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.536390024 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.887682727 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.81511874 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.818194074 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.610339767 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.096248041 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.841783715 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.815350304 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.749854684 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.828545711 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.898461873 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.820198544 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.823895344 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.389290236 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.565480353 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.825694074 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.520135828 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.039330593 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.823710103 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.4847695 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.001699195 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.899433747 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.085860706 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.878653161 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.747937795 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.517581797 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.518128034 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.816728153 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.749308073 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.816191202 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.824835459 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.826087302 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.013261576 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.091791127 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.866463511 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.519546989 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.927909345 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.825972819 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.82061437 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.818726357 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.3439232 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.90073045 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.534603095 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.842050628 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.952895946 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.830586078 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.74909059 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.820838998 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.820726242 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.817076483 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.773149984 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.869693279 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.530376804 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.145921205 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.074871756 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.461224621 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.833660494 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.502663235 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.944256071 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.840931525 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.310526347 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.952793 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.822857336 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.922320481 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.843085636 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.491056198 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.612302334 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.403605221 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.140222339 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.151125522 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.271415934 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.434464438 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.068448181 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.007598034 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.068066453 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.361325945 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.89551179 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.010109467 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.778861067 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.918481394 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.475869607 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.239731014 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.850735497 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.060251455 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.218395597 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.397865792 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.993646455 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.043963838 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.868120342 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.835900148 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.768784489 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.354594654 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.986032661 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.330386016 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.058237177 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.99837237 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.342360826 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.938550495 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.830736576 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.283547199 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.911483264 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.547073757 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.19554189 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.464489727 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.413778797 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.206231408 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.835417879 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.28469423 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.187613747 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.271226403 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.939077248 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.769275838 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.8446703 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.845834315 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.833952289 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.816576938 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.731300088 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.095346201 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.846590187 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.06835291 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.196312344 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.112371097 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.736266123 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.835611226 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.832154994 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.122549263 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.706481499 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.970631054 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.383569967 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.320743223 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.832409144 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.759208337 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.754961378 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.525383794 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.830305791 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.793893163 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.04795321 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.923483823 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.769700259 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.421033679 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.037748591 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.069591522 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.831660453 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.092711318 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.091689032 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.547075151 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.844157576 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.911769771 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.311781928 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.514050079 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.030085774 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.043073333 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.606336181 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.036309448 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.456222461 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.777032887 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.805795981 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.019765967 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.027461128 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.38066339 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.06219313 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.531929702 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.815628698 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.224977905 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.902523642 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.405489629 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.055784955 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.933531784 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.851542818 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.920986379 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.849627115 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.85236726 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.850789397 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.886802709 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.412122189 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.976640085 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.854989379 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.932592766 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.92050805 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.432365183 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.852290784 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.123315812 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.199341752 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.175996845 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.907079352 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.842167588 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.843448379 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.775732174 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.981294082 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.286629921 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.115705297 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.972548835 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.983234048 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.86710441 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.347754198 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.339529593 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.062921953 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.117003428 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.735770398 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.842341166 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.941187025 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.066125219 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.852921261 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.053901902 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.072219841 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.165779631 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.3097915 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.191596965 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.025058743 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.116914915 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.210398692 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.843261503 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.432038665 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.851140801 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.379380924 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.880449882 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.413434981 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.131810295 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.854018527 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.060336769 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.864777418 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.038768283 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.295577854 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.517198408 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.205311241 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.832429703 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.899414282 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.123754913 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.241607489 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.160124352 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.925263859 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.854557719 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.549818232 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.982183778 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.758801515 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.089534749 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.843541703 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.05031722 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.551507495 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.849626235 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.11987989 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.153312724 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.83971546 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.781153292 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.883479031 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.849742014 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.063046024 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.105612765 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.090118897 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.850094379 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.850668134 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.658533134 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.119935946 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.904262978 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.774647017 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.844741836 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.939120029 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.086862196 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.861445558 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.359192567 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.544597784 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.140638881 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.759561783 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.863706486 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.460691603 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.192600915 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.176025718 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.373551727 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.073270543 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.396625553 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.890234345 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.116001252 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.8458103 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.454352629 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.126277203 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.845614557 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.559883898 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.860397985 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.118442482 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.171822702 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.856559977 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.604976698 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.885473594 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.06480346 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.434839505 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.783618703 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.84809279 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.904998963 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.844559419 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.972233437 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.85418881 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.819798337 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.892390473 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.581701619 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.333674037 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.849690549 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.837826863 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.343271224 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.608672763 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.856423483 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.998291105 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.85437304 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.683850436 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.133725381 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.096314728 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.556612752 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.834031384 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.848152932 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.844378635 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.771918579 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.03876962 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.041755831 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.145863209 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.397854405 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.859405861 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.847917149 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.058982214 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.05426214 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.408287427 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.003263241 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.441968758 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.861848666 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.771143845 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.556109763 seconds)
  done (took 1660.275632421 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.863100509 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.883028961 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.927728015 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.907578367 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.879037512 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.971373063 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.893220807 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.924276051 seconds)
  done (took 57.017802398 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.844828044 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.020704507 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.859924071 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.845545757 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.909425285 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.858339369 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.073730501 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.858671236 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.914836272 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.854988193 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.850993054 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.845032675 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.177807138 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.871557852 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.845484523 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.834057273 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.85412978 seconds)
  done (took 74.135305523 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.848858759 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.050784555 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.868095237 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.867075963 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.744967562 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.853071113 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.86810748 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.899099483 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.853342242 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.027612855 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.182322572 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.860669229 seconds)
  done (took 89.694092569 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.863451797 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.852124602 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.852869534 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.85305087 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.853176505 seconds)
  done (took 11.051483843 seconds)
done (took 2162.294960147 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.084897121 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.034584909 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.080167107 seconds)
  done (took 5.884725289 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.996661768 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.044975079 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.167652658 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.170213345 seconds)
  done (took 10.15572945 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.149139929 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.218813301 seconds)
  done (took 6.140479058 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.180000111 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.873490454 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.237920002 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.849299908 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.854933799 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.849134635 seconds)
  done (took 22.329792419 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.8528979 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.856236954 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.853828809 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.856383845 seconds)
  done (took 9.191647883 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.834271524 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.523923908 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.83538265 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.849267111 seconds)
  done (took 20.816354142 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.602678911 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.978259981 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.597027147 seconds)
  done (took 8.950733098 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.414782761 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.776889653 seconds)
  done (took 8.964458714 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.015472499 seconds)
  done (took 3.788516998 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.88337049 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.124512332 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.34594847 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.377994147 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.448337973 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.690678869 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.169333886 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.087752341 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.318296642 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.309663171 seconds)
  done (took 24.529282156 seconds)
done (took 135.89833143 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.200908224 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.87446767 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.049107914 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.214894714 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.085191186 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.05219276 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.065034129 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.203917315 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.89178945 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.881810612 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.219194775 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.085423181 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.016667909 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.869444491 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.022584979 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.871411364 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.078837862 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.22152173 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.898570821 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.136074441 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.080558143 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.860148983 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.056804382 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.874400766 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.082983279 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.000319271 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.404871735 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.87692162 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.037206667 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.417525852 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.005476253 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.279922147 seconds)
  done (took 167.690911775 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.855042941 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.854206389 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.854268928 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.853852316 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.415844687 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.853315227 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.855685132 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.852446543 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.278579251 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.249438739 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.854178869 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.397596076 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.856858507 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.85372992 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.855309648 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.854752768 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.417395544 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.854813369 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.854909024 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.853559688 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.858279647 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.23804769 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.855218798 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.244891676 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.405615615 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.858581082 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.854290364 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.854117634 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.85355197 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.853363937 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.854278516 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.85498112 seconds)
  done (took 208.938538072 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.854106548 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.856672805 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.855903398 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.855033133 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.877259079 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.879430284 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.860664637 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.877471574 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.609557368 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.607429343 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.862001744 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.85374867 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.885487758 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.854898231 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.855589188 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.85533369 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.855683432 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.85643239 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.856077028 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.86146467 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.865042843 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.621189399 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.868263159 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.660295524 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.870135801 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.864751801 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.855244408 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.866065103 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.873648403 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.869182578 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.87256482 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.85704401 seconds)
  done (took 220.451896558 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.112792446 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.862585376 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.861878158 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.781688427 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.862009373 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.862180056 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.872095512 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.110831472 seconds)
  done (took 19.123520741 seconds)
done (took 617.991013406 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.335490458 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.191985464 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.037822079 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.886211456 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.144511601 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.918969979 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.882591305 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.949571116 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.50266963 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.952920201 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.526851589 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.904869896 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.613454252 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.913338925 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.003139985 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.94388042 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.424963922 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.520469316 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.060068485 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.977207067 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.052020173 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.826219059 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.97123381 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.53278307 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.635170096 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.881763644 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.95994231 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.43650597 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.893763011 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.042007252 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.666664205 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.215402353 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.899946732 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.882560344 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.942965761 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.918250052 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.16780024 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.89796528 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.005101912 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.643127877 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.974316938 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.414893229 seconds)
  done (took 102.330377688 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.854455383 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.852444153 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.851897343 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.852729515 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.852453779 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.853959365 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.852901849 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.852247337 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.853709187 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.852539752 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.853318002 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.853239183 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.853017664 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.853142263 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.852254203 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.855518982 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.853575562 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.854865412 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.852737285 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.850674606 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.852587251 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.852222109 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.868056517 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.851776368 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.852766914 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.853688053 seconds)
  done (took 49.987180689 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.86588681 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.015657442 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.103426151 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.887129035 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.868250388 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.868783171 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.883535455 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.872260954 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.867537788 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.868194426 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.957577291 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.873633005 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.884211878 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.103993301 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.886151153 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.867926082 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.867472491 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.867683544 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.023656785 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.884097328 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.88997314 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.872964112 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.886082512 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.882094577 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.869679081 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.867912672 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.871163639 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.355854198 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.877169004 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.959600145 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.914118448 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.893239219 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.275671841 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.114329376 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.925837594 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.880589077 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.868008729 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.962301276 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.874842325 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.867964153 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.886173159 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.872774626 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.105027736 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.365119572 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.882688067 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.868211175 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.366416256 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.972284795 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.909275978 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.878680173 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.106286208 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.888559168 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.869650332 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.869426172 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.904311556 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.87314653 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.86754992 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.225503519 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.879883347 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.885289625 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.873317984 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.86846393 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.026921774 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.87955598 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.021137028 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.880818818 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.877661672 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.871062579 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.106756166 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.886802897 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.363293204 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.879284056 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.864979856 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.954070287 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.020732965 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.390589443 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.878147111 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.025131868 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.287797888 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.889158176 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.872233434 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.34362395 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.893934411 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.87281641 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.867506436 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.867330703 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.865235209 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.911965199 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.881076045 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.299257078 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.367322955 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.240208904 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.893244394 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.879010482 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.865258761 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.220609018 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.877219956 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.866084495 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.09415843 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.372064277 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.88140515 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.87299238 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.34861819 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.882878197 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.885147522 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.87511326 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.105601003 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.883532963 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.912361744 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.867001145 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.872629764 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.870523581 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.883944836 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.874008268 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.866722921 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.344539955 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.978037144 seconds)
  done (took 231.889453068 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.861747588 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.866002761 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.863008707 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.865885503 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.860529291 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.865684543 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.859910737 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.860043085 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.866283032 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.861070505 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.86199626 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.86032265 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.862928864 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.874108562 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.887474528 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.867873706 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.471956338 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.862622827 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.862030698 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.865390185 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.518339811 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.868494851 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.860817016 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.859960812 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.863363358 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.861254975 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.871065188 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.88043828 seconds)
  done (took 167.277196293 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.872296611 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.983141251 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.889700939 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.896339298 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.878079639 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.866479358 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.89140064 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.884349815 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.874140888 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.867701499 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.866808995 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.929337056 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.880509521 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.968623445 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.901943072 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.900834508 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.975558955 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.877481835 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.866844427 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.867101692 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.897460809 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.86255867 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.929870432 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.995778267 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.889447996 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.98590083 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.874954324 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.870713492 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.868200831 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.986711786 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.887803167 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.93098908 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.899097446 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.888079416 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.991324023 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.989871557 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.977932769 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.900653464 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.874153963 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.867515419 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.867927684 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.855692406 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.986979771 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.891160409 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.870385864 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.975079813 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.891169603 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.873340209 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.878490089 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.867999904 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.883234593 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.888703704 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.937566373 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.004284493 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.905526005 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.8949952 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.894959479 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.145885895 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.879214431 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.97063758 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.864345884 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.988425369 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.893373771 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.859794018 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.870983364 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.875373196 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.898511931 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.904022075 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.976034128 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.880800511 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.971063207 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.907212583 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.878260157 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.869975576 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.871940982 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.988291277 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.992342632 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.908205188 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.908673405 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.905097795 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.865916396 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.871010681 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.858590323 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.887399241 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.874606922 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.988089926 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.991949084 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.880804908 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.873592286 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.873057101 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.873175568 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.896926051 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.997393625 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.90878137 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.968089232 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.942915086 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.947784185 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.887711996 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.885258763 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.876154004 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.934629078 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.888634095 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.882787335 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.191493102 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.941875355 seconds)
  done (took 202.662070201 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.348190188 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.925181487 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.928664065 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.201551083 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.23091254 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.815124202 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.919051436 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.920792565 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.944076109 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.115137513 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.996345259 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.940168412 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.907743884 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.896594442 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.92273893 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.943023265 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.930787188 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.234347495 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.020824909 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.090681556 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.902419114 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.189597062 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.199513811 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.301995067 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.95733328 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.254324908 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.584196445 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.067789635 seconds)
  done (took 61.485601014 seconds)
done (took 817.411028559 seconds)
SAVING RESULT...
DONE!
