cset: moving following pidspec: 25975
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.513621487 seconds)
loading group "string"... done (took 0.531313662 seconds)
loading group "linalg"... done (took 9.105040202 seconds)
loading group "parallel"... done (took 0.178545697 seconds)
loading group "find"... done (took 1.316184775 seconds)
loading group "tuple"... done (took 2.070739002 seconds)
loading group "dates"... done (took 1.531613132 seconds)
loading group "micro"... done (took 0.214016765 seconds)
loading group "io"... done (took 0.554122445 seconds)
loading group "scalar"... done (took 51.937735838 seconds)
loading group "sparse"... done (took 13.884033877 seconds)
loading group "broadcast"... done (took 1.295598417 seconds)
loading group "union"... done (took 10.267280909 seconds)
loading group "simd"... done (took 3.055293013 seconds)
loading group "random"... done (took 11.600552871 seconds)
loading group "problem"... done (took 2.228175866 seconds)
loading group "array"... done (took 24.366611626 seconds)
loading group "misc"... done (took 1.155231813 seconds)
loading group "sort"... done (took 3.802903333 seconds)
loading group "collection"... done (took 19.441017706 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.615272713 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.182032501 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.204820245 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.286930797 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.236357975 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.151661735 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.136609329 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.257453635 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.5880683 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.211038606 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.13126967 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.511740387 seconds)
done (took 6.256604151 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.253089597 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.181619945 seconds)
    (2/2) benchmarking "String"...
    done (took 0.168114617 seconds)
  done (took 1.035550549 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.074366174 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.15281371 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.089535474 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.107056426 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.090024648 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.105443152 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.090590871 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.10587639 seconds)
  done (took 1.428758615 seconds)
done (took 3.479443355 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.499038847 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.854697124 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.527107181 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.163675637 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.299891929 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.299131753 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.332400391 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.19990584 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.091344687 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.089407934 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.17394245 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.38514909 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.437573667 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.957554289 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.087927886 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.111690792 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.115545925 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.759473458 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.076572634 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.111618291 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.51175069 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.194268349 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.096462707 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.123426111 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.183312549 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.130443118 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.161173638 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.099581102 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.665508515 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.132852679 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.188132025 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.095082238 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.157521016 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.194539082 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.204978944 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.091674203 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.682125413 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.196824785 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.092891504 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.09698086 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.666446186 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.117614374 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.185305109 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.100176313 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.088882186 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.18194791 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.095515902 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.07561403 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.112324105 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.08336883 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.163855852 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.464208049 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.103154263 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.168995576 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.089676071 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.688903023 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.098079841 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.27404785 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.123383504 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.093206949 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.089363091 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.08705375 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.157251166 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.092504188 seconds)
  done (took 19.995756087 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.148646479 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.163803479 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.075544954 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.153257111 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.12325117 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.077044262 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.098913542 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.076605024 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.106434897 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.241010131 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.137391872 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.153253003 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.071280746 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.101198328 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.1263599 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.2457356 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.105000735 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.118090209 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.085161147 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.088043033 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.137734623 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.095955141 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.090140406 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.106597406 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.16689575 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.203555055 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.109010136 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.122452883 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.086442911 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.096907811 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.141604301 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.146379184 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.091597113 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.084963028 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.170811173 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.12198164 seconds)
  done (took 5.174639412 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.200227548 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.121314982 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.212724687 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.161555143 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.145298506 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.167570183 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.144996334 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.281366674 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.215172813 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.15978193 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127720389 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.095072936 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.076678024 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.077378294 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.093399374 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.393463628 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.177345777 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.129766292 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.151645001 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.085789813 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.096825109 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.366753235 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096954781 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.077655294 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083455109 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.082696382 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.197772427 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.084528819 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 1.206140804 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.083790397 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.080309244 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.103968789 seconds)
    (33/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.159747569 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.129465941 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.111669973 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.135069767 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.084410056 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.097026587 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.196723519 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.108011213 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.075293704 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.121305987 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.114654137 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.13487656 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.082844821 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.106650381 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.217093442 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.079468851 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.102737972 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.068154977 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.195389686 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.126426513 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.077224805 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.282496 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.113832828 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.085186333 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.079718232 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.247014345 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.114463352 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.078751259 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.093108106 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085296855 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.075844367 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.42930834 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.10437387 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.96332076 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.081516808 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.157322853 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.082632951 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.101479065 seconds)
    (71/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.079630518 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.082048524 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098692033 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.10008324 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.077516871 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.093208508 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.078232089 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.076411853 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.08134173 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.111137691 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.082163001 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.093000192 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.143511938 seconds)
    (84/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.082750596 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.113703314 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.098835486 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.122191208 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.085161178 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.076633021 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.124934909 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079904827 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.082161227 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.171087964 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.084884564 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.109916382 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.083268016 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.141924364 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.081779162 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.201362617 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.081362763 seconds)
    (101/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.079594353 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.119714831 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.08237847 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.125626439 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.099875299 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.095134509 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.081219902 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.075095145 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.095101762 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.143910568 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.081558916 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.082567634 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.097729468 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.090890316 seconds)
  done (took 22.672901393 seconds)
done (took 48.526570496 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.444426351 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.087900427 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.086086032 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.105085813 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.087542352 seconds)
  done (took 1.575559793 seconds)
done (took 2.318855271 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.320979276 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.197257123 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.098576964 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.191891138 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.083905155 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.199673057 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.186816287 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.092837656 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.212137759 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.083456471 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.192676601 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.082979427 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.100618244 seconds)
  done (took 2.810003898 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.097319934 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.103443782 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.096379971 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.11300598 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078799324 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.095314051 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.110575992 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.106677379 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.094134269 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.104155164 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.078176472 seconds)
  done (took 1.816731773 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094677119 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.101996222 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084230676 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.109586804 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078933651 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.092232034 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.108729834 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.103545536 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.092291305 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.104878074 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.078670132 seconds)
  done (took 1.795735414 seconds)
done (took 7.162344639 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.965351832 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 27.419881422 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.168504021 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.295017353 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.345297676 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.254146079 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.646278 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.155228233 seconds)
  done (took 32.147418418 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.110720181 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.088410194 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.151698826 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.089780648 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.08618461 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.103636276 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.090520591 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.085451837 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.108681995 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.090865288 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.091485564 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.085827036 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.103071271 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.089841119 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.086417513 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.104134982 seconds)
  done (took 2.369075894 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.140075496 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.111844814 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.108974836 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.093286127 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.088297773 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.110014139 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.095781811 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.090319969 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.1053842 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.089195414 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.095933214 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.107598094 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.09203188 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.087975791 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.106508325 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.118095862 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.087383136 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.107386112 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.116933958 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.092057254 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.108923506 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.089957018 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.091694812 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.108278458 seconds)
  done (took 3.272480474 seconds)
done (took 38.537091428 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.151600682 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.09736525 seconds)
  done (took 0.99860788 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.139911702 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.1556195 seconds)
  done (took 1.048976348 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.108711654 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.083812343 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.131508295 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.0995554 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.084729892 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.099909839 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.112536661 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.084706101 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.100162122 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.085018673 seconds)
  done (took 1.749135086 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.088829345 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.088801242 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.116486592 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.138047011 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.092388292 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.104836578 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.089761604 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.086869527 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.106071114 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.084702671 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.093425804 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.120363701 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.089220703 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.120649454 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.090209532 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.090418604 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.109408516 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.090949718 seconds)
  done (took 2.561316133 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.08381708 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.086226694 seconds)
  done (took 0.929623744 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.087840582 seconds)
    (2/7) benchmarking "second"...
    done (took 0.083550148 seconds)
    (3/7) benchmarking "month"...
    done (took 0.085735569 seconds)
    (4/7) benchmarking "year"...
    done (took 0.102358578 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.084930069 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.083814566 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.099429898 seconds)
  done (took 1.388117888 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.494184475 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.263121129 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.370106266 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.102509265 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.140320022 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.338347406 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.14000848 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.098230585 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.098185927 seconds)
  done (took 2.838912102 seconds)
done (took 12.270631116 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.091559108 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.215393323 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.628212086 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.10768803 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.205561035 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.157657185 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.291257896 seconds)
done (took 2.460865665 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.349755899 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.151066336 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.083992899 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.083764902 seconds)
  done (took 1.425270726 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.078674556 seconds)
    (2/2) benchmarking "read"...
    done (took 0.092568462 seconds)
  done (took 0.938179347 seconds)
done (took 3.127826519 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083681412 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.107317524 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.080935179 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.099352497 seconds)
    (5/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.084618977 seconds)
    (6/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.083082301 seconds)
    (7/24) benchmarking ("one", "Float64")...
    done (took 0.099782176 seconds)
    (8/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.083903779 seconds)
    (9/24) benchmarking ("zero", "Float64")...
    done (took 0.083054081 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.081982745 seconds)
    (11/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.100857196 seconds)
    (12/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.083031614 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 0.082412925 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.082221641 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099648302 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082282193 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083393809 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099107981 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.082222939 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081576896 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081423598 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.099166913 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.083596555 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.082245541 seconds)
  done (took 2.910362514 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.107995031 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.083395573 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.103009489 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.089108682 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.086949923 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.087107778 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.104238238 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.083973286 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.087408707 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.10112923 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087661327 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.0860623 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.10088434 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.08805859 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086029957 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.103152897 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.088716843 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083852502 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100761605 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.088303656 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.087594336 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099070239 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.089172232 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.088783508 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.102801737 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.088984663 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.085070763 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.083938948 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103877022 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.088253774 seconds)
  done (took 3.535099942 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.095927375 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.082976887 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.085608524 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.111146637 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.084336745 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.086775213 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.098500467 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.084001269 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.087455736 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.084927466 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.105637202 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.086504526 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.083353687 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.086899753 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.104090438 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.090103094 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.095254599 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.101264261 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.085098317 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.087226795 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.087935405 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.100105614 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.087996815 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.086544091 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.102216459 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.084746864 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.086736181 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.086036204 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.103395516 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.087081896 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.089243294 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.105363037 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.087958638 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.096850457 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.089000697 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.103096835 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.092883245 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.082793299 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.104896738 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.085151402 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.084524052 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.085673294 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.100379196 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.093572362 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.087318406 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.103149175 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.084502815 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.08873054 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.087132393 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.107918576 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.084547321 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.083338162 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.08752161 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.104386919 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.090438405 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.083492679 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.102983317 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.084789482 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.088725223 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.084990753 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.099789315 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.084417041 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.09111435 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.103179315 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.105070586 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.093990932 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.098889432 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.090737845 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.0886641 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.092079249 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.106313465 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.097605539 seconds)
  done (took 7.421320233 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.098239877 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.093012699 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.083539233 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.100827786 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.083701372 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.083607936 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.105288751 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085100941 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085212453 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.10697048 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08635104 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.084419066 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084148667 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.101698857 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.085787403 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.084207238 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.106244741 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.084277598 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.084992149 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.084971446 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.101345898 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.090230858 seconds)
  done (took 2.778805694 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.226135497 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.091750112 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.134136564 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.114129856 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.101412634 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.112911006 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.08980822 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.090431122 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104985059 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.094105278 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092963636 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104827091 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.102653776 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.092114137 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.110430551 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.094511448 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.088322893 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.110794505 seconds)
  done (took 2.732221853 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.099368994 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.089251893 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.1251382 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.087332779 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.086334504 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.085294313 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.108833941 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.108028065 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.086832225 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.10335551 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.093625147 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086521729 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.103475639 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087531019 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086491526 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.105169629 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.08850671 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085941703 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.109476576 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.092532797 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.090843901 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.110331071 seconds)
  done (took 2.895655433 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.100892271 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.086521593 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.120782657 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.089851406 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.08426684 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.08469342 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.109012452 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.08553533 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.091915711 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.103069791 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.086162441 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.084855739 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.117574996 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.086461636 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.0905932 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.101487493 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.087419314 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.085569782 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.085811106 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.101662476 seconds)
  done (took 2.66064537 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.171153076 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.120722639 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.105301508 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.112780151 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.12200644 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.105362988 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111740967 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.122375545 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.105017594 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.132249707 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.106558049 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.10447919 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.130279449 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.111689788 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.105298436 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.130356395 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.114534559 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.130270922 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.105548681 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.104443275 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.134382447 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.105891286 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.130472196 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.106010118 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.10461253 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.122210997 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.106752382 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.110313717 seconds)
  done (took 4.052199822 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085825951 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.086286034 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.083950364 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.10080964 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.084944566 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.083858579 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.083781068 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.100780596 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.086388959 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.083810162 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.083740912 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.10354488 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.085138518 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.085415845 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.101968278 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.086139612 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084981963 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.083727787 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.101934021 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08454888 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.084897487 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084319709 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.101586839 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.085503286 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084103047 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.102252354 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.085440084 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.0843844 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083772063 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.100817444 seconds)
  done (took 3.461762032 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.094402403 seconds)
    (2/2) benchmarking "in"...
    done (took 0.091099793 seconds)
  done (took 0.967692538 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.093010096 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.101277359 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.084468643 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.103266002 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.093423957 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.08474902 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.111616741 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.09271168 seconds)
  done (took 1.550638276 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.142587315 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.159175925 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.091857551 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.098325922 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.159828346 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.153000057 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.132585045 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.09176288 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.104068134 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.082660423 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.154486929 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.081193051 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.090416674 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084404355 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.106777123 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.09593606 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.086286211 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.113514202 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.093523812 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.087842161 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.109011951 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.095662412 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.091056643 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.113658293 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.084611844 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.09172696 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.110120351 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.101148144 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.084933614 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.109032183 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.088208087 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.085784768 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.088972062 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.108201487 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.088381408 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.159885375 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097798097 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.085185065 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.106711286 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.091971677 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.120620565 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.102720294 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.091540557 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.088482279 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.110149126 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.092835431 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.092748948 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.084916741 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.100123594 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.086133086 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.087098815 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.102438409 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.08661308 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090741409 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.105945388 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.098659526 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.088730648 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.102087619 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.086878452 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.084625373 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.087465622 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.102535858 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.092441124 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.089922148 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.109216346 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.091371273 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088535399 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.103201302 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.088469855 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.087429191 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.105216025 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106462512 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.089997933 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.107489738 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.094155147 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.086984934 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.103334526 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.093159619 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088697679 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.089369599 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.108931989 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.116791964 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09183725 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.102790508 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.085575834 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.094075806 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.106896612 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.090549615 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.082840135 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116649534 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.090049891 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.08783693 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.082577977 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.105690864 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.086227632 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.089609503 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.101015423 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092185409 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.084700205 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.108726197 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.094562227 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.089000178 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.107993637 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.093171777 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.092661512 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.088460496 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.15278754 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08593169 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.104441441 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.089344223 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.092286038 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.083226727 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.108362003 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.086075297 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.087180374 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.103440463 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.092621054 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.089649431 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.108083386 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.092534725 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.09290926 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.109212718 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.090552928 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.085862726 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.085159495 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.109858282 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.096464464 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.09169425 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.107997031 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.087489358 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.087482773 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.107807664 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.092749696 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.086558568 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.110097113 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088451879 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.085725801 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.087630199 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.110023916 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.09048183 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.08459274 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.106820184 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.091095335 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.088256603 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.10838797 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.091830575 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.084132916 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.100447086 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.092721804 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.086215169 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.086544449 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.114898354 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.086604914 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.089342644 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.105516186 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.097080087 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.086554763 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.110784433 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.090278482 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.093036302 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.11103588 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.084166761 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087914774 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.088989895 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.110757764 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.086869939 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.085789413 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.103765171 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.095186679 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.08317725 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.108351724 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.083787544 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.086916969 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.091662185 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.107081247 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.092007656 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.086289319 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.147753069 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101042082 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.092302864 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.108012014 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.091259817 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.092487644 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.107423458 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.092663743 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.092433014 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.092541108 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.110514 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.089415217 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.093753506 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.106118502 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.089726579 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088785863 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.109168293 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.083709995 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.08881059 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.081380794 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.111370459 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.092433222 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.092040649 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.110646361 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.09118242 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.088931708 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.114144199 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.087510306 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.090616179 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.09980221 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.09430975 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.096781004 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.093097087 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.111988004 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.093039476 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.088199007 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.107547901 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.096545005 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.089947833 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.108576434 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.089083174 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.083298519 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.083686452 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.113116922 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.090816668 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.085630912 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.104349089 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093784847 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.093340351 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.106485763 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.084071679 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.091143177 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.112299386 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.087090862 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.090938173 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.085907017 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.107592727 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.09904619 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.08198792 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.106307614 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.092825325 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.091767838 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.104937361 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.090241454 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.089710373 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.113471592 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.091467834 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.0896623 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.086292569 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.114274694 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.089124493 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.085646827 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.106154235 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.090886318 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.083426834 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.087934789 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.110710135 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.087759529 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.086349691 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.113964824 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.094628973 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.094339516 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.108229162 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.092955143 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.09402108 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.112677907 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088976403 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.092936514 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.104011443 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.084588635 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.086838166 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.082007646 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.109445186 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.086984493 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.09291683 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.107840818 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.090771842 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.092144671 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.11098738 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.088967124 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.093097208 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.119241141 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.085468888 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.08382467 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.106700691 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.092005341 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.08720819 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.086892957 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.107026237 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.102725145 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.092377574 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.113103366 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.08844195 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.085750417 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.113167819 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.097777268 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.093739909 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.093224106 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.113525499 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.086267686 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.090928437 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.105649115 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.096405781 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.084478224 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.109350466 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091198527 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.089140185 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.105417594 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.08973877 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.085315509 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.102070346 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.088268862 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.093627312 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.088792347 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.111100253 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.090485355 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.088240585 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.106547012 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087554537 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.093661745 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.108710458 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.096768297 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.08754649 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.083835229 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.103902356 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.094893209 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090662479 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.113257875 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.087812236 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.091717124 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.113995111 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.093090893 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.089685513 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.096685942 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.116416873 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.094484724 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.095047068 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.103643125 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.089448846 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.09574035 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.105402677 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.092575594 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.089918175 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.084051942 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.11390851 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.093603013 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.092093504 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.109282811 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.0851963 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.088339795 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.113063093 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.094117769 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.090412754 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.090063569 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.111589126 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.086222081 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.091633787 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.112473418 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.092323563 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.094215231 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.109865196 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.094362373 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.087671203 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.112537086 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.090868018 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.08593978 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.08432528 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.107963093 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.095563098 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.085113437 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.113928426 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.094994827 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.08812509 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.088445917 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.113948045 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.087783453 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093922371 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.114225821 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.09046075 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.098510107 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.10731544 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.090801733 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.093450017 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.112597737 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.086424578 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.090305253 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090076936 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.115796461 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.090632748 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.093248933 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.111401127 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.095361016 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.091444834 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.112604802 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.095360527 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.094105483 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.08477049 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.115919691 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.097077476 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.090560061 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.107401838 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.092269812 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.08614505 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.108453493 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.096581062 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.088337461 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.09626505 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.11429492 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.090411456 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.088599343 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.11466721 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.09136658 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.095287098 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.106942911 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.095261142 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.084815806 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.113299062 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.091888569 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.095185599 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.08742842 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.106365392 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.095466548 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.093656329 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.11295329 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.095810614 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.094744024 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.103315134 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.086799549 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.091395651 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.087790479 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.118997571 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.095770934 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.088938625 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.110260701 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.091315815 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.088709932 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.115526256 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.08807029 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.088328721 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.11174756 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.095636333 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.089990096 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.085960385 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.112895299 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.090845445 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.09336457 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.110277568 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.08732909 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.09036297 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.115941636 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.091756283 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.087375215 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.107950193 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.098165127 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.091490712 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.088512981 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.106285572 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.098549179 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.093336005 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.116782623 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.089380678 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.092833266 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.108539505 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.091711381 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.095526813 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.109265626 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094033537 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.090484613 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.113459283 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.099097886 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.085145077 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.088080964 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.119637175 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.095281385 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.095696868 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.111057268 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.091576052 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.095308564 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.116556954 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.092048855 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.08568286 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.085690711 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.110630536 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.086469525 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.090769182 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.118220835 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.092551272 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.089514212 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.113508824 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.095163425 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.091049039 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.090021267 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.105762695 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.097714038 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.088169514 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.11495579 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.086460805 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.085024607 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.109323522 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.096142089 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091035592 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.091613976 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.110991166 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.091862403 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.086621928 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.110332072 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.097361799 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.093401024 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.114144685 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.093328718 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.089924022 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.091249689 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.120555296 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.091088646 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.091187973 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.120088466 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.097772693 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.092432304 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.111526183 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.098380926 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.09549928 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.109977977 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.098448321 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.089171872 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.110197929 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.098925774 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.097156632 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.121738124 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.093379312 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.086393528 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.093512251 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.11010727 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.087828344 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.095441097 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.117668076 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.098406777 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.092144195 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.10916338 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.10104459 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.098073431 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.111001479 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.091463164 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.091077184 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.094200745 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.10987802 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.094628858 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.089003186 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.117669285 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.098142251 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.096688263 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.119537718 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.088158868 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098986339 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.094602529 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.122125182 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.090454369 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.086615676 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.106742979 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.093208405 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.096977925 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.11790795 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.094999616 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.095483776 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.094206498 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.113289378 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093452514 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.089151279 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.117115226 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.097295224 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.090132467 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.093967154 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.111730478 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.093284694 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.09147592 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.116517933 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.096900245 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.093561117 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.121104461 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.097713777 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.090891301 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.109367599 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.095835345 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.09196542 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.094057175 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.11509706 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.090025759 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.086887068 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.116113634 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.099112903 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092139693 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.117850578 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099673859 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.090835315 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.094764814 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.119360654 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.094666613 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.090063155 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.114041115 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.094798362 seconds)
  done (took 58.996759383 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.144528002 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.097583194 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.11084316 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.092459747 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.111629279 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112513325 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.091998711 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.092143419 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.111874294 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.103779176 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.091228704 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.09164841 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.128870758 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.113670571 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.131347204 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.102948373 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.091169397 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.113255753 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.092206114 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.092453516 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.128444664 seconds)
  done (took 3.086427704 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.11208942 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.105825298 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.123216481 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.10795481 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.098586822 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.125531289 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.102673637 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.123957717 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.108033485 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099701234 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.127385889 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104280312 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.09917251 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.120712662 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100487581 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.120592202 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.10824421 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.09843392 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.125329121 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.103957336 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.100197335 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.124433826 seconds)
  done (took 3.279197504 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.101999648 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.096014925 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.098070993 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.111742347 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.09781573 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.091312491 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.119248097 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.095047297 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.100320681 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.092954519 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.109175936 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.093836385 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.097904339 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.112175683 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.090009604 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.091879185 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.119658673 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.097533108 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.09727413 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.091521528 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.127270662 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.092210916 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.091611583 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.108479518 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.105402125 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.0972417 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.111680346 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.097417586 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.088071451 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.096186129 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.114115994 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.094461191 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.093774966 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.109408513 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.0898585 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.095014561 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.114780405 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.093971201 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.093550299 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.093452043 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.113445074 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.099811703 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.097491188 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.111764367 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.094124965 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.094132946 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.094805219 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.113448461 seconds)
  done (took 5.672749181 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.125272475 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.151972403 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.097115789 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.123851685 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.13074292 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.10391949 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.094767192 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.126266203 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.094167565 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.115812912 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.1095749 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.106237139 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.118130038 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.101051584 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.09765484 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.11802473 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.099791367 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.094724389 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.121487382 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.097457549 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.100773375 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.119353436 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.10743028 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.105495517 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.120319276 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.096412143 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.095531341 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.121139967 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.106688625 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.121638821 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.101787813 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.10116055 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.127666801 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.099426042 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.338092232 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.117864037 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.110631932 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.097260452 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.118902845 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.096889952 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.097560805 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.119534556 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.100509992 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.108580238 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.118088542 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.100956541 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.096307262 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.113624147 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.106849659 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.097763475 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.122807958 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.108715242 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.100304072 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.117496492 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.100703257 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.107312737 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.118590774 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.095990183 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.099122486 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.126478398 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.094840226 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.099204475 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.128619606 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.097736268 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.12261656 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.108395371 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.097470453 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.11898338 seconds)
  done (took 8.631535857 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.133283133 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.101145626 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.129932644 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.109558899 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.101157316 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.122463612 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.101803515 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.099433928 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.122810786 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.106690315 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.10061852 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.22110156 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.118144826 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.107263633 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.101969986 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.12312878 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.102102855 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.100264073 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.122723134 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.102427578 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.101901834 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.129432699 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.102430795 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.108998344 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.133209862 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.096628304 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.121385505 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.102846364 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.108821159 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.121829183 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.114089461 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.100969681 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.122812031 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.110891816 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.133147388 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.102237807 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.095090678 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.122821475 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.103222 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.100998936 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.117809129 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.111995463 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.101489397 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.118572231 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.102616418 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.101186904 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.13192699 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.114064221 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.105762821 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.128238965 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.101224011 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.131571969 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.103287341 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.101178302 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.132019953 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.117328264 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.130489557 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.111261531 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.101668347 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.131249879 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.111076328 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.138748679 seconds)
  done (took 7.952506243 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.096336689 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.094045918 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.092444981 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.113643784 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.095983792 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.093530181 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.093243612 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.115498613 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.094628914 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.093609007 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115210805 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.094754707 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093865954 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.093639734 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.1139811 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094167997 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.093273548 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.091832243 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.115262468 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.094792448 seconds)
  done (took 2.834355319 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.104704273 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.112377547 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.095002824 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.123224567 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.098571518 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.100953807 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.119485381 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097811312 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095724044 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.118696383 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.105441685 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.105505721 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.118277561 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.101683939 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.104589759 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.123622769 seconds)
  done (took 2.58035624 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.116666594 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.113768907 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.189607615 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.099840296 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.118161264 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.104920217 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.096715176 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.097551959 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.118112594 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.103567695 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.099844524 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.122468252 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.097853787 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.098843735 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.117713943 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.100862617 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.094637433 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.100965701 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.117897478 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.169342617 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.122500383 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.098669332 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.097031296 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.123855805 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.098857526 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.099713008 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.125618357 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.097103476 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.098096749 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.118815348 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.100474591 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.103743113 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.095095665 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.122140088 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.099854324 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.097455833 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.118011579 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.0990874 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.099637594 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.119153107 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.101468518 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.098052058 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.118176677 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.102053769 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.094967671 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.097213572 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.11755953 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.103895417 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.097236309 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.120286643 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.098044048 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.101463975 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.124164539 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.108058881 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.104826885 seconds)
  done (took 6.856165992 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.11041875 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.098403396 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.108369788 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.118570698 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.098543931 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.09792854 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.120504838 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.098958598 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.096629169 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.11683232 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.099917825 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.098673299 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.098105703 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.12056618 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.098350902 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.097636441 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.116537123 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.099347572 seconds)
  done (took 2.754844687 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.103122325 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.096723258 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.101513501 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.118364942 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.097077151 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.096566676 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.116525693 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.0978955 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096127596 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.095857688 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.11865836 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.098209774 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095495036 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.118084825 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.098193648 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097586885 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.096987814 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.118579605 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.096714633 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094858819 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.117178743 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.097926883 seconds)
  done (took 3.131830254 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.111467548 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.183917197 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.10676305 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.192836786 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.097908156 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.095123304 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.127378952 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.097886894 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.112872976 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.116530481 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.097041695 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.09573831 seconds)
  done (took 2.298884337 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.127438296 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135532654 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.118835843 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099556773 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106865926 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123089222 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102342867 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101760893 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131825898 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11398564 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102005011 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13225771 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110086589 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130973824 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107332767 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106222278 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12393134 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101980383 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097908985 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.140347263 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101936472 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130806257 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103089339 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100879429 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122710873 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111237037 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110240773 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135159484 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.101250622 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131997616 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108845115 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101092201 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.132285637 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113629377 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09862073 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133400648 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101695214 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140016513 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109158357 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110679902 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.121520259 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108213742 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110074877 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129700284 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110182527 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123147101 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109704431 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101455172 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123950517 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125937188 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129329989 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112371924 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106621912 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13220107 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11127127 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.146635131 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114930044 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11044949 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129816794 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114000482 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.132278173 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108897314 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111987015 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13619601 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107148894 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.132869433 seconds)
  done (took 8.58171828 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.140033848 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.097594378 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123301067 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114650116 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110169509 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125647604 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10221872 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.101831258 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125266633 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099483736 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.169656347 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.102979803 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112576434 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.133647277 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102482682 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102490536 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125451391 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111821433 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119980483 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127158121 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.101754874 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132865293 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111225025 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.133880269 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115331639 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108061653 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124507984 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104162888 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103033916 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125511521 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109791752 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.101706816 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.134193354 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.0981672 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132296335 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103498032 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101834364 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12986428 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103609937 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107665256 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.133755881 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120103914 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123886551 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104476828 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113301407 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125851236 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.103532388 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098847537 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124453992 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.100610834 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113505005 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.136948519 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115297376 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.13320898 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104033472 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.102842257 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125022652 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103542208 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103180114 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129347374 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111085332 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102953426 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.147634279 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102876833 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125157661 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112648269 seconds)
  done (took 8.519286542 seconds)
done (took 160.9108636 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.148546795 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.189084049 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.145125091 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.177239667 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.092679782 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.126034708 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.147276926 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.147402982 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.091555884 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.11453059 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.093582347 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.094031822 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.178652749 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.093094538 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.092375783 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.094516498 seconds)
  done (took 2.891618598 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.190610196 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.307622724 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.109307783 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.118015933 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.102193048 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.098384743 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.11736479 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.099524276 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.096222109 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.126252747 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.101095734 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.094760545 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.124973376 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.096340192 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.096386616 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.098037866 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.127660305 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.100232098 seconds)
  done (took 3.086824929 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.119449078 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.140825504 seconds)
  done (took 1.141890668 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.130186647 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.198378057 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.276636758 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.172963545 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.120766274 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.137503773 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.150956912 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.13291248 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.179748381 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.13442572 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.112080407 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.097535508 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.145962293 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.103749575 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.109737562 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.121027939 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.125709098 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.108676916 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.131544597 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.100182851 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.118727073 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.125703127 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.104156244 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.130842388 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.17097643 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.110157502 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.125382995 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.102431609 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.120918292 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.109467395 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.106855824 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.136244348 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.111561658 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.17426472 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.103610426 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.170896114 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.108087 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.118838411 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.109538254 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.097713979 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.122397587 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.103849701 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.115447759 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.119066524 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.103237057 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.108071413 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.124418699 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.103746663 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.106554004 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.131582232 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.106402821 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.126364643 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.148622048 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.130756951 seconds)
  done (took 7.777193286 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.852862593 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.140041863 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.098831633 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.007331814 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.148068667 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.114295422 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.84591049 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.143678761 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.232149937 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.901059042 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.115186287 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.111305459 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.261323375 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.250922827 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.181356061 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.369569753 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.686159253 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.133944448 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.127951736 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.163033231 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.108587179 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.145291872 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.122014385 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.438580822 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.099472749 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.097704191 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.12682077 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.11180102 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.177532836 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.098848042 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.101186957 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.197276089 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.28670669 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.208878625 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.099597673 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.119497575 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.098034965 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.184180144 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.269846106 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.223651459 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.159896921 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.117939105 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.098141278 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.106428306 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.14138586 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.094510563 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.181742623 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.190274132 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.168779406 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.124509352 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.111831081 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.13038605 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.106675268 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.179546206 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.095769958 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.356333514 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.352215723 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.120346424 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.107735345 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.134902183 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.268731993 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.099213782 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.234426853 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.145069709 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.213543315 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.099382474 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.814281066 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.182377986 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.098377881 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.104845161 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.127276437 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.105048702 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.105079866 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.179573803 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.400847707 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.112431073 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.101942181 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119636202 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.241242425 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.100461791 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.097154149 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.182126246 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.098891356 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.130164966 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.112690426 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.130526049 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.168324488 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.26903199 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.110562666 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.130813839 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.103650132 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.131192854 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.101982024 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.23125712 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.231325645 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.151387033 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.233950011 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.128286916 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.157475185 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.184385618 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.126903141 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.166023201 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.128349127 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.115465986 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.126950522 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.225610505 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.133118856 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.119733529 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.104875837 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.106585781 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.158269016 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.101706028 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.128073856 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.165697693 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.463460529 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.183983739 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.095091219 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.101591992 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.131069763 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.178558222 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10757321 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.266128071 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.107624554 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.186426809 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.105457813 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.118041962 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.107123507 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.181293072 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.108075009 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.129051771 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.107490835 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.109107667 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.270573744 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.221268372 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.134378871 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.2426893 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.165868517 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.128649757 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.168885522 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.130260324 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.185721625 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.110555817 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.1062386 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120407007 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.802774192 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.113455911 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.105676864 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.127383709 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.181577843 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.121446616 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.101947886 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.098612646 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.115932326 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.808484806 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.103647673 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.096010544 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.099033155 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.129095264 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.107167823 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.12741319 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.105236077 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.178697213 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.246117065 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.11192942 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.128191065 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.099523501 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.178099652 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.100790885 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.09845252 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.12026539 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.100787301 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.107991568 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.125105465 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.103300846 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.190717478 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.153469594 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.252241783 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.531461336 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.100036056 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.098703723 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.241464763 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.121202579 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.31885738 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.107156385 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.234536001 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.186212397 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.095801381 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.37110396 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.165366369 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.205791304 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.102428085 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.191494597 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.096552326 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.129285058 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.157357909 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.12217671 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.107529615 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.178551983 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.113950932 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.133876006 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.18751958 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.099198212 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.250490017 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.096096328 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.189729655 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.100373716 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.129439913 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.322856054 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.100722896 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.11524897 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.179192531 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.12490551 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.10102285 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.691192644 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.100365296 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.110392845 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.130378219 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.235511185 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.186213064 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.108863794 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.129851479 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.114084303 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.180951482 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.209462288 seconds)
  done (took 45.741362649 seconds)
done (took 61.51403576 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.289180747 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.254429765 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.306712194 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.214611096 seconds)
  done (took 2.04267824 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.286909577 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.164018533 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.232918615 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.097395448 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.249210955 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.096751476 seconds)
  done (took 2.035841509 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.501635455 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.388912706 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.346062771 seconds)
  done (took 2.14820111 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.247230614 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.234948557 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.347719448 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.412592494 seconds)
  done (took 2.266995865 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.298629284 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.131676651 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.125854018 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.214325883 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.278472223 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.258768674 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.153959472 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.202645911 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.152764034 seconds)
  done (took 2.775810986 seconds)
done (took 12.181848002 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.362114261 seconds)
    (2/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.334002411 seconds)
    (3/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.223196986 seconds)
    (4/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.276615656 seconds)
    (5/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.103439336 seconds)
    (6/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.276052006 seconds)
    (7/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.103379096 seconds)
    (8/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.310963396 seconds)
    (9/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.221762977 seconds)
    (10/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.188212058 seconds)
    (11/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.083356572 seconds)
    (12/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.133596994 seconds)
    (13/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.131830697 seconds)
    (14/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.225921368 seconds)
    (15/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.107939701 seconds)
    (16/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.217325355 seconds)
    (17/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.173378505 seconds)
    (18/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.265986017 seconds)
    (19/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.082282868 seconds)
    (20/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.33574449 seconds)
    (21/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.11328627 seconds)
    (22/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.225064108 seconds)
    (23/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.114160597 seconds)
    (24/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.203874974 seconds)
    (25/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.105692076 seconds)
    (26/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.195876163 seconds)
    (27/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.199227177 seconds)
    (28/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.08659546 seconds)
    (29/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.192913153 seconds)
    (30/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.138624799 seconds)
    (31/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.112552679 seconds)
    (32/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.130539025 seconds)
    (33/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.316507064 seconds)
    (34/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.186078588 seconds)
    (35/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.183048564 seconds)
    (36/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.170154527 seconds)
    (37/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.150148565 seconds)
    (38/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.129544421 seconds)
    (39/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.082170364 seconds)
    (40/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.329832338 seconds)
    (41/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.210323338 seconds)
    (42/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.103418181 seconds)
    (43/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.336698531 seconds)
    (44/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.1075634 seconds)
    (45/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.123902669 seconds)
    (46/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.204255443 seconds)
    (47/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.082498224 seconds)
    (48/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.230350622 seconds)
    (49/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.081640375 seconds)
    (50/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.123119773 seconds)
    (51/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.183160158 seconds)
    (52/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.167236105 seconds)
    (53/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.13798859 seconds)
    (54/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.300272011 seconds)
    (55/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.091753677 seconds)
    (56/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.149844695 seconds)
    (57/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.115805825 seconds)
    (58/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.204935525 seconds)
    (59/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.175769961 seconds)
    (60/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.21160985 seconds)
    (61/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.104906465 seconds)
    (62/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.082868628 seconds)
    (63/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.08169157 seconds)
    (64/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.170416012 seconds)
    (65/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.210372226 seconds)
    (66/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.109568068 seconds)
    (67/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.106262189 seconds)
    (68/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.154604541 seconds)
    (69/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.16347336 seconds)
    (70/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.178353406 seconds)
    (71/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.104628292 seconds)
    (72/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.180228859 seconds)
    (73/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.118348263 seconds)
    (74/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.104559275 seconds)
    (75/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.201350355 seconds)
    (76/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.122964926 seconds)
    (77/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.128520541 seconds)
    (78/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.083391855 seconds)
    (79/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.082355984 seconds)
    (80/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.083316672 seconds)
    (81/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.081486729 seconds)
    (82/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.12712182 seconds)
    (83/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.184418524 seconds)
    (84/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.124298334 seconds)
    (85/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.228561443 seconds)
    (86/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.106060326 seconds)
    (87/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.115734102 seconds)
    (88/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.131617436 seconds)
    (89/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.150693429 seconds)
    (90/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.174101932 seconds)
    (91/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.106703373 seconds)
    (92/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.084108754 seconds)
    (93/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.10692342 seconds)
    (94/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.097565111 seconds)
    (95/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.131038828 seconds)
    (96/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.184457411 seconds)
    (97/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.081993779 seconds)
    (98/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.130999839 seconds)
    (99/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.114230952 seconds)
    (100/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.105895971 seconds)
    (101/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.219648167 seconds)
    (102/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.082631964 seconds)
    (103/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.082683558 seconds)
    (104/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.205948733 seconds)
    (105/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.099964236 seconds)
    (106/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.086904307 seconds)
    (107/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.13087691 seconds)
    (108/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.105258027 seconds)
    (109/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.084114054 seconds)
    (110/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.127275525 seconds)
    (111/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.178008711 seconds)
    (112/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.083528472 seconds)
    (113/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.151695546 seconds)
    (114/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.107811682 seconds)
    (115/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.106601474 seconds)
    (116/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.082171091 seconds)
    (117/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.08239703 seconds)
    (118/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.106147691 seconds)
    (119/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.117980505 seconds)
    (120/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.179825384 seconds)
    (121/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.081498482 seconds)
    (122/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.132396177 seconds)
    (123/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.147268922 seconds)
    (124/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.204180232 seconds)
    (125/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.084048715 seconds)
    (126/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.083438598 seconds)
    (127/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.082219552 seconds)
    (128/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.083031792 seconds)
    (129/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.149433029 seconds)
    (130/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.126233899 seconds)
    (131/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.105484408 seconds)
    (132/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.108124321 seconds)
    (133/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.08318746 seconds)
    (134/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.082223611 seconds)
    (135/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.105773927 seconds)
    (136/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.092365088 seconds)
    (137/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.201414509 seconds)
    (138/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.088826885 seconds)
    (139/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.1047389 seconds)
    (140/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.202202363 seconds)
    (141/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.082971219 seconds)
    (142/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.088938804 seconds)
    (143/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.088551235 seconds)
    (144/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.130961579 seconds)
    (145/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.10510063 seconds)
    (146/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.084205789 seconds)
    (147/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.129514587 seconds)
    (148/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.085562977 seconds)
    (149/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.082862231 seconds)
    (150/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.098943219 seconds)
    (151/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.105485392 seconds)
    (152/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.171019842 seconds)
    (153/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.108567215 seconds)
    (154/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.083465686 seconds)
    (155/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.121948139 seconds)
    (156/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.095454273 seconds)
    (157/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.088790315 seconds)
    (158/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.099108064 seconds)
    (159/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.083175503 seconds)
    (160/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.130580507 seconds)
    (161/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.110010817 seconds)
    (162/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.106042534 seconds)
    (163/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.11388262 seconds)
    (164/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.127956379 seconds)
    (165/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.088601209 seconds)
    (166/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.106333148 seconds)
    (167/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.1334808 seconds)
    (168/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.109537409 seconds)
    (169/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.084560349 seconds)
    (170/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.127975872 seconds)
    (171/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.085348954 seconds)
    (172/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.084977954 seconds)
    (173/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.102218481 seconds)
    (174/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.147302819 seconds)
    (175/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.108982284 seconds)
    (176/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.083993089 seconds)
    (177/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.110264648 seconds)
    (178/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.108059776 seconds)
    (179/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.102908283 seconds)
    (180/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.083466479 seconds)
    (181/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.083464693 seconds)
    (182/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.083581076 seconds)
    (183/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.131917453 seconds)
    (184/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.083491199 seconds)
    (185/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.104917418 seconds)
    (186/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.082043906 seconds)
    (187/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.108916016 seconds)
    (188/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.0836031 seconds)
    (189/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.106227903 seconds)
    (190/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.122581238 seconds)
    (191/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.085114532 seconds)
    (192/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.08468837 seconds)
  done (took 27.287710809 seconds)
done (took 28.2125787 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.214333377 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.128815383 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.109560825 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.108122792 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.204910421 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.115595667 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.11620817 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.136262474 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.113382439 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.104685187 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.124801947 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.117181312 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.107585771 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.201499805 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.111187574 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.126362026 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.100616593 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.114041401 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.142401386 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.119606381 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.202595048 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.103356797 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.112859715 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.099237099 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.206760455 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.101072043 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.132686556 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.109476284 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.114996983 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.131869427 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.108406242 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.100172887 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.141679239 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.118990227 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.100039103 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.130258211 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.100725564 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.089720977 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.106831863 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.132201169 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.116393741 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.107265602 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.133957406 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.102723431 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.107531798 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.128810997 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.101797085 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.111986604 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.098214774 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.134042075 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.103507716 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.118317857 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.130891549 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.100201688 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.099526961 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.125036474 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.116214366 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.100832066 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.116001482 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.125154831 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.102031498 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.099870002 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.133990157 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.100954264 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.107161196 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.124086867 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.108079117 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.108362588 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.105638228 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.12956645 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.10038651 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.10705415 seconds)
done (took 9.624475994 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.107526397 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.157932824 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.204196693 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.212313128 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.131023984 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.14133432 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.122959675 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.130072242 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.143520708 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.126029116 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.1581677 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.129970586 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.210570914 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.113691477 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.116696187 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.135448913 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.115471082 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.113329902 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.214878248 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.123535108 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.157895848 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.113004559 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.160162561 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.125281173 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.107000901 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.155498028 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.108203814 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.110028368 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.132636384 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.125846462 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.124101843 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.132993595 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.107658255 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.151675934 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.121482288 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.114821232 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.141493597 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.112429772 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.10667866 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.129380363 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.118694633 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.125140152 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.131383514 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.118959114 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.110234499 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.140136275 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.116916204 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.113850262 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.135534287 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.111948484 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.109893664 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.16172523 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.115691957 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.113667987 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.139788228 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.11554487 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.113723704 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.140233847 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.108766273 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.113212952 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.133894312 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.109755696 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.108841613 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.158115242 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.10848263 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.138443429 seconds)
  done (took 9.613529487 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.125905583 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.136728351 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.139531993 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.116488917 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.110006504 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.122668438 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.099397852 seconds)
  done (took 1.816853803 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.10227467 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.186543294 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.209154134 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.20872431 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.179379045 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.218925079 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.144874457 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.101257793 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.132086786 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.134624339 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.186635691 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.240566919 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.105746409 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.141497797 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.187406374 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.125422449 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.189212155 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.12540593 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.11282307 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.211004059 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.114283565 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.127756551 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.138510002 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.101297204 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.208402748 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.100970138 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.26339168 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.116274754 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.105871975 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.141903208 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.112476765 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.205819918 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.182881414 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.141050843 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.105001514 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.210431332 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.178505063 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.137818027 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.197443604 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.132225065 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.182180118 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.139257922 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.116062065 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.111840578 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.143416138 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.168850841 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.144972531 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.113966357 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.11114457 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.218727273 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.109859264 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.210133991 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.108168326 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.138071014 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.112081094 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.113410356 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.148827685 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.115296612 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.221257247 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.115736454 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.207992502 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.18352673 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.210670412 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.209794745 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.123029474 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.210853802 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.179749364 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.13703997 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.110431114 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.112985733 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.212485995 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.110929702 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.139061468 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.175123252 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.141123695 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.185998933 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.211812519 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.109862566 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.137820498 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.105795448 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.110341389 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.100373775 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.201727396 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.110119496 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.135571482 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.119713262 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.112625197 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.138540937 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.106512436 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.122422695 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.1392974 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.113097812 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.118267042 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.138338252 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.117078319 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.215001939 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.111120437 seconds)
  done (took 15.510629779 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.106924405 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.103163747 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.106695211 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.128778228 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.103024494 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.103120918 seconds)
  done (took 1.642302599 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.142813866 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.112900972 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.148969107 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.115484226 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.165273253 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.219260593 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.22488643 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.108981508 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.156408385 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.126887815 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.217679359 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.198097721 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.228730385 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.116864967 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.224526068 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.119139772 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.227990103 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.110839619 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.149541196 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.110887679 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.116098763 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.144221112 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.111608274 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.210400858 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.119914236 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.117469441 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.136995518 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.126629831 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.12176332 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.137916044 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.117550516 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.11674865 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.13513303 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.110699313 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.229071058 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.10874798 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.108173694 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.149455197 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.116424434 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.142907261 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.202615386 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.136197105 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.123633435 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.123980362 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.136026385 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.110758179 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.121979797 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.136903169 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.199495631 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.1519161 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.123504903 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.114687792 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.145119416 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.123952489 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.108548726 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.13741334 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.123223311 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.22916829 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.116981596 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.108297926 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.142149703 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.119415322 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.110332437 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.149829549 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.11521342 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.121018569 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.135816059 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.116062749 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.110929378 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.141728912 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.123157506 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.114463037 seconds)
  done (took 11.170633478 seconds)
done (took 40.718091351 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.51115696 seconds)
  done (took 2.498766106 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.904359768 seconds)
  done (took 1.893964561 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.566742566 seconds)
  done (took 19.585155548 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.539984001 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.610194995 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.053681668 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.151907437 seconds)
  done (took 3.342936297 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.993249585 seconds)
  done (took 1.99860684 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.293944557 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.262655217 seconds)
  done (took 1.550438492 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.724935109 seconds)
  done (took 1.730784928 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.528777961 seconds)
  done (took 2.52089342 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.362361901 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.173841615 seconds)
  done (took 1.541843611 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.624292157 seconds)
  done (took 1.629092554 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.640765992 seconds)
  done (took 20.647266966 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.247329866 seconds)
  done (took 1.257616385 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.286634939 seconds)
  done (took 1.300266696 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.678722991 seconds)
  done (took 4.691274537 seconds)
done (took 67.189175469 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.114298503 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.116218439 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.116129047 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.139195038 seconds)
  done (took 1.488069801 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.122440648 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.117899096 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.120946786 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.141496906 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.122833007 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.117285558 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.142594351 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.119784387 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.116814748 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.144893082 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.118428654 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.114791303 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.145516519 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.116819394 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.11347956 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.144019067 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.122019422 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.116966098 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.116858762 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.144740283 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.119267151 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.118116003 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.147027863 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.120760823 seconds)
  done (took 4.036661878 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.113645627 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.105851112 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.109068768 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.131713052 seconds)
  done (took 1.478453254 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.125920907 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.129540759 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.153232579 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.124785428 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.129094542 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.155492919 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.116660719 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.112841952 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.141355846 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.12742353 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.132995179 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.156398989 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.129424962 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.118152918 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.153638353 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.111485188 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.1176975 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.153712887 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.125214258 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.125958699 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.141657868 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.125297002 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.12206738 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.151298904 seconds)
  done (took 4.196390599 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.190177734 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.126469163 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.165835174 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.158193814 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.168131624 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.11149253 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.135984449 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.145119047 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.119415403 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.114816642 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.143413212 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.160378364 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.144537359 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.115937363 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.112174351 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.143889693 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.125928518 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.119188505 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.183220911 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.117731434 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.118096542 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.152550222 seconds)
  done (took 4.088930626 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.119007205 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.107856907 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.102456435 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.140027391 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.119099876 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.109367894 seconds)
  done (took 1.71940913 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.107057484 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.101013777 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.101012033 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.125754259 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.106562136 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.101559794 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.09937975 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.12844092 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.102061943 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.100974058 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.125912311 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.102182422 seconds)
  done (took 2.326361187 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.344026421 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.106788335 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.133169531 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.107881907 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.113140137 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.104358572 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.147165344 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.105430244 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.268093847 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.106102528 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.145417978 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.196559206 seconds)
  done (took 2.901649603 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20473436 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141552155 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.297396 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.366903132 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160090901 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.183601178 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.268613081 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.187631367 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.202943463 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132643267 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.240878504 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151102858 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.173319772 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171710343 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159741409 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.163049936 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191707188 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187982981 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170364848 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19630179 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180691048 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160927344 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.202202712 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.172187923 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132021093 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157128109 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.141430155 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123159437 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192427714 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162559458 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198843574 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142221758 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162899274 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217327057 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230514449 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200433623 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.284781523 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155636575 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.177393506 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.20556093 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.256167865 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135083758 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215374441 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147705792 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151549083 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175552853 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176935185 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.168906993 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.153513409 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138901645 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20551682 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167635909 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.204867743 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157755154 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.287451304 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187268148 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.137772182 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196558475 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205973096 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185050565 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189451892 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.119315221 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.204370411 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178667649 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202573235 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.134425471 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.191118326 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.119619874 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191731279 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.218129053 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175224092 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183251956 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.223646714 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128009706 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178802736 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.168145103 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200135296 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172823511 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181230284 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.11522094 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144543383 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156232571 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12277808 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.220476951 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116855539 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222899293 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127569865 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.343649903 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210399421 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153717435 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.185738431 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155674605 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183542543 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140892497 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.108838139 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170229108 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.15748969 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179514483 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129374835 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180375452 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134259676 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.149823898 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146511996 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.116507162 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1803531 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.131453616 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187742236 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154573224 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.154218778 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159637577 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.171046407 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.150152032 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193660555 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178268698 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154427853 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127875307 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211420414 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151963476 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.153739312 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.174588305 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.206770656 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.146818527 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159360127 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161235128 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212662197 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136191458 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210642127 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131381158 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159732069 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.14653877 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184958166 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154316895 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.175203345 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124018049 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.170411456 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19602879 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.149079376 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133754891 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188306915 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129014193 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121096737 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161666504 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131500306 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.1347819 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.166790701 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.128203992 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178738586 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153422128 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.177600217 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153345508 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156857048 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173192012 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155514097 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.155588639 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167116799 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.113869786 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.199037351 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181990004 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150007026 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198632556 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.188993669 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21391663 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155502757 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153827778 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175221742 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121327636 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.143172635 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156519704 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.17874243 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157459284 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.203598962 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209264336 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.162980769 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.173539157 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142386158 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194375113 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.197942244 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149663478 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.166235962 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154432305 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186502868 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.117536844 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.118008482 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.148452757 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13402351 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123901929 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158476727 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176338578 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189942413 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.206371388 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153858672 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162734905 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.177027186 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.148997493 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156538061 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.188162572 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134484629 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.20521462 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174991866 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190556676 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135228644 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184503706 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.115277693 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148259863 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.12884337 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.188506047 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132337475 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129892702 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164996083 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179640947 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199021581 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141441622 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223102222 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19201846 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.217086622 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.116897205 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.159800138 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196476647 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15195412 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.206721553 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133384526 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.184885115 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.174663392 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163731792 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183900567 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179731276 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157744384 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213071403 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.177007397 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127311405 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141464238 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183230637 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1331317 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1905899 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140641726 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151770054 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148841498 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.132999041 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148871323 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212183227 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139811546 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195386143 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.154955311 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196148686 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120565095 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162798245 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156676541 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166111647 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.113569296 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166742888 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209329647 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140090964 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181506497 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197699376 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126713458 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.313170942 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21280689 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203813718 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129462481 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163342552 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157453446 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.18436865 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158990151 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.204090517 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136088549 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201762389 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154284177 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.165844198 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125448212 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142436572 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.174020789 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.145480864 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.156539384 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.151209543 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.165570014 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183084981 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163794379 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155538411 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184208218 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.141456884 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.176271875 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135826519 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219783878 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151621218 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200870828 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.149850289 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.192605662 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213436002 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120793063 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122796455 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.154041739 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.176544856 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124160089 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186184635 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.20281661 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214707137 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159177651 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186485521 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133987145 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.120215022 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1810353 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142166511 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217455121 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158396601 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.132486209 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217526075 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.135383963 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.125977268 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.18545783 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.300459879 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141223238 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19858868 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.11937083 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.294603515 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125332792 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127865299 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.188192182 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165763254 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.156392755 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.178025267 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181976509 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138917903 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.186451288 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133330723 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.209946962 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21385889 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164052011 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201651825 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.13996504 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.185928011 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157189024 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202569206 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137707161 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.169700603 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156794087 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207006931 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.177187184 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.156349884 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153600771 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182315308 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152177256 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199771346 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132198471 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217424717 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122071276 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188001077 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133097294 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.117969579 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182501811 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.202875173 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127922152 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202908214 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155197405 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156601216 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122383894 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140349278 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179700632 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133772373 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.154182514 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180548037 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.15448398 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15893706 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20379056 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125631306 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179941751 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142435476 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124320309 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166321368 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138817791 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154088754 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.166975371 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179653863 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.154641816 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175463703 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188301011 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188748916 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155302433 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164979759 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.661796185 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.121654494 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207488969 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143010004 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211078401 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14475076 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188343108 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154697197 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173476053 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159223306 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173563322 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.235004634 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189180226 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.153408238 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156734539 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138119291 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163748659 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.129094162 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147925832 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183972396 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135939176 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.158488228 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.153271108 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137001791 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.172035396 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134256836 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208788548 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14377928 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212492232 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.207886441 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133214855 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185581706 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172206092 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154119937 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.162016922 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199111921 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135847111 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171315871 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.129102389 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.13201932 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207548532 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.119410683 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181979095 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158112634 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181425618 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155142093 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.130238035 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186582546 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13539446 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186464859 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121487907 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.177921669 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155742398 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128478077 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.151339814 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153813939 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187593634 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.150084225 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149573309 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.167584517 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179838043 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.146274723 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129013549 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.30195626 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154655097 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21604441 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.144153935 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16063157 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139356281 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180173735 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.150624914 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184385927 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.125955201 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124624405 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.153406642 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.170097306 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.17739459 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156621699 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201436656 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157592264 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219804136 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.128931667 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.313762194 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135342643 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.182374832 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.12607562 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.12267917 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165810646 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129821625 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134894881 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.212799374 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203510684 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.149462833 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.172005697 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124953532 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.121032805 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155531659 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161455551 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176893664 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153968689 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168886576 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.1126548 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139628824 seconds)
  done (took 82.454453321 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.16619692 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.150330965 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.167152405 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.221334769 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.196541548 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.288111865 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.229282358 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.25338714 seconds)
  done (took 2.782932483 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.119856894 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.157485563 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.140897119 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.142799006 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.117429482 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.449072651 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.1579731 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.118916268 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.164182052 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.160243998 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.140151307 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.616602738 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.113836707 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.144924652 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.127712824 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.116314737 seconds)
  done (took 4.090278163 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.438062264 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.589087076 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.201171905 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.278494151 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.235083809 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.179858539 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.799175509 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.19238347 seconds)
  done (took 13.023170145 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.146573604 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.132911102 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.827334281 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.261723714 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.149721864 seconds)
  done (took 2.634315061 seconds)
done (took 128.223248546 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.119965348 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.119738134 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.118923278 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.150799135 seconds)
  done (took 1.612481199 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.183958094 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.095445397 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.097598357 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.122028681 seconds)
  done (took 1.61157682 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.440984657 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.09473875 seconds)
  done (took 1.674791012 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.145861665 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.145621579 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.164012785 seconds)
  done (took 1.582836698 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.139352496 seconds)
  done (took 1.257321186 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.126990032 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.119680058 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.238301561 seconds)
  done (took 1.60758237 seconds)
done (took 10.466276586 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.11982985 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.415126252 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.431548371 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.132504747 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.708462526 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.424778331 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.06629103 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.172916419 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.174101698 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.134893054 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.131659742 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.686720683 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.04342484 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.359353221 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.000813643 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.385148534 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.694857598 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.110398945 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.143971404 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.111465291 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.043004861 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.133538468 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.111865516 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.111529184 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.68902339 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.447985353 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.108541828 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.369189619 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.137519959 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.113172627 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.397829958 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.137256767 seconds)
  done (took 17.358814697 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.117020301 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.171710753 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.144645913 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.110949064 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.112995185 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.137502707 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.122034732 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.122170601 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.20426635 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.108391057 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.157483562 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.110113575 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.114374176 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.109898119 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.162333015 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.109019682 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.111768615 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.139713866 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.116979408 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.11055197 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.158698525 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.108065902 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.110613252 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.139112664 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.109945699 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.131698745 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.136783789 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.12288435 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.108520387 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.140901082 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.114574751 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.109764958 seconds)
  done (took 5.210047919 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.157999225 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.17941532 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.146847163 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.145734955 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.185203002 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.111826012 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.194929442 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.175449674 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.202117809 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.111172684 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.130989607 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.134702877 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.151619878 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.109851946 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.161742472 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.110066576 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.112913318 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.138767619 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.118743716 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.111842378 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.158815529 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.109299383 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.111665613 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.139715235 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.109823786 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.133090384 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.136364923 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.124435708 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.109231174 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.140446025 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.116729613 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.109867902 seconds)
  done (took 5.521928937 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.125132346 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.125316526 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.133543899 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.162529038 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.120671813 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.122873836 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.153405433 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.12069558 seconds)
  done (took 2.1979388 seconds)
done (took 31.408795304 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.133319599 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.126743245 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.126800213 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.150258686 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.191535783 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.143246633 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.124940325 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.112773686 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.120006385 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.159088258 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.109429622 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.114072134 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.155550489 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.11688288 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.223956433 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.122235647 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.227224228 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.195724552 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.142082365 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.122312649 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.114905997 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.229380391 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.118244437 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.114417947 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.232055457 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.113550554 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.214143953 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.11729287 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.116052315 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.140972477 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.194686148 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.148462759 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.1140252 seconds)
  done (took 6.006476035 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.210015564 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.115529251 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.14981703 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.119137925 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.115213134 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.146765912 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.213081139 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.146781681 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.119067049 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.118129885 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.116949635 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.223513011 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.121198032 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.139370281 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.119106113 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.115053907 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.242695009 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.118247874 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.108963141 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.096216866 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.140502001 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.116846125 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.256607007 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.111072922 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.118477923 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.117153868 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.148255125 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.120369647 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.116088591 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.146180589 seconds)
  done (took 5.388832386 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.126108463 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.132118942 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.134989358 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.213483498 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.145777005 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.160114476 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.140594518 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.133297886 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.171537734 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.113201419 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.126829333 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.17926413 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.130167994 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.121754905 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.144627804 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.132257525 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.135189333 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.140470151 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.121151199 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.129728236 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.131702166 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.159475846 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.139050315 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.119322205 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.139902577 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.118834513 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.120994098 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.156025216 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.119727047 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.125188487 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.143096013 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.115743661 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.113466147 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.176738333 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.113727683 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.12563502 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.16697538 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.125025444 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.126253856 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.173715096 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.116353978 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.114414959 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.167083726 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.169667846 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.112779344 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.15408104 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.124667924 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.125304415 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.109462459 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.160669464 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.155178821 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.13989793 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.13499332 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.11370809 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.108450184 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.150388986 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.112668649 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.113847384 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.155778751 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.11659234 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.136549182 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.147812427 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.123277267 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.113560291 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.122416563 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.140861523 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.111220603 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.114906079 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.169425421 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.119447335 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.14867025 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.140179674 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.125117769 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.123611531 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.150717017 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.124764351 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.111246873 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.122177849 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.152571926 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.118932402 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.123477629 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.144528069 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.116428752 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.12859321 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.162974224 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.127899991 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.123697113 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.154203482 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.117069734 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.113613161 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.129150721 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.142477916 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.118159191 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.124642573 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.142329171 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.11631704 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.124594971 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.152813735 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.111999072 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.137769147 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.115700611 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.143478139 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.137264077 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.118132644 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.148075967 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.123262904 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.155624201 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.141687779 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.125636842 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.124865668 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.142287406 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.120247916 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.115621976 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.13899356 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.133031889 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.127538387 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.118613414 seconds)
  done (took 16.803747068 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.324082984 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.281942842 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.212337534 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.310931954 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.126019122 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.242649744 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.309992157 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.308879578 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.113538185 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.180816414 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.165017564 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.278963974 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.145040307 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.140771616 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.313083267 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.365578805 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.173183457 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.151349061 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.180090833 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.127216168 seconds)
  done (took 5.605086956 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.135815935 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.149100176 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.166294823 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.144749617 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.119406879 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.157087295 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.112823489 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.132720096 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.150397907 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.124623095 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.115555313 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.157365485 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.12279564 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.126108593 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.156769703 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.153812227 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.120638654 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.146044943 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.137599361 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.118323224 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.107274874 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.171060413 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.121642199 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.165512547 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.129097703 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.124768194 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.111200987 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.149796024 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.116406822 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.118676057 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.146979672 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.133820763 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.119328784 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.138368152 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.126633432 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.130208341 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.115665005 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.144787316 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.118732704 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.115940907 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.157341763 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.123561604 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.120582061 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.103266055 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.159898721 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.116603894 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.123466118 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.154619576 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.113196306 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.128643125 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.12507457 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.154492449 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.120078027 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.130726024 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.14602322 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.130988241 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.12382307 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.153709278 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.118909128 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.111205063 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.13900932 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.119760663 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.119062414 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.122910232 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.155173643 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.135362105 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.129410482 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.142430941 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.118525082 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.116326729 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.146092478 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.129341471 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.134483964 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.14896719 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.118288648 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.125738861 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.146048682 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.100392482 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.123363109 seconds)
  done (took 11.603400704 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.140364091 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.118716829 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.132230926 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.179139224 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.122809436 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.118134715 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.14859508 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.134296885 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.122816539 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.158332682 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.124480178 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.125911627 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.166253356 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.123756581 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.117829617 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.158618503 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.123593823 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.152720085 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.16172708 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.143235528 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.123723381 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.150160852 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.127072299 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.124843373 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.17206523 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.126405955 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.141218728 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.152533165 seconds)
  done (took 5.058439541 seconds)
done (took 51.600496779 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.286185039 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.474088263 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.252757987 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.248609663 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.275118217 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.28018996 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.249141601 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.249011737 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.748436924 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.229778975 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.251789158 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.249146304 seconds)
done (took 28.953497902 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.341914145 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.778028042 seconds)
    (2/2) benchmarking "String"...
    done (took 1.552078001 seconds)
  done (took 4.477896363 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.244025544 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.244539425 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.471592924 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.243720645 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.253428942 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.242483837 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.241938294 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.261708101 seconds)
  done (took 16.107836897 seconds)
done (took 26.3221216 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.319543263 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.452491557 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.480304771 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.260188907 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.25674066 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.240965499 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.244063232 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.27268048 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.252682552 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.243828802 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.6486897 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.513542709 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.24787088 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.631517753 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.240637337 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.246108177 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.256543058 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.503754495 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.246758518 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.282987506 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.223339608 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.241155017 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.254523 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.250689036 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.24652765 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.243592257 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.294748409 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.25285465 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.44998361 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.268245956 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.276213038 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.242769099 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.290145943 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.241971172 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.239594324 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.248226742 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.449656904 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.247089037 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.23180907 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.241395208 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.446499869 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.255072704 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.247307578 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.241532287 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.249398778 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.285511128 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.23248688 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.351645844 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.265320994 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.240937521 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.259029307 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.611294414 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.245172481 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.240798269 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.257974483 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.478486558 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.25962681 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.298342448 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.269297933 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.243671829 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.250955549 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.247086642 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.282219379 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.255252511 seconds)
  done (took 146.440455843 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.240860571 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.246432472 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.245821887 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.30689033 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.247238889 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.243715221 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.243951204 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.242792446 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.246955578 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.269596322 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.24724261 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.245967715 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.245654528 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.210198231 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.251993667 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.262730915 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.2579531 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.245226576 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.268033083 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.244790062 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.249789624 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.247345193 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.244735568 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.243213145 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.292999112 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.32006684 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.270720032 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.27127431 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.25258833 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.241981935 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.283511524 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.248992477 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.857100539 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.107169696 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.248436667 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.262455091 seconds)
  done (took 81.802790821 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.243529482 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.2420823 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.243146218 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.276637777 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.244447215 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.802506573 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.803348296 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.957699436 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.898386585 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.576400501 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.520119661 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.245541938 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.338637813 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.258339986 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.248537828 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.260747861 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.272473861 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.245063425 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.24474796 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.810447398 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.259090625 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.466581353 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.42096383 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.261204337 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.276838857 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.6416278 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.245630781 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.277538822 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.502618607 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.578283715 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.294943265 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.244723672 seconds)
    (33/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.246169783 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.609798645 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.36091882 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.249935494 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.276335741 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.245375243 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.522500017 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.245808956 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.245612689 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.249070519 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.907742555 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.246448212 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.799827555 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.246617633 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.179193327 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.245908018 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.242936154 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.227440344 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.899329583 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.246650194 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.240938202 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.245252916 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.244985036 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.245733833 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.27691541 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.236622882 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.337553529 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.243817509 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.247969882 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.275685245 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.243164023 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.314658286 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.247437053 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.823260533 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.300400958 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.381380865 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.791288163 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.245791803 seconds)
    (71/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.242729102 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.33796004 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.359460437 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.242535336 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.243131638 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.241403673 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.241854973 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.35215005 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.241687091 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.631792419 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.412505155 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.258684492 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.518548164 seconds)
    (84/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.248271717 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.342311861 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.248551093 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.593376042 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.246810445 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.244335681 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.942901789 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.336358449 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.242658501 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.241963208 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.243411081 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.634335842 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.783737948 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.46420953 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.24686029 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.386523815 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.246150871 seconds)
    (101/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.240920768 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.645961489 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.771188652 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.902949973 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.247173455 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.354031951 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.41327094 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.25891481 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.242893432 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.508964869 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.247883437 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.301406431 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.246900925 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.645167375 seconds)
  done (took 371.836314875 seconds)
done (took 601.227758983 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.129859443 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.075092984 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.224259712 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.085559932 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.066468772 seconds)
  done (took 11.727524577 seconds)
done (took 12.87341905 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.427516512 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.427821869 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.302601114 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.428139823 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.275201689 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.444294797 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.416540741 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.26588376 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.355601111 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.324053428 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.353520026 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.295060963 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.276662701 seconds)
  done (took 18.739902542 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.528393559 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.248339746 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.311419905 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.488107802 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.289093663 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.501785042 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.557309399 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.251991771 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.381375603 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.262021472 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.261157889 seconds)
  done (took 18.22857902 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.51150509 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.251470118 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.306122868 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.501826417 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.283726732 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.51524154 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.580723776 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.251873188 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.400881068 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.263122369 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.261840289 seconds)
  done (took 18.275550266 seconds)
done (took 56.391236487 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 2.0994913 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 16.454948357 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.279133746 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.338340931 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.259201385 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.274835362 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.341347833 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.262871379 seconds)
  done (took 27.458421771 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.257741805 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.256470261 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.257766641 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.258215915 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.257461666 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.259933174 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.259866115 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.257773503 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.257959071 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.258301259 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.259985427 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.258822466 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.260293964 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.259410464 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.257806702 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.258115987 seconds)
  done (took 21.285678383 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.258832927 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.257296951 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.258359669 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.259076536 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.25930297 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.258363782 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.259831134 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.259416105 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.258677486 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.258597479 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.259797215 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.259208735 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.258460986 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.259171448 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.260259938 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.259582224 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.257420681 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.257598982 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.264388908 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.256588265 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.257207195 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.258274178 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.260468505 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.25703027 seconds)
  done (took 31.362034376 seconds)
done (took 81.254889664 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.248868212 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.248528062 seconds)
  done (took 5.646368585 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.322219599 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.322105735 seconds)
  done (took 3.795843495 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.259471902 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.258857737 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.259500278 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.259325772 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.259420361 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.260334715 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.260344862 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.259297978 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.259602097 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.261159191 seconds)
  done (took 13.746476192 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.259177359 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.261861616 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.259984668 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.263269524 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.259514796 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.262116812 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.257448963 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.259513613 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.259658438 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.258779996 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.266324547 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.261133048 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.261260016 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.259746007 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.260283942 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.259623302 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.260793537 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.260213745 seconds)
  done (took 23.839993131 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.273663972 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.279778225 seconds)
  done (took 3.704932993 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.399926314 seconds)
    (2/7) benchmarking "second"...
    done (took 1.300687383 seconds)
    (3/7) benchmarking "month"...
    done (took 1.376561658 seconds)
    (4/7) benchmarking "year"...
    done (took 1.368002797 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.300915917 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.280706459 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.299485925 seconds)
  done (took 10.475855721 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.260474527 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.471533125 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.596616959 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.783682001 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.261468171 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.264768205 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.101708063 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.263611618 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.266457536 seconds)
  done (took 14.419610777 seconds)
done (took 76.77774661 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.250616545 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.302349073 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.261114643 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.285814362 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.601728161 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.295409835 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.25455249 seconds)
done (took 16.40269285 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.237686415 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.235448537 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.232264018 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.256731334 seconds)
  done (took 10.112342674 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.255947685 seconds)
    (2/2) benchmarking "read"...
    done (took 1.537138551 seconds)
  done (took 4.942703668 seconds)
done (took 16.206092289 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.262838209 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.261560758 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.2610569 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.261231366 seconds)
    (5/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.262304261 seconds)
    (6/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.261547811 seconds)
    (7/24) benchmarking ("one", "Float64")...
    done (took 1.260219018 seconds)
    (8/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.261358617 seconds)
    (9/24) benchmarking ("zero", "Float64")...
    done (took 1.259171322 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.261983232 seconds)
    (11/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.261833901 seconds)
    (12/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.263022627 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 1.260827901 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.263041365 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.261749884 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.260038453 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.261552758 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.262435489 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.259967021 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.261149027 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.260038296 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.264115139 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.259526334 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.259598946 seconds)
  done (took 31.422106149 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.263667715 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.260792768 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.263134452 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.262286062 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.262781623 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.261706594 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.263351863 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.261962551 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.262098965 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.261876737 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.259945428 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.261733253 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.263215759 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.260922989 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.263687274 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.261798363 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.262946173 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.259349031 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.263802027 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.262030276 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.262694806 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.262307315 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.263169497 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.263985283 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.261937414 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.260774415 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.26434666 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.264242332 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.264540492 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.262307816 seconds)
  done (took 39.025418999 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.269514039 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.272178658 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.265289568 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.266367811 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.266434872 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.265445762 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.265872045 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.265019031 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.265138598 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.265721206 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.267274087 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.266385915 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.267185921 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.267553848 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.266555788 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.265773374 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.266630225 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.267107599 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.268086749 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.265936054 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.266485212 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.265783775 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.263836487 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.265760515 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.266960864 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.267665045 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.266782397 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.267286221 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.268352254 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.26685465 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.266581187 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.267363589 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.267286035 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.267464471 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.267635879 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.266711742 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.273410891 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.271082562 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.266430506 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.267227676 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.26674142 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.266942904 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.268248873 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.265454414 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.270197067 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.266672862 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.266965741 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.266443849 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.26894231 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.267260785 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.266479078 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.266744298 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.268496243 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.267096412 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.267479468 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.267249748 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.267470021 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.266422801 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.269252769 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.266901895 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.268380285 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.268993422 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.266660272 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.266729792 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.26735698 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.266327173 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.26800905 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.267112763 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.268003568 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.268183933 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.26743732 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.265061325 seconds)
  done (took 92.393259793 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.265472849 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.265538744 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.263339183 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.263790852 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.264158012 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.264451337 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.263869185 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.265361823 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.265054276 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.26636139 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.26635502 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.264568773 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.263869715 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.266415824 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.265097494 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.265452529 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.264833812 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.264876451 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.265103103 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.265481682 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.265899966 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.26376376 seconds)
  done (took 28.982153499 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.265995912 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.267755822 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.263644566 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.267496071 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.265148513 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.268816881 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.2650328 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.26891276 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.265567953 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.266492872 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.264422468 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.267865465 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.265809392 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.265128653 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.264927266 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.267741825 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.267343353 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.266535661 seconds)
  done (took 23.947769551 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.265685189 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.265999478 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.265510942 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.265456192 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.263715082 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.266849069 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.264819197 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.268108203 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.266065586 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.263607037 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.266703326 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.266377221 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.266365455 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.265751621 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.265914296 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.265818067 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.268699551 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.265154765 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.263717057 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.266834224 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.264409211 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.268148338 seconds)
  done (took 29.004224235 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.265888709 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.267769607 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.265592383 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.267076569 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.264575094 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.26732961 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.267314734 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.265941433 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.267829414 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.268897641 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.264051385 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.26669994 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.267424685 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.264543096 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.264755609 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.267362238 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.267698287 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.265097093 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.267004424 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.267158583 seconds)
  done (took 26.48362531 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.268186258 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.269547884 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.266969404 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.270012719 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.269254037 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.270378533 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.270412135 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.269020031 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.269043784 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.270319762 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.269871297 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.26992757 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.270725227 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.268660019 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.270436193 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.269959443 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.271964367 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.270239393 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.270938435 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.271022077 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.270605636 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.270599271 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.269282773 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.27097669 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.272149446 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.270350897 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.272720979 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.270877323 seconds)
  done (took 36.718347601 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.269375361 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.270910172 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.268398708 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.26964567 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.269668109 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.267822201 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.269756121 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.267522788 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.270142635 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.267489644 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.270369624 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.269150674 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.268899489 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.270278188 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.269877299 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.269111924 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.270499451 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.267852009 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.26635688 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.268101846 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.268981303 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.270767388 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.270383988 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.268703207 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.268043018 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.270345365 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.266901942 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.268813901 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.270138979 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.270304761 seconds)
  done (took 39.232214097 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.312931648 seconds)
    (2/2) benchmarking "in"...
    done (took 1.318077818 seconds)
  done (took 3.787794381 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.267961453 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.271427776 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.269103233 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.26927561 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.269596348 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.269324809 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.268892109 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.269498661 seconds)
  done (took 11.311646434 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.264865825 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.271583508 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.26883028 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.270855682 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.270341778 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.263129519 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.272366652 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.27407977 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.267871905 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.265219425 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.267572941 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.269613137 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.268680148 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.267735594 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.266366348 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.268566034 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.273441426 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.271763074 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.270179687 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.270675337 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.272781382 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.267539777 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.269396626 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.272715908 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.266655132 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.275137505 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.272321382 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.277099245 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.265682672 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.270565985 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.270611037 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.271578531 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.272525261 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.273962318 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.271838546 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.273374309 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.27389432 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.270898402 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.273947947 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.27521622 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.273587736 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.270760034 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.269927583 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.27070566 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.268466631 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.276054967 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.275973381 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.270880902 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.266759838 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.269131833 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.276706371 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.267496876 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.273432424 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.271576406 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.272555831 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.277867474 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.278581132 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.26990257 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.273739622 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.273977186 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.282588608 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.279364555 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.272861054 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.276282217 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.27763586 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.283403861 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.277838561 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.276433055 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.272638233 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.274703393 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.275087636 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.283686901 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.278783589 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.277835001 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.274182866 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.273256942 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.268761449 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.276445224 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.275847721 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.277220725 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.2774858 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.273394135 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.2783775 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.282145472 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.270494808 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.277384718 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.277672493 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.275545041 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.270446807 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.27907712 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.280959707 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.27417209 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.270175183 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.270597561 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.272289509 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.276151588 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.269993872 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.270594324 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.275917988 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.275257707 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.275334215 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.272933307 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.278259657 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.276853458 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.276384127 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.279540263 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.280023496 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.273338905 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.278023667 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.279146643 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.275764271 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.273571087 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.273769246 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.277651331 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.2732168 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.276090529 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.276401916 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.273525651 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.279606304 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.277227813 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.280983935 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.287641688 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.277879078 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.277304854 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.274037697 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.283277681 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.276746587 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.27521426 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.280127232 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.276279799 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.276872766 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.274171908 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.279724715 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.271682758 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.279832725 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.274136706 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.278725079 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.276449793 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.278038489 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.274522152 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.276729348 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.27368022 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.275552335 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.277765069 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.281076966 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.276812763 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.284610733 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.276565465 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.278188327 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.277369807 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.279892235 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.278215412 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.278594267 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.279590273 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.275815432 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.28075391 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.277499926 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.280685011 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.279592553 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.280140404 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.280414422 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.275019464 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.27727497 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.281336367 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.277655556 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.278280406 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.278271526 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.279150397 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.282338084 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.275973318 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.280717333 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.2741485 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.275871838 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.286047027 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.278895524 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.280333172 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.276111966 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.281948205 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.280465349 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.281284162 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.276478758 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.279754653 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.280768956 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.281501009 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.283845874 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.280580195 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.282687318 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.276741596 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.274608125 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.28267909 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.275908503 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.285352844 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.286318049 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.285511464 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.277691753 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.285181476 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.276444833 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.282867488 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.282373936 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.284705193 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.282831407 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.281524768 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.277710044 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.282097335 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.279520585 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.282524335 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.276739928 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.284126721 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.282287788 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.282538095 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.284848076 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.277428355 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.280478058 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.281844192 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.284557673 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.281973491 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.277298497 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.283773906 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.277717553 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.278084502 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.283372595 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.283905995 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.284931843 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.28555633 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.280774565 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.280769968 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.281819473 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.2790329 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.283926045 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.281490772 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.282393101 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.287731814 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.284071854 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.28100364 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.28775468 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.283356566 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.28143596 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.284986043 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.288527949 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.283127424 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.281621425 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.291904294 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.289206472 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.286226407 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.284853905 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.27780884 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.286646676 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.28783174 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.288112805 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.279809647 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.285743412 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.281033741 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.28429437 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.28109622 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.283189858 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.283208158 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.283938724 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.288062392 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.285201895 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.281575607 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.287587433 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.284658127 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.285805729 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.281541479 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.291086361 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.285903499 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.282907511 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.283522595 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.282110062 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.288662177 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.280297647 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.286596402 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.279636058 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.291908653 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.295471335 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.286208902 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.28508117 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.289558534 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.28795081 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.284110828 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.28467473 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.282036134 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.283903932 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.284202288 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.283168416 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.286825951 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.284103361 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.288760952 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.285700201 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.285435521 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.291715883 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.28696145 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.280460902 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.287799296 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.289769739 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.287114742 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.281731403 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.287776624 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.285555352 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.286504058 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.283885723 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.283571873 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.292235579 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.287648931 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.28526544 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.284153599 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.28464586 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.284585875 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.286069621 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.290126616 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.285334338 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.292824483 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.285853332 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.289051761 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.287145674 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.291495775 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.292368872 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.28542026 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.295415389 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.288006391 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.283995215 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.282423858 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.291673253 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.291966928 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.296385677 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.285511886 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.293957938 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.290081456 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.291989059 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.290092519 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.291181026 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.290344074 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.290172371 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.293734482 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.290427396 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.285573252 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.287874144 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.293324336 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.291000518 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.291526441 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.28450747 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.288966915 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.293909075 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.287914947 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.287143054 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.287218254 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.29217464 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.292287246 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.291733021 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.293753157 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.29097158 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.294219757 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.291314533 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.293409711 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.29044722 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.294159765 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.295005386 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.293326576 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.29490065 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.287240318 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.292186074 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.289644622 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.28759654 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.287587191 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.288518317 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.293945794 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.287921591 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.299157657 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.291875071 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.287669608 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.288478151 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.294295436 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.286530973 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.296486515 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.304679492 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.287078591 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.294705655 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.292720943 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.287458687 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.296548965 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.293504694 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.286427067 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.289787596 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.295759108 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.297186479 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.288447011 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.294021057 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.289313507 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.293741805 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.29377537 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.293886463 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.293487972 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.294183447 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.289908797 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.292999408 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.292700969 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.294170081 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.290419646 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.290818252 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.290257482 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.296869065 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.297787648 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.290489551 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.29706281 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.296069735 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.289615644 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.291184823 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.295387331 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.287328634 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.297482947 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.289659714 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.293049399 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.2907317 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.292782363 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.292569017 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.297846407 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.290860107 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.291621022 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.297816504 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.296191567 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.296203835 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.291466943 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.299099699 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.29287395 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.290539767 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.296980087 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.290551606 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.298166521 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.293574312 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.294772675 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.293344832 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.297038207 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.295195446 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.296446307 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.290511521 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.292845946 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.299722961 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.296867625 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.297836492 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.298880735 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.288911477 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.283031822 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.285845135 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.28719463 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.282393763 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.28402061 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.287173541 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.282820098 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.273898635 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.276431019 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.281335304 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.282767945 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.277648094 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.275382501 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.283436546 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.280524604 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.27535874 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.267558853 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.269669142 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.267067687 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.274121823 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.274731962 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.269143458 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.276342889 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.272164605 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.271640283 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.268764318 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.268257624 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.266748549 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.273254239 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.271874268 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.264523477 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.264101167 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.260128273 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.266067757 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.265102609 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.263992033 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.260237105 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.259509905 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.26364976 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.259753477 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.261581632 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.260891764 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.25986877 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.258636309 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.264682116 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.263412814 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.260960725 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.258778703 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.254336237 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.260692262 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.254401213 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.258644035 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.255595041 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.254873061 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.259272624 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.258862705 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.254735675 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.258425847 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.260354001 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.257022648 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.252665271 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.25314346 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.258386118 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.261722904 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.257669974 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.253072826 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.254886728 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.258447842 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.257299924 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.260648577 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.252625055 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.263126415 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.259300352 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.251203295 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.253150139 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.254170222 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.259783103 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.256440955 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.253398222 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.248055216 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.250192022 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.254930546 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.25119878 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.254726719 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.250913946 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.250150034 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.252094748 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.245301526 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.246342218 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.246430202 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.251080952 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.248297903 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.24773687 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.256402426 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.249839401 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.249200534 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.261521989 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.244526398 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.242221953 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.248216894 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.239921275 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.247695489 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.241634061 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.24850885 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.248681126 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.246378057 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.246575056 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.24169948 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.245044941 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.244821371 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.252543398 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.244959813 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.242108355 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.2434322 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.246443317 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.245979153 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.250797849 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.248813734 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.246620757 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.246334751 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.24042254 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.25284038 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.253326951 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.246714571 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.246094227 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.243210156 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.243868758 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.240810056 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.242594855 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.247243891 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.24058259 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.242702104 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.23880171 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.244757215 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.240259743 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.233487266 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.234238996 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.236334392 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.239919526 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.247459524 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.249894828 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.239581638 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.23626521 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.238956929 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.237579542 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.233791956 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.23910522 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.237373648 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.234828665 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.234228518 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.240381049 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.236935232 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.2360102 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.234350687 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.240711388 seconds)
  done (took 761.436374395 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.235832213 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.235481191 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.235824725 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.236790219 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.236558321 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.23805954 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.23642732 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.237572114 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.236960924 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.238119859 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.237250404 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.236400887 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.237626088 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.237877179 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.237488228 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.238216531 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.23634808 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.235422144 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.236741244 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.237545629 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.237767283 seconds)
  done (took 27.108100557 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.23824962 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.238201737 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.238078053 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.240110972 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.239048519 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.238286043 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.237404501 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.239746065 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.238444297 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.23826193 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.238943269 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.238415678 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.238110225 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.23654099 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.238846265 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.239149325 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.240573314 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.23775388 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.241617064 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.238600431 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.240920758 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.238485148 seconds)
  done (took 28.385972778 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.240390148 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.24074445 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.235502098 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.242019926 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.24041827 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.240001849 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.242392826 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.240122296 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.240709297 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.235786625 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.235228068 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.235986484 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.239723503 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.244524696 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.238078073 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.242759664 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.240818817 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.241253 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.242646337 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.240905179 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.243953895 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.2452487 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.240200593 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.234210949 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.242755955 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.240913822 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.240718024 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.24221623 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.237231275 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.245133928 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.241998373 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.237920668 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.241238463 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.239207445 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.238369342 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.244876865 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.242955645 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.241118983 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.241830706 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.245176232 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.254243805 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.244244818 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.245971519 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.245014838 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.243145516 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.238530917 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.249216666 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.241987376 seconds)
  done (took 60.723636934 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.244245045 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.243306163 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.242639829 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.243098487 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.242562438 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.243148116 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.243510037 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.244875022 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.242698801 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.243102105 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.245338944 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.242829963 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.244234129 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.244906337 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.244293958 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.243365812 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.245169644 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.243373216 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.243538445 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.243177408 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.242600377 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.244262194 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.245068606 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.243387899 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.245904147 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.242834927 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.245406966 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.243899322 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.244798862 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.242270046 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.245686356 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.245251106 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.246636181 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.24370527 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.24455853 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.244151059 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.246256941 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.243968397 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.245899339 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.243703916 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.245808399 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.246986543 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.245852016 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.24517213 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.246128422 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.245982706 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.244467096 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.244753899 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.246380301 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.246873156 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.247173814 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.245534295 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.246946492 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.246170503 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.243980461 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.243830016 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.243142945 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.243123175 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.244567769 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.242264138 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.242779594 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.246460954 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.238862287 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.241877544 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.240487699 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.239393701 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.2389461 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.240366126 seconds)
  done (took 85.735656178 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.242069471 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.236997603 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.238917737 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.237556179 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.238932102 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.238260453 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.236796465 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.237472349 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.239613299 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.236148399 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.236215874 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.23581606 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.236169861 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.236636306 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.236265144 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.235967324 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.23683868 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.236509974 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.236276267 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.236183119 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.237725048 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.235641009 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.236888385 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.238366096 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.236857891 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.236847766 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.237050329 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.238451456 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.237161429 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.238063671 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.237577558 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.237643595 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.237303901 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.237460525 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.23789866 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.237541908 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.237132274 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.237301933 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.238854539 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.238003351 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.237215681 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.239033196 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.237598172 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.238676436 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.239631991 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.238532844 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.238479003 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.239643786 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.238690585 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.238836518 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.237913571 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.238372361 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.238878874 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.239277167 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.239929896 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.238877682 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.237212228 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.240950285 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.239039893 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.239568139 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.240179646 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.239904907 seconds)
  done (took 77.887096858 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.24000179 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.240255179 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.237806811 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.239390294 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.240335509 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.238269211 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.239850222 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.239704876 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.239367262 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.239579969 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.241431437 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.238622086 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.24039279 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.241758628 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.240301326 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.241056522 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.23971403 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.238846649 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.240604272 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.238709477 seconds)
  done (took 25.928202119 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.239863148 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.241427193 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.24020757 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.239185081 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.241466227 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.240903101 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.241349295 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.241289243 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.239659835 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.241759761 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.241508343 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.241338995 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.241019429 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.240851771 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.242022995 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.239382081 seconds)
  done (took 20.986252606 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.241374994 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.241487739 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.242042591 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.241878002 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.240748478 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.241379463 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.241622152 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.239410049 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.241001426 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.243622139 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.242888176 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.242645254 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.243591135 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.243857979 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.241812785 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.243883772 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.242405766 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.241229597 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.242257961 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.243654668 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.243934624 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.24248693 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.243501986 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.243672249 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.24219175 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.244649777 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.242310608 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.243416127 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.241400513 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.242737991 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.241853234 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.243277554 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.241872488 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.241777133 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.243911546 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.243080674 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.243581225 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.244588788 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.243319015 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.242692346 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.244423521 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.24378896 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.244959964 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.244317341 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.243800764 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.245636476 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.242951575 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.24394051 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.244405565 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.24402141 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.245061029 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.244664587 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.245800022 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.245000495 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.245909915 seconds)
  done (took 69.507573018 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.246145657 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.245779018 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.243158102 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.246796949 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.245473485 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.24565646 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.246710892 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.246217562 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.244715993 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.246416661 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.245253139 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.245495269 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.244391864 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.245731431 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.242786851 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.246029583 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.245190474 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.245433224 seconds)
  done (took 23.554697985 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.246123372 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.247688844 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.246876811 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.245196224 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.245131429 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.247188511 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.247101455 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.246826617 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.246246475 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.245673977 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.245266068 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.246907508 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.246453799 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.247709138 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.246215635 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.2465077 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.248803515 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.247606285 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.246574511 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.24647526 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.247421822 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.24796217 seconds)
  done (took 28.565755772 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.240997056 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.241317047 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.241066746 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.257603859 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.253711081 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.24208536 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.241975759 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.242231719 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.263140645 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.281086309 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.275243727 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.253118337 seconds)
  done (took 16.173740814 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.247473496 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.250716788 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.246956971 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.250321963 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.249506228 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.246855533 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.248017829 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.249499426 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.249658803 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.2477456 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.248474323 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.250613394 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.250519742 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.248383467 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.24878069 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.251669708 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.24965701 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.248876737 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.250215183 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.251746184 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.250252536 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.249466919 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.250437257 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.247748748 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.248403939 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.24956784 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.250760676 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.250650382 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.250066889 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.251282226 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.249958789 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.249202331 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.25231918 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.2504478 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.251055153 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.25064935 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.251039852 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.250152965 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.252541968 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.251586114 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.252845582 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.251435608 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.251542843 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.250163377 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.251709546 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.249715367 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.251384721 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.250549975 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.251056675 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.253232462 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.252150145 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.250034161 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.253663189 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.252889611 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.252882176 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.252340001 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.251460665 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.249658921 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.253535907 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.25236888 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.251883609 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.253591238 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.252113174 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.250496637 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.253634422 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.252507435 seconds)
  done (took 83.684455241 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.251556856 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.25143562 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.253172632 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.253621216 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.253035202 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.252364296 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.252807817 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.252667399 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.252471251 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.252486084 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.25448273 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.252222314 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.25400405 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.253516428 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.252568038 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.253857801 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.252795967 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.255363663 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.253817658 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.255156311 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.253275005 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.255050875 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.253384524 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.255092989 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.253297422 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.255326506 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.254531268 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.253618088 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.253991617 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.254860262 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.25590268 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.254749817 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.25558799 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.254580205 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.254518272 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.254055532 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.254570109 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.254961773 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.25524794 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.257030735 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.255247288 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.255328146 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.254475263 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.255755674 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.25651806 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.254791626 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.256202561 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.254980679 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.256639308 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.254616432 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.25616169 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.255718388 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.255908307 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.256388993 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.255555761 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.255860583 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.255895079 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.254299936 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.255232319 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.259528121 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.254921332 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.256443353 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.257224884 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.25696806 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.256092905 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.254887278 seconds)
  done (took 83.953984781 seconds)
done (took 1757.092119438 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.418039745 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.369389656 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.25020167 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.259303829 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.250325571 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.274602098 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.262538699 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.251061202 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.25107971 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.250692397 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.250890179 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.440693428 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.247492746 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.250745153 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.250915624 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.346901103 seconds)
  done (took 25.771877029 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.274542665 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.266155214 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.367039446 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.263026456 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.287951925 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.440710083 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.315372563 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.263028505 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.420407839 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.280040093 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.258797089 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.281968243 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.262914862 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.260452307 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.281051588 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.436663101 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.497331294 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.261655629 seconds)
  done (took 27.867508385 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.673586148 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.286429111 seconds)
  done (took 5.115064054 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.282676669 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.2642864 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.264092857 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.262135556 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.255582775 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.256877626 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.263448398 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.262795074 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.26441628 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.38336364 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.268756732 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.276031853 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.263693995 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.264133715 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.267552692 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.306586526 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.408056633 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.268853452 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.267666295 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.270249161 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.26379028 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.350028386 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.304244965 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.270627581 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.379763112 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.271007395 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.27126096 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.271882822 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.389220602 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.270407236 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.264569151 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.265027482 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.265318129 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.256865512 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.730378548 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.258908731 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.274423445 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.289486492 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.267622488 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.410178715 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.265111877 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.269435138 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.264756353 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.717843794 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.392234558 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.38060224 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.264406782 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.266326697 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.266902518 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.329212718 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.267323655 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.268191138 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.323094228 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.076603477 seconds)
  done (took 81.456392253 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.308225065 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.259394007 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.439770903 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.28120782 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.26109233 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.260558984 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.259836855 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.523605659 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.316196946 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.271401064 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.540890617 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.811730808 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.262386229 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.330648837 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.225434057 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.386185804 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.262340711 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.260521916 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.263072685 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.263212179 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.802785898 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.267306647 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.260877885 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.394523908 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.299543301 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.755727405 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.260272897 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.261165238 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.276926956 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.260918049 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.768680938 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.266477181 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.359077787 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.261662717 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.524929092 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.615653746 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.582106076 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.27724258 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.272225718 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.269298635 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.270171509 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.739212908 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.59844638 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.264493427 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.262388147 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.748328997 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.263634385 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.267931728 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.273813735 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.519791828 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.264569941 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.264537126 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.26357152 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.265694476 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.263102285 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.310941888 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.273986653 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.759192623 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.264001276 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.264039627 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.266315611 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.266314799 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.269308976 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.267643423 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.280458169 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.605784718 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.468923737 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.267812466 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.603091341 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.763573638 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.262949208 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.831077921 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.267966777 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.269065572 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.508839996 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.270836861 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.264723044 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.752422588 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.276798742 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.264666989 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.587021052 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.272127489 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.557062238 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.280356495 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.26445784 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.834538785 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.270107248 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.282349704 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.265596536 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.266577023 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.264252078 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.268463918 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.534505218 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.3031511 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.265663298 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.266496053 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.292554008 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.275642572 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.266500395 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.272610545 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.83281378 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.272979835 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.264884607 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.273772728 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.267879765 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.271765297 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.267484758 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.268534997 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.539668093 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.267483414 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.287441786 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.267917257 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.266733764 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.278204023 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.352668698 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.276604195 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.558466416 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.270364495 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.265913864 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.278198392 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.266431502 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.309693091 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.267606984 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.271678733 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.128742748 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.529908873 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.282822771 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.267619266 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.268432008 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.267594322 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.266477525 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.270174622 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.327699407 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.268761807 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.046695463 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.27901751 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.280585309 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.270858241 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.274745031 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.268640222 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.277598622 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.271692635 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.563837402 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.539411038 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.45190122 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.26977121 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.28213221 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.024592898 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.27478362 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.448331469 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.286527252 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.270008712 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.516381594 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.504210259 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.270205826 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.269182541 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.272507478 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.533994871 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.270693262 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.584921451 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.807478312 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.274068052 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.269860219 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.052782371 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.976016835 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.271041246 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.270668609 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.549757739 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.284325877 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.269705458 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.270568125 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.271031898 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.270191617 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.270593403 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.277131896 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.270559627 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.270633004 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.572152241 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.46233412 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.286701411 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.280278704 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.758875336 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.300639563 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.281947742 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.279740933 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.274029183 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.27080709 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.362968864 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.273252671 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.274163604 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.273218935 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.280350167 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.776433648 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.28260975 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.271308333 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.461399736 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.962726517 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.276960233 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.273192051 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.272428442 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.196175295 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.786549757 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.282123842 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.56237501 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.281755901 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.309016726 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.27148109 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.364942734 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.786774332 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.272211104 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.271448846 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.924225153 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.272533502 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.777099078 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.272408416 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.27500352 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.853353501 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.272780321 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.272712371 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.272167279 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.284028523 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.577564478 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.273598296 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.276880729 seconds)
  done (took 483.266290052 seconds)
done (took 624.624394129 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.271900234 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.274183169 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.260931734 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.278728042 seconds)
  done (took 10.25672534 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.313009019 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.279318305 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.287343826 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.279221866 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.29127212 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.279640784 seconds)
  done (took 8.900384493 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.273679568 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.275768995 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.27987342 seconds)
  done (took 8.000489869 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.484648711 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.289979611 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.619855046 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.275115085 seconds)
  done (took 8.841569557 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.290259489 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.287607821 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.288537758 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.293072931 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.315245189 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.315911121 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.294422379 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.293633247 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.316274006 seconds)
  done (took 12.866737941 seconds)
done (took 50.037093528 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.120645136 seconds)
    (2/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.380397128 seconds)
    (3/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.406021774 seconds)
    (4/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.27648758 seconds)
    (5/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.461493612 seconds)
    (6/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.420847149 seconds)
    (7/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.429053803 seconds)
    (8/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.077275333 seconds)
    (9/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.345313934 seconds)
    (10/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.347320237 seconds)
    (11/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.116547492 seconds)
    (12/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.39810475 seconds)
    (13/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.309933273 seconds)
    (14/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.020291391 seconds)
    (15/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.319732494 seconds)
    (16/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.30950588 seconds)
    (17/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.379560054 seconds)
    (18/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.129052629 seconds)
    (19/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.078127047 seconds)
    (20/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.260809287 seconds)
    (21/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.345479356 seconds)
    (22/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.445834062 seconds)
    (23/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.313585903 seconds)
    (24/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.426361622 seconds)
    (25/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.31954668 seconds)
    (26/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.496152437 seconds)
    (27/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.240283442 seconds)
    (28/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.40647113 seconds)
    (29/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.382352819 seconds)
    (30/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.277682581 seconds)
    (31/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.318816262 seconds)
    (32/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.308655835 seconds)
    (33/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.391433272 seconds)
    (34/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.259958162 seconds)
    (35/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.261897692 seconds)
    (36/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.367908759 seconds)
    (37/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.449322157 seconds)
    (38/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.314127954 seconds)
    (39/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.356712654 seconds)
    (40/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.260604321 seconds)
    (41/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.357361425 seconds)
    (42/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.381948528 seconds)
    (43/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.262854424 seconds)
    (44/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.284057173 seconds)
    (45/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.390514881 seconds)
    (46/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.426749539 seconds)
    (47/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.26121417 seconds)
    (48/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.534876922 seconds)
    (49/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.417144679 seconds)
    (50/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.339919441 seconds)
    (51/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.391205159 seconds)
    (52/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.359644437 seconds)
    (53/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.43693883 seconds)
    (54/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.317208475 seconds)
    (55/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.26357292 seconds)
    (56/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.408274366 seconds)
    (57/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.272320307 seconds)
    (58/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.544273613 seconds)
    (59/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.43520527 seconds)
    (60/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.168431909 seconds)
    (61/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.433102413 seconds)
    (62/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.262806219 seconds)
    (63/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.034888929 seconds)
    (64/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.370272579 seconds)
    (65/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.266213245 seconds)
    (66/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.978006741 seconds)
    (67/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.378932764 seconds)
    (68/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.292533391 seconds)
    (69/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.312029998 seconds)
    (70/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.437285616 seconds)
    (71/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.318967096 seconds)
    (72/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.264181564 seconds)
    (73/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.338487167 seconds)
    (74/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.313235558 seconds)
    (75/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.26458462 seconds)
    (76/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.37745549 seconds)
    (77/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.318099677 seconds)
    (78/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.262760042 seconds)
    (79/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.549263593 seconds)
    (80/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.264983225 seconds)
    (81/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.332390295 seconds)
    (82/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.392230708 seconds)
    (83/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.610321556 seconds)
    (84/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.371118829 seconds)
    (85/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.26444114 seconds)
    (86/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.369148169 seconds)
    (87/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.379460496 seconds)
    (88/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.540168278 seconds)
    (89/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.408598055 seconds)
    (90/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.279013899 seconds)
    (91/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.35174303 seconds)
    (92/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.265946314 seconds)
    (93/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.313253307 seconds)
    (94/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.399273321 seconds)
    (95/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.311331184 seconds)
    (96/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.267923345 seconds)
    (97/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.989063087 seconds)
    (98/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.533304178 seconds)
    (99/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.325723848 seconds)
    (100/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.281595941 seconds)
    (101/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.277627152 seconds)
    (102/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.939537519 seconds)
    (103/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.081375354 seconds)
    (104/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.336885076 seconds)
    (105/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.283502379 seconds)
    (106/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.511692158 seconds)
    (107/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.297768859 seconds)
    (108/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.321869156 seconds)
    (109/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.276205606 seconds)
    (110/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.449237322 seconds)
    (111/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.043301949 seconds)
    (112/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.465876977 seconds)
    (113/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.533758779 seconds)
    (114/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.995648901 seconds)
    (115/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.321917985 seconds)
    (116/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.425460847 seconds)
    (117/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.469281766 seconds)
    (118/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.039837068 seconds)
    (119/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.402594779 seconds)
    (120/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.286171687 seconds)
    (121/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.38479735 seconds)
    (122/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.429091537 seconds)
    (123/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.382811192 seconds)
    (124/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.495829227 seconds)
    (125/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.266694807 seconds)
    (126/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.267887478 seconds)
    (127/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.224104138 seconds)
    (128/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.267682577 seconds)
    (129/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.416589384 seconds)
    (130/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.372621535 seconds)
    (131/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.392789906 seconds)
    (132/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.267855531 seconds)
    (133/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.436060024 seconds)
    (134/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.352741098 seconds)
    (135/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.322150867 seconds)
    (136/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.267035921 seconds)
    (137/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.160110179 seconds)
    (138/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.413338103 seconds)
    (139/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.392747202 seconds)
    (140/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.440086063 seconds)
    (141/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.098622199 seconds)
    (142/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.535273215 seconds)
    (143/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.268509619 seconds)
    (144/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.327651973 seconds)
    (145/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.393457135 seconds)
    (146/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.26830844 seconds)
    (147/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.413809445 seconds)
    (148/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.268279466 seconds)
    (149/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.327976159 seconds)
    (150/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.455532825 seconds)
    (151/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.31514149 seconds)
    (152/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.366993196 seconds)
    (153/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.313753592 seconds)
    (154/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.466478959 seconds)
    (155/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.344864474 seconds)
    (156/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.284058376 seconds)
    (157/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.501042287 seconds)
    (158/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.361763769 seconds)
    (159/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.450864387 seconds)
    (160/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.320973502 seconds)
    (161/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.30211329 seconds)
    (162/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.436287098 seconds)
    (163/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.273161363 seconds)
    (164/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.428764262 seconds)
    (165/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.50546722 seconds)
    (166/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.286314066 seconds)
    (167/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.328686555 seconds)
    (168/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.333376751 seconds)
    (169/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.269981023 seconds)
    (170/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.312561574 seconds)
    (171/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.987102201 seconds)
    (172/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.568118724 seconds)
    (173/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.403013067 seconds)
    (174/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.487538822 seconds)
    (175/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.409350769 seconds)
    (176/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.083689562 seconds)
    (177/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.349084856 seconds)
    (178/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.269807739 seconds)
    (179/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.290174206 seconds)
    (180/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.017030856 seconds)
    (181/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.27110369 seconds)
    (182/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.275567634 seconds)
    (183/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.296376079 seconds)
    (184/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.279840209 seconds)
    (185/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.317555631 seconds)
    (186/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.423788864 seconds)
    (187/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.271118559 seconds)
    (188/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.113440149 seconds)
    (189/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.459139795 seconds)
    (190/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.399122472 seconds)
    (191/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.1333578 seconds)
    (192/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.272004166 seconds)
  done (took 329.643136725 seconds)
done (took 330.815765762 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.311600023 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.378831569 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.294716378 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.295739604 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.297357718 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.297104452 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.313581274 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.296014093 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.306898853 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.306971993 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.300682494 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.301872392 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.30888101 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.304577744 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.330739 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.296764239 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.295275147 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.303928036 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.307548634 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.308177351 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.296405434 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.297936241 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.315226772 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.297011092 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.304689189 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.30577532 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.30275783 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.288691256 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.302534337 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.308176395 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.290805163 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.303615363 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.309119624 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.306919461 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.300039652 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.30524406 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.298098523 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.378719756 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.314800425 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.305204027 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.303205725 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.311314541 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.303539946 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.302799197 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.307601443 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.318973092 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.30812105 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.313434623 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.291656786 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.291433477 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.314489398 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.308943493 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.303601794 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.293672557 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.304755945 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.314328107 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.30657068 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.316550419 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.305540344 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.30169297 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.332421984 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.315057212 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.307259493 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.307588638 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.304838981 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.310941703 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.307307948 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.312002691 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.304241972 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.300110613 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.3027026 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.305059795 seconds)
done (took 103.307740777 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.415361081 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.296733896 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.442521866 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.306183839 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.459889074 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.429048682 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.303352706 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.304976064 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.302925096 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.097282462 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.304614832 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.305333179 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.296749735 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.305371236 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.428518547 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.30691458 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.305496568 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.993354104 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.306482436 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.438986132 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.294974831 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.305908596 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.30845684 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.095892625 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.297111408 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.294592658 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.439588848 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.307878066 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.008766887 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.296384258 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.296276821 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.99792047 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.440623755 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.325238524 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.317881186 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.315839632 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.462074701 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.311987168 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.421705171 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.419848008 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.442298284 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.347317027 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.296304897 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.299421435 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.309163262 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.30894924 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.307014028 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.3373105 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.297971511 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.307867303 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.996694407 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.318207842 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.315354071 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.307626067 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.307376731 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.327757468 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.308809152 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.310963755 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.442951543 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.310847275 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.425887166 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.108644679 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.095885697 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.309341686 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.297831948 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.309154953 seconds)
  done (took 106.244002005 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.37021112 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.377727397 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.410981394 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.303561768 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.353542712 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.40930031 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.304589587 seconds)
  done (took 10.721484889 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.310198726 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.310178132 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.352623461 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.353094137 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.308870515 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.486199826 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.311410097 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.315736216 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.30916131 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.357623357 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.311822979 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.311166397 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.320066589 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.305062598 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.352230245 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.316163801 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.419592965 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.304158454 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.309584968 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.459142624 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.308768762 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.317251113 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.355570795 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.316479148 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.313774236 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.312558017 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.078717411 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.312086237 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.311331991 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.313945513 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.309960138 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.359402319 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.313326718 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.305320067 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.310193032 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.424574165 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.311243696 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.312639945 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.31549742 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.306640547 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.314614232 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.313167041 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.31430056 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.312609179 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.3144958 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.330732435 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.316332405 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.312973568 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.31393848 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.31718671 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.356364232 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.313124698 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.312621503 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.310723287 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.362274292 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.319914741 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.314298988 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.310923362 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.315462491 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.311167319 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.460603117 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.355830564 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.315898092 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.355214385 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.313702185 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.314063875 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.316759904 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.31375833 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.399638874 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.312204264 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.354063198 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.312029711 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.49143485 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.332050103 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.315397543 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.310526798 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.313428847 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.31532086 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.307000107 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.316002254 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.313073575 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.312090554 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.314326521 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.313509342 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.312805293 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.520018105 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.422839724 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.315007608 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.321832512 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.316736349 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.312801141 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.364069487 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.31255287 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.314447396 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.36256496 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.424453965 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.363401427 seconds)
  done (took 135.356209504 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.322563813 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.32204759 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.312162335 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.338251478 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.312586982 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.310195563 seconds)
  done (took 9.1144848 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.312852363 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.317548224 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.315130039 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.31714011 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.317958431 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.320421618 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.321939513 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.312543689 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.318255863 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.319857653 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.321592123 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.322861248 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.327210195 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.316945976 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.320068022 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.319948815 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.322596069 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.31605697 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.315989695 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.317558358 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.309776716 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.318678761 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.317212987 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.31469462 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.3237005 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.320203419 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.333185029 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.321475655 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.318105582 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.321066397 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.321180679 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.322534909 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.31416756 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.318506405 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.326812137 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.314412626 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.318904532 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.324094833 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.317586959 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.32288454 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.32528445 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.319038528 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.322574964 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.324835419 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.315545463 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.316547536 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.327970476 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.333620858 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.322493501 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.325106418 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.326154161 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.319185382 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.324052356 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.325920639 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.316006061 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.316730934 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.328437881 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.325415617 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.31913327 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.31471897 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.320992915 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.322726307 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.314655611 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.32460136 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.318057829 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.327817655 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.316470846 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.322737893 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.322236172 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.318883219 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.32787587 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.3204317 seconds)
  done (took 97.280570269 seconds)
done (took 359.904647768 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.58639786 seconds)
  done (took 3.787309223 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.578863033 seconds)
  done (took 3.781321639 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.199806738 seconds)
  done (took 22.654424272 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.31102019 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.373861724 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.325422553 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.325637895 seconds)
  done (took 10.53691074 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.568964297 seconds)
  done (took 3.775911619 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.323374308 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.317722533 seconds)
  done (took 5.845665767 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.482568939 seconds)
  done (took 3.68452683 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.519688808 seconds)
  done (took 3.721819299 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.342279067 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.329554084 seconds)
  done (took 5.881141903 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.294268177 seconds)
  done (took 3.496159662 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.142297201 seconds)
  done (took 20.346777368 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.324579493 seconds)
  done (took 3.529996451 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.361883503 seconds)
  done (took 3.564002502 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.811716898 seconds)
  done (took 6.014712742 seconds)
done (took 101.823148316 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.311177432 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.310905868 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.310746765 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.312235504 seconds)
  done (took 10.447204412 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.377510011 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.376081917 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.382279063 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.377839544 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.377044623 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.377053101 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.353371609 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.350575566 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.377879884 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.376670155 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.383130982 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.379473918 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.377600848 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.350433682 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.377148328 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.384597786 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.378333426 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.384341957 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.351893045 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.379531866 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.326615466 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.379715109 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.378229974 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.326175515 seconds)
  done (took 34.087471871 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.834074884 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.389723641 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.472794288 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.369770045 seconds)
  done (took 7.269975468 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.405294738 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.408916955 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.42514834 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.46265826 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.492365173 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.424544768 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.352751397 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.347344926 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.333958529 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.409086626 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.460306647 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.396173399 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.511472974 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.327237477 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.614415993 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.327302593 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.327273231 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.408378849 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.46142228 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.477709179 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.329342829 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.407009325 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.412949382 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.397521882 seconds)
  done (took 35.124803517 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.333390426 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.345666325 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.326762444 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.34085334 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.326762827 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.327376245 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.327970505 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.332855074 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.32648205 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.32560585 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.327319822 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.342070914 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.324885977 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.327266526 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.333532941 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.329315352 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.329159801 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.33350277 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.334736651 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.327562104 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.326857645 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.332454939 seconds)
  done (took 30.489006921 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.314807543 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.31563234 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.668539332 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.571828712 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.316953872 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.316171525 seconds)
  done (took 13.71224515 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.390482113 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.525049539 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.321299127 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.660197144 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.745850131 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.329355727 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.323117321 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.560480996 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.843384726 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.836820005 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.381413801 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.39075894 seconds)
  done (took 19.517024846 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.330962595 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.320962659 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.334739638 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.335967873 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.373643945 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.326174942 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.329270468 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.317294189 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.378811222 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.381314486 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.327286798 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.377387644 seconds)
  done (took 21.342834182 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.41276659 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.323638396 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.324034574 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396860603 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.324739769 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.168605305 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.329410617 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.011577034 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.32954526 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.599618747 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.324511526 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.415174956 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.579884695 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.328166861 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.33018554 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.303862222 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.560241543 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.794320389 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.328710689 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.326851812 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.358731622 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.328910116 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.330592137 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.528889687 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.173462991 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.32800925 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.589005644 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.326706239 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.593734634 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.5747068 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.577215296 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.334888459 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.600720345 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.958449142 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.427337484 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.524306824 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.341641446 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.327771735 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.306846133 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.331305439 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.334858363 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.345200062 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.567908961 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.333576292 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.328227343 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.342748215 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.032486813 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.33564376 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.327261492 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.328665113 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.571184515 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.429938744 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.332143321 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.32951644 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.400982797 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.33276052 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.332843234 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.452798166 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.891460323 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.329246075 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.364542424 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.335473538 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.322894271 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.336924651 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.91315246 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.33524711 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.336570254 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.333915255 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.330660211 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.337979029 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.35505337 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.3317661 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.352227008 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.331481618 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.016017633 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.34194067 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.333945697 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.863026543 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.331660825 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.335361632 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.561904274 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.331613035 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.330734768 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.330094849 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.331474551 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.999261786 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.340380548 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.310136041 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.375243449 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.015256674 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.527798106 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.355427717 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.362286293 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.551824296 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.308674442 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.331695479 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.332243078 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.338698146 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.352827019 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.02665851 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.332193433 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.336751044 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.58919224 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.543655856 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.345464074 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.312517573 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.798814462 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.336503848 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.376248974 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.340745586 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.534846681 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.900177294 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.581569636 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.341438248 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.37013517 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.333709853 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.053026829 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.347883069 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.342260112 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.338154173 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.59479081 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.097452674 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.336580305 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.403775152 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.342410145 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.33547047 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.342281809 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.336460714 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.335483135 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.535531139 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.350282528 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.580469052 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.342842162 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.334463864 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.335681293 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.347510492 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.338808798 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.557991042 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.35057348 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.615094217 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.336540325 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.335818478 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.335659342 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.559880675 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.33491158 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.3446862 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.596751877 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.340640881 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.340763378 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.585965876 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.371526842 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.445025401 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.363871596 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.34178986 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.596001385 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.340771584 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.342110956 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.346479742 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.338885253 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.345722285 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.344969319 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.331362112 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.903185876 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.313529796 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.340515524 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.338955184 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.352197251 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.406273653 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.344036077 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.536815242 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.35039338 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.354706168 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.343714933 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.340477532 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.56419149 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.578577617 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.34589793 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.415083031 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.79735616 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.906390591 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.353720273 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.337102807 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.336270324 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.339107964 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.339091211 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.337957256 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.339288691 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.538016622 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.595426091 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.339225513 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.907072987 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.344576324 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.344190792 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.345051068 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.585468372 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.347612597 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.340874403 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.342254552 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.344416773 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.343379441 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.609359878 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.478813533 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.35554104 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.339715748 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.856790142 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.345810179 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.339895407 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.340159285 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.371478945 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.349690644 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.168067219 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.60180249 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.339599542 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.587135216 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.342822498 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.356496868 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.339252175 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.339583755 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.355090014 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.368977805 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.349862023 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.540721152 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.35885336 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.342735519 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.899834121 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.052709789 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.858585482 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.350510398 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.350646643 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.348231526 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.043094202 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.34279536 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.343449848 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.571093969 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.04112262 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.342632492 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.80822043 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.355741274 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.079812584 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.595546005 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.575551071 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.350247735 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.343745144 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.609968681 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.554292975 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.376231802 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.3523613 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.348092089 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.321352419 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.874466431 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.346445333 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.422574943 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.037776663 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.358726935 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.346630799 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.405460659 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.35701247 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.727360076 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.34739747 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.343941855 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.343678153 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.350576498 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.17387766 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.349693778 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.345168149 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.938539155 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.360947549 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.810598518 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.344067765 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.545261815 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.597549337 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.593185605 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.358980395 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.357172809 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.599243272 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.594253493 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.347062751 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.360586086 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.869150206 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.213616306 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.352803052 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.346482543 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.067609642 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.350924727 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.624904962 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.355035276 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.363380854 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.354419332 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.345657998 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.348493763 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.345486311 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.353944622 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.322340303 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.813887401 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.354735786 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.350839865 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.350416204 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.352931549 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.602704884 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.361310108 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.916025613 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.579613729 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.349780047 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.378420043 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.35202662 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.358447774 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.328290045 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.347195633 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.348589884 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.415271017 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.569151667 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.347631266 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.326097113 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.368788283 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.557690504 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.349297066 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.34912489 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.559820989 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.351980949 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.355780664 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.071170905 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.385268493 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.36158967 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.350626972 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.364320077 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.38945637 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.418235056 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.548949043 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.600937708 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.602547717 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.737177477 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.361573933 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.349961136 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.363575628 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.443881321 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.347747291 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.352683317 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.136408811 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.91866433 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.068167602 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.923971358 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.601839333 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.351791029 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.356598146 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.349194292 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.485435666 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.349775836 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.626658728 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.349617271 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.356780498 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.371582513 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.356494809 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.364182373 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.565155621 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.625479883 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.349801222 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.359818926 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.355537669 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.349730474 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.599968388 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.569643575 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.824077378 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.885062365 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.352585119 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.353009437 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.061587577 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.626565676 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.349659407 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.352222515 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.351391767 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.374245029 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.374670518 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.376883321 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.352689666 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.507238844 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.598576151 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.99673641 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.602036579 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.392592554 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.870529829 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.351290251 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.610387442 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.351464038 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.558147352 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.925919196 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.043063978 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.622780493 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.421972731 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.554653086 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.356057415 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.490232114 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.357672254 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.353656222 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.354454526 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.35324555 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.353002992 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.598461958 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.933426769 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.624073377 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.358017768 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.359028218 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.382996035 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.555222427 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.581555251 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.037872942 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.583533178 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.607490939 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.367164211 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.354416692 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.930197996 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.604929928 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.36324403 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.360459434 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.567571146 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.360343155 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.381103384 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.873730499 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.353816786 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.899487488 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.245348818 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.376811646 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.3548009 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.057331406 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.93263741 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.36049402 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.835024625 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.361758591 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.369382126 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.636388318 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.361983489 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.358617772 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.640021883 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.361817461 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.356326396 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.564659414 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.929265793 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.107676181 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.371176875 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.375683776 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.380284764 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.357861194 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.36826296 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.356435905 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.36544949 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.767168679 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.362535161 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.357313954 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.369631159 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.361534145 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372988582 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.361152377 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.356357724 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.36550128 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.355116503 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.33982783 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.390967677 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.485136957 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.894844101 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367238894 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.036201565 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.682137996 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.614338045 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.372599159 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.342002449 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.363380733 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.357607105 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.35928058 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.359024794 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.374715801 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.902061246 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.361698026 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.625760153 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.369254715 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.569092289 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.568676952 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.360355855 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.568113632 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.3649681 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.401495398 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.336498467 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.36017642 seconds)
  done (took 963.441764158 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.364040192 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.359962824 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.382010116 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.410963416 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.378856788 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.472887032 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.359860152 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.374260377 seconds)
  done (took 20.342917261 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.353764207 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.366242255 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.367641496 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.362449703 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.362940333 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.824499378 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.363540271 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.363417147 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.377305763 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.364595104 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.365111312 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.026274612 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.384104497 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.368779825 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.344215796 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.366082069 seconds)
  done (took 32.202603521 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.464431586 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.541244313 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.292273209 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.401605427 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.389352105 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.356466416 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.587504853 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.372097183 seconds)
  done (took 26.647082153 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.371535719 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.368362353 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.369532541 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.369219065 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.369290877 seconds)
  done (took 8.090118393 seconds)
done (took 1223.920348081 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.367384309 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.36652578 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.36702166 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.367906747 seconds)
  done (took 6.711408087 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.340325144 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.339658763 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.342705379 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.352388602 seconds)
  done (took 9.617804849 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.037707128 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.969674962 seconds)
  done (took 5.249945934 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.851037221 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.869558233 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.855776828 seconds)
  done (took 6.818645221 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.651118683 seconds)
  done (took 2.892585435 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.279545941 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.362376599 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.034482125 seconds)
  done (took 7.921037089 seconds)
done (took 40.454791912 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.372310002 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.602941657 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.51290933 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.37282934 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.518821535 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.512973992 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.162515222 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.357756165 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.36771076 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.366935307 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.372052115 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.517231591 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.077971987 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.604393073 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.08000129 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.605510145 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.517399759 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.358082064 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.368313057 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.359032449 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.163941976 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.362531904 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.369361392 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.364644263 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.51846317 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.504325826 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.358755546 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.60457325 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.359453913 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.358924384 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.524792522 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.368708537 seconds)
  done (took 82.109655152 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.358939278 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.360708425 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.36546663 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.364190238 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.366899752 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.368790567 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.361536738 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.360216359 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.359789764 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.364271179 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.368787329 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.365277191 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.360399204 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.360199574 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.377072515 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.360372775 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.376799765 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.379477987 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.361560237 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.361021482 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.362395903 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.362053642 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.362954635 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.361228286 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.36760912 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.373059828 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.359572537 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.361830298 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.361766197 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.361610416 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.37373152 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.367126431 seconds)
  done (took 76.922507868 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.361761211 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.366423994 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.363853888 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.374750644 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.363218448 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.381082179 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.362784133 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.363331368 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.361820451 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.389887642 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.362544221 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.387665919 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.36349323 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.362090776 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.380312813 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.362169708 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.389696686 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.366354424 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.364649987 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.363645312 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.380051879 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.362739674 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.368793978 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.366317908 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.368947863 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.363380315 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.36350374 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.364002399 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.375966696 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.366059497 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.369084631 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.364817418 seconds)
  done (took 77.054527806 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.60345492 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.377976952 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.380612803 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.373765934 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.381706417 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.378200567 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.372747362 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.61041245 seconds)
  done (took 14.727768829 seconds)
done (took 252.058511123 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.369810467 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.865465783 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.402293394 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.368878716 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.394635971 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.395250638 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.584850147 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.400437308 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.588898226 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.391300478 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.408562256 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.38275797 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.168758108 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.522157146 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.228188737 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.326191036 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.254215979 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.372090697 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.957716897 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.656036597 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.400106197 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.365925456 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.230392 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.269650961 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.360755953 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.455336735 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.47026623 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.596637669 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.533368947 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.450699627 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.890706033 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.380756766 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.381842743 seconds)
  done (took 64.07652868 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.371098634 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.377379635 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.38215911 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.381967159 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.378941576 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.381633893 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.372509192 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.380828009 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.382143854 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.382624966 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.383529856 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.380374973 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.379229635 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.379463325 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.378085345 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.36123231 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.372158793 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.378786231 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.373503399 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.361832727 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.377932553 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.381201262 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.382661395 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.380233538 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.383715134 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.382727968 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.379788524 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.380923776 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.380785247 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.37968527 seconds)
  done (took 42.601651568 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.383454619 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.93924348 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.099257934 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.387712197 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.377107758 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.37823262 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.656208134 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.388547516 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.380344566 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.377215218 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.860595731 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.392018323 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.407213693 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.095243953 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.383581788 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.384694234 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.383768393 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.376870022 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.948481513 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.391471256 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.656462385 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.390749963 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.658162737 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.39099302 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.379917418 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.377798171 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.381174051 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.186645438 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.401907954 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.8684009 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.131744443 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.656945085 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.119795206 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.146501533 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.138160017 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.391503907 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.387108068 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.863905726 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.383245159 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.377518676 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.656176984 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.384230277 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.098787214 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.045963078 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.396516675 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.387755214 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.196292953 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.877270466 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.618724518 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.389763154 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.133554064 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.382155826 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.389412891 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.379147674 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.614435686 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.3855556 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.378463859 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.21175206 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.401180797 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.657114711 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.393381162 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.37930625 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.949277306 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.385356181 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.937890362 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.382448799 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.388659664 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.381543211 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.10856468 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.387366032 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.057689936 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.397193455 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.388153372 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.853913607 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.943329273 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.252159242 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.382422986 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.949092549 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.132697176 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.674294437 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.38531276 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.172682181 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.675610718 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.385268642 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.391108809 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.389926664 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.388819155 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.473625754 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.657206944 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.991951554 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.056202249 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.221073519 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.678262833 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.393975891 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.382198254 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.215996515 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.406153622 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.391238629 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.111612925 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.067848183 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.399263252 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.390509843 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.046545938 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.400732549 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.663325192 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.39244606 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.143439444 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.381949847 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.454537672 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.390305332 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.389486337 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.385654245 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.662961461 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.392118635 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.392390453 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.046054498 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.896289625 seconds)
  done (took 192.910333022 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.379017012 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.395108778 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.379479838 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.377334876 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.378788586 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.385650008 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.380373523 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.377496529 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.384110255 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.379330426 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.377829923 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.387373632 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.384876325 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.377706804 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.378125545 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.378579485 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.377936327 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.398337235 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.379047837 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.379281034 seconds)
  done (took 44.897236047 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.392694741 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.928351606 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.898522113 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.398617717 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.388027848 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.386405182 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.438043114 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.393223388 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.391025068 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.674968845 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.552252202 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.400377355 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.390847413 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.390582249 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.900290002 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.376383396 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.676858002 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.938583578 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.39851475 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.93463336 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.377539981 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.393885877 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.38369654 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.929867483 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.687052646 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.668589859 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.445857783 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.932682254 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.392283128 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.391196596 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.931249587 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.396004461 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.386515528 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.921742387 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.39628811 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.409334586 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.391526973 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.442184964 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.44374993 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.679634274 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.93840445 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.674329967 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.411663171 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.55547957 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.39519149 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.372453324 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.938712584 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.397193272 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.374726688 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.393111181 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.399555065 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.913411218 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.393027313 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.912481088 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.398251484 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.397189319 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.934460806 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.913356093 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.911683799 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.560882079 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.390525587 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.668080305 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.398140192 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.940936566 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.399898635 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.396975841 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.396124069 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.556155765 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.94096293 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.669027744 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.682334612 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.682347535 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.397523115 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.451071259 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.398949659 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.682101426 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.450114599 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.781847275 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.684312024 seconds)
  done (took 125.667740303 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.642796817 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.501563592 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.760202463 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.96688318 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.884021128 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.524165322 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.497685979 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.633127831 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.409761227 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.479595443 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.019046764 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.488789791 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.115179192 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.483772451 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.50244493 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.522259392 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.77746299 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.37924125 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.042632309 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.992753427 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.391471381 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.498000981 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.908083138 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.580044255 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.402834043 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.934444765 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.318213098 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.900637996 seconds)
  done (took 52.823235779 seconds)
done (took 524.22745176 seconds)
SAVING RESULT...
DONE!
