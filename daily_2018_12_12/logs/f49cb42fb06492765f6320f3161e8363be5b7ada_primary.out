cset: moving following pidspec: 22247
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.306499219 seconds)
loading group "string"... done (took 0.556673116 seconds)
loading group "linalg"... done (took 7.689111243 seconds)
loading group "parallel"... done (took 0.173515034 seconds)
loading group "find"... done (took 1.185600011 seconds)
loading group "tuple"... done (took 1.858482001 seconds)
loading group "dates"... done (took 1.271785243 seconds)
loading group "micro"... done (took 0.237552511 seconds)
loading group "io"... done (took 1.10878625 seconds)
loading group "scalar"... done (took 42.561486433 seconds)
loading group "sparse"... done (took 13.881900891 seconds)
loading group "broadcast"... done (took 1.041430172 seconds)
loading group "union"... done (took 15.091423205 seconds)
loading group "simd"... done (took 5.126394752 seconds)
loading group "random"... done (took 10.162101393 seconds)
loading group "problem"... done (took 2.048408366 seconds)
loading group "array"... done (took 22.865710388 seconds)
loading group "misc"... done (took 2.053171002 seconds)
loading group "sort"... done (took 3.47013729 seconds)
loading group "collection"... done (took 19.812256334 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.590012419 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.145687856 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.153623679 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.133373923 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.212516564 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.162081751 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.16283318 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.100902023 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.027128922 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.184881295 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.157331321 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.540101545 seconds)
done (took 5.34047651 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.236110153 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.097385389 seconds)
    (2/2) benchmarking "String"...
    done (took 0.107261347 seconds)
  done (took 0.916956882 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.0790087 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.149177721 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.096750963 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.07993251 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.098370424 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.079453087 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.097123627 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.079289684 seconds)
  done (took 1.399301569 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.08817158 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.100074275 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.083177894 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.099236319 seconds)
  done (took 1.09048153 seconds)
done (took 4.443701565 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.748940925 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.279665296 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.205706384 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.473621037 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.203779974 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.222865233 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.677363828 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.352088384 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.25646871 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.104072104 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.147938074 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.396670451 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.139468 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.686595485 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.093337519 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.128269659 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.181807435 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.469509966 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082986624 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.110275647 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.117245157 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.142770123 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.130058888 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.092113673 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.186010044 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.082070018 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.195337416 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.109391477 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.080569172 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.277299328 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.201576644 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.691927779 seconds)
  done (took 11.026750637 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.114098446 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.138563769 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.101108752 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.141708825 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.137156915 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.101343202 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.08530993 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.099518334 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.124112843 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.179688696 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.116266838 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.137670148 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.098137004 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.084036907 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.119183622 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.250018909 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.124627064 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.100852513 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.103383834 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.090128544 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.141289349 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.114718801 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.110281732 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.094793859 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.167144318 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.223480596 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.110734341 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.12683499 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.098121562 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.11337974 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.144687887 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.145219394 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.095560249 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.080532358 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.174451682 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.125660923 seconds)
  done (took 5.247865788 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.114688546 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.19368353 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.125036483 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.175259716 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.080911242 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.145204449 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.09638695 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116059075 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.260118107 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.114623475 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.498400114 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.143572477 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.102275097 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.101006005 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.084754852 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.100044236 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.587195969 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.157445332 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.134793974 seconds)
    (19/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.160274797 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.096211515 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.10639571 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.102312402 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.079632355 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.099087729 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080671091 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.125498159 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.319280742 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.162021432 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.082598999 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.141496647 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.122668196 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.09939652 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.117536516 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.20864641 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.125931769 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.117652915 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097866952 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.077976612 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.193062411 seconds)
    (40/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.079882996 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.103813104 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.080764826 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.120679947 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133419635 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.118608713 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.100040022 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.097972459 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.204027707 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.096592424 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.097134786 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.9547873 seconds)
    (52/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.096093221 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.182574488 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.091579095 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.098436498 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.311871696 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.097265455 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.098880991 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.076119736 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.285747575 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.189678523 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.098388683 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.080180157 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097591656 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.081647731 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.400203025 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.082615849 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.70571453 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.084872985 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.109322806 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.085577239 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.099762122 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.106120883 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.088955511 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.117982936 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.081898273 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.101934047 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.080482082 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.099449118 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.082296286 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.111679013 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.215774482 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.100195627 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.08060471 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.098837732 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.11780361 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114513287 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.103459414 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.09704886 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.117096403 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.10284811 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.100074497 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.119287097 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.101877009 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.110381989 seconds)
    (96/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.079172636 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100561317 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.143370494 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.082055578 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.156201259 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.097317178 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.124483382 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.100129454 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115067621 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.112732828 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099792744 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.168029225 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.078315426 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.096648203 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.080461862 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.099742784 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.082653341 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.1029592 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.112174163 seconds)
  done (took 22.936119536 seconds)
done (took 41.039216139 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.328466292 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.107023366 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.106067794 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.104315662 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.102887359 seconds)
  done (took 1.541518663 seconds)
done (took 2.301228533 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.29132387 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.176586098 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.096639156 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.167745849 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.093657491 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.173963669 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.164136293 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.112645296 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.202522772 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.095709057 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.16192862 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.093992518 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.078547632 seconds)
  done (took 2.703883208 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.097420135 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.119527497 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085670366 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.114415409 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078720007 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.115088977 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.095168552 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.120984945 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.112804501 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087605098 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.097439399 seconds)
  done (took 1.886309556 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.097345535 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.116659966 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084984029 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.114605657 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.07801454 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.115006598 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.094308949 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.121340624 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.113687543 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087893082 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.096605577 seconds)
  done (took 1.878208014 seconds)
done (took 7.215838887 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.094774013 seconds)
  done (took 0.849551976 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.948055204 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.913337063 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.11344087 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.150946477 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.317027619 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.19355665 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.480599493 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.124985052 seconds)
  done (took 11.192732753 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.144590546 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.085862212 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.101141311 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.084915272 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.105250255 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.082351721 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.103735509 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.100464751 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.086998149 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.103205087 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.082163517 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.101436439 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.10247977 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.084443471 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.100685202 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.085706402 seconds)
  done (took 2.379145727 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.119437555 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.118106191 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.107501646 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.109446219 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.086626919 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.106757349 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.107230531 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.088758709 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.10352358 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.103722447 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.090257566 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.106205132 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.104029149 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.080171275 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.108483883 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.108437672 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.086167258 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.107230441 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.107453939 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.089599495 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.107611136 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.095537267 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.086962515 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.10725628 seconds)
  done (took 3.309415784 seconds)
done (took 18.489426545 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.164107177 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.112019725 seconds)
  done (took 1.038318403 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.100308692 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.116182465 seconds)
  done (took 0.98343716 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.101263346 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.098943431 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.122257523 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.110854737 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.08077254 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.097709091 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.120561306 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.080268055 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.097941246 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.079806545 seconds)
  done (took 1.76027501 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.08603659 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.112039195 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.102244357 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.095696802 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.106858097 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.095420677 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.088696258 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.10010214 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.110265759 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.078122366 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.103046673 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.115288477 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.085682192 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.116659266 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.105727512 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.083162363 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.103297091 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.09995137 seconds)
  done (took 2.559922894 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.082349537 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.097484473 seconds)
  done (took 0.948882678 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.084658645 seconds)
    (2/7) benchmarking "second"...
    done (took 0.097234493 seconds)
    (3/7) benchmarking "month"...
    done (took 0.083184463 seconds)
    (4/7) benchmarking "year"...
    done (took 0.099343812 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.094710815 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.078121616 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.095029804 seconds)
  done (took 1.401435494 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.487534171 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.135939046 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.261338709 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.102426603 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.103867967 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.301737654 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.10005584 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.084678942 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.104802312 seconds)
  done (took 2.50948522 seconds)
done (took 11.966597871 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.097491125 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.119937436 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.113996068 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.470022137 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.10813166 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.099895976 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.148577071 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.257543433 seconds)
done (took 2.191040251 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.145856314 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.606711028 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.428994711 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.232707422 seconds)
  done (took 2.050713291 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.409864343 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.0999645 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.086088614 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.08223714 seconds)
  done (took 1.455579782 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.082770907 seconds)
    (2/2) benchmarking "read"...
    done (took 0.101714728 seconds)
  done (took 0.961921697 seconds)
done (took 5.391942816 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083669681 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.099509353 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.079751619 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.098018245 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.079297357 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.095445683 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.081200166 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.097858195 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 0.081668576 seconds)
    (10/24) benchmarking ("one", "Float32")...
    done (took 0.098367656 seconds)
    (11/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081417682 seconds)
    (12/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.13008592 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.096787023 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079054848 seconds)
    (15/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.09660517 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081153191 seconds)
    (17/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.098871176 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.079068297 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.096965342 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078765856 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.095295591 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081371065 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.095238556 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.077976642 seconds)
  done (took 2.975117882 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.103864198 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.101272012 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.104061428 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.087131471 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.103453604 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.086471499 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.104416808 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.098326668 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.086421291 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.10104302 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085317609 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.103296164 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.100545772 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.085331335 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101618197 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.102251417 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.087161569 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099638553 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082604523 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.103880817 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.103971068 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081564662 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.10353119 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.086201824 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.103908595 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102744951 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.083502464 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.099332557 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102863747 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.086057526 seconds)
  done (took 3.662643193 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.088218772 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.096003079 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.079475605 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.102918284 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.078306993 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.098531655 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.078003075 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.099093122 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.079288136 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.096869238 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.079427477 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.096905847 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.077525637 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.098211747 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.078029283 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.101225181 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.108217103 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.079025328 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.096762065 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.079375124 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.099369218 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.078643808 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.096852847 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.078816432 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.096667195 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.077991244 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.096811314 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.078077315 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.09698909 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.077709233 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.100890848 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.081468239 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.097232911 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.084610005 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.101253493 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.07788615 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.101158667 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.077973976 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.097494833 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.076970615 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.096994803 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.094471736 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.079344219 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.102675857 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.079108085 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.098189086 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.079157827 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.09792252 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.079303325 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.100748899 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.077978534 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.096318886 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.080028713 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.097771622 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.081628795 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.097315776 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.095895203 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.079038436 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.096884846 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.079726764 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.09620265 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.079268374 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.099184528 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.079766742 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.112712524 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.085744787 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.097393893 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.080995471 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.09911866 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.081304863 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.099383717 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.092830662 seconds)
  done (took 7.247067576 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.087170101 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.110619555 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.082880171 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.102052422 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.077939046 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.099808124 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.102505789 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081589783 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101651178 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.087945095 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101367831 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.082358466 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101903488 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.111788205 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.08216303 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.101599345 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.088555734 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.098068176 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.081265988 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.104244568 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.080318299 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.103391537 seconds)
  done (took 2.86487922 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.217699075 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.109510381 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.145632628 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.109316791 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.083625842 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.108326068 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.103514212 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.088377886 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104670128 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.19475925 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102099036 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103265677 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.083898654 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102151729 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.101052689 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.086500378 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103867179 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.086170063 seconds)
  done (took 2.828810249 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.097253035 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.102950143 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.105084401 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.103746749 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.103114236 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.086673462 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.108945152 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.111740992 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.086980251 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.102545202 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.09140898 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10439473 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.101663968 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082071275 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102278977 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.082309601 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.103185821 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08091686 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.11045798 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.106203322 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.08776913 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.110481901 seconds)
  done (took 2.968692997 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.100594386 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.105436173 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.124022436 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.087091637 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.096381288 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.080353852 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.107907112 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.081396528 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.109748782 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.100643098 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082766777 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.098649181 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.087954028 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.100837644 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.104843549 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081624422 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.102110113 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.08137056 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103322538 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.076920135 seconds)
  done (took 2.712684984 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.106222513 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.104707263 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.103724738 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.095384017 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.104957015 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.084446155 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.115012844 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.10447555 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.084588637 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.129584616 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.105415389 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.085324222 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.113343215 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.111203833 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.103247866 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.096562337 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.114218469 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.11393513 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.085011088 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.1052598 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.128991915 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.084336276 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.114061201 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.104686492 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.085022091 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.104493254 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.103905765 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.09126277 seconds)
  done (took 3.684225744 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084654223 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.102125383 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.08495878 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.100428044 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.082016602 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.100397573 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.081799964 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.099809963 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083861765 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.099927225 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.084020256 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.102146013 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082842229 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.10229211 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.082539495 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.100403637 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081784234 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.098678051 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078947056 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098650514 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.081344772 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100934308 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.081835276 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.098002597 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078848319 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.100622536 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078844653 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.098996746 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081512408 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.098454472 seconds)
  done (took 3.533854779 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.094306869 seconds)
    (2/2) benchmarking "in"...
    done (took 0.111225735 seconds)
  done (took 1.006788224 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.08293817 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.11934449 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.08157048 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.108417262 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.087786253 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.104429075 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.108576413 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086539841 seconds)
  done (took 1.581908416 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.100422381 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.115797169 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.085623513 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.119022699 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.113938021 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.10072803 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.176276979 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.103862073 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.087122126 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.099993162 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.114564379 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.082762393 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.107401486 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082876543 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.107482381 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.088649379 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.100145544 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.107069536 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.086523014 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.102957819 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084187833 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110813566 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084260321 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.097489447 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.102130546 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.091823919 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.114345486 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.08327003 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.106017101 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.10793033 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.08862613 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.094802999 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.082491131 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.102497549 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.080505642 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.111246236 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.117722159 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.085140021 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.111740359 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.083353625 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.113495707 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.096659359 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.087174013 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.107442447 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092306774 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.102401273 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.102455396 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.078245714 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.09875883 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.085252056 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.096967642 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.082685557 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.096908496 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088905963 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.105415165 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112420061 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.08202102 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.102749366 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.085132834 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.104983454 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.088652806 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.104366954 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.102688791 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.082994102 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.107968668 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.08637932 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.112606448 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.077622278 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.09731275 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.097796265 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.093832408 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.125847679 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.088200353 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.104118285 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.102160033 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.081443417 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.10530687 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.08448102 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108826514 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.088130771 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.102926542 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.108593484 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089965927 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.101823838 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.084210951 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.109925193 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.099196929 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.084822383 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.100000963 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.117735866 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.082359226 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.099305266 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.080319707 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.113777804 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.086169444 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.101769531 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.079898416 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109601849 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.076021891 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.102674328 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.102603122 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.083823354 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.11349279 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.106220831 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.089618487 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.111269613 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.089220995 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.103151286 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.10336283 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.080327716 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103206374 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.086164589 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.109489154 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.076641179 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.105740672 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.083070425 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.102805744 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.11047959 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.082261757 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.101692767 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.09112972 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.108459149 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.081285513 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.099195375 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.103506021 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.083449353 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.10545497 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.091214751 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.101611298 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.077199231 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.098240606 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.086276129 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.102859807 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.105394391 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.089173982 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.105658227 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.077881082 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.100880053 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.105787079 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.09299107 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.101869489 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.083555276 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.108273411 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.082501769 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.102756617 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.10766486 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.086320076 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.10066862 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.089054621 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.10341762 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.078047613 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.106808292 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.103604755 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.082947355 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.105893155 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.086474769 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.105624809 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.082833349 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101005662 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.107482468 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.084718283 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.100583629 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.082448894 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.100444029 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.093230469 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.104750293 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.07685866 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.100264305 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.110009538 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.080954446 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.102167048 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.081926416 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.105433149 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.083667026 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.100969855 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.082008666 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.104493064 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.114520832 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.087828315 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.104068252 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.106390762 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.094975045 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.102148675 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.084729592 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.102996895 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.083700112 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.103898083 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.110960404 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.088799567 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.109002876 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.084328324 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.099580733 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.108017217 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09137862 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.101096722 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.080747082 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.100867937 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.087067206 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.109092031 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.104967845 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.085009081 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.100007213 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084080245 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.106676094 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.084829239 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.103658938 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.08146335 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.108282998 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.101149763 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.090283676 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103666666 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.111797229 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.087965635 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.097778309 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.086519488 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.100771704 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.088070913 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.098106854 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.07965076 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.102295434 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.102532952 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.082507744 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.104685498 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.077035704 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.109954517 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.090122422 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.10284942 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.081794274 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.103186651 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.108925778 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.084963228 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.106460261 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.086297204 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.10917855 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.111887011 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.082858815 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.105399977 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.094058943 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.103662777 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.076327449 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.108816705 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.081353843 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.102543185 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.100684617 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.081826213 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.105784345 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.093213894 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.111068387 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.094874863 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.086587008 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.100891018 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.082660275 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.098609681 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.087906393 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.105690152 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.083266559 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109649062 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.102667121 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.08786306 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.106253234 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.083293629 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.10416857 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.084309246 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.10660531 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.102266768 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.087357929 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.101403832 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.086196424 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.101522397 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.080879463 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.104674229 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.083212959 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.103365921 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.107238433 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.084391188 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.10143461 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.086138263 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.10424387 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.083585305 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.103506554 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.081857378 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.10659432 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.101216515 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.083782501 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.105127163 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.079298914 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.109913442 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.083238873 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.111432081 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.082649606 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.099973791 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.107132238 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.086223687 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.107984 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.083510112 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.104989098 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.083437172 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.103344955 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.105183627 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.09051334 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.099777367 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.09427858 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.112387399 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.102866138 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.0875466 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.102886956 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.085421537 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.101867755 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.084611064 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.104747199 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.083166558 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.103147987 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.106648037 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.088096912 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.102877814 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.085778133 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.104130796 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.083400116 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.104780262 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.077118264 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.103182605 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.081683295 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.104133426 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.113788531 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.08460808 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.106693219 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.08210555 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.104796443 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.082251188 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.100736512 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.111352871 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.09217617 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.10426891 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109968295 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.082876048 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.104602312 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.09421274 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.09754224 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.080935839 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.101599851 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.079854952 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.119330585 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.103963419 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.093400264 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.102766414 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.082674318 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.10042114 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.083770369 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.102741998 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.076864001 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.10212684 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.105812209 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.086113766 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.10116481 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.08437775 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.105781375 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.084511062 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.114055323 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.100978625 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.085074846 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.102752553 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.081049751 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.101411656 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.082080104 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.106464061 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.084022619 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.101266258 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.080152734 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.103820471 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.102224234 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.08551599 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.101986194 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.085757227 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.110023766 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.083219996 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.106691778 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086212066 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.098723724 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.105559618 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.084052807 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.103044539 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.082655519 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.107947679 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.086933462 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.105188268 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.111267785 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.0839391 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.103501873 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.084129288 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.101647252 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.082340947 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.103853043 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.082252231 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.103157167 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.103873042 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092343029 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.101514652 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.086289909 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.103779187 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.083083306 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.11148187 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.103354717 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.087106633 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.112068565 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.08596987 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.106021366 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.109853785 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.088106921 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.106152385 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.084613966 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.105705817 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089174927 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.103480939 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.108838023 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.084976336 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.103924976 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.085607664 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.101320274 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.083907366 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.104552313 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.082631166 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.110881037 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.103916371 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.083882717 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.102180246 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.082445955 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.10479748 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.088064294 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.112360665 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.10548544 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.087724154 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.098225425 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.081839797 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.105310625 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.081592275 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.105142381 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.086600872 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.110682839 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.104229267 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.085791047 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.101472306 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.094263915 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.110270179 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.087249443 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.10210939 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.106655324 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.08661465 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.105649812 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.084656646 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.103322647 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.085960189 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.108312074 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.084603821 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.103250139 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.110207957 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.087614121 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.104949626 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.085199631 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.104402246 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.083106332 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.099394976 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.083620015 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.106999596 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.107662473 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.086651603 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.103898857 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.09395615 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.103766289 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.082730526 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.107864155 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.102276566 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.088857008 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.099026454 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.08511534 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105784646 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.084571916 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.100161302 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.081604312 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.102232248 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.104990236 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.083716482 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.099057821 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.095031572 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.114229901 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.105029696 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.083984765 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101822595 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.080111929 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.098610447 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.083311783 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.104919433 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.085661615 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.115391167 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.082381836 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.102770548 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.098558799 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.08467854 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106526647 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.087535128 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.101100786 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.079483864 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.102791149 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.086760639 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.10954917 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.101565316 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.084808777 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.106695996 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.086648119 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.102149156 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.087909605 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.101248167 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.086529638 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.118604131 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.105392433 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.084066637 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.112352417 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.110119145 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.085650048 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.098375765 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.08510445 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.106647992 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.084073996 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.105634606 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.084290921 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.120888775 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.106960552 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.082937451 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.103072086 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.086187265 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.103865066 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.110727564 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.085986247 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.10520053 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.08826856 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.106420024 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.112475103 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.087808166 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.112398463 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.086713292 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.107394103 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.082037382 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.105450498 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.081411647 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.103225849 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.105277711 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.085967133 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.109620601 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.092481762 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.104577044 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.114893345 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.093226228 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.110394764 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.080421362 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.10519472 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.083231587 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.100787811 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.107030284 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.08360764 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.102065872 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.082819709 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.102664701 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.085848539 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.111415569 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.084915661 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.106605955 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.08374545 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.099228348 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.105387038 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.088469777 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.105597421 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.081579242 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.104889377 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.086400869 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.109988292 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.087788736 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.10669423 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.104538659 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.086821831 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.104148931 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.08078562 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.111052967 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.083817747 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.108000325 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.083053543 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.105467899 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.084926884 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.109299296 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.110574183 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.086342082 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.108592543 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.096100959 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.109050656 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.101601389 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.082315014 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.109975789 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.083652617 seconds)
  done (took 58.470969553 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.151518338 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081421136 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.099907067 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.079504206 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.114544714 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.100443365 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080883634 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.100369558 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.081399686 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.104187645 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.079560161 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.100801714 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.109573994 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.126111115 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095017049 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.105714074 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078880636 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.102420483 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.099677956 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.0825298 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.111137809 seconds)
  done (took 2.938725164 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.108063699 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.12153929 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.116855103 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.119956532 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.092011244 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.117427371 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.117239496 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.116134682 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.10037438 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.113148638 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.119734896 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.115751454 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.091998983 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.112286098 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111969779 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093382043 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.12149369 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.111859149 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.117254854 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.096721432 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.115068686 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.116765005 seconds)
  done (took 3.295487358 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.088123789 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.103271009 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.086752022 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.099299291 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.084730075 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.100204285 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.087944695 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.103507875 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.086936051 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.104217225 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.081939102 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.105221645 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.105326589 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.080218808 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.103491126 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.083082156 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.153553701 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.108882496 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.08374373 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.107258318 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.078311429 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.107971456 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.100133822 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.08082556 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.10303564 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.08912253 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.105757983 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.08261788 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.105429792 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.082433069 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.105846155 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.08179402 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.106429727 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.103893533 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.084608738 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.10278763 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.084963358 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.103993597 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.08022199 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.103039682 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.085462301 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.10186252 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.084864635 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.106777698 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.08202811 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.104064391 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.085458844 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.105628877 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.079147961 seconds)
  done (took 5.537702559 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.107462131 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.163784755 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.087876678 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.145609889 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.122712797 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.11468096 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.088645263 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.143672364 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.104882782 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.082949079 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.124295262 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.12226273 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.105334796 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.090175712 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.113223942 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.104936293 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.086175009 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.104448897 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.088644323 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.106222629 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.110203079 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.091288087 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.12236941 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.120738557 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.110325287 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.084070163 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.105698688 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.109661306 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.099591603 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.111923206 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.111014466 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.091011575 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.122400696 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.111106532 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.083769737 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.109120425 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.124882524 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.105072573 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.088899395 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.104193121 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.087537206 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.1118802 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.112010377 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.102838988 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.107409001 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.110787403 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.085826532 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.103231535 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.120040416 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.087058257 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.115483098 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.123071931 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.08851687 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.107493355 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.110493207 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.121114018 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.085824898 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.104412071 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.087911975 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.120116764 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.103195279 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.088376862 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.121125242 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.108978431 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.092418286 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.121759604 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.112774188 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.109679581 seconds)
  done (took 8.27629352 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.096331345 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.113015986 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.12281273 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.122093285 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.092767925 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.112619144 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.112985843 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.090973728 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.112822931 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.119399316 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.111681374 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.13534606 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.087486149 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.116457974 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.112004693 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.092502296 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.11462574 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.112830845 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.091918645 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.11350903 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.113526876 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.121648823 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.091968608 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.122958511 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.144700899 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.107366779 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.090956316 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.113365767 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.12347089 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.112359962 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.12443859 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.092882687 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.113970266 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.123676205 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.125398466 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.091742513 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.105260153 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.11171506 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.091531199 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.114394517 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.106356514 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.102168354 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.113823049 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.107244932 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.091464535 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.113179705 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.121800486 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.125533468 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.116056457 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.099069488 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.114005506 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.123137931 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.111769174 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.091684346 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.122405056 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.149011933 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.12254945 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.123068386 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111290265 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.101640071 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.123170136 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.131019773 seconds)
  done (took 7.802357749 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.109470301 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.117711173 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.119534885 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.101259276 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.084342123 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.111017866 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.083311397 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.104813362 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.115342724 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.096510072 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.119319777 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.110936245 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092105337 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.119196153 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.11160377 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.11373202 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089839972 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.11080835 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.116142103 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.088900261 seconds)
  done (took 2.980177853 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.098304212 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.126096552 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.085276637 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.114279804 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.110126108 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.091785097 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.109609456 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108990605 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087708259 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109100453 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.096666521 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.119262162 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107651468 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.092076594 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.118338107 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.113994549 seconds)
  done (took 2.560408335 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.103147378 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.118908454 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.121996015 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.08463506 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.106874293 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.081205144 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.10847108 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.101760926 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.082639227 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.123201475 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.084707408 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.110920822 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.105654275 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.08408866 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.103085916 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.088368227 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.104043716 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.083076658 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.107184622 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.120926961 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.096799023 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.106123762 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.08494983 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.109585326 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.107106984 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.091115608 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.108457428 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.103959511 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.084113201 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.107009534 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.086950281 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.115354184 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.102030262 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.084867426 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.105034167 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.083257066 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.106754842 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.086003846 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.111280844 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.105127731 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.08442046 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.106938063 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.085376192 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.109135762 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.081395903 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.108221368 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.080920796 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.113883437 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.10450512 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.086112483 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.107348664 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.086475667 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.108826045 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.116985718 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.089407571 seconds)
  done (took 6.345026677 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.103180137 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.110805642 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.081536115 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.105339425 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.088501871 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.110333652 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.109175461 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.089290356 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.108638205 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.083406128 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.109591535 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.089085307 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.109299491 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.110342017 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.088165348 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.110934643 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.081396188 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.109279124 seconds)
  done (took 2.675136234 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.092737802 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.106660182 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.093131696 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.107465982 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.085235224 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.110475497 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080138622 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.106124523 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103991815 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.087011241 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106382234 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.088086054 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105696529 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.087877615 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.108016465 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084949368 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.110597611 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104869328 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.086918068 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102401237 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.088283897 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.105703483 seconds)
  done (took 3.025583946 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.122989477 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.127519594 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.092959548 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.23443107 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.10388999 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.134083194 seconds)
  done (took 1.692079139 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113571395 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122128082 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.107109049 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108263902 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117694637 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087361256 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109794916 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108958638 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118611051 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102719392 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109963019 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120727736 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118491731 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098222849 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116411424 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116085552 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107789883 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089656819 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10778216 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130211769 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088339884 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119867844 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110130762 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087470352 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110684989 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118827602 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119556935 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.102237636 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110233711 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119912247 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115528126 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089002761 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119770715 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124767364 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08837925 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120410156 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110342023 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.130462582 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115763488 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09858122 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.111964868 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11614499 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098598286 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11499881 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11929308 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109295085 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093707436 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110022667 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109470184 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136849836 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094937859 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118772081 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116718583 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119107713 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098981732 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137528028 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123934177 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119641667 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117640255 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124605686 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117968594 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095107506 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.1195219 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125406505 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115300643 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097798068 seconds)
  done (took 8.253063067 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107619898 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.128298854 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109890971 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123888423 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098414069 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110329348 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109318699 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08826685 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110365603 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10777831 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.154324611 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089114112 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120430186 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119944663 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087336916 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110826839 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110414083 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11871265 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088477947 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136621059 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110318703 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118492357 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097241167 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120248406 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125544296 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117420604 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108082818 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088620078 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110161144 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08737695 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116170561 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110441169 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119466734 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.087597827 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120640056 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110766366 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088123558 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115408721 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110132943 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114287379 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098467045 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129798831 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111750906 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108736 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102840378 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110788993 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110082257 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08795133 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111292556 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107584088 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.103364253 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125216863 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124904271 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120435734 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109408681 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088664444 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112053484 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109935108 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089420098 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117224671 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11817788 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087608824 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.138220321 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110908144 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110412729 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120454611 seconds)
  done (took 8.157904844 seconds)
done (took 157.85120115 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.230169673 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.202693261 seconds)
  done (took 1.309851216 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.089672462 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.13865161 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.095910376 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.170582036 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.085752193 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.142203255 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.140152257 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.098376876 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.108736038 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.08597939 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.10895247 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.08777717 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.173025297 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.085558091 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.109133664 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.108764939 seconds)
  done (took 2.707431986 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.119494669 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.233834274 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.126720208 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.106547434 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.090269985 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.111366618 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.08391564 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.113718501 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.089530745 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.108354141 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.088575109 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.109273019 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.08452719 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.109271811 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.110952186 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.089942679 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.106773745 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.089557306 seconds)
  done (took 2.860102548 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.115025678 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.150989792 seconds)
  done (took 1.157797273 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.24524882 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.164086831 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.233456305 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.479994443 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.280269738 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.36921604 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.205657081 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.219812383 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.164455411 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.212592682 seconds)
  done (took 3.458817448 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.119801748 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.180913252 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.318100174 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.156184783 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.107263621 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.131070063 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.158082614 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.131567048 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.124375858 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.101970986 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.123358459 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.119558717 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.139320539 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.094789517 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.11798113 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.11885208 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.121726295 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.116801608 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.115769312 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.096252653 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.139497273 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.085393921 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.117954863 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.114692499 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.097786575 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.12073943 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.107005843 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.085796273 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.117893175 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.093457635 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.115608719 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.127855568 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.120264372 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.15621986 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.123940127 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.158232049 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.119308047 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.091579885 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.116293838 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.091324096 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.120666689 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.120880181 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.125523619 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.097992719 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.107328472 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.097715433 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.108314673 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.085354098 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.117485664 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.119942879 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.094242009 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.115506724 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.156606246 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.121294644 seconds)
  done (took 7.475683823 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.793181233 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.156947261 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.090043377 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.881210394 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.111803567 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.128258701 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.777295688 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.111621469 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.255481724 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.751346871 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.133570273 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.097579623 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.231195893 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.257999404 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.979196636 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.314072053 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.637176512 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.126728838 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.152105022 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.153294605 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.117253973 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.116133737 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.13167854 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.450885452 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.11754834 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.08958268 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.118472744 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.119439465 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.160229237 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.125790679 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.093283835 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.199120142 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.250152301 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.202791344 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.094552593 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.112079087 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.089020112 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.190648831 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.245315042 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.216923719 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.180995159 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108667876 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.089570873 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.12275665 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.132124954 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.08672921 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.185062343 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.175739824 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.169466135 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.115296162 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.096658551 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.120660172 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.12182224 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.165595455 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.121758061 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.311869124 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.315665191 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.091308581 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122203996 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.125825905 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.240539517 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.125187809 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.226583506 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.139028826 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.190484463 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.112884768 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.799012332 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.169527494 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.088479062 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.118258656 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120163116 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.092865074 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.122205578 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.166118854 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.392459915 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124258133 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.092576684 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112577919 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.225739438 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.103441362 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.112739525 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.163222855 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.117320159 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.099252159 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.125372019 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.124107762 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.170628908 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.228837439 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.1244794 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120178665 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.093461224 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.12609977 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.117487548 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.212648052 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.220617613 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.16325434 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.211063008 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.122745744 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.163223728 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.192301321 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.096814369 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.195713746 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.098216237 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.12423137 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123727368 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.216444558 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.14405172 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.10226345 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.116711454 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.117704108 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.147585067 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.105199451 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.119662091 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.171871359 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.504451329 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.169604358 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.108918217 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.105835304 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12188013 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.161373408 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119422004 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.26318686 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100214277 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.192790855 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.098082004 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.110679084 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.120894732 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.165063541 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.121620321 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.099865669 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123649171 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.11774998 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.237327619 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.216574758 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.099800812 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.244534436 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.185378165 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.118002055 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.172208867 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120538069 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.168336836 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119084976 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.100247773 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.117839893 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.775515407 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.101615222 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.121803287 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.116405074 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.194118877 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.091272436 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.124605043 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.124746385 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.087851802 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.77896606 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.127268144 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.099469556 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.125636042 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.117854643 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.098857971 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.120015568 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.115533835 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.162177769 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.23118793 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.097602705 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.121108738 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.125756762 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.162414332 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.11710345 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.124749144 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.104055564 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.12605725 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121728143 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.094229739 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.125935802 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.168401108 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.185033508 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.198721274 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.600310456 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.111633775 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.102997313 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.229302232 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112999813 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.288459518 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099206921 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.228389335 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.162184334 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.1224862 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.312936736 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.164922529 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.196664601 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.128362588 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.174902879 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.109833538 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.096657919 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.187390171 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.090595377 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.118407416 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.163987942 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.125730897 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.123013429 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.936718279 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.113455387 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.225935173 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.109512889 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.172165395 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.11697167 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097856338 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.298595708 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.11318134 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.127116091 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.166166203 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.092856952 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.126851032 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.721516015 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.103234066 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.123798358 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.118886401 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.224064327 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.16447106 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120122246 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.097311962 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.120638241 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.162970261 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.207991478 seconds)
  done (took 44.103384304 seconds)
done (took 63.9521102 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.280886318 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.218065296 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.271450017 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.172364162 seconds)
  done (took 1.938840247 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.173761775 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.151191815 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.121835786 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.109715923 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.152451537 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.084191253 seconds)
  done (took 1.710204121 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.367509298 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.279134805 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.245271277 seconds)
  done (took 1.814544906 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.321373263 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.250186325 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.476704999 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.327793146 seconds)
  done (took 2.395312919 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.213780591 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.134902402 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.112782702 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.10375664 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.201106713 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.248200033 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.143919022 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.20413301 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.099045749 seconds)
  done (took 2.428450928 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.199846853 seconds)
done (took 11.406533783 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.178652564 seconds)
    (2/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.170351659 seconds)
    (3/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.291705559 seconds)
    (4/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.16111599 seconds)
    (5/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.233665901 seconds)
    (6/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.227694569 seconds)
    (7/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.230482265 seconds)
    (8/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.173344115 seconds)
    (9/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.247942708 seconds)
    (10/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.24544411 seconds)
    (11/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.236644746 seconds)
    (12/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.116710924 seconds)
    (13/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.170594934 seconds)
    (14/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.220484123 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.098006083 seconds)
    (16/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.239522459 seconds)
    (17/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.21843133 seconds)
    (18/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.095277294 seconds)
    (19/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.08331053 seconds)
    (20/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.128923088 seconds)
    (21/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.188610346 seconds)
    (22/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.112321267 seconds)
    (23/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.091435525 seconds)
    (24/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.249314087 seconds)
    (25/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.218604138 seconds)
    (26/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.150917198 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.197034601 seconds)
    (28/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.097829901 seconds)
    (29/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.091743419 seconds)
    (30/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.098061083 seconds)
    (31/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.118438498 seconds)
    (32/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.066267951 seconds)
    (33/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.246790444 seconds)
    (34/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.19054167 seconds)
    (35/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.13550706 seconds)
    (36/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.138746201 seconds)
    (37/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.14680987 seconds)
    (38/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.145684196 seconds)
    (39/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.186532482 seconds)
    (40/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.120414541 seconds)
    (41/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.105591678 seconds)
    (42/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.118442853 seconds)
    (43/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.125211192 seconds)
    (44/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.134975894 seconds)
    (45/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.174362469 seconds)
    (46/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.204356409 seconds)
    (47/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.163156807 seconds)
    (48/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.184740367 seconds)
    (49/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.190887904 seconds)
    (50/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.18739933 seconds)
    (51/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.148594328 seconds)
    (52/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.11211535 seconds)
    (53/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.120754735 seconds)
    (54/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.135286347 seconds)
    (55/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.186435212 seconds)
    (56/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.09112127 seconds)
    (57/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.098302773 seconds)
    (58/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.149436897 seconds)
    (59/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.142648044 seconds)
    (60/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.140300366 seconds)
    (61/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.180764352 seconds)
    (62/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.068451639 seconds)
    (63/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.202009594 seconds)
    (64/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.145806101 seconds)
    (65/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.11360375 seconds)
    (66/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.121464728 seconds)
    (67/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.124569825 seconds)
    (68/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.067077116 seconds)
    (69/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.117584147 seconds)
    (70/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.115600285 seconds)
    (71/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.156501193 seconds)
    (72/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.095438889 seconds)
    (73/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.181553406 seconds)
    (74/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.175197106 seconds)
    (75/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.173618467 seconds)
    (76/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.213779268 seconds)
    (77/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.088934315 seconds)
    (78/309) benchmarking ("sort", Int64, false)...
    done (took 0.110480001 seconds)
    (79/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.087587672 seconds)
    (80/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.067025143 seconds)
    (81/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.12219023 seconds)
    (82/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.164311083 seconds)
    (83/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.11269798 seconds)
    (84/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.154897848 seconds)
    (85/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.138811802 seconds)
    (86/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.21811562 seconds)
    (87/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.087189825 seconds)
    (88/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.114487996 seconds)
    (89/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.096224515 seconds)
    (90/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.170524958 seconds)
    (91/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.06600951 seconds)
    (92/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.165962138 seconds)
    (93/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.067066599 seconds)
    (94/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.173630783 seconds)
    (95/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.14231378 seconds)
    (96/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.114185273 seconds)
    (97/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.093226213 seconds)
    (98/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.067696358 seconds)
    (99/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.115778771 seconds)
    (100/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.112720626 seconds)
    (101/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.091623513 seconds)
    (102/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.167486675 seconds)
    (103/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.120585971 seconds)
    (104/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.118151965 seconds)
    (105/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.096374892 seconds)
    (106/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.195203806 seconds)
    (107/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.090876697 seconds)
    (108/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.12376341 seconds)
    (109/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.075691466 seconds)
    (110/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.124624875 seconds)
    (111/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.066596213 seconds)
    (112/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.188076668 seconds)
    (113/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.114266114 seconds)
    (114/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.086736641 seconds)
    (115/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.097232535 seconds)
    (116/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.335680011 seconds)
    (117/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.066929908 seconds)
    (118/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.123114948 seconds)
    (119/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.140396677 seconds)
    (120/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.112924788 seconds)
    (121/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.112027019 seconds)
    (122/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.123129204 seconds)
    (123/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.086189589 seconds)
    (124/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.109317839 seconds)
    (125/309) benchmarking ("sort", Bool, false)...
    done (took 0.18062393 seconds)
    (126/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.094822054 seconds)
    (127/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.113513572 seconds)
    (128/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.077345175 seconds)
    (129/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.116741208 seconds)
    (130/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.111564341 seconds)
    (131/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.116108444 seconds)
    (132/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.09288981 seconds)
    (133/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.091083847 seconds)
    (134/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.086520094 seconds)
    (135/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.111586472 seconds)
    (136/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.093263759 seconds)
    (137/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.138433629 seconds)
    (138/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.191724336 seconds)
    (139/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.090980365 seconds)
    (140/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.134379711 seconds)
    (141/309) benchmarking ("sort", Float64, false)...
    done (took 0.172581851 seconds)
    (142/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.072609224 seconds)
    (143/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.190184353 seconds)
    (144/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.110541952 seconds)
    (145/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.111759681 seconds)
    (146/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.146844116 seconds)
    (147/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.109007899 seconds)
    (148/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.095725425 seconds)
    (149/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.111666569 seconds)
    (150/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.126020257 seconds)
    (151/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.163556564 seconds)
    (152/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.094666381 seconds)
    (153/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.119964476 seconds)
    (154/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.121633253 seconds)
    (155/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.069010839 seconds)
    (156/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.215771538 seconds)
    (157/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.16269745 seconds)
    (158/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.098262853 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.113488748 seconds)
    (160/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.110982497 seconds)
    (161/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.101777143 seconds)
    (162/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.110197516 seconds)
    (163/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.106782709 seconds)
    (164/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.1263052 seconds)
    (165/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.118721985 seconds)
    (166/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.114301112 seconds)
    (167/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.114734863 seconds)
    (168/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.100433003 seconds)
    (169/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.118765018 seconds)
    (170/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.085980877 seconds)
    (171/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.150910484 seconds)
    (172/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.06693911 seconds)
    (173/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.092970799 seconds)
    (174/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.066830421 seconds)
    (175/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.075395527 seconds)
    (176/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.119225404 seconds)
    (177/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.06706178 seconds)
    (178/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.185303389 seconds)
    (179/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.115976903 seconds)
    (180/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.068679895 seconds)
    (181/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.066600107 seconds)
    (182/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.117833357 seconds)
    (183/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.095062266 seconds)
    (184/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.091801733 seconds)
    (185/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.156331087 seconds)
    (186/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.09432364 seconds)
    (187/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.093747317 seconds)
    (188/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.091984877 seconds)
    (189/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.087411486 seconds)
    (190/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.122024119 seconds)
    (191/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.068058359 seconds)
    (192/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.091166103 seconds)
    (193/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.093535684 seconds)
    (194/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.138558779 seconds)
    (195/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.085914845 seconds)
    (196/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.091605226 seconds)
    (197/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.086903623 seconds)
    (198/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.125008914 seconds)
    (199/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.174507632 seconds)
    (200/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.087130381 seconds)
    (201/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.0670817 seconds)
    (202/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.092167613 seconds)
    (203/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.213983261 seconds)
    (204/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.192701297 seconds)
    (205/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.086618348 seconds)
    (206/309) benchmarking ("sort", Float32, false)...
    done (took 0.175525817 seconds)
    (207/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.107817004 seconds)
    (208/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.119067273 seconds)
    (209/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.125701595 seconds)
    (210/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.151569638 seconds)
    (211/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.125522828 seconds)
    (212/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.129724732 seconds)
    (213/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.087452125 seconds)
    (214/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.119349721 seconds)
    (215/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.10198477 seconds)
    (216/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.119088173 seconds)
    (217/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.068960564 seconds)
    (218/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.111461284 seconds)
    (219/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.06915483 seconds)
    (220/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.109063411 seconds)
    (221/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.068860909 seconds)
    (222/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.076036365 seconds)
    (223/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.111065388 seconds)
    (224/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.094451845 seconds)
    (225/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.12152696 seconds)
    (226/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.092073665 seconds)
    (227/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.092199637 seconds)
    (228/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.067995477 seconds)
    (229/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.224544779 seconds)
    (230/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.110230853 seconds)
    (231/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.087059892 seconds)
    (232/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.140763531 seconds)
    (233/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.094144424 seconds)
    (234/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.198343399 seconds)
    (235/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.090410389 seconds)
    (236/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.093858438 seconds)
    (237/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.067868462 seconds)
    (238/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.091649895 seconds)
    (239/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.166258875 seconds)
    (240/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.113623876 seconds)
    (241/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.130391204 seconds)
    (242/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.069285852 seconds)
    (243/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.094810033 seconds)
    (244/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.123651696 seconds)
    (245/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.068058639 seconds)
    (246/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.112353392 seconds)
    (247/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.067825865 seconds)
    (248/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.09040917 seconds)
    (249/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.096171026 seconds)
    (250/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.135101237 seconds)
    (251/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.088826895 seconds)
    (252/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.113352225 seconds)
    (253/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.112839313 seconds)
    (254/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.092853268 seconds)
    (255/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.068072756 seconds)
    (256/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.109544479 seconds)
    (257/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.090441245 seconds)
    (258/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.111670556 seconds)
    (259/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.089243505 seconds)
    (260/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.120863328 seconds)
    (261/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.087430343 seconds)
    (262/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.118251295 seconds)
    (263/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.090051961 seconds)
    (264/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.140612361 seconds)
    (265/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.09562352 seconds)
    (266/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.118839298 seconds)
    (267/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.124203375 seconds)
    (268/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.095124299 seconds)
    (269/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.077142313 seconds)
    (270/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.119076633 seconds)
    (271/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.151174719 seconds)
    (272/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.116465417 seconds)
    (273/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.13865137 seconds)
    (274/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.079093767 seconds)
    (275/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.111000509 seconds)
    (276/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.088387122 seconds)
    (277/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.117863177 seconds)
    (278/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.0900323 seconds)
    (279/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.118892949 seconds)
    (280/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.129804568 seconds)
    (281/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.112139386 seconds)
    (282/309) benchmarking ("sort", BigInt, false)...
    done (took 0.221928421 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.11053013 seconds)
    (284/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.093521076 seconds)
    (285/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.11789691 seconds)
    (286/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.095047167 seconds)
    (287/309) benchmarking ("sort", Int8, false)...
    done (took 0.189745442 seconds)
    (288/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.092612565 seconds)
    (289/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.087945102 seconds)
    (290/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.118492502 seconds)
    (291/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.158531452 seconds)
    (292/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.104297403 seconds)
    (293/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.09292243 seconds)
    (294/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.119014442 seconds)
    (295/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.19041808 seconds)
    (296/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.087620709 seconds)
    (297/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.066183974 seconds)
    (298/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.102098577 seconds)
    (299/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.08755798 seconds)
    (300/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.102357047 seconds)
    (301/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.076388538 seconds)
    (302/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.067125669 seconds)
    (303/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.140438857 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.117410562 seconds)
    (305/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.131670125 seconds)
    (306/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.111927267 seconds)
    (307/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.225564153 seconds)
    (308/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.112182969 seconds)
    (309/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.137707034 seconds)
  done (took 39.947281225 seconds)
done (took 40.871668034 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.101860904 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.150308511 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.095462603 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.137311672 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.125391374 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.092311767 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.121389872 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.097856441 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.12531218 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.127510673 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.098785553 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.094792654 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.097374229 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.12174907 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.096880814 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.141200626 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.125781765 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.095193421 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.121594688 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.086647099 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.121759908 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.086524843 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.113975582 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.070316724 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.123750321 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.093526039 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.118838536 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.120506312 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.088336129 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.11197662 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.092564121 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.118323834 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.087559659 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.125518971 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.094003704 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.120494233 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.098019664 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.123824312 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.088148649 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.113409484 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.118023563 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.088107718 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.11711631 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.095949803 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.117414362 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.092890334 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.119499081 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.099851737 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.142165167 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.116501324 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.096429596 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.122028563 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.096900307 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.119547696 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.090548029 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.121618001 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.092576189 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.143715412 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.123010406 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.093023171 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.123049844 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.09513336 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.117965109 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.094181927 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.122165376 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.121951703 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.099884821 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.118068648 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.097716414 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.11800145 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.087056806 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.120730259 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.090021809 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.113109692 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.09653829 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.124550367 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.086177222 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.118978713 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.118286872 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.093457336 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.111274051 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090728006 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.113454078 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.095694134 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.113926599 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.07122915 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.089878536 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.118715181 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.110551027 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.097330283 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.117982623 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.0945581 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.113202388 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.0994678 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.112377718 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.09273377 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.113495339 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.087869779 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.115169031 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.091325032 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.113319564 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089842386 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.121913742 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.088629267 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.120214344 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.123340002 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.088834867 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.117711213 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.087116435 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.11090039 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.102694747 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.123770236 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.087532268 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.118558254 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.086422228 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.120482086 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.085613468 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.113297581 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.086801115 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.11397452 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.092546105 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.113093116 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089087127 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.120418687 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.125919244 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.08837756 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.11507493 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091245731 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.111910438 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.094250615 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.112642562 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.088544603 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.114852219 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.07890789 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.113936538 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.088932987 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.119274033 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091320085 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.120763495 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.089221464 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.121344398 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.091933448 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.119289601 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.092651769 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.11205179 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.074553759 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.11797572 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089881764 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.114611577 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.087983918 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.114368382 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.087159662 seconds)
done (took 17.14563761 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.088570655 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.187467986 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.154327747 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.143895669 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.107810583 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.114182445 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.123056966 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.120649766 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.11546384 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.145095683 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.110991721 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.134328177 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.149214359 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.086912264 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.113489536 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.09248879 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.113954295 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.103078206 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.148007593 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.134564411 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.165815889 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.085959131 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.149384659 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.13790536 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.120780235 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.106621452 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.113555777 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.092541442 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.116364259 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.112848921 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.135025358 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.090171538 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.115170922 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.135438081 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.105646601 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.122203312 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.08728461 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.120587576 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.087408938 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.114464573 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.143740721 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.109055416 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.119879462 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.118778904 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.092612038 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.116075428 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.090046192 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.122994876 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.09852286 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.118895489 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.127751474 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.157983787 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.09227589 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.124316104 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.086882152 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.125145264 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.121984399 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.091288081 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.112650347 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.09196217 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.112059364 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.093103623 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.128938336 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.142822268 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.093262374 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.123622594 seconds)
  done (took 8.736639738 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.106589563 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.140713153 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.122410042 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.132959637 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.11243451 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.088831695 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.113449645 seconds)
  done (took 1.804846652 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.089646493 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.13509596 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.111848057 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.137756242 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.132911663 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.110163964 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.124479977 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.089541336 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.133646493 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.088633426 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.136836686 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.154155717 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.089919385 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.122328877 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.138157237 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.089333657 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.139301493 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.088800504 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.118808759 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.112734548 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118430977 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.136131987 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.091341675 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.115005757 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.103252575 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.115938752 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.162403041 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094711814 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.116134226 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.09271505 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.113328557 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.168260429 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.105266603 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.12794747 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.088012652 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.130068523 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.129290873 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.088638566 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.131170996 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.094266824 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.129514747 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.08891853 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.11679645 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.086667817 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.120530379 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.124662178 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.091751003 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.115459358 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.093221196 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.135593468 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.092322781 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.130020934 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.089210648 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.120425677 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.089735424 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.121308811 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.12431367 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.09192255 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.134912472 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.091006321 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.132010641 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.105587368 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.130324454 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.130814328 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.092752454 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.129215524 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.10394599 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.119394025 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.089997089 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.119981555 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.130683104 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.089609951 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.116131644 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.101364033 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.115822323 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.113543711 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.139416981 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.090860732 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.126797043 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.114129072 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.091105334 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.115159981 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.113681364 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.120112843 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.08940435 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.120905721 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.092668871 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.114333995 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.087669108 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.120281317 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.086766503 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.117699875 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.091644249 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.117220807 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.11567115 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.107911391 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.115467625 seconds)
  done (took 11.95663764 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.091697542 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.11499607 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.092804637 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.114972794 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.091364713 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.117104279 seconds)
  done (took 1.619702909 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.116547289 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.119523686 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.104220813 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.121976414 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.1581118 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.103763992 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.132111995 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.124769751 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.107817853 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.129547341 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.130165094 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.105572085 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.138415566 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.122073254 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.104691733 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.12279577 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.10432994 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.127937791 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.128917443 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097669969 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.138909984 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.122100474 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.097083251 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.133392936 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.118370611 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.097859746 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.127058572 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.102730037 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.130201796 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.123784049 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.097045259 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.120075068 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.095829382 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.125596032 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.131965171 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.096480546 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123748723 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.11941967 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.10192622 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.119649959 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.105497556 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.123583239 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.127433863 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.095895318 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.125442222 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.121345191 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.096037624 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.126611593 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.103929182 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.121393529 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.120817845 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.09635218 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.120294591 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.094421729 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.124011622 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.124107102 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.095167945 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.131067383 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.096057134 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.123065932 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.119134077 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.094575322 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.125265532 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.093126114 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.131878747 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.120915471 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.096544778 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.123385477 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122055142 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.096797818 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.12134578 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.093804905 seconds)
  done (took 9.337449488 seconds)
done (took 34.440831564 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.69824416 seconds)
  done (took 1.69520288 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.726753936 seconds)
  done (took 1.725558468 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.28716946 seconds)
  done (took 18.28684943 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.510278117 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.598766909 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.891451715 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.181737485 seconds)
  done (took 3.182910485 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.964969969 seconds)
  done (took 1.983586903 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.298577197 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.260409372 seconds)
  done (took 1.563921245 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.7848402 seconds)
  done (took 1.796357629 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.431488302 seconds)
  done (took 2.436037845 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.336051174 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.186142099 seconds)
  done (took 1.536197467 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.549481044 seconds)
  done (took 1.564117769 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.756127982 seconds)
  done (took 8.774520506 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.26899254 seconds)
  done (took 1.297922492 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.302848789 seconds)
  done (took 1.323665696 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.582074241 seconds)
  done (took 4.603231283 seconds)
done (took 52.777651306 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.100422263 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.127921371 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.1028499 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.126052712 seconds)
  done (took 1.471038217 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.102686493 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.12288249 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.100901732 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.12241689 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.126373942 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.097221342 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.123925523 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.101637951 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.122115812 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.096742737 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.12330145 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.119797149 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.099591102 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.123705855 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.093300794 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.125896296 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.099171776 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.123504004 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.125001765 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.096742229 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.120248956 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.097950299 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.126196625 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.093583681 seconds)
  done (took 3.708591607 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.101326448 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.119440794 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.096476338 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.118857325 seconds)
  done (took 1.464998261 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.100480035 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.142762598 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.139441228 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.101012119 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.144927279 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.136340191 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.093040691 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.11852456 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.095071548 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.126930913 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.091425239 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.151229526 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.138841016 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.099241122 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.129087924 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.088738844 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.119195048 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.138345433 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.100879773 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.128293012 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.09534172 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.127085737 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.090566598 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.142405321 seconds)
  done (took 3.863255169 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.171715378 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.129663621 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.140303754 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.095921971 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.16191676 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.141836844 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.089441318 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.142638841 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.088127587 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.134217593 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.117868265 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.135319651 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.130659532 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.088064735 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.116205717 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.087536168 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.131781534 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.130890193 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.091793898 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.129893546 seconds)
  done (took 3.484285844 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.100175299 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.118640555 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.089252097 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.117250289 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.100204778 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.122980651 seconds)
  done (took 1.680264764 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.092291453 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.115571639 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.092045238 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.115418863 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.095184389 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.116220678 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.090019386 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.116672161 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.090742069 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.115928075 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.090833361 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.115285776 seconds)
  done (took 2.276871614 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.500663085 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.119522548 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.119192737 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.089932992 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.12341684 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.0900267 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.130063271 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.092777843 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.142841955 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.089109047 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.117418985 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.091603806 seconds)
  done (took 2.736681552 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236414997 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12725793 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2904318 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.368938327 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158734508 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.179985706 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.285148968 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166149283 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.227805816 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169249208 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204812171 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226698076 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15284534 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190525437 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140039359 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.119324173 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234334542 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.250108514 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154782545 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210428094 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230814291 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168531066 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.18204174 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15319359 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139826669 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174232361 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.094964271 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132405792 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236258206 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178223754 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216491683 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164037666 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147473252 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212861616 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25600214 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223413085 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.286158787 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1107066 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.177585568 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.170169735 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.268914433 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139113592 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204817094 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157199991 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133478652 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192221682 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194164944 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.179041877 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.154485624 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112973413 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224618016 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239767188 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.194626533 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139989654 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.308320553 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15376317 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.176217712 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223434775 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225658248 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228932957 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188944629 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.122354511 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.190952719 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221358433 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188535155 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.176738043 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.181969547 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150523214 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229208351 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.190926684 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167345718 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222078038 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.190823107 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142820282 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171841299 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.17480623 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175070758 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260457287 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185058406 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.124238331 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170246843 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151137485 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133081575 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.168068996 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126970539 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.240580461 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118270255 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.165922033 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246171849 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160962404 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161501457 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207494412 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.2335843 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121992477 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.113260008 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155940778 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.15616979 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195965523 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141065819 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161467988 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166237502 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.130374491 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186972772 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.096988435 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213996572 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.091583226 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200950649 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185569879 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.100265387 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162614057 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153643923 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.152229884 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175867018 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227218607 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116467478 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135566486 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238174152 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181005984 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.152827037 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.179960497 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.204372344 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.146061176 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152222061 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201230981 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.246413438 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141631629 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205341258 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159179972 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137287462 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.131524522 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18520369 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156596762 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.162497055 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108880993 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.211387297 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209732836 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.127432166 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112087663 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223582477 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134794215 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105760542 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16451696 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149022986 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.141105054 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.153756185 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.15478885 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185977537 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178263179 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155886092 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165351518 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153852302 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255712905 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144033993 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.151820997 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149604557 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.094983221 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.221415331 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204197647 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131090851 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207662733 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.172663679 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232530731 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173682472 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134530937 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178476611 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104670888 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.122074737 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195073817 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169267152 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162379051 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.227220018 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202740517 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.210059815 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.1853019 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176034369 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174514101 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.167254732 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159087708 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.140240094 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161607587 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174785478 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.096419656 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.145998916 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.136993054 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150560765 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144746945 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106379902 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227242774 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171170644 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.220758939 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134166008 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151433874 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.182461731 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.130899786 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174656466 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.207463892 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121775605 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.229807393 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19674679 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215494295 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.117697476 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232733296 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.093221847 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127612053 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.144372335 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.17229719 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134280838 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109626749 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165256404 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.183113676 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210290311 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179232914 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24237211 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176465787 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.192505336 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.123400866 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.142251532 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214259607 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179406198 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.191842183 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117194322 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.15140373 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178617206 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160083133 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256838761 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169763664 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176856916 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.237666583 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.151762138 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105380422 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152926446 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225595571 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156806038 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.180117177 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149053607 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114689303 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19078351 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.107646308 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161599394 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212420328 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163622733 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191131122 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.153599786 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186680855 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130718487 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165958759 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161671695 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16713483 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.081592246 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205071238 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208041169 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15029888 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169212391 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217793428 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106853487 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.311170529 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.248281187 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196778555 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139498914 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157488081 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162953287 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165868954 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173721713 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179642783 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161820133 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189252633 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159778606 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.138868026 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14238571 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149391757 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123782778 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.133122906 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.150981594 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.177276715 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.141605465 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186195566 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164753229 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160369009 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174024147 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.152969324 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.146525901 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151632468 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216746782 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21342377 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214348297 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.151862908 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.181244211 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237030399 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098920276 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13451672 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.134129812 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179925892 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108389981 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224276005 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.19152803 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235121109 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185460283 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196316347 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141492594 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.121255934 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157952269 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17820405 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210918342 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155216541 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.161495399 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.234570218 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.120466251 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134025536 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.179412026 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.319311937 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.120586176 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227574027 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.081004122 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.283219037 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128953664 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13291933 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138533924 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238392475 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.138867175 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.191974085 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17449928 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172319335 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166996174 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152067493 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.193737333 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247706315 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204564908 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181624922 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.134211954 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158597681 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178317972 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222564256 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159222049 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.113671208 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233585788 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199292314 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.197814332 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.144770811 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173262991 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170013037 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159358365 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219260716 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107838553 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23737496 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135225011 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1966238 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155849577 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145819447 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178673989 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.191559164 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143073967 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218584184 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185692479 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135368889 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107234272 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170274967 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20698396 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159338216 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.101073747 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181541302 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.126905761 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194346058 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258848841 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13762866 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156451104 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148972908 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108675136 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155974173 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159466823 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143045514 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.166523943 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207210959 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.137289564 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192770714 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236171788 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170439236 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177177698 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147509351 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.694176087 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.132666872 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196087922 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161886474 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.235913248 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.122590289 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203044458 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131912142 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197324699 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199764862 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162051581 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.233278677 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193795278 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.208205712 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105815391 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159217651 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165652041 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.146062667 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15261871 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170675611 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161662057 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.155360605 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.178981186 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201882148 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.107952778 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141971712 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201643006 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162679473 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183566273 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.181332601 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140983867 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175169955 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220559245 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106057355 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.211053949 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208461917 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143547206 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154762396 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.135188044 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.159391579 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.264071353 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.098374634 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.236534574 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186986419 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160433578 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170705653 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.150639476 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195040269 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160644543 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217245904 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148937227 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.161516557 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156451295 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.112581262 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.132121065 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157692317 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170735102 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.150181439 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161796964 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.140161448 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224007237 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.097110062 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147460754 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.294407263 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224788136 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216748646 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.138498844 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135712528 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163405847 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124973493 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.208736499 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181885516 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.136857141 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109281275 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.138494748 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.132836023 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.139460945 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158155845 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199868201 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167775267 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238782292 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.109392845 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.281087339 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142159301 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156618194 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.089161082 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.134194894 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153436302 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147240405 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161843667 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.195199293 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2674781 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.148410496 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.107216836 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.152718225 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.127251901 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10857809 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167471709 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164499446 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206250491 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118470255 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.111166919 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159886058 seconds)
  done (took 84.244672758 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.16827917 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.135344503 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.149863487 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.205212517 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.179411762 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.272034503 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.21330268 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.257095316 seconds)
  done (took 2.703033972 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.094699291 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.148401702 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.159273624 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.13519652 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.09225626 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.120360452 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.351284072 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.134943211 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.119112211 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.123451103 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.177361907 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.095323186 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.56130581 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.091730926 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.120336677 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.11146035 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.092653202 seconds)
  done (took 3.846484526 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.48339757 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.735284687 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.519423039 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.098063322 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.187537386 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.113836116 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.772463057 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.200906284 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.117405951 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.49141148 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.772525121 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.167139424 seconds)
  done (took 18.785198074 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.099951152 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.121655057 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.1084509 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.136900604 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.095904901 seconds)
  done (took 1.695878972 seconds)
done (took 132.973965337 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.104717173 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.407984904 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.072193243 seconds)
  done (took 1.642390265 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.108671939 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.138129461 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.109908717 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.137292024 seconds)
  done (took 1.629180027 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.098601448 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.127485734 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.109811346 seconds)
  done (took 1.466242484 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.326326522 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.192203361 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.165338729 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.107690552 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.130712541 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.103892278 seconds)
  done (took 1.47759167 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.098238675 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.129373073 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.098624613 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.130963905 seconds)
  done (took 1.593444928 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.095800515 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.071500765 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.103687682 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.076141495 seconds)
  done (took 1.477645022 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.11564091 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.133631148 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.104338675 seconds)
  done (took 1.490282302 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.130963208 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.140378101 seconds)
  done (took 1.408204445 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.107875362 seconds)
  done (took 1.24108307 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.119208382 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.170969875 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.190606471 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.167001634 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.237746621 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.167143508 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.141798121 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.114744711 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.133406588 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.145708925 seconds)
  done (took 2.726932666 seconds)
done (took 18.071821685 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.104896928 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.41820486 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.412966229 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.118989411 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.722539602 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.380530909 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.062871726 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.147067637 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.167394407 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.093574053 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.141076906 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.67176996 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.052141257 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.373643016 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.0102725 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.37452391 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.675312707 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.1222462 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120110289 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.095902881 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.04593471 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092498376 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122791562 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.0933064 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.703963252 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.4261584 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.096183149 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.37179231 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093333394 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.127696536 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.383610219 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.125247383 seconds)
  done (took 17.075114337 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.096626947 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.175417105 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.099256307 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.140617062 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.124430806 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.095183005 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.126102957 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094234813 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.181076929 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.125007476 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.110808833 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.124096063 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.126935478 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.096148144 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.144201178 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.093147571 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.127157879 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.093114967 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.12377738 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.122753006 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.114351691 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.121816746 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.094537236 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.123747858 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.094996105 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.137909721 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.123201847 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.094662382 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.121538295 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.099563831 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.129168771 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095659104 seconds)
  done (took 4.910687918 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.142573818 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.184439731 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.131266964 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.127489206 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.170737296 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.125312956 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.200549521 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.118547095 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.18529636 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.125436269 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.141403309 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.093524836 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.158942211 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.123122581 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.116287608 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.122090322 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.098282706 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.123786242 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.092571109 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.124947826 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.140623101 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.094190077 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.123566298 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.094135529 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.124758029 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.10811194 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.125921211 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.120769914 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.094706553 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.128827453 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.101310663 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.12616978 seconds)
  done (took 5.235621949 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.098281902 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.127101101 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.11103498 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.140304884 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.095350596 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.128057493 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.097603412 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.126869517 seconds)
  done (took 2.066621469 seconds)
done (took 30.421992785 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.113085343 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.128833323 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.107656103 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.1365636 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.103055454 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.134118896 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.092086587 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.136150152 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.134691607 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.103266186 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.138517143 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.092464684 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.123970225 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.092532723 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.136445888 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.098758351 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.13440934 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.102058155 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.136126439 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.133380379 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.095742806 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.13497481 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.104547247 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.136187638 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.104550781 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.13519646 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.138963168 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.10014215 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.124385769 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.095128454 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.126549208 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.105138203 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.12639566 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.105951824 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.129226173 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.097264091 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.126239991 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.094129426 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.135823673 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.133622594 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.101421732 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.135418005 seconds)
  done (took 6.098805798 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.109375036 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.140657289 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.106322268 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.081321313 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.118888227 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.081260221 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.139252472 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.079921178 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.110936129 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.109582702 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.074323572 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.108461312 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.079158008 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.101902202 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.078366943 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.07534013 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.109335188 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.076606899 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076694983 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.107559079 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.080629307 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.073017457 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.109580038 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.078539245 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.074782103 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.111550428 seconds)
  done (took 3.63788841 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.101749179 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.13669208 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.112880391 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.184942762 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.162461593 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.10005843 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.133775363 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.139688619 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.110244455 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.120760715 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.097383073 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.151123489 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110537252 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.131027808 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.092609259 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.139564305 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.135854062 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.095316471 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.128849561 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.114595098 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.140534019 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.102918076 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.145478415 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.133105302 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.094309439 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.12430065 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.098658007 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.13678005 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.098291017 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.133309644 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.135615323 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.097992752 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.125142704 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.105537833 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.128041955 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.094191088 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.143941871 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.132415716 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.10308475 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.123174117 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.097881873 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.123824977 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.114510169 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.170176076 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.090995191 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.133203071 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.129625162 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.10378042 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.122914459 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111512038 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.133008231 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.092537938 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.127261344 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.09121909 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.124029275 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.106503776 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.125571267 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.123894184 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.103600775 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.126076051 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.106113696 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.127016365 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.109513991 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.123617089 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.099986461 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.123209408 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.093095014 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.122810133 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.144872186 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.095059739 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.165203962 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.093373309 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.124895036 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.130995604 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.101665731 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.129018389 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.094393561 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.138771263 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.103130298 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.127891039 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.102485856 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.127923844 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.095630002 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.142475382 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.124526373 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.096737004 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.124038098 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.100604793 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.125987295 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.094885286 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.138446532 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.092709771 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.126839532 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.110289273 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.12329549 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.123676008 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.101301046 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.127487114 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.092481313 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.137142174 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.098979305 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.124559299 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.131635613 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.094606117 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.124967804 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.103897018 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.127406139 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.092269555 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.128409822 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.09928894 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.125021838 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.094251474 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.127713025 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.094348112 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.133482153 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.099830435 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.129159084 seconds)
  done (took 14.99573952 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.230839964 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.217917736 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.240516873 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.26673224 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.136865879 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.115200768 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.213551235 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.157647659 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.125669757 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.161625137 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.164084255 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.184554932 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.13989784 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.183263676 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.142643108 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.122683998 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.113469204 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.167027165 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.216645425 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.293384569 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.113800204 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.134278945 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.164504855 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.163142734 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.107120347 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.135373273 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.140583423 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.106967771 seconds)
  done (took 5.827212077 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.109495545 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.158002475 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.099166116 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.147484322 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.150573018 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.093187471 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.130185959 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.09464684 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.137687426 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.137588667 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.09289618 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.130931442 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.099993756 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.133870822 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.123149634 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.104427089 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.133441341 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.095303521 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.127785816 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.097494539 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.1319141 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.101856414 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.129032953 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.091332507 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.134128484 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.122249966 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.087051427 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.14373043 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.092610468 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.146555482 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.122007933 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.101296541 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.135169631 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.095003908 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.124784428 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.09520829 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.12715324 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.095502128 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.126945809 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.0923989 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.124441088 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.078728186 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.12429468 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.106706796 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.130720019 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.07985089 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.131551052 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.128304822 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.096749669 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.120649921 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.097707298 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.126640606 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.099020291 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.131295738 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.09994647 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.124897887 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.098070625 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.116829735 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.101211869 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.125874709 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.085759545 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.121274132 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.100659718 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.119351718 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.102762567 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.129786327 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.093881382 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.127297481 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.098679535 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.130625116 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.096391544 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.129026854 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.091749011 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.12754512 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.096019937 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.130483302 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.09671053 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.12436951 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.092854404 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.12569107 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.075360498 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.124964544 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.075434705 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.127617959 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.092276663 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.123359891 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.096969667 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.131984223 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.139449874 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.09645269 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.133111172 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.095430749 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.124328743 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.097762003 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.114690382 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.098033129 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.141077631 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.143492404 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.095513551 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.122701429 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.109064102 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.127787989 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.093176836 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.106857342 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.10214672 seconds)
  done (took 13.123982271 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.128896657 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.155191927 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.095450232 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.145081573 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.157915428 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.158921043 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.102974852 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.13193375 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.09685642 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.143546653 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.094522187 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.13361689 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.098305999 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.138960445 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.158055392 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.104430621 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.127410631 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.107600555 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.134662063 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.17146651 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.112762225 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.143909326 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.107768499 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.126302897 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.100106589 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.142566346 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.163449523 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.107839349 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.138838099 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.142412012 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.109321397 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.163190467 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.112382191 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.130364573 seconds)
  done (took 5.569442834 seconds)
done (took 50.393684857 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.25497932 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.469975587 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.239533382 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.237645979 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.251118369 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.25424262 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.276229277 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.238989729 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.435391212 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.244484845 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.484146217 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.950533811 seconds)
done (took 59.505778776 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.304958176 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.381132688 seconds)
    (2/2) benchmarking "String"...
    done (took 1.528311697 seconds)
  done (took 4.076433818 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.601862828 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.20171728 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.508475341 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.241812098 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.242741035 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.535399225 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 3.012378318 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.656668763 seconds)
  done (took 28.566896609 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.24162054 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.646974655 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 5.07230332 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 5.080663041 seconds)
  done (took 19.210751634 seconds)
done (took 61.934529654 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.269952516 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.27420287 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.244498072 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.222222247 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.38134343 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.280733 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.633566383 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.297666569 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.279390131 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.228392926 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.263975761 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.262531821 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.250416907 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.673897645 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.258132812 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.247307899 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.25137885 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.817970253 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.662078805 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.248714363 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.25369597 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.310965396 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.253291985 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.251464528 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.281445355 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.244620939 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.251302539 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.258631053 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.952736051 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.24734294 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.268958489 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.828486125 seconds)
  done (took 192.620531598 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.243641734 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.421073262 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.498989564 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.296043159 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.879254115 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.442615638 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.382491267 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.938334428 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.265162491 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.27227476 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.512154506 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.2440529 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.562384791 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.307006233 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.253912987 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.255950487 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.422720307 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.587261987 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.264603027 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.51993881 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.264844654 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.416005736 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.36283452 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.483042925 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.25909046 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.340355938 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.248860925 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.279371993 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.439389897 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.371952281 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.282368632 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.271468808 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.891265114 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.107446038 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.257626494 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.293242561 seconds)
  done (took 152.308397743 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.540105513 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.246633588 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.244877536 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.246204316 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.280706569 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.247275309 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.848782632 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.832678763 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.749495239 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.765800518 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.310337618 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.588954357 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.248817608 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.341685341 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.260782145 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.247915779 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.263318582 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.292000924 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.251159518 seconds)
    (19/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.24666691 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.247560172 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.848564164 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.262862632 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.253308675 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.247673808 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.281814272 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.641373023 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.474629658 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.26721177 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.281667163 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.586914231 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.300767627 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.247953896 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.683358983 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.808997377 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.366432468 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.249833936 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.283498399 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.251786892 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.534667802 seconds)
    (40/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.25317223 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.248300225 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.248717342 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.252111986 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.96413155 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.25325677 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.852651363 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.25217509 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.263265461 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.253501976 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.249540874 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.641857348 seconds)
    (52/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.252933572 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.039994363 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.272130821 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.248151314 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.252157887 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.249454015 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.250269889 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.284374381 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.759383741 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.345206073 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.269944433 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.25263156 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.283489238 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.252419658 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.31035924 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.268387004 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.298745673 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.309571249 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.357500429 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.851758199 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.253577011 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.349141638 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.373391566 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.250492784 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.250621233 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.250673304 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.252025531 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.363327873 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.251623447 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.688540018 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.255955679 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.252975507 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.311732758 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.349084908 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.250280151 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.676961836 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.254304918 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.250968273 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.033997818 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.350524595 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.2501119 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.250741063 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.252624985 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.692688577 seconds)
    (96/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.251129202 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.837506416 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.544228394 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.255589517 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.670331128 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.256044658 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.709489544 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.828856222 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.980501444 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.25668232 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.364804311 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.256476107 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.254098523 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.252748656 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.280207324 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.271863061 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.311286698 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.253243223 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.650777568 seconds)
  done (took 353.158134067 seconds)
done (took 700.800870699 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.909105657 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.893346596 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.022002603 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.891076004 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.85130927 seconds)
  done (took 10.743798945 seconds)
done (took 11.926027072 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.456982871 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.456601513 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.318167638 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.459478351 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.283448885 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.478104121 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.435355698 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.274573357 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.36352528 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.34042817 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.363784786 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.311171098 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.286242855 seconds)
  done (took 19.006080024 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.581512261 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.57063725 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.318300462 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.582117663 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.29541787 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.585836111 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.459734755 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.470237906 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.475176425 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.290635519 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.267607113 seconds)
  done (took 17.077420217 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.592077095 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.595925472 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.320759169 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.592021525 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.296247397 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.586042864 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.462539513 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.483915641 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.475622932 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.289394688 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.267590973 seconds)
  done (took 17.141464614 seconds)
done (took 54.40815875 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.263195837 seconds)
  done (took 2.443083626 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.299222329 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.464818056 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.283919334 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.269485564 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.264467144 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.265801296 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.267866094 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.265298293 seconds)
  done (took 11.562217213 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.264110673 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.264221686 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.261403956 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.26138763 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.26386128 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.261208834 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.264352507 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.262161992 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.263842766 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.264789762 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.262024284 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.261663209 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.265096947 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.261804957 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.261586533 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.265265684 seconds)
  done (took 21.389826939 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.263634324 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.263608991 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.263369405 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.262649449 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.262217336 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.264186098 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.26446052 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.262140166 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.263061481 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.263440661 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.263972781 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.263506217 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.263392065 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.263218996 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.264078958 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.263675422 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.262939487 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.264117505 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.267361801 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.263411651 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.26351733 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.263193278 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.263746198 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.264249243 seconds)
  done (took 31.510437113 seconds)
done (took 68.091522565 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.50978965 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 4.055321685 seconds)
  done (took 9.748131532 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.266266865 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.265209135 seconds)
  done (took 3.715384261 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.266885457 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.267135149 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.26617674 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.266409322 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.265964815 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.265049371 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.265663859 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.265781036 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.266078429 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.267669402 seconds)
  done (took 13.845578384 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.267511753 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.267318676 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.264219966 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.265346583 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.266298582 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.264909894 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.265677194 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.26615679 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.266530392 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.264375882 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.265968523 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.26382656 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.265688722 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.263953663 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.266609514 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.263956479 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.263855008 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.264133205 seconds)
  done (took 23.959335777 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.267161525 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.266035735 seconds)
  done (took 3.717313607 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.264446265 seconds)
    (2/7) benchmarking "second"...
    done (took 1.265810469 seconds)
    (3/7) benchmarking "month"...
    done (took 1.264336942 seconds)
    (4/7) benchmarking "year"...
    done (took 1.265382253 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.263251928 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.264923165 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.263805547 seconds)
  done (took 10.035103137 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.267150032 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.459386386 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.545950648 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.860069547 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.268116286 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.27063147 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.132560398 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.270648299 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.272453002 seconds)
  done (took 14.531224848 seconds)
done (took 80.739738167 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.316966231 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.282680788 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.511577686 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.284181508 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.278168171 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.601716585 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.30526825 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.395631071 seconds)
done (took 38.166462999 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.269166119 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.010143945 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.016876185 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.265112827 seconds)
  done (took 11.470571398 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.247844902 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.23576514 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.239623586 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.325539899 seconds)
  done (took 18.228065218 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.321553992 seconds)
    (2/2) benchmarking "read"...
    done (took 1.595508914 seconds)
  done (took 5.093389433 seconds)
done (took 42.248224943 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.261017756 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.260984765 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.257255496 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.260671233 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.259581765 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.257845778 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.261204767 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.260447271 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 1.259605381 seconds)
    (10/24) benchmarking ("one", "Float32")...
    done (took 1.260525942 seconds)
    (11/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.260156587 seconds)
    (12/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.258904663 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.257038878 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.257362097 seconds)
    (15/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.260082316 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.261700657 seconds)
    (17/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.26127726 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.259338254 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.260612622 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.258378933 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.259018897 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.260924545 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.259598722 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.258495574 seconds)
  done (took 31.409474069 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.261076735 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.258245444 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.26154693 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.261056339 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.259598434 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.261833509 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.262808568 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.259397002 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.261769217 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.261332892 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.260301357 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.260730891 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.260740528 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.259510635 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.262127422 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.259907742 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.261886666 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.258515748 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.262759908 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.259504887 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.260937153 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.261047801 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.260390144 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.262660352 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.261095219 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.260662574 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.262377135 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.260396573 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.262958588 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.260904413 seconds)
  done (took 39.006081274 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.268117165 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.269756027 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.262173001 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.263420253 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.263796087 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.262633212 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.262899882 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.263458661 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.263022045 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.262404958 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.263604729 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.264031939 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.263240425 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.263206512 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.264672171 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.264162826 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.262950088 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.263095923 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.263930425 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.264636036 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.264877867 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.264530386 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.265098916 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.26475383 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.264544485 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.26548389 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.264849021 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.264103029 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.263672995 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.263383212 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.265762289 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.265329118 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.264611345 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.265395456 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.26640128 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.264864702 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.270158775 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.272601454 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.265517299 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.266112345 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.265280937 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.264977959 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.265182166 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.264940798 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.265702044 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.265637244 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.26529808 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.265150228 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.266008775 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.266640168 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.266587658 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.266211881 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.266099952 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.267323371 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.267517361 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.266957512 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.267290385 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.266358109 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.266147609 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.266899527 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.266039587 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.266911972 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.266992497 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.266791156 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.267127805 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.266411274 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.266591972 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.266557335 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.266078004 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.267059983 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.266274678 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.26735785 seconds)
  done (took 92.294958517 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.268589491 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.265486812 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.263974841 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.265448935 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.264538256 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.267198735 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.265761637 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.267823961 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.265655407 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.267707257 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.26752547 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.265777175 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.265661651 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.268323417 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.268085584 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.265696938 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.268170437 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.266603502 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.268907757 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.268297819 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.269283886 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.266731352 seconds)
  done (took 29.055414261 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.269803841 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.270929116 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.26590664 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.268420861 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.266369643 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.268736314 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.269041902 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.270480759 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.26901596 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.267467287 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.265723752 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.267935557 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.268175821 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.270815437 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.266701333 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.267738321 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.269975838 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.268244264 seconds)
  done (took 24.017393609 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.266857793 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.269450933 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.271335543 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.268088788 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.267960332 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.270583508 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.268246647 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.271072016 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.27048604 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.269073523 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.269888485 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.269578417 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.271044343 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.26752529 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.270444954 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.268688887 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.270199924 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.270117571 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.271376888 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.267768613 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.268050838 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.272016002 seconds)
  done (took 29.115018099 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.270342204 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.27040603 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.268689347 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.268478832 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.26752402 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.270482252 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.269952538 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.266550677 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.270862152 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.269644426 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.269510996 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.270595236 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.269500066 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.269428323 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.267647203 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.269015423 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.272396087 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.270117311 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.270559719 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.26904028 seconds)
  done (took 26.57858479 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.272314724 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.271357946 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.272518066 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.272011878 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.272031094 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.272646473 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.272340464 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.272750999 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.27290006 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.274132537 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.272444224 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.273658822 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.272368867 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.27317147 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.273942378 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.272897561 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.273303041 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.273158036 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.274666797 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.273878841 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.272717978 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.273893577 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.27385855 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.274082268 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.274478413 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.27287872 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.273679618 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.274616042 seconds)
  done (took 36.83669628 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.275193452 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.274180541 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.271395772 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.271419071 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.271338411 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.271859007 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.272373423 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.270937658 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.274933597 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.270811137 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.27364298 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.274315626 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.273666704 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.274990798 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.274665214 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.275976792 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.274770929 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.27117731 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.271859474 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.271937033 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.275179588 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.275529782 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.27395086 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.273862042 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.271305379 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.275023353 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.273676085 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.273230054 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.274444253 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.27298768 seconds)
  done (took 39.390509853 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.293452162 seconds)
    (2/2) benchmarking "in"...
    done (took 1.294932683 seconds)
  done (took 3.778248127 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.272378143 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.274970189 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.27507208 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.273639133 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.2728274 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.275613054 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.275759242 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.274000967 seconds)
  done (took 11.384986313 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.274402338 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.275568778 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.276356249 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.274885051 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.275384938 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.276194443 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.283321768 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.296813735 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.276541859 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.277981522 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.28280495 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.283093769 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.277098918 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.276191918 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.276540668 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.278037155 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.276536601 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.275495172 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.275591725 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.27627406 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.276371101 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.278114487 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.278581386 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.273536693 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.27823365 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.286324354 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.299846142 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.277581225 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.276264272 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.280980951 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.276428568 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.274925921 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.276950602 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.277591709 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.278340864 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.277773526 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.28520631 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.298100832 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.284234142 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.298119777 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.278041204 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.275838019 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.279375807 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.280407978 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.277080918 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.277999254 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.278664494 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.275345179 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.278401809 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.280474044 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.284232637 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.277627867 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.2764353 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.280026997 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.27930591 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.283697091 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.299413342 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.281754802 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.28726662 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.288105965 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.309673891 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.30282646 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.279853646 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.278782277 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.288155952 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.302125654 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.284313784 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.297746161 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.277436607 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.279241475 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.284868755 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.309466597 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.304864151 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.279173668 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.279225618 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.279585193 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.279006803 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.27915104 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.284637929 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.300997838 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.28108747 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.281010431 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.289295405 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.303415235 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.278003875 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.280347557 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.281441784 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.280336581 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.281718108 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.29080265 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.301627541 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.282335359 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.279435705 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.280847636 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.281522126 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.279752261 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.280307729 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.282320928 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.276578998 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.281774783 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.280517649 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.28458937 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.289275768 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.281172234 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.281966323 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.287711184 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.301243645 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.280758123 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.287329539 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.280605065 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.281963135 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.283386371 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.286723236 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.280484917 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.285292052 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.289240651 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.282306909 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.281399104 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.281781635 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.283654427 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.292625749 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.306790448 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.283260162 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.283263173 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.286658027 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.293462813 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.283210081 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.284301635 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.283455057 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.280090687 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.281034102 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.283582533 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.283692088 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.284566345 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.283513472 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.284279851 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.281293114 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.28461729 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.283219346 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.284378344 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.284963493 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.28445621 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.284435771 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.286330622 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.283553789 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.28418497 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.288613826 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.304080886 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.284852807 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.285020048 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.282074653 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.28492765 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.285512056 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.2854877 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.284050456 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.284504387 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.284837612 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.284699003 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.285866913 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.285285574 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.286281036 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.285334112 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.288092422 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.285851255 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.287818213 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.283353441 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.282604701 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.285424809 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.284861455 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.283452363 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.285208129 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.284119105 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.287643672 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.293878772 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.286346454 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.285465596 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.287472346 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.285177088 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.286767168 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.285663102 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.288687759 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.292946236 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.285950814 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.292767606 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.307007627 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.286917657 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.287995137 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.286127452 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.285083664 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.286381198 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.289495874 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.295428898 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.298012928 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.312123379 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.28890881 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.291941862 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.288177862 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.291860373 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.290228242 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.287461734 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.289102628 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.287824863 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.286810451 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.287760695 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.288009569 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.288087362 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.287755465 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.288087047 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.286992141 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.288186598 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.288565823 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.286636145 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.288121038 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.286884497 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.288673392 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.287578559 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.287966232 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.285846964 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.287597723 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.288180954 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.289678244 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.289143887 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.294344772 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.287226236 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.289320585 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.289556481 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.288125248 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.287862471 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.290122883 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.290524588 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.287836483 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.29426714 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.308786988 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.288502548 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.295182576 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.309483679 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.288480771 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.29152752 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.290087918 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.286734808 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.292700375 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.297520153 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.290772797 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.291012757 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.290387201 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.289728619 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.290164854 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.295416429 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.308749301 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.289312218 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.291361862 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.291167735 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.288114912 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.290585141 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.289790565 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.290501335 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.291667504 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.291894966 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.290456936 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.290667053 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.290436529 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.291203162 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.291750893 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.293731711 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.298861014 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.294934783 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.290829647 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.292985442 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.291759293 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.295798921 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.290418139 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.292475308 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.290415873 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.302998139 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.317409837 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.296888942 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.312646437 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.292765785 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.298876874 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.312635537 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.295555215 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.290584863 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.292318161 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.290993991 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.291695792 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.290390027 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.292517032 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.293564214 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.292435223 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.293176943 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.297459476 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.293303981 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.291884035 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.294237365 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.294646961 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.293926668 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.291879375 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.29447735 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.294597813 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.29455253 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.293561654 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.292349804 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.299911825 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.313008884 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.292174276 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.293780313 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.293747759 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.293288242 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.293859653 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.293520232 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.298393259 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.301735315 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.298353394 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.301784086 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.295347971 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.30288469 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.294940502 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.299318015 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.30186287 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.293362358 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.294375152 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.295671423 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.294703838 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.300921667 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.314189276 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.297205731 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.298767615 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.295467309 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.296271588 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.295540684 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.295356385 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.296012674 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.295440462 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.304315943 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.316514521 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.299393923 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.297328973 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.292465221 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.295952994 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.294803159 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.295620806 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.297331554 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.297211189 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.296686295 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.296624348 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.294458442 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.296880403 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.296992859 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.297847715 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.29460038 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.296746658 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.302814141 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.320008014 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.301314803 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.298627021 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.303319559 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.317035784 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.303161715 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.318426287 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.29723237 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.297864918 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.297132853 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.297453991 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.296101506 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.297147707 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.297887985 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.299686074 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.302081867 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.298004144 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.299071632 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.29794047 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.297149431 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.297186058 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.307771849 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.321599993 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.29990975 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.303006608 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.296270204 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.299187126 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.303749026 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.298146971 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.297755747 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.300409173 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.308350131 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.307505689 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.300347267 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.29896249 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.299818301 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.298836298 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.297722511 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.298827199 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.298466448 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.298505656 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.298567466 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.299794153 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.301230748 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.300307425 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.298831815 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.300428622 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.29973793 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.308425417 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.31903208 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.299525786 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.298020602 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.300381203 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.299456115 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.298440854 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.300455374 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.300158831 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.300463957 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.302228588 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.306333638 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.306445087 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.302278758 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.298393538 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.30124393 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.300088018 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.301666569 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.299745689 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.300189682 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.300681686 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.300630244 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.301096765 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.301493247 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.299088271 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.301156135 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.299990085 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.301699219 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.304308753 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.308472458 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.302217535 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.299848021 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.301474379 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.301719048 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.300790621 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.301084457 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.307122166 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.325703863 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.3130991 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.311442219 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.307575827 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.302694793 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.304959977 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.309411393 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.301324374 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.302245067 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.302842627 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.303809948 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.303792457 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.304625101 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.302356942 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.308188821 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.322885704 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.301900493 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.309701515 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.322510677 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.30288963 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.303602919 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.306403923 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.303393164 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.300969082 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.303311814 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.301785673 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.308555785 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.324045274 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.30270847 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.305143962 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.302790024 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.306888302 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.30755384 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.305096646 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.305053788 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.300938016 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.302831411 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.303548407 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.304410027 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.30258829 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.303207706 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.304616202 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.305828368 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.311025665 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.301426486 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.305254674 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.30478477 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.304412691 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.304257941 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.305112794 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.301268238 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.302241669 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.303866844 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.304509432 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.303863723 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.306264735 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.304663357 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.306132292 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.307805412 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.304812164 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.309000327 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.314466217 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.313965584 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.303784812 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.304683929 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.305159809 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.307575084 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.30667317 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.306733705 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.307352081 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.306702045 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.306099775 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.306870801 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.306659557 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.308418058 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.320381148 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.327554403 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.306161037 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.305977083 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.308866689 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.307195297 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.303419843 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.307120478 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.308441354 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.311260852 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.314035802 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.306987164 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.313255214 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.326042763 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.309172817 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.311536106 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.309934322 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.315008115 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.309775169 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.308040052 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.308901143 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.311538725 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.321683601 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.309263637 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.318613745 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.336297507 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.327077496 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.30756011 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.30789267 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.3066857 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.30613642 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.309150056 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.307690451 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.308384295 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.30723115 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.30794991 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.30875134 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.312171356 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.308314258 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.309134308 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.307647173 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.307890531 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.307897847 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.30615185 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.30801571 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.308685382 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.307173155 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.307885516 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.30896465 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.309237222 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.319645049 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.334285209 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.309552571 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.309192227 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.306154258 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.311135069 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.310736986 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.319828495 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.317866556 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.308851445 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.310177125 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.3097159 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.308960306 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.308376994 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.309409403 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.309734603 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.30853409 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.306659196 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.321864908 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.335693012 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.312554834 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.308611324 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.309851602 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.310948117 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.311107394 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.311262396 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.310569615 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.310809222 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.311713183 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.314456514 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.310220037 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.310642433 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.313020796 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.317453188 seconds)
  done (took 773.688738377 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.30900772 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.309017442 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.307697419 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.307715383 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.308220295 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.307161164 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.308499891 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.308605809 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.309179032 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.308233734 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.308355354 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.308703359 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.30839836 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.308597767 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.309740906 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.30836699 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.309091368 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.309121312 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.308106985 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.309105227 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.309536677 seconds)
  done (took 28.705287297 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.312070044 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.30793464 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.30861549 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.311928535 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.309112055 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.311765245 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.308618648 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.31148487 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.310961257 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.307973946 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.311978308 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.311177092 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.309965597 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.309527193 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.310085146 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.311965079 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.311959105 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.308840991 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.312738143 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.309213686 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.312755022 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.309201486 seconds)
  done (took 30.054946625 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.312482838 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.312147441 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.311591199 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.310295761 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.313071467 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.311795185 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.312531942 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.313412967 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.312211512 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.310976368 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.311781423 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.31372065 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.320246328 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.318171073 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.31379025 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.312401652 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.456581138 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.312592574 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.314225136 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.313543951 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.311645582 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.317867192 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.329518176 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.310680186 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.312448561 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.314775055 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.313723542 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.314965424 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.313719537 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.316438288 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.318847147 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.314424883 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.313222653 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.315407872 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.313146321 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.317036283 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.31908292 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.314262899 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.31305135 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.316001505 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.324369595 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.335093001 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.31616389 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.320311665 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.336088105 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.31386375 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.319621642 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.322841343 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.312757158 seconds)
  done (took 65.844669533 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.3147674 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.316153331 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.312016745 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.315815671 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.316359694 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.316523575 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.31622842 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.315983158 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.314216267 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.313474096 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.31594561 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.314546031 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.31409986 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.317535033 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.316468839 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.314330054 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.314376688 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.314367564 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.313525698 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.314185231 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.313196385 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.316408387 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.317600986 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.314411828 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.317185792 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.314468844 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.314980318 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.317232469 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.316295784 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.313832113 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.316306466 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.315527494 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.316657002 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.313699592 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.31389108 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.316901571 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.317634595 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.314040839 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.31823346 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.315225539 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.316789572 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.316198077 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.317504754 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.316361833 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.315362517 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.315151692 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.314491279 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.315527252 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.314793845 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.3178468 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.318754405 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.316178058 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.317583494 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.315696651 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.317780182 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.317910293 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.315786984 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.315687012 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.318169563 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.316589569 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.31688596 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.318871182 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.318120011 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.318522254 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.319419175 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.316730573 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.317567309 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.319909903 seconds)
  done (took 90.721139398 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.319350214 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.318527194 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.318350311 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.318342453 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.319740403 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.319311685 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.318842348 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.319622585 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.319450017 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.318285416 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.320337543 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.320552408 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.319591342 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.319267659 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.319916349 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.321034297 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.320598807 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.320339266 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.320585388 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.320414113 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.319827723 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.321285754 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.320524645 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.320897976 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.32011333 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.320392319 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.320240222 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.320071366 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.320227017 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.321589847 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.320257891 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.321418313 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.31891424 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.320608462 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.319883316 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.320146478 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.32108587 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.322415302 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.322205666 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.321968904 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.322550524 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.321561835 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.322579699 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.32113478 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.322097594 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.322076527 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.32123361 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.322703079 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.321724641 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.322221426 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.321515944 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.322502271 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.321468297 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.322825313 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.322574041 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.322036318 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.321354251 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.32269949 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.321847523 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.321248391 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.323114138 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.322865646 seconds)
  done (took 83.125258039 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.323154728 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.323651825 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.321754882 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.320432171 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.323856318 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.321284583 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.32377015 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.324420097 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.324539673 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.322886361 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.324477737 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.32173723 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.32087126 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.324982458 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.321269528 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.322026869 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.321509239 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.321777152 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.325498715 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.322006307 seconds)
  done (took 27.691525698 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.323468414 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.324950533 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.322720055 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.322522945 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.323759882 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.322887938 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.325031181 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.324714874 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.321295593 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.32495773 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.324645158 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.325388447 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.32242857 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.3221534 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.324319392 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.322745247 seconds)
  done (took 22.414765144 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.322894188 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.325615131 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.324949886 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.325659957 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.3233058 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.323344104 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.326023583 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.323323555 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.322932349 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.325672654 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.326312457 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.325755444 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.325686398 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.32508295 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.32452582 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.325504502 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.323904204 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.323752884 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.326941987 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.326118803 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.324631031 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.323527205 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.326513802 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.326800652 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.324211825 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.325376646 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.325031805 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.324292803 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.323115202 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.327682567 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.324219737 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.324631589 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.324905908 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.324958157 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.3277259 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.326058778 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.327872499 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.327752472 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.328291799 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.327345252 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.328450312 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.326011824 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.327079015 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.326740929 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.325763966 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.326694621 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.326502747 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.325996214 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.325324578 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.325760102 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.328844793 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.328506189 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.329130094 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.329091615 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.328730256 seconds)
  done (took 74.158359613 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.329660213 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.328916699 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.325811921 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.328906282 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.328673885 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.326786697 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.32931391 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.327095993 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.325437985 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.329083228 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.327099062 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.33050675 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.326872514 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.328684246 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.328884024 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.329754384 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.326404277 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.327741737 seconds)
  done (took 25.145967231 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.328003801 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.326721883 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.329773584 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.326441894 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.327462474 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.330663473 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.32652576 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.33025137 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.330338133 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.32685267 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.327394258 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.330671756 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.330980241 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.330305849 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.328478219 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.327634086 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.329718686 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.330785624 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.327836956 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.327481773 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.330087431 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.331859097 seconds)
  done (took 30.477357216 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.3297484 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.329697357 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.329202136 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.346547634 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.348247714 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.354622611 seconds)
  done (took 9.27953327 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.338156787 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.331505609 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.328580148 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.332901537 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.331800069 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.329315093 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.329638713 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.329073389 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.332063008 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.330580746 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.330245591 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.331242797 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.330638337 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.33093375 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.332666957 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.331828038 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.329535476 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.330458482 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.33096937 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.333608547 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.330056941 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.332876206 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.329588261 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.331203683 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.330012899 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.330099752 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.332782249 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.33016387 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.330818712 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.332385384 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.332190781 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.332043118 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.333696689 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.331626372 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.333354313 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.333606941 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.330712826 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.333540819 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.333754729 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.33223746 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.334382547 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.333040766 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.333624012 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.330765662 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.33333226 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.3321322 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.331808177 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.332887863 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.331901435 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.33480748 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.334336898 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.331940271 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.333477601 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.335544138 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.334604818 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.334557265 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.333631415 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.332894265 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.33452258 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.333935102 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.331932879 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.334860108 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.332977092 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.331776479 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.335113482 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.333337377 seconds)
  done (took 89.198809635 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.333656383 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.332965075 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.333735395 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.33437014 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.33343423 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.332889146 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.334237387 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.332930549 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.333684733 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.334544743 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.33632703 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.334662164 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.334021518 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.333676511 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.333883275 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.333858492 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.334237641 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.334550962 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.334662168 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.336360187 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.332961908 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.334231344 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.334404488 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.335128396 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.336618806 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.336606434 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.333893504 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.334997794 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.334648141 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.334251682 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.335681347 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.334617141 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.335271241 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.335620034 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.334362827 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.334764032 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.334876805 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.335409938 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.334013957 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.338687549 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.335023077 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.337598196 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.335512031 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.335980639 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.336033555 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.334658972 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.334446235 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.335571632 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.336248178 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.336622272 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.335750396 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.33529768 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.335951978 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.335854753 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.336288748 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.336040113 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.336547554 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.335809231 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.335807904 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.339228965 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.336393002 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.335703014 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.339591038 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.337442587 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.336974159 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.336752552 seconds)
  done (took 89.375061784 seconds)
done (took 1803.932640411 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.335363482 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.404007661 seconds)
  done (took 13.988471431 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.501179121 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.452453229 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.340625256 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.350269368 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.340659516 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.364738835 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.364199814 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.34085953 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.340795767 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.341093501 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.33994282 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.526715928 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.393392865 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.34118128 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.340820052 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.436398839 seconds)
  done (took 43.366648947 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.367804146 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.346243713 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.462531695 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.362294269 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.367730572 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.542107216 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.398604401 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.346190049 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.528440678 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.391490136 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.974519655 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.368528697 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.344490101 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.519371516 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.369486399 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.543196148 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.601501573 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.976598126 seconds)
  done (took 31.064110495 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.825756664 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.3458516 seconds)
  done (took 9.424770122 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.351402143 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.356000409 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.387051191 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.358425653 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.364080164 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.411115817 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.423749914 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.435482597 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.399952572 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.41920623 seconds)
  done (took 65.16180322 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.367210628 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.345719471 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.344786164 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.343805132 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.335828117 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.335156834 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.344492838 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.337248939 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.107341214 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.478212342 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.345593401 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.350400709 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.362357886 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.34459408 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.341017997 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.378260836 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.551716759 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.341416978 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.33955963 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.348126352 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.341401602 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.480700838 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.38478702 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.343272579 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.471160073 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.062856999 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.350865901 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.349732391 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.530887987 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.341533822 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.342292737 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.341958181 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.343898815 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.950834414 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.834270556 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.358123637 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.367596343 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.351028985 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.34052349 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.560602257 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.345618521 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.348380695 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.335601144 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.827885355 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.472614861 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.459984119 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.603695148 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.360542641 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.345491331 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.404825602 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.345642074 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.34486414 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.37295229 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.102089472 seconds)
  done (took 112.416871364 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.373873739 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.725085782 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.504982144 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.359636337 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.108049072 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.008142428 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.35355011 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.628886083 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.391599968 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.338164112 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.634846605 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.853251392 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.359158606 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.386940107 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.868695243 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.407942092 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.336155992 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.06710158 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.353869082 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.342991711 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.846231886 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.339559761 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.338824109 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.579436319 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.375463317 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.797838025 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.763611684 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.770826925 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.35870375 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.339174093 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.813778117 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.361797812 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.378691978 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.339926389 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.602147121 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.700118515 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.691714732 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.359240496 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.389821981 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.341836788 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.354966079 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.79575674 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.700339559 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.357523787 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.339331626 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.798417223 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.354506592 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.343161551 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.344111924 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.549352492 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.189694137 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.339839508 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.747159797 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.33995671 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.718347625 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.386963411 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.405303585 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.827249593 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.358322719 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.513967252 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.40861915 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.339559077 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.339911661 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.340095552 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.344234752 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.690236647 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.652753113 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.339772255 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.687927056 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.830613941 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.362821675 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.882265178 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.188972701 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.342759348 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.403364228 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.341134915 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.927341155 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.844862501 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.36110633 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.341678519 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.676937377 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.362255903 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.625001886 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.357760919 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.343092573 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.861571298 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.353804918 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.34607277 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.342608146 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.342740822 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.101844933 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.341483205 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.628555234 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.403040259 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.343093731 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.343523392 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.378477739 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.342223119 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.343810648 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.342392942 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.884773343 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.369323245 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.315242215 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.367464675 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.343955465 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.343150436 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.341805895 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.343471356 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.569910015 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.880161322 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.361872212 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.344926387 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.344455688 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.367662032 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.587150107 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.348299131 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.654043149 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.360638872 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.343050742 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.347374324 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.0704937 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.404315592 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.34352787 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.367627509 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.241069923 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.550373304 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.363132559 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.349805833 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.34584082 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.365723596 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.588124742 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.364953256 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.433160092 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.34855132 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.057941041 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.403789282 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.355176639 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.849677131 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.353716883 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.233927518 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.370054507 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.345506366 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.640544747 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.612030545 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.572966329 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.346756283 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.361326073 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.061693637 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.39594502 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.492721025 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.363617013 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.347135396 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.543931023 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.579501976 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.345959382 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.965492087 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.346112873 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.566541162 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.346257686 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.651069048 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.847897329 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.368132087 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.35294333 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.06235519 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.053013256 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.03792567 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.349289613 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.625382803 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.314980673 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.815811935 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.349296197 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.354422184 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.910356265 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.350189398 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.352478701 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.344794547 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.344995323 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.483808049 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.517365731 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.540467694 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.352131294 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.79840003 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.40264466 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.345638411 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.36990663 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.350421759 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.693248514 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.371342049 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.344893914 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.381665563 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.346737211 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.355326273 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.816695756 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.242913706 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.346037807 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.498939918 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.983345878 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.368844498 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.345689831 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 4.024050587 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.562316801 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.887493444 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.418944381 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.650978387 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.36588559 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.383748951 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.974822089 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.440816549 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.81425765 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.36341622 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.346191005 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.953363775 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.368999909 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.444741319 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.347489132 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.348560812 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.891086813 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.369899429 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.34936059 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.564207452 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.36767225 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.619100763 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.347473221 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.366669874 seconds)
  done (took 1114.195516306 seconds)
done (took 1390.875256422 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.346595667 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.350987579 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.337776046 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.354371785 seconds)
  done (took 26.653613223 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.358858045 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.354204431 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.355725683 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.354360873 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.35696932 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.355058783 seconds)
  done (took 9.399683673 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.404920245 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.349750266 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.354671285 seconds)
  done (took 19.373324888 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.556814018 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.670709701 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.709053773 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.603442395 seconds)
  done (took 10.805543221 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.355793911 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.356852448 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.356350686 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.358266441 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.3611089 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.360742295 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.358066864 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.358565725 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.361909489 seconds)
  done (took 13.492083371 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.290595769 seconds)
done (took 86.286111113 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.726066372 seconds)
    (2/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.074774277 seconds)
    (3/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.654393471 seconds)
    (4/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.576647803 seconds)
    (5/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.560186174 seconds)
    (6/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.331250693 seconds)
    (7/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.331359896 seconds)
    (8/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.385252614 seconds)
    (9/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.34668745 seconds)
    (10/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.894036543 seconds)
    (11/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.238630197 seconds)
    (12/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.597909617 seconds)
    (13/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.405531661 seconds)
    (14/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.329940736 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.391136529 seconds)
    (16/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.34964747 seconds)
    (17/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.351142095 seconds)
    (18/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.37813166 seconds)
    (19/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.951698156 seconds)
    (20/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.498201712 seconds)
    (21/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.469541045 seconds)
    (22/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.532605233 seconds)
    (23/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.970432376 seconds)
    (24/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.818903647 seconds)
    (25/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.347764963 seconds)
    (26/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.195690925 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.230366751 seconds)
    (28/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.452847053 seconds)
    (29/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.331825204 seconds)
    (30/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.459006107 seconds)
    (31/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.453745328 seconds)
    (32/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.867824254 seconds)
    (33/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.944008937 seconds)
    (34/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.351710519 seconds)
    (35/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.769946237 seconds)
    (36/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.285357806 seconds)
    (37/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.451225774 seconds)
    (38/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.355228608 seconds)
    (39/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.334196927 seconds)
    (40/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.387569032 seconds)
    (41/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.182455244 seconds)
    (42/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.480975426 seconds)
    (43/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.653067891 seconds)
    (44/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.62123983 seconds)
    (45/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.332156354 seconds)
    (46/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.167413982 seconds)
    (47/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.744043787 seconds)
    (48/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.339168819 seconds)
    (49/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.125677413 seconds)
    (50/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.357620409 seconds)
    (51/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.294490259 seconds)
    (52/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.428034904 seconds)
    (53/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.420077352 seconds)
    (54/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.361827805 seconds)
    (55/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.200333118 seconds)
    (56/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.826559055 seconds)
    (57/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.333465427 seconds)
    (58/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.334152326 seconds)
    (59/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.104760616 seconds)
    (60/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.734985427 seconds)
    (61/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.360509618 seconds)
    (62/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.384264015 seconds)
    (63/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.416467163 seconds)
    (64/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.574328501 seconds)
    (65/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.990024674 seconds)
    (66/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.380841155 seconds)
    (67/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.356928512 seconds)
    (68/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.83117306 seconds)
    (69/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.380135388 seconds)
    (70/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.706371465 seconds)
    (71/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.436729323 seconds)
    (72/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.354613169 seconds)
    (73/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.133000202 seconds)
    (74/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.575081512 seconds)
    (75/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.758464152 seconds)
    (76/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.355727301 seconds)
    (77/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.45614397 seconds)
    (78/309) benchmarking ("sort", Int64, false)...
    done (took 5.555872913 seconds)
    (79/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.021212184 seconds)
    (80/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.335286016 seconds)
    (81/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.770334569 seconds)
    (82/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.354459204 seconds)
    (83/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.855308856 seconds)
    (84/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.837922684 seconds)
    (85/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.454613923 seconds)
    (86/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.354918255 seconds)
    (87/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.708793495 seconds)
    (88/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.435660057 seconds)
    (89/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.436755478 seconds)
    (90/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.33442377 seconds)
    (91/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.328748844 seconds)
    (92/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.373554901 seconds)
    (93/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.272018673 seconds)
    (94/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.568547874 seconds)
    (95/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.859628213 seconds)
    (96/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.54306541 seconds)
    (97/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.974865204 seconds)
    (98/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.974052024 seconds)
    (99/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.445239879 seconds)
    (100/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.371582693 seconds)
    (101/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.520375545 seconds)
    (102/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.425248128 seconds)
    (103/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.472876944 seconds)
    (104/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.381992051 seconds)
    (105/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.570060798 seconds)
    (106/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.356196078 seconds)
    (107/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.375799727 seconds)
    (108/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.366442724 seconds)
    (109/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.711332416 seconds)
    (110/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.383260744 seconds)
    (111/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.337136515 seconds)
    (112/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.82032516 seconds)
    (113/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.426559833 seconds)
    (114/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.605151728 seconds)
    (115/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.356186858 seconds)
    (116/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.539735855 seconds)
    (117/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.337943691 seconds)
    (118/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.49311421 seconds)
    (119/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.355942557 seconds)
    (120/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.7391286 seconds)
    (121/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.268628026 seconds)
    (122/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.605722592 seconds)
    (123/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.441062467 seconds)
    (124/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.473666757 seconds)
    (125/309) benchmarking ("sort", Bool, false)...
    done (took 1.87345423 seconds)
    (126/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.398483127 seconds)
    (127/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.422106051 seconds)
    (128/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.115731505 seconds)
    (129/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.615753224 seconds)
    (130/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.38594791 seconds)
    (131/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.131076205 seconds)
    (132/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.620948444 seconds)
    (133/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.172018203 seconds)
    (134/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.317444959 seconds)
    (135/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.392265123 seconds)
    (136/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.490352856 seconds)
    (137/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.877168495 seconds)
    (138/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.346492234 seconds)
    (139/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.131472439 seconds)
    (140/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.416222879 seconds)
    (141/309) benchmarking ("sort", Float64, false)...
    done (took 5.676463866 seconds)
    (142/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.342467832 seconds)
    (143/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.358449767 seconds)
    (144/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.373818276 seconds)
    (145/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.376959496 seconds)
    (146/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.490169981 seconds)
    (147/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.136311517 seconds)
    (148/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.386493297 seconds)
    (149/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.482574652 seconds)
    (150/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.644184253 seconds)
    (151/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.359595567 seconds)
    (152/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.385544841 seconds)
    (153/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.382411576 seconds)
    (154/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.368352365 seconds)
    (155/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.357087323 seconds)
    (156/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.360257395 seconds)
    (157/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.339978396 seconds)
    (158/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.46721992 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.947000728 seconds)
    (160/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.4032608 seconds)
    (161/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.404147354 seconds)
    (162/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.513282729 seconds)
    (163/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.954483876 seconds)
    (164/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.722646 seconds)
    (165/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.381689939 seconds)
    (166/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.569562107 seconds)
    (167/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.441613226 seconds)
    (168/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.735531311 seconds)
    (169/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.372105299 seconds)
    (170/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.366307524 seconds)
    (171/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.36540282 seconds)
    (172/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.342000377 seconds)
    (173/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.340782956 seconds)
    (174/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.589054397 seconds)
    (175/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.842331476 seconds)
    (176/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.408993843 seconds)
    (177/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.34102719 seconds)
    (178/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.360689829 seconds)
    (179/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.112240298 seconds)
    (180/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.355181075 seconds)
    (181/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.347661275 seconds)
    (182/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.404170516 seconds)
    (183/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.445811808 seconds)
    (184/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.979955356 seconds)
    (185/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.349135019 seconds)
    (186/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.374159449 seconds)
    (187/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.44708177 seconds)
    (188/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.171345258 seconds)
    (189/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.38064943 seconds)
    (190/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.405481195 seconds)
    (191/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.345436889 seconds)
    (192/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.981113828 seconds)
    (193/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.166488811 seconds)
    (194/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.363135914 seconds)
    (195/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.204856476 seconds)
    (196/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.12008874 seconds)
    (197/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.79414411 seconds)
    (198/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.091738755 seconds)
    (199/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.364499908 seconds)
    (200/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.258811602 seconds)
    (201/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.686044531 seconds)
    (202/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.34365487 seconds)
    (203/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.478366748 seconds)
    (204/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.360977094 seconds)
    (205/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.421692417 seconds)
    (206/309) benchmarking ("sort", Float32, false)...
    done (took 5.366577229 seconds)
    (207/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.895095304 seconds)
    (208/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.448951757 seconds)
    (209/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.821934663 seconds)
    (210/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.625726343 seconds)
    (211/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.453845349 seconds)
    (212/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.797948464 seconds)
    (213/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.973320839 seconds)
    (214/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.018648496 seconds)
    (215/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.650750199 seconds)
    (216/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.586680948 seconds)
    (217/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.368410319 seconds)
    (218/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.775081268 seconds)
    (219/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.360352595 seconds)
    (220/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.151757597 seconds)
    (221/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.422690391 seconds)
    (222/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.738804898 seconds)
    (223/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.291958137 seconds)
    (224/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.39139891 seconds)
    (225/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.422457925 seconds)
    (226/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.3885911 seconds)
    (227/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.34527756 seconds)
    (228/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.345643769 seconds)
    (229/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.370373961 seconds)
    (230/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.836752018 seconds)
    (231/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.404632146 seconds)
    (232/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.006155935 seconds)
    (233/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.386386298 seconds)
    (234/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.366813 seconds)
    (235/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.471592699 seconds)
    (236/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.969907327 seconds)
    (237/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.346511276 seconds)
    (238/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.972785057 seconds)
    (239/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.366338095 seconds)
    (240/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.365695794 seconds)
    (241/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.476517333 seconds)
    (242/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.353891258 seconds)
    (243/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.391324088 seconds)
    (244/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.46706551 seconds)
    (245/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.203747344 seconds)
    (246/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.029322826 seconds)
    (247/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.379549607 seconds)
    (248/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.441019414 seconds)
    (249/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.394546185 seconds)
    (250/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.365617222 seconds)
    (251/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.492392587 seconds)
    (252/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.424595238 seconds)
    (253/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.216167494 seconds)
    (254/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.363473951 seconds)
    (255/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.365161694 seconds)
    (256/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.59489669 seconds)
    (257/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.489557883 seconds)
    (258/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.38069832 seconds)
    (259/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.472490009 seconds)
    (260/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.376344581 seconds)
    (261/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.388813486 seconds)
    (262/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.399126145 seconds)
    (263/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.372132761 seconds)
    (264/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.189255814 seconds)
    (265/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.750963268 seconds)
    (266/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.392873354 seconds)
    (267/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.130665763 seconds)
    (268/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.366792905 seconds)
    (269/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.690899662 seconds)
    (270/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.39470845 seconds)
    (271/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.480361862 seconds)
    (272/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.430161167 seconds)
    (273/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.892584641 seconds)
    (274/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.176555705 seconds)
    (275/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.780327909 seconds)
    (276/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.399308774 seconds)
    (277/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.400435601 seconds)
    (278/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.492080454 seconds)
    (279/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.450910991 seconds)
    (280/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.347137966 seconds)
    (281/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.480954591 seconds)
    (282/309) benchmarking ("sort", BigInt, false)...
    done (took 6.368350571 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.496357944 seconds)
    (284/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.393905774 seconds)
    (285/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.787906453 seconds)
    (286/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.199411828 seconds)
    (287/309) benchmarking ("sort", Int8, false)...
    done (took 4.389136271 seconds)
    (288/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.743980457 seconds)
    (289/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.397621855 seconds)
    (290/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.461176582 seconds)
    (291/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.385965722 seconds)
    (292/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.351414795 seconds)
    (293/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.427348121 seconds)
    (294/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.394159801 seconds)
    (295/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.466700448 seconds)
    (296/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.20194349 seconds)
    (297/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.74371741 seconds)
    (298/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.732713717 seconds)
    (299/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.386395634 seconds)
    (300/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.822553403 seconds)
    (301/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.740582797 seconds)
    (302/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.349276306 seconds)
    (303/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.364002069 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.396177152 seconds)
    (305/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.438604629 seconds)
    (306/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.793795273 seconds)
    (307/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.369601027 seconds)
    (308/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.414105349 seconds)
    (309/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 6.075140601 seconds)
  done (took 1045.532147966 seconds)
done (took 1046.805823022 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.404380861 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.398355768 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.381253181 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.402359494 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.493875048 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.405433595 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.392169979 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.383844623 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.429153539 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.432138548 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.379898511 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.404156791 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.384160136 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.382799792 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.38231925 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.397929232 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.428341629 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.384083715 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.399999921 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.392605549 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.39952641 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.382634871 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.433489036 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.405209081 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.387816412 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.386776603 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.387018342 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.403069658 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.495746227 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.386331791 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.386750333 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.396385521 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.42748183 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.382547653 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.377929833 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.4039933 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.39412922 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.394451374 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.387783149 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.415773315 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.838357679 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.400829762 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.386559687 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.38523094 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.38434126 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.388696058 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.386072375 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.390640829 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.39870494 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.39985016 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.86646299 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.423142369 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.38817237 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.385592326 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.396353757 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.382910322 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.388203832 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.402510163 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.404520686 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.404218929 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.411681919 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.391858717 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.386185442 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.401641814 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.392093131 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.910260733 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.404962599 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.390888738 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.86415586 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.414166714 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.909184461 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.418346895 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.386731913 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.400304338 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.418877745 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.448317955 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.3877355 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.385825002 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.394110904 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.38544884 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.396468584 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.400537398 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.391923456 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.38791031 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.401979212 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.411719015 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.397307156 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.389416597 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.397537025 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.407329008 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.394043691 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.397765165 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.391885669 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.382501916 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.397369396 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.392639278 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.390456062 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.391717363 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.394411891 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.400072769 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.835740031 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.422820979 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.384669608 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.384295657 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.386654092 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.401760893 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.862775708 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.412660486 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.409494813 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.436480802 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.390390309 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.414761003 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.392537612 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.406435222 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.397687414 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.392166864 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.384872548 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.441465345 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.880074505 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.427417866 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.389960518 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.387395247 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.408612414 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.390867813 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.386532932 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.457097496 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.397690715 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.405347026 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.510981956 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.400371677 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.421436243 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.389182327 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.394598339 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.412790389 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.407840154 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.422571128 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.393989695 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.408665841 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.406999473 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.388255738 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.40281173 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.402059304 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.391740463 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.396526048 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.385252669 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.415761904 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.405525345 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.406076544 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.412691554 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.51211203 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.389102976 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.445186251 seconds)
done (took 234.22191975 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.459766726 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.385334624 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.486908178 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.386526916 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.499584105 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.490107343 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.38469565 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.38516045 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.384210627 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.771967448 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.385968917 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.385627071 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.388240342 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.385363192 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.484185395 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.38912626 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.38634988 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.734520017 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.387668298 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.470343737 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.388758543 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.386608398 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.388626165 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.768958894 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.384930379 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.382398056 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.458879766 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.388350843 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.734263149 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.382957519 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.383749627 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.733013432 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.478028297 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.406396619 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.399397654 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.395907175 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.491330465 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.407947403 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.467996764 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.482433414 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.48467583 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.427258513 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.391948573 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.389675892 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.39205778 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.389447011 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.387566479 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.415584278 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.386089167 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.38798322 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.737002618 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.398856314 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.396459891 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.388777307 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.387035651 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.409926947 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.388638061 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.389888075 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.493425755 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.391256197 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.452089498 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.77089813 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.774957176 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.390550737 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.388133196 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.389460501 seconds)
  done (took 152.238152949 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.457152978 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.467161545 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.504519433 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.411253473 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.444303182 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.509774825 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.413546626 seconds)
  done (took 11.503922256 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.397058476 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.391808392 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.441029222 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.440974401 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.391807942 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.539691796 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.391620441 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.403320799 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.390614597 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.444255428 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.393419245 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.393464884 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.399787625 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.389096373 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.439857976 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.403840517 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.511790108 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.393856452 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.392822497 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.549521909 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.390665548 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.400331536 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.444290512 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.405853495 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.394428387 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.398552037 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.970608613 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.393487903 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.391725763 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.394316766 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.390865037 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.43128794 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.393763369 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.394702762 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.391271653 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.509052751 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.393006412 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.390938501 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.393525203 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.390441777 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.394527251 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.394372344 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.394153213 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.392640536 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.394544248 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.416028257 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.39590286 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.395388555 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.394059552 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.395138922 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.445694642 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.39485943 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.392075689 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.39247789 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.450292576 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.402699187 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.395333549 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.392112466 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.39681505 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.393040293 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.552123567 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.444044893 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.395581186 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.443400007 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.397441486 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.395717476 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.395682968 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.395259721 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.449646232 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.395007341 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.444124865 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.39356903 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.549821732 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.41941829 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.398764682 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.397921806 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.398598131 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.396197951 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.39509894 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.402749948 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.394750952 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.397010605 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.40380258 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.394403912 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.394310881 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.499161978 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.50698021 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.395273626 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.410032257 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.403673695 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.395124724 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.449884206 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.39799791 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.395361457 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.448518495 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.51750434 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.45011221 seconds)
  done (took 159.200728697 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.402683 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.405700748 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.3984146 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.414483691 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.397687929 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.398486707 seconds)
  done (took 9.721544976 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.400373152 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.400354809 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.399234379 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.399443335 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.398461943 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.399839803 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.399515069 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.399988795 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.401374534 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.397981179 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.397756957 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.39900502 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.398886744 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.399050231 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.399520419 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.399511364 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.399677528 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.397031712 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.399054227 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.398775765 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.49661974 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.398838065 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.40050136 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.400935022 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.40343819 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.400526841 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.406160145 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.399785843 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.399801316 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.40733902 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.420709765 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.400653353 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.400791414 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.405953216 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.405528187 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.401316722 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.404607534 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.401763215 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.399070518 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.400902308 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.401522069 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.400978841 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.400892987 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.401622141 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.403801519 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.406026627 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.405149983 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.410081885 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.401976565 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.401787138 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.402347337 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.401574966 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.402212306 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.401830084 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.403918878 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.423834155 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.405289515 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.402495741 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.400939266 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.402799914 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.403155758 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.403194427 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.403818497 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.405188043 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.410197967 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.402345881 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.40350295 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.406248613 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.402525505 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.843041096 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.403330154 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.400619803 seconds)
  done (took 103.814280028 seconds)
done (took 437.779034437 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.829477401 seconds)
  done (took 8.137230932 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.518561548 seconds)
  done (took 7.828738778 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.569412501 seconds)
  done (took 22.882271298 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.477704541 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.512880273 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.436839867 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.406874631 seconds)
  done (took 27.142338501 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.781739827 seconds)
  done (took 8.090135788 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.396673218 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.420603037 seconds)
  done (took 14.127642861 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.494280897 seconds)
  done (took 7.803113806 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.929665838 seconds)
  done (took 8.242910903 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.402250511 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.419510955 seconds)
  done (took 14.142380189 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.375766052 seconds)
  done (took 7.685186311 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.62246865 seconds)
  done (took 8.932419358 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.400630281 seconds)
  done (took 7.710620776 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.415966855 seconds)
  done (took 7.725396739 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.60120122 seconds)
  done (took 9.91058939 seconds)
done (took 161.676999974 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.395917285 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.404526601 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.403977955 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.401024366 seconds)
  done (took 26.916233428 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.438786326 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.436851323 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.43923897 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.44795386 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.440587245 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.437364117 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.43247189 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.429835787 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.448267235 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.441027882 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.440242375 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.440361559 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.437410725 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.430643167 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.440730991 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.440447349 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.448883509 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.440224623 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.430777601 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.441321448 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.40553788 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.449322325 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.442357943 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.40637528 seconds)
  done (took 35.798300372 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.926553903 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.476045986 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.558661302 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.45848805 seconds)
  done (took 7.730337238 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.457761345 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.459470096 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.475480123 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.50903231 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.536024447 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.469813778 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.433057024 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.428514191 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.413979926 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.458914258 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.535476854 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.475490387 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.543256482 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.40657251 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.592069834 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.405623125 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.407745277 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.45863208 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.509625074 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.525273945 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.407507961 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.4583294 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.463300884 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.475736191 seconds)
  done (took 36.618033129 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.40755125 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.425409466 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.406981844 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.405758514 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.414248401 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.406502615 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.407278759 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.408289404 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.406893062 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.414125816 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.406208256 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.419884158 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.406102854 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.406899205 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.412025942 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.408254507 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.412809162 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.407838195 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.407077973 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.412714852 seconds)
  done (took 29.517145993 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.401295677 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.254888553 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.753114225 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.656921302 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.401598061 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.407674244 seconds)
  done (took 28.18883138 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.48036784 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.641111308 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.416083879 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.775497721 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.869444156 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.427337571 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.40795989 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.658304876 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.991114555 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.978920919 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.475048606 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.48599145 seconds)
  done (took 20.921424754 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.405406195 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.406669739 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.421396629 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.425846851 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.465943385 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.434801655 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.415884329 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.40349007 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.470665157 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.491466109 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.435217177 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.468653723 seconds)
  done (took 38.561673158 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.491701953 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.453908937 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.362498296 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.429781037 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.131654922 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.6177381 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.409716306 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.865125835 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.407880362 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.67848059 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.41777499 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.501622501 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.662840682 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.409706952 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.413297009 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.422941817 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.649881447 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.904320194 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.415386245 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.583307156 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.438790331 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.405939626 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.675615351 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.444161472 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.618828387 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.553662414 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.667210397 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.183493734 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.713016174 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.425533359 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.416872235 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.406989399 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.680710609 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.092488162 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.529227008 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.417421732 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.409495569 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.060293992 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.397502457 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.542680393 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.411408949 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.417167187 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.417524431 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.408130011 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.342344211 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.422243067 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.882373166 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.413833134 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.118824027 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.409440785 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.41908695 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.503474073 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.412010502 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.982526294 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.469739693 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.436394667 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.405129497 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.503809353 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.995205824 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.047734563 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.411228558 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.369452149 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.410341702 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.594393462 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.064352392 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.528164055 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.412405529 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.41279381 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.34370084 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.564189082 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.432964819 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.547516357 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.431429146 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.071733067 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.139512585 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.440435054 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.348237317 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.961684503 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.412536171 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.352629351 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.639972696 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.185090879 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.348654447 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.358017079 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.343882297 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.135069757 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.425214843 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.823980687 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.436684825 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.891827829 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.420770718 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.429858332 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.433172597 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.635174633 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.28924025 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.40910359 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.410980061 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.528473436 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.432338691 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.871240065 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.346329515 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.413797673 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.670226998 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.622167618 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.411730941 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.442690582 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.656047009 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.419007943 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.432710097 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.421449558 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.429829872 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.011434283 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.449910748 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.994629026 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.429141113 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.188992198 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.164944001 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.428958246 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.520080627 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.42058095 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.673939031 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.201103384 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.300085427 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.480456563 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.417317354 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.413013729 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.630703305 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.009320908 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.29508852 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.407497469 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.418642353 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.430005182 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.411466348 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.372515946 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.417329972 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.420927978 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.202070551 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.639010202 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.413382309 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.714870191 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.348101289 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.554511531 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.428980237 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.637481877 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.671331693 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.438147873 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.67611604 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.421552002 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.422185477 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.433771919 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.432814073 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.515424496 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.435883496 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.427206022 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.679535454 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.418676055 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.417960499 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.631915463 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.195561729 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.423248046 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.421725544 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.416968861 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.018766345 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.404004829 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.419259315 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.308467988 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.429813895 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.482540075 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.420187254 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.426210002 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.300845545 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.460268624 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.420416083 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.424978094 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.647308134 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.428019224 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.617666054 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.503162984 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.633238998 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.02165647 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.447914324 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.350264467 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.126979084 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.108423628 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.41784532 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.619694361 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.415803691 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.427493373 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.428589648 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.416484794 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.024119632 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.444878638 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.549698934 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.429880489 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.427996293 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.423039893 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.418435818 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.284587592 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.100897702 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.437895091 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.436162826 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.563246662 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.431802088 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.351455631 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.935438972 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.423011763 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.418315133 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.193876594 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.451931674 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.539533135 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.931087719 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.680569068 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.430424155 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.431117247 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.730667258 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.461368039 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.419458714 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.425070107 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.427157225 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.454243193 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.45266328 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.430399544 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.612504327 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.800115282 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.993236057 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.180718136 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.997286709 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.395633321 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.423246988 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.327868115 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.886784905 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.354010452 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.080162358 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.617336598 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.907225894 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.377703103 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.643195361 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.680607738 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.240599073 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.439158807 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.650163911 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.375196972 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.425281726 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.439103402 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.631609596 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.454170893 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.427795585 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.357617352 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.717689931 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.693040725 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.436285456 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.507608673 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.888484001 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.421317666 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.226404695 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.427046597 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.794331123 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.629630387 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.968845746 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.816369324 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.431310302 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.439376493 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.933513015 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.424876999 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.951656341 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.057967141 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.449875544 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.649513525 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.362293836 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.433711991 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.433081405 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.418112108 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.787445461 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.427315272 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.686387031 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.4341892 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.357618874 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.436081623 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.981318898 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.305609466 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.427638525 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.423334221 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.196460452 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.431251572 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.736872009 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.438749585 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.289350587 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.453223043 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.359906403 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.357486718 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.118024217 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.433520873 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395568356 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.936551989 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.435149522 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.434327798 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.43291954 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.281031445 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.683175226 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.439458937 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.030230609 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.677037068 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.423582467 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.447314422 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.525097823 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.425718695 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.413634626 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.307680052 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.661536203 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.443485379 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.67067898 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.401497393 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.332878738 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.505164433 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.637103614 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.307240342 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.437457642 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.694571333 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.162686088 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.445643456 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.187060522 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.469371628 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.437672289 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.452248082 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.426025213 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.453146046 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.515811503 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.437224086 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.436374995 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.43811899 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.606920798 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.428327492 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.436462221 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.441014021 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.520764154 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.146823597 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.279282844 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.200210961 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.036382726 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.206429818 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.053509082 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.466036519 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.428326489 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.42790494 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.362887918 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.578541695 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.956965752 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.703082093 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.547269025 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.428691645 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.457392683 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.428254648 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.436018237 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.66611118 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.703442111 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.406409427 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.430194565 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.225678642 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.319363232 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.440972152 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.640304616 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.945300466 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.003060944 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.554816042 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.429297967 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.899187468 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.703697299 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.521617455 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.429682371 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.02872406 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.435630085 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.824115287 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.461919424 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.429697937 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.584506139 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.439542897 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.117029727 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.46743398 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.585553081 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.203903752 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.591279593 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.694574593 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.870078596 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.449553275 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.040230457 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.176590671 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.70293989 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.501447913 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.441513462 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.550486979 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.577254961 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.441436843 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.327186396 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.431627544 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.281097916 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.140633683 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.441917807 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.048276892 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.721596062 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.428277306 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.436267585 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.462508581 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.440179513 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.657250074 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.154911468 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.665043558 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.443455002 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.441318317 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.007143609 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.0427381 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.463819587 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.367095292 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.436795391 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.69047943 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.696862982 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.455123167 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.885627693 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.143014375 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.992997349 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.415623634 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.455045637 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.436094384 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.166512732 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.053076035 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.320835496 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.958556276 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.101868824 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.433375585 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.716973404 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.439065431 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.441124627 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.716888892 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.437039487 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.447993501 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.453588443 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.041449682 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.248538102 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.441264258 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.720055092 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.378179796 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.662112916 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.506139708 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.369838344 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.436725555 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.621294499 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.434845483 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.553828185 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.446435121 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.431474624 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.468731494 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.175776211 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.726041936 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.440917724 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.4341372 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.427403803 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.445074184 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.538685895 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.708636516 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.44023231 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.130687739 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.789570237 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.693419431 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.448847113 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.421908027 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.439234664 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.435610788 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.159854824 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.455460842 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.436644583 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.005407693 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.437842945 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.456300276 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.440390048 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.652222787 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.64916738 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.440692429 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.456007919 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.446236893 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.459228513 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.337129869 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.208555167 seconds)
  done (took 1688.302334175 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.46704667 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.478214287 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.47362833 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.539577875 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.496875564 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.57722236 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.494904286 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.454585599 seconds)
  done (took 53.328983651 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.43631632 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.600283165 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.46911893 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.448600756 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.452330742 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.442947271 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.917545825 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.459536899 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.446737019 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.447606863 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.447246039 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.439647527 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.130051408 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.451735104 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.449858921 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.42648447 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.447850773 seconds)
  done (took 67.26638221 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.441593983 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.589838642 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.553650147 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.442387846 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.728948107 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.456098575 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.575369577 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.471449013 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.437671616 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.562230459 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.10572117 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.487627252 seconds)
  done (took 81.201447614 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.44758586 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.447075001 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.44751053 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.446296385 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.446321323 seconds)
  done (took 8.583091481 seconds)
done (took 2124.251672281 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.685611737 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.155271688 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.099383225 seconds)
  done (took 5.602977887 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.586503164 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.635878231 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.818257725 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.795091367 seconds)
  done (took 8.183702835 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.718725532 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.821835426 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.626166351 seconds)
  done (took 6.514091171 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.904182217 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.455493601 seconds)
  (7/14) benchmarking "20517"...
  done (took 6.4441065 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.441033222 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.446676668 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.445775862 seconds)
  done (took 20.682236025 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.444746917 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.446495727 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.444016995 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.445621718 seconds)
  done (took 7.128868194 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.418802904 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.155147769 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.425706955 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.442439487 seconds)
  done (took 18.788963004 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.189649468 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.202047132 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.187103382 seconds)
  done (took 7.927521994 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.442481502 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.286636325 seconds)
  done (took 10.077260948 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.735996756 seconds)
  done (took 3.085348947 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.575316484 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.771008145 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.507916644 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.409617019 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 4.775899098 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.48538351 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.153340072 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.721971828 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.387282496 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.746504459 seconds)
  done (took 31.883468649 seconds)
done (took 138.720342689 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.381531837 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.46183031 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.642788887 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.356519868 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.672719625 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.643558404 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.665075586 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.323383088 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.864109245 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.852573873 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.35716367 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.674473578 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.607562441 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.462741261 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.606991618 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.466283246 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.674459854 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.421651497 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.036887423 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.238095984 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.662970041 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.98962892 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.189194229 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.009516504 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.676409282 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.596651392 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.568652908 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.468295747 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.210147092 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.586725777 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.596242937 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.40990724 seconds)
  done (took 194.725841541 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.445012203 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.443187193 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.442873379 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.443698993 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.45739264 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.444112154 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.444973565 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.444220694 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.478022922 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.445213309 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.444418472 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.460627836 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.462982283 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.461434393 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.443892886 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.444380207 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.453793368 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.443525929 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.443677213 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.468526906 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.444418662 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.444722296 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.461122067 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.445005254 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.44681061 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.451798229 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.445110774 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.444495993 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.445427831 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.458818074 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.455438278 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.443899099 seconds)
  done (took 207.75603754 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.444895115 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.462883377 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.445991666 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.444787747 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.468590662 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.446693235 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.447598389 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.449045343 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.445632838 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.475123639 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.445697017 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.463341853 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.446868824 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.462379434 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.445870301 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.464559164 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.444718854 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.456727926 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.446223362 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.464108955 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.449750044 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.447752231 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.447753899 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.46697946 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.447458312 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.463835196 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.462499239 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.447449451 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.474468568 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.452859802 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.446376364 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.463817013 seconds)
  done (took 207.898601076 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.644270157 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.454955039 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.45574351 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.388153967 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.455115906 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.45547703 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.451801869 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.653619598 seconds)
  done (took 15.316471165 seconds)
done (took 627.055095722 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.857261486 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.564627676 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.673722066 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.475493006 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.290604808 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.494015448 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.474883037 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.652106494 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.40616406 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.671851798 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.768746019 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.491537342 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.908930481 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.47513881 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.738308202 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.584176096 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.585845242 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.652737826 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.79775026 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.060093879 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.750618864 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.947824254 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.674414668 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.394269996 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.923938449 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.963029834 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.241201449 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.572483911 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.493315354 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.807443396 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.259948351 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.487209711 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.54785994 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.541147926 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.598696253 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.585397044 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.464596125 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.545820939 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.682041305 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.727840292 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.081758929 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.217979842 seconds)
  done (took 98.489983474 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.438203203 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.438717335 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.43866582 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.439855986 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.440750831 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.440521456 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.439127769 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.438739775 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.439583879 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.440403633 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.439085148 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.441846694 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.439746949 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.441742957 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.440144969 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.438875974 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.441872662 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.443594042 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.441581682 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.440106028 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.440490947 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.439697724 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.441221201 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.440406343 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.44070948 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.440517609 seconds)
  done (took 38.805991041 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.4590408 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.711914398 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.88024769 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.465070372 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.460637174 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.462586035 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.541659271 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.464463631 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.463085373 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.46312893 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.632080143 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.464321942 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.493888861 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.912653984 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.463449205 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.461543864 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.461302508 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.461017208 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.720979323 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.469522962 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.561344485 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.462571411 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.54116103 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.47088016 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.480772423 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.461551495 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.466174766 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.992200784 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.482452026 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.631526009 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.305426195 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.545896257 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.937184121 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.918932693 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.295016328 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.471563552 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.46152403 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.636286924 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.463760138 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.460594216 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.541548065 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.462419402 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.894106424 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.090165969 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.483324443 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.462974499 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.006071596 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.654862567 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.718262717 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.479325222 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.917645205 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.467079749 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.464412254 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.464245877 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.716149742 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.472686391 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.461859486 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.996617655 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.48942143 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.543361067 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.46495404 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.463171335 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.72757404 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.464334749 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.718924196 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.465075403 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.471321444 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.484333196 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.89167864 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.466281529 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.110170425 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.483138843 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.463821326 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.634148764 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.717559558 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.045362088 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.493374587 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.731516645 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.95674113 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.561649456 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.468376973 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.976062535 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.565970504 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.468674925 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.468430468 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.465537145 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.465327346 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.517014422 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.542651886 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.039778927 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.122109848 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.017267093 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.566701164 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.478370846 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.465625881 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.998380658 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.487967559 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.46686616 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.88988148 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.105796033 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.485391809 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.473491849 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.116068155 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.487332287 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.546082963 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.472499738 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.896231927 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.4678968 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.518163998 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.467883212 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.472555301 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.490265937 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.54856988 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.47152127 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.468589192 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.080828293 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.663807503 seconds)
  done (took 191.629069173 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.461786809 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.478340223 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.460636763 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.478054149 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.46030636 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.469644501 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.459336577 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.460483889 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.466581002 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.460805348 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.461203863 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.46121622 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.462078195 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.469159994 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.473485518 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.468319135 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.072955862 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.463168421 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.462313376 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.462106151 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.266202607 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.471639873 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.465423842 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.46155368 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.464178616 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.464279266 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.472367842 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.46453076 seconds)
  done (took 155.811988232 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.470968972 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.050771398 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.488612003 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.604722107 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.492052259 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.468048323 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.603316192 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.528450902 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.490065824 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.467368538 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.468027155 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.780969396 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.470926553 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.014043473 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.67792983 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.626147836 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.014965647 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.498218847 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.468162404 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.468645751 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.607992924 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.474239864 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.781270091 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.061615912 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.494777189 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.051553053 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.456815592 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.472373211 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.469002594 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.065050133 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.496356352 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.789038907 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.553859316 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.534468854 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.075555493 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.021446549 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.021990565 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.630084517 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.478841736 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.471077055 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.469714944 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.453730674 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.072047786 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.499027504 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.472740716 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.058919461 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.500343219 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.47379989 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.477712196 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.469443358 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.532952269 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.556145032 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.816166286 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.087652773 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.578986379 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.485926497 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.607917262 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.850765865 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.477681831 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.016421853 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.463197052 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.076120922 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.501850831 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.455244682 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.472776854 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.476947504 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.627864595 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.611742691 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.010680412 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.491749844 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.005249673 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.648013734 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.471302358 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.472499698 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.474988317 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.077345404 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.042800449 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.656090075 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.612038882 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.675848673 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.461457965 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.473065967 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.458048591 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.553752439 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.474108397 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.07872622 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.035601299 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.493822752 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.475998313 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.475717439 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.477407443 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.657940961 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.098727518 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.583007491 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.996813182 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.818813942 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.808649419 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.485076813 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.537944603 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.501360196 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.802148931 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.486144837 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.537063739 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.922953858 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.803869242 seconds)
  done (took 175.313911568 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.724808406 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.736891078 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.574127954 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.61421177 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.099776703 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.04205535 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.782930317 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.627632826 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.591414388 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.747630371 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.684174742 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.57446061 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.650094578 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.553749598 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.237156768 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.565422207 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.593768393 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.632165544 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.595450425 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.524870326 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.146036143 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.772553552 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.65375866 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.437352883 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.57860435 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.302798204 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.057731259 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.174975359 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.660044592 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.85496415 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.017249379 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.617402888 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.470466799 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.20893169 seconds)
  done (took 70.481790937 seconds)
done (took 731.896139154 seconds)
SAVING RESULT...
DONE!
