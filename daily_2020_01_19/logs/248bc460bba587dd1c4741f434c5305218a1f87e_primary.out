cset: moving following pidspec: 32350
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.384254226 seconds)
loading group "string"... done (took 0.580172439 seconds)
loading group "linalg"... done (took 7.202257987 seconds)
loading group "parallel"... done (took 0.16140299 seconds)
loading group "find"... done (took 1.140358566 seconds)
loading group "tuple"... done (took 1.747469383 seconds)
loading group "dates"... done (took 1.226442925 seconds)
loading group "micro"... done (took 0.216289584 seconds)
loading group "io"... done (took 1.015374086 seconds)
loading group "scalar"... done (took 37.478054462 seconds)
loading group "sparse"... done (took 11.816553835 seconds)
loading group "broadcast"... done (took 0.943903361 seconds)
loading group "union"... done (took 12.144387754 seconds)
loading group "simd"... done (took 4.488836507 seconds)
loading group "random"... done (took 9.038281756 seconds)
loading group "problem"... done (took 1.816362893 seconds)
loading group "array"... done (took 20.813175038 seconds)
loading group "misc"... done (took 1.682416717 seconds)
loading group "sort"... done (took 3.32481828 seconds)
loading group "collection"... done (took 17.296530698 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.523686109 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.126401511 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.119745819 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.120426517 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.149289509 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.113566415 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.125885828 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.08705418 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.783316217 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.150103524 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.117678405 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.431141524 seconds)
done (took 5.153642013 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.176577605 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.084280263 seconds)
    (2/2) benchmarking "String"...
    done (took 0.084348567 seconds)
  done (took 1.301196275 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.066302321 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.125032292 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.068441257 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.06847309 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.068778733 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.067714433 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.067469173 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.067481019 seconds)
  done (took 1.66690504 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.074598342 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.070951755 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.066808157 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.069740175 seconds)
  done (took 1.413781491 seconds)
done (took 5.767343526 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.788397975 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.207874025 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.189419489 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.414252373 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.132305215 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.160447056 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.636458412 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.310950502 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.19230726 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.082418258 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.110296187 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.330596773 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.110226364 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.641867607 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.079572933 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.091794634 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.139447568 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.401285588 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.068718915 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.083700065 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.090280858 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.129686406 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.086290635 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.076156412 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.147813959 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.069538891 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.137649082 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.081959149 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.068240607 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.214477072 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.17381407 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.650402627 seconds)
  done (took 10.268724228 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.097487837 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.098357906 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.070201574 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.124580818 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.09799722 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.071173714 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.072333613 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.06896262 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.087830136 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.129463706 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.090007869 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.103020096 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.066916507 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.070179131 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.086099834 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.204452488 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.081590356 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.083659036 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.072012223 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.077029102 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.106148937 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.079774414 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.078708802 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.078324058 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.1307861 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.182254877 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.098090673 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.098752976 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.067951505 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.081679482 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.117094473 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.126332318 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.067057942 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.067721647 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.125884817 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.096297824 seconds)
  done (took 4.620102138 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.014347797 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.145799976 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.091676717 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.136207804 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.066436224 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.110432631 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.066702967 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.08209129 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.210219511 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.4792827 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.598396314 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112673834 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.105880952 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069566299 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.072385415 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.06841353 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.511953861 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.096921109 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.108323369 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.083374415 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.072160308 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.070323705 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.363166742 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.071076859 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.065373204 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069827625 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.05875316 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.126864652 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.06960059 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.961542678 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.128808407 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068385419 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102293098 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.168881121 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.089938408 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.276490605 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069871226 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.065644914 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.155499929 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.071910764 seconds)
    (40/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.086010259 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.092936215 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.068064103 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.085270036 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.105229874 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.114266569 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.066813672 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068541804 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.166693922 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.066970518 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.080847848 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.645211055 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.154313718 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.077405025 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.065877737 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.255662522 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.089979144 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.071035398 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.066751984 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.182165392 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.1306789 seconds)
    (61/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.066187417 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.069240332 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.068274008 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070633878 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.070725497 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.380631058 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.069750125 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.999112679 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.07161681 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.078570418 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.070211414 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.070976699 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.074276386 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.074129442 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.088739686 seconds)
    (76/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.065110171 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.067665126 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.076190728 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.067148092 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.067382854 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.067976567 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.085162147 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.380338102 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.068470163 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.069322354 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.066794814 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.090413964 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.09816886 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.068049749 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.067049055 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.10149997 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069729841 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.067399928 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.108405052 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067670486 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.187188094 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.071450336 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.115482379 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.067764182 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.090730852 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.066998693 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.097543773 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.073599469 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.100443376 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.081969919 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069270397 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.424593326 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.066022136 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.066125233 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.069056503 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.067273105 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.069192981 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.067990384 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.080036532 seconds)
  done (took 21.462256734 seconds)
done (took 38.496414214 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.235934342 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.08045062 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.075219355 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.078354955 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.075537614 seconds)
  done (took 1.770537897 seconds)
done (took 2.976205845 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.124789003 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.102490139 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.06644475 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.098988987 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065872318 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.103331042 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.102949049 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.083120734 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.102198864 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.065987415 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.099065032 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.065611853 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065349915 seconds)
  done (took 2.368970869 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.085257419 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085357537 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071670787 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.084941034 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065329819 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.084515144 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.083257966 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.090264621 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082900955 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.074460845 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065584547 seconds)
  done (took 2.070802135 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084472838 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.086312278 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071688848 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083889137 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064649151 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083753197 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.083320329 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.087328035 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.083453031 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.075420051 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065293328 seconds)
  done (took 2.063835358 seconds)
done (took 7.69501097 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.078832964 seconds)
  done (took 1.267935764 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.594456428 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.096730251 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.083977038 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.112784527 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.191176681 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.120140688 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.273226408 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.088319252 seconds)
  done (took 8.932915819 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.104035994 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.070367778 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.069910188 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.072337344 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.072565573 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.070230226 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.069807426 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.069963339 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.072382889 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.072980863 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.073734349 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.070191163 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.070377283 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.07207569 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.070962641 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.073533251 seconds)
  done (took 2.43769506 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.092770201 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.092463592 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.074477964 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.076326633 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.073404171 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.073019763 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.075037698 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.074764707 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.071648867 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.073489432 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.075754409 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.07490364 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.07311592 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.065623247 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.074620459 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.076325983 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.072146003 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.074728471 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.075877722 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.076559711 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.075709862 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.065826635 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.072962492 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.075264281 seconds)
  done (took 3.102483184 seconds)
done (took 16.937159034 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.11603559 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.072614543 seconds)
  done (took 1.385220215 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.082655711 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.084460362 seconds)
  done (took 1.371507991 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.083612765 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.066697601 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.092049801 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.079596398 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.067665631 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.066786515 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.089366403 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.067698701 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.067130702 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.067190609 seconds)
  done (took 1.947822336 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.0684915 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.078321278 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.071774983 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.082664957 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.074833885 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.065147492 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.073611632 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.068594167 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.078545715 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.063776231 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.072471165 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.083777513 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.072567935 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.085848304 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.072922089 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.069719284 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.072402911 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.068614669 seconds)
  done (took 2.526941158 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.066750176 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.068154619 seconds)
  done (took 1.342324245 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.067426083 seconds)
    (2/7) benchmarking "second"...
    done (took 0.065129963 seconds)
    (3/7) benchmarking "month"...
    done (took 0.06734107 seconds)
    (4/7) benchmarking "year"...
    done (took 0.067174602 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.064800409 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.063884784 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.065284056 seconds)
  done (took 1.664769009 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.378767154 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.114601776 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.313789324 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.072719838 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.083521672 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.260375619 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.067105751 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.072166255 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.07211899 seconds)
  done (took 2.683048709 seconds)
done (took 14.13119028 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.081340897 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.087147183 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.097811324 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.377204636 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.092817224 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.067489406 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.115421617 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.189173424 seconds)
done (took 2.328863853 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.215402237 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.636886635 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.405628831 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.206409511 seconds)
  done (took 2.45750382 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.345226933 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.089630575 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.060373214 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.068114164 seconds)
  done (took 1.781325999 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.067449523 seconds)
    (2/2) benchmarking "read"...
    done (took 0.070885555 seconds)
  done (took 1.353109767 seconds)
done (took 7.023737732 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067891026 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.068054515 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.065011324 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.067592956 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.065155702 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.06475975 seconds)
    (7/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.084391929 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.064526111 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.067522834 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.067210694 seconds)
    (11/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.069362727 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.067534618 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.067184545 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067252895 seconds)
    (15/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.067450746 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064708885 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064899112 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067182869 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.064863223 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064940482 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064474461 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06710844 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.06472725 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.064920955 seconds)
  done (took 2.861035299 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.085851251 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.067802374 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.073397929 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.072220529 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.070598195 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.072769982 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.072251046 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.067668571 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.072286325 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.069762472 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070328936 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.070639378 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.069562904 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.070544077 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069054563 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.071018024 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.072391173 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067074285 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06962904 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.0704494 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.072391823 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067371722 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.070741728 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072026959 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.070045308 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071910599 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.06924832 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.06712467 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072313053 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.0711117 seconds)
  done (took 3.353121609 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.070751583 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.064797401 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.065834546 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.071714921 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.065172254 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.066137554 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.064660432 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.065635642 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.065740958 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.064235692 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.066234031 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.064869788 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.065037354 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.065392059 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.065672433 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.068586892 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.080579498 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.065242864 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.064824225 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.065055533 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.068000031 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.064495305 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.064749872 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.064373326 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.064570629 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.064058873 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.065441171 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.064564408 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.065280418 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.064628537 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.068107598 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.068907627 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.064785377 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.071410189 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.068269919 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.177502139 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.069234335 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.064517376 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.064940873 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.064178671 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.064051421 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.064650303 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.064487079 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.071911937 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.064363236 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.066157561 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.064829657 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.065290376 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.065768938 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.06674037 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.064533484 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.064552052 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.066512444 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.065632402 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.06864431 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.064161865 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.065747342 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.06444048 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.065694531 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.065344395 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.0642424 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.064460848 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.067468189 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.065458524 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.079840221 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.072106071 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.064945743 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.066539715 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.065482816 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.067458856 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.066224396 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.078494156 seconds)
  done (took 6.129933571 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.092421494 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.088130177 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066177577 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066582977 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062731494 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.065275195 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.070631662 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065188927 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066315655 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.082545469 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065329731 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066697594 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066694292 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068737908 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.065331717 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066667051 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.073530406 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063200053 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.065813339 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.069385716 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065653162 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.070735352 seconds)
  done (took 2.769081003 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.154516443 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.07042702 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.106454432 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.076810547 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071234326 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.076444653 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070938037 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070878348 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071263954 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.0691246 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068887771 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071179739 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071793078 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068562866 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068589279 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068693777 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071255656 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068282506 seconds)
  done (took 2.62452618 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.078541809 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.067000924 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.088196406 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06651513 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.066898477 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.069505444 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071406291 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.075539481 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.069368417 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.06703941 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.075477054 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069963389 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.069673164 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067022114 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069511061 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.06720413 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.069641282 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067447739 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07567496 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071479855 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071435092 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.075027437 seconds)
  done (took 2.800077979 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08067877 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069253942 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.082245701 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.069219839 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.06325316 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065393561 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.071315243 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.066418703 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.071551997 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.06892913 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066748707 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.065658573 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.069535611 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066533326 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.069627811 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066562622 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068671778 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067287834 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068935279 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062264314 seconds)
  done (took 2.612374578 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.087581946 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.069281069 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.068700815 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077189647 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.068778476 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.068684744 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076430248 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.068910504 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.068945859 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.089358178 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.068793797 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.068460908 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076766125 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.073911167 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.069265835 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.076028664 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075800903 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.076235648 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068872311 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.068445006 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.08940064 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.068730911 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.076109419 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.069143252 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.068808007 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.06862137 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.068768264 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.073496054 seconds)
  done (took 3.283030288 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067339841 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.067130141 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.064415482 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.064240616 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.064186181 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.064927989 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.06476868 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.064218094 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.067510141 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.064568229 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.066664186 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.067258484 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067434991 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.067361812 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.067430918 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.066487504 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067521873 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.064644461 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064544886 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065094016 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.06704767 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067365387 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.067026014 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.064691659 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064280512 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.067036001 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.0645226 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.064192608 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06669633 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064510399 seconds)
  done (took 3.212180449 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.076036781 seconds)
    (2/2) benchmarking "in"...
    done (took 0.074641736 seconds)
  done (took 1.388773035 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.064516829 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081613166 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.063896247 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.071047257 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071100368 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067927355 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.07429004 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070069646 seconds)
  done (took 1.7983139 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.083349786 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.078610052 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.069143175 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.079732496 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.078233663 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.084558565 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.135900463 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.06806094 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.074169571 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.065399125 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.080945862 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.066956534 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.073793772 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06749928 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.073788412 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.074194691 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.064822035 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.073511135 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.069493431 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.065868126 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068651005 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076018792 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070893277 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.062842373 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.069229567 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.090203061 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.078874276 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.067175155 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070545719 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.075253591 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.073622958 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.061492642 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.067783175 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.068097298 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.065340131 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.077615387 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082409778 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070562454 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.076195287 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068608533 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.077140613 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.063014137 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.072775286 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.074867955 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077864174 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.068113117 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.068325118 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.062368576 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.065410487 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.07006924 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.062758227 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070693417 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.062373681 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075035593 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.071394176 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078808968 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.066639384 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.069464511 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.070457555 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.070919585 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.07472538 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.070026716 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070519983 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.067714013 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.077769389 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.07227824 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076607333 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.06336402 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.061895271 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.065954995 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.077710182 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091095978 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.0739428 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.068737853 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068705853 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.065543796 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071362659 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068859062 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07350635 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.075392637 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.068402716 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073538343 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075404132 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068655741 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.07050656 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.075488507 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.066534519 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.070711733 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.065637991 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084593514 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.066816698 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.066169863 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.066229271 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.078103151 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.071064262 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.067282218 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.065728826 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074776402 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.061581059 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.068043338 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068121884 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067940438 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.077423155 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071629321 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.07131758 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.075910223 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.074882728 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067018323 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.069819435 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.063786488 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067584157 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.065680986 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.073973015 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.061039509 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069628759 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.192625999 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.069816348 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.078157953 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.067295488 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.068673297 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.077323132 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.074441227 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.066687562 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.064881103 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.071682004 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.068811319 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072304726 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.076481463 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.067099826 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.063391204 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.062935117 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.071770863 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.067641751 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.071881381 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.072735765 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.070833851 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.062697871 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.065734442 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.072785603 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.076601811 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.06780173 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.068627479 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.074008734 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.070041569 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.067873843 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.075486626 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.070941248 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.068105003 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.073884177 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.069552549 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.063203859 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070855126 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.072124597 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.066304056 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.072108181 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071573153 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.071093051 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.06865351 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066488898 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.074985297 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069368247 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.067378631 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069216759 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.066154584 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.078080817 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.070230217 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.062594949 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.064595808 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.07670641 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.066563772 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.067068425 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.06686177 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.070886369 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.069116314 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.065469267 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.067192516 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.07015824 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.077742579 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.071832164 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069067859 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.073968102 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.07929716 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.067860298 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.070480466 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.067344852 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068773011 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.067732245 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.076082934 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.073851631 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072307904 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.070378488 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.06494362 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073010559 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075824514 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.067616609 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.065384613 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.067227115 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.071789276 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.073904714 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.071896823 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.068536307 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066311125 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068407443 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071006312 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.070701217 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.067934632 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.06735694 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.073635615 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.066229038 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.074561038 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069078654 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.078302075 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071347293 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.062493382 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070660423 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065658547 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.073393764 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.06241316 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.065414313 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.066087298 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.067434114 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.066489916 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.069010719 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.060759993 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073335337 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.07379171 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.067299474 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.066662468 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.066038714 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073405966 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.068380075 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070078003 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.070216989 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.072664015 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.204192544 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.068057875 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.072124861 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.07937798 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.069236707 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.062070578 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.074504002 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.066762479 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.067829965 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.067668505 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.066257081 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071601862 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.076176398 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.075516099 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.062841359 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.070424165 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.06652905 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.06762211 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.063284074 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.072983183 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.071225785 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.069647733 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075037162 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069566744 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.06808006 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073049597 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.068325128 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.069137641 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.069162412 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071262966 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.069867243 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.069657588 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.06690008 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.071217287 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.067125142 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.065577228 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.071103985 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.067785049 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.068844479 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074428116 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.067403551 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06791474 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.070881163 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.068549124 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069234917 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.067755399 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.066975597 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070984019 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069145786 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.068190699 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.070967368 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.062522226 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075676783 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.067697244 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075878224 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.068053728 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.064893065 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.074638175 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.071228422 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.073653832 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.069153283 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.068814518 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.068847513 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.067258409 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.072088485 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074893847 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.065995171 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.078376691 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075802653 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068861035 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.070362308 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.068242626 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.06898313 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.066738524 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.068998427 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.068388889 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.068489924 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.067512179 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.072626422 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.070919479 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.068619534 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070135551 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.069558884 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.068505516 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.068851074 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.06217457 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.067305192 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.067624217 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.067514157 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077525292 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.068436492 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.067774436 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.067624552 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069210282 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.067117074 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.06493584 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.075501004 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.076313874 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.06873961 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074733819 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.066741371 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.069063356 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077904915 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.061414114 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.065658678 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.065317246 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.065318902 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074588571 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.067631765 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.076055516 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.06750378 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.066201788 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.063967179 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.06760556 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.065315975 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.06144208 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.064518744 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070306943 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.066137862 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066123985 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.066583973 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.199886664 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071185527 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.078636802 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.068726885 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.069586987 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.06927254 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.065720019 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.068523227 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.067952884 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.07148808 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.06974767 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.066338906 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.065531237 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.068263099 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.069048004 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.069648699 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.070465147 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.069640054 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075377002 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068248513 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.071430725 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070707595 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.063421538 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.071013931 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.067732277 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.06716904 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.067120973 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.071468643 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071640679 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069141095 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.076696326 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.068035202 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069278998 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068507914 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.065401352 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.067912969 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.067126591 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.067740986 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.066947269 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.069233841 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076224837 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.065823372 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.070778478 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068265943 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.068087901 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.074892733 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.068516684 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.071302222 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.074703482 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.068437316 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.070404651 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.076371707 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.07365256 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071396492 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068079113 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.069875138 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07502886 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.066785047 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.074509119 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.068616455 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.068143956 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.069716322 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.065656397 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06739148 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.067605542 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067237533 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.073760042 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.069475155 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.067043086 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.066949307 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.065555354 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.069336128 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071622436 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076143805 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.071099405 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070972478 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.063005431 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.064260888 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068511259 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.066255796 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.069494695 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.070505302 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073632123 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.069857043 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.068532531 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.066905246 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.076700982 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073255414 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.071525384 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.066377078 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.071712154 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.068914895 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.070765083 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.068785769 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.068081057 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069179518 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.071772538 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.069475811 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.068578147 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075295594 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.071908091 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069376397 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.069462622 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.068680449 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.068019235 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.062335116 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.067733972 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.069349818 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072368493 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.069852986 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067527917 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.077853755 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.065081517 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.067384541 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069898842 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065757546 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.070889157 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.062321873 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.068480255 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067543358 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067526106 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.061606179 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.066512118 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.197221612 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.07092704 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.068464165 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.064003451 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079729193 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.07750294 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.071954282 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067751828 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067035818 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.064386568 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.062971014 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.067575975 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069388949 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.070756591 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.078343608 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.067515396 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.067073623 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.062876522 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068209003 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070768653 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.071461757 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.065538897 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.062550243 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.067064988 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.071862744 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.073720389 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067094959 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.068091989 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071392593 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.07020845 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.066039519 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071284935 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.064374249 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.07196331 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081011305 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.069225148 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068688309 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.074826925 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076601699 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.068602409 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.06318659 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.068019858 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.071263188 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.068263254 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.068673316 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.068835519 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082632526 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071010867 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066986428 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.067857179 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.07075709 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.067557328 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.076391531 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068517852 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.068234251 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.072644319 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.069781803 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.076276026 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070343759 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075499133 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.071089555 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.07113005 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.067236316 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068497464 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.066239296 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.066816203 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.070242883 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.068829667 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.072411254 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.075429391 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.067047463 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.078775946 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.076591109 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.069070253 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.06417968 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.067530394 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.067458232 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.062850952 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.068981248 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.066045427 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.066108385 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.066005849 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.066844814 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.069207271 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074244082 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.069118737 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.068446752 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.067786921 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.062157536 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.070693095 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.070720294 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068873348 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.064652345 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.068077895 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.068511444 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.072766627 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071524942 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.066139403 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.069821809 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.069939543 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069012223 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.063488088 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.074265534 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066635586 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.069480674 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.066787149 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068126344 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.068116567 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.070779352 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.072085093 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068034303 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.06963044 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.070875242 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068589324 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.064199815 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.064013291 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.071797377 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.064460142 seconds)
  done (took 43.449835179 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.103401502 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.064129174 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063704158 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.063258003 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074807577 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064291284 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.063110776 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.064328074 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.063954305 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066433734 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.063129397 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062906198 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071527863 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.078100899 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074251889 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067509154 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063216454 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.064018335 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.062949123 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063834172 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071311433 seconds)
  done (took 2.782263406 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.074197864 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.078901918 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.076534096 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.082631244 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072505737 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.071666699 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.07665732 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071703714 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.07949261 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073587846 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.079296194 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071314185 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.073059502 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.073210222 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073611987 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071729116 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.079622704 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071772889 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.07149273 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.07622653 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071438882 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.076460031 seconds)
  done (took 2.96545362 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.068102607 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.067050045 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.069022337 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.062499744 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.066906253 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.062427422 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.070697349 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.065053301 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.07039315 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.066754719 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.066982338 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.066123247 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.068705865 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.061983497 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.067676685 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.064485542 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.108207011 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.070408247 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.066817987 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.068509537 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.063193015 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.068933974 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.062545769 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.063343322 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.066614692 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.070681441 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.067589134 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.065187645 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.066880749 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.066036998 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.067090253 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.065021675 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.068732681 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.067623172 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.065815125 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.065925269 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.06640459 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.067211085 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.06252934 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.065580164 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.067886376 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.062746633 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.067471791 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.069012403 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.065124229 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.06487644 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.069247277 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.067033819 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.062055638 seconds)
  done (took 4.617469444 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.079926047 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.109876309 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.068398841 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.089770678 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.083066786 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.07399633 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.071164242 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.090617141 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.064775063 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.065736642 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.082027708 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.07980722 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066631741 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.071264359 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.073232998 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066853341 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.06792901 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.06549459 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.070256254 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065793362 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.070241892 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.073058391 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.080678984 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.079477814 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070304731 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065718959 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065869747 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.070922001 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.078867277 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.07060918 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.070988006 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.072223886 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.081742611 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.071493449 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065913618 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.069066 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.081984319 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.067192096 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.069328382 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.064273761 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.068703122 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.071295867 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.073363968 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.082281849 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066696586 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.071392185 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066213597 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.063983727 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.079207363 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.069347846 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.074520416 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.080177996 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070736393 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.067090609 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.0708912 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.081079771 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.066628135 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.065098915 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.069518381 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.078022963 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.064400709 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.070155135 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.079645442 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.068234824 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.073395936 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.080162033 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.071812651 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.070303378 seconds)
  done (took 6.419871176 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.077631566 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.096245212 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.084619977 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.084303323 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.076619713 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.076396783 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.07653541 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.077017576 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.076592941 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.081469607 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.077257501 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.116607266 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.072107702 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.078818057 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.076745948 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.07713693 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.076917612 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.076883071 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.076802964 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076654534 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.07683208 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.084036387 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.076507238 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.084006822 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.080592741 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.072125564 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.076987014 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.076642483 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.08397656 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.076756015 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.089371729 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.076815322 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.076797846 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.08435636 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.080594368 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.07680125 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066689859 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.076560148 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.076656332 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.076623248 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.072809579 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.084199332 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.076875079 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.072140473 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.077071003 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.077143086 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.084361181 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.080795173 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.079238838 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.081395997 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.076821992 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.084049638 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076669438 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.07698937 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.084264776 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.086890603 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.084123535 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.084210249 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077080642 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.084367791 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.084019306 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.087184782 seconds)
  done (took 6.294512085 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083371607 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.075185122 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.082964233 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.06282828 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065188884 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.072776993 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066188923 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.06617016 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074932832 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.075141058 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077389209 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.07268596 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075696977 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077335519 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.072734903 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075764248 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07252614 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.073057339 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.075015338 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.072841332 seconds)
  done (took 2.810063591 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.075681752 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.085114061 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.068446632 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072748064 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.070172118 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.072828711 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.069680636 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070769712 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068173835 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070445522 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.077431735 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.077223257 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068179329 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072108669 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.077183805 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.07235639 seconds)
  done (took 2.500466307 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.085410083 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.074148941 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.081445766 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.067121591 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.068109404 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.064076138 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.067546273 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.062876485 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.06331859 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.079096156 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.067051198 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.077459019 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.066988281 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.06621034 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.063626043 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.072780601 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.063291883 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.064949432 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.066886349 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.079616901 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.070847116 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.065557178 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.070553234 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.06682506 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.070076908 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.072014501 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.066073578 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.067967146 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.064320614 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.067568267 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.070030631 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.070239713 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.064392435 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.065125724 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.066359758 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.064839773 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.066972575 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.067860335 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.07222705 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.06681167 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.06572351 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.069477601 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.066913536 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.068179454 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.063558745 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.067239381 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.063143312 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.069483788 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.065020764 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.06938042 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.066713036 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.069351785 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.067321394 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.073875434 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.069730633 seconds)
  done (took 5.10711199 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080410728 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.070800179 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062294673 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065516713 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.070982521 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.068513198 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070962787 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.068394692 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068855207 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.065845351 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068916194 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.070584757 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068616878 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070524707 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068760782 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070869563 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063320972 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.06852697 seconds)
  done (took 2.587809793 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.072680703 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067210492 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.074191885 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066769475 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.066593351 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.069625098 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063020259 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.066075749 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065947239 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.06711124 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066845918 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.06985757 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06582443 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.06950343 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.067375516 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067132159 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.069815133 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.066081871 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067344765 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063524291 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.069445748 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065424806 seconds)
  done (took 2.825327651 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.094345096 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.083796998 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.141634945 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.079864192 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.086119898 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.07286588 seconds)
  done (took 1.8978126 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091994706 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101319033 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067790414 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070935304 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077242423 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071190631 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070983357 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071225868 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079297644 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076681672 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071170234 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080039112 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079803534 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078786409 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077215707 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077033672 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071255597 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071571122 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067832618 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084976414 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071395865 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079561495 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071499984 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071023716 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071685237 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078805689 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080099591 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07705338 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071607142 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07938075 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076889494 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071206666 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079894233 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076889955 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070415325 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079332423 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071271017 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084627887 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076825788 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079008816 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070492691 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077095468 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079675773 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075758862 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079630834 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071575412 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076015705 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071492302 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071557176 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086798102 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077222397 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078808629 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079730578 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079628781 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079299301 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087159427 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077071226 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078826672 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077040842 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077585488 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079118509 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077429096 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078854486 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077518438 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077396706 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078889687 seconds)
  done (took 6.425705747 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105390937 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068605235 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071639571 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077088664 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07896624 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071190304 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071712452 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071464182 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07223488 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068190198 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109480389 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071518354 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078746724 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079361866 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071736199 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071333359 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071913011 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078437538 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067994444 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086497656 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071108995 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078668094 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078933757 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078693791 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076899101 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077152217 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071397548 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07143822 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070996423 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071546286 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075770525 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071755042 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078633014 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.0680203 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078762632 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071401358 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072101247 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075916712 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071462412 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07711026 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078850599 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084784335 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071741269 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071630499 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077107347 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071087641 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071316138 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068214637 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071337272 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068272104 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077169407 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076869727 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077047594 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07879855 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071147399 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07169978 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071121891 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07135246 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.0714931 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077145201 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078673644 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071281337 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086575871 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071757725 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071427563 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078961884 seconds)
  done (took 6.330125201 seconds)
done (took 131.059802254 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.187712911 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.165930919 seconds)
  done (took 1.694171253 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.069505343 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.100055883 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.078445525 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.130354382 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.06791157 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.101161147 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.100526641 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.079576327 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.067291507 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.067627597 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.067700702 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.069826801 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.132794078 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.068232896 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.067147527 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.069932536 seconds)
  done (took 2.689877303 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.100703583 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.162266697 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.104349946 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.067067704 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.101173165 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.074286042 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.066362934 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.076276912 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.072491066 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.066543429 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.073904251 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.071557309 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.066311216 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.071719313 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.072399238 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.07384309 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.066364708 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.073831747 seconds)
  done (took 2.817336337 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.100396548 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.0920436 seconds)
  done (took 1.548430654 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.162358133 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.13437331 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.203657869 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.35371677 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.164384887 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.149192613 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.145525502 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.144984028 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.118066881 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.140282887 seconds)
  done (took 3.069768302 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.099998669 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.154327148 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.26933801 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.11868378 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.073969685 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.095187998 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.120017715 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.08004589 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.081928749 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.081199493 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.081307831 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.077656399 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.100995035 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.074810068 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.075626303 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.077390219 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.104517492 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.074179186 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.075757996 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076736325 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.101662593 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.067041536 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.074599253 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.074451894 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.078811327 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.07858499 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.06711794 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.067026404 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.077749473 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.075817606 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.077299986 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.094263441 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.078224037 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.107065373 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.072392126 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.108285018 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.0790593 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.074943383 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.07647674 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.075172724 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.079721465 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.079215577 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.074363141 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.077840369 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.067289146 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.078288755 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.067486595 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.067908136 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.07954591 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.069146625 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.07868417 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.07780172 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.106919672 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.068576068 seconds)
  done (took 6.049357334 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.104413226 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.107915568 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072260964 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.114792292 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104013289 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073649428 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.104346404 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.097026995 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.10573901 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071713146 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069718067 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.071949023 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.083276616 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.084120381 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.116250948 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.10814622 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.074859709 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.072096922 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.108185576 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.106097344 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069761578 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098202323 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.092684954 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.104619634 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.069059558 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071702247 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069077652 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071539915 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077527964 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.07926783 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070904911 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.081753538 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.086402041 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.079522175 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068401125 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.070024351 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070122139 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.080811729 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081187165 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.080460078 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.078599231 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06912547 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069773818 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.071404369 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.071844932 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069322225 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.079828612 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.08325237 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.08003597 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.071469429 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071590782 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.070019192 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.071137683 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.081698503 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.079027406 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.081923322 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.081268963 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069985059 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070017212 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.073571001 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081836614 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080659839 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080839668 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.071488499 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.080466514 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.070079029 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081797713 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.08544092 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069916603 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.071479526 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.070449836 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071494477 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070938642 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078628421 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.079957572 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071841166 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071153881 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070170745 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.082159698 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080562549 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.0698054 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078732007 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068745733 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070434475 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071731858 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071072259 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.078768841 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.081238736 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070481038 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069817845 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.07031165 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070160684 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.068548454 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.07745653 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.080383167 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.078923615 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.078952517 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.0705041 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.078683729 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.078692522 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070655673 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.079469986 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069288016 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070395379 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.199793375 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.081990606 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.079625532 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.08075048 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.072417428 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069763115 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.079633704 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082457759 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069875418 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.080406943 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.082127205 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.081281018 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.069917529 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082910245 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070371055 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.081313891 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071319076 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080902248 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069780959 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.080725959 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070135705 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.069796001 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.070509914 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.081120184 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.074350736 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070430133 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070685312 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071587436 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.080599223 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.08434086 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072624243 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079423103 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.08034941 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.072020838 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.080118617 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070233852 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080229209 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070989904 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071185239 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068745181 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083526943 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.070195562 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.070582081 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070967163 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.08186239 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069913212 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081219016 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.080440477 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069797524 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082141886 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.082145265 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.07958173 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.082281928 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07169467 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.070355323 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069128192 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.071618485 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.07881848 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081884148 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071863419 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069852165 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.080002713 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.081678012 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.068514925 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.078665927 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079204778 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.079539163 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069973293 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.071224225 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081649172 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.082464142 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.079725145 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.079654171 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080082972 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069947199 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078888781 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079929677 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070236973 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085652785 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.0701143 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.084501991 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.080431081 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.078256477 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.08066652 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.08183754 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.081427798 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.081266329 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.084463126 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070705382 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069481429 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.080347728 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.06953615 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070723498 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.078797685 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070003786 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.06973056 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.083302986 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069169588 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.079315426 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.068402113 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.07865061 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067584688 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07029134 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083493841 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068644171 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.201118377 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.081264843 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.071812513 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.080572111 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082553766 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.079990833 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.070608263 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072550191 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.080809623 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.08097997 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.070289157 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070116444 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072505636 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.080075669 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.078842268 seconds)
  done (took 18.978831972 seconds)
done (took 38.210835729 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.212437276 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.155779675 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.175809588 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.120510972 seconds)
  done (took 2.123954158 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.119056791 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.103531738 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.094886794 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.067136619 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.100666311 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.066971098 seconds)
  done (took 1.946134125 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.317073003 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.213282006 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.190793815 seconds)
  done (took 2.11396872 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.203163575 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.191727001 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.423697146 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.265814632 seconds)
  done (took 2.589217396 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.146913078 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.090686652 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.069045904 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.08603408 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.135976567 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.163094596 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.102370302 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.127685543 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.080552559 seconds)
  done (took 2.448501572 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.151128747 seconds)
done (took 12.772333902 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.111025515 seconds)
    (2/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.07448334 seconds)
    (3/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.187672641 seconds)
    (4/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.075781207 seconds)
    (5/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.211052546 seconds)
    (6/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.17465695 seconds)
    (7/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.26331851 seconds)
    (8/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.17685399 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.084497823 seconds)
    (10/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.096633167 seconds)
    (11/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.174439227 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.080139529 seconds)
    (13/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.075840681 seconds)
    (14/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.188832225 seconds)
    (15/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.075758811 seconds)
    (16/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.100402519 seconds)
    (17/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.11810549 seconds)
    (18/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.076251927 seconds)
    (19/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.147379153 seconds)
    (20/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.075137094 seconds)
    (21/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.162822517 seconds)
    (22/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.110869969 seconds)
    (23/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.078588912 seconds)
    (24/309) benchmarking ("sort", BigInt, false)...
    done (took 0.191243254 seconds)
    (25/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.181647248 seconds)
    (26/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.213152704 seconds)
    (27/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.16675474 seconds)
    (28/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.080133545 seconds)
    (29/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.187977975 seconds)
    (30/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.092021373 seconds)
    (31/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.190718211 seconds)
    (32/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.155236614 seconds)
    (33/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.144419169 seconds)
    (34/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.112849402 seconds)
    (35/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.074018302 seconds)
    (36/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.163801664 seconds)
    (37/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.076302228 seconds)
    (38/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.145750791 seconds)
    (39/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.079666276 seconds)
    (40/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.155379741 seconds)
    (41/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.198873865 seconds)
    (42/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.076043288 seconds)
    (43/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.182690925 seconds)
    (44/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.088845211 seconds)
    (45/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.091652252 seconds)
    (46/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.186047431 seconds)
    (47/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.090776243 seconds)
    (48/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.180497242 seconds)
    (49/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.052532241 seconds)
    (50/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.069343966 seconds)
    (51/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.093071253 seconds)
    (52/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.096429567 seconds)
    (53/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.158122435 seconds)
    (54/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.184345644 seconds)
    (55/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.07428324 seconds)
    (56/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.078090578 seconds)
    (57/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.221315616 seconds)
    (58/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.121067358 seconds)
    (59/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.091904313 seconds)
    (60/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.069162684 seconds)
    (61/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.14358873 seconds)
    (62/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.078448986 seconds)
    (63/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.079574905 seconds)
    (64/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.204166849 seconds)
    (65/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.207172889 seconds)
    (66/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.09194684 seconds)
    (67/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.149298096 seconds)
    (68/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.074810286 seconds)
    (69/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.06752943 seconds)
    (70/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.06653182 seconds)
    (71/309) benchmarking ("sort", Int64, false)...
    done (took 0.067902673 seconds)
    (72/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.092346017 seconds)
    (73/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.112094439 seconds)
    (74/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.074687034 seconds)
    (75/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.111983191 seconds)
    (76/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.051991299 seconds)
    (77/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.053205375 seconds)
    (78/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.196046715 seconds)
    (79/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.066982671 seconds)
    (80/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.054552665 seconds)
    (81/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.093746922 seconds)
    (82/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.305082258 seconds)
    (83/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.197546655 seconds)
    (84/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.077919214 seconds)
    (85/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.142806907 seconds)
    (86/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.103261127 seconds)
    (87/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.07360552 seconds)
    (88/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.053399977 seconds)
    (89/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.052982325 seconds)
    (90/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.078029812 seconds)
    (91/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.067682259 seconds)
    (92/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.068577659 seconds)
    (93/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.129075443 seconds)
    (94/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.07493557 seconds)
    (95/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.052940436 seconds)
    (96/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.073821017 seconds)
    (97/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.1645127 seconds)
    (98/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.182868241 seconds)
    (99/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.052397332 seconds)
    (100/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.083105813 seconds)
    (101/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.147973488 seconds)
    (102/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.054562973 seconds)
    (103/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.079088902 seconds)
    (104/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.077837241 seconds)
    (105/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.334833643 seconds)
    (106/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.076257738 seconds)
    (107/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.093906568 seconds)
    (108/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.077763567 seconds)
    (109/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.08158576 seconds)
    (110/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.089490417 seconds)
    (111/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.09188261 seconds)
    (112/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.052484103 seconds)
    (113/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.067577907 seconds)
    (114/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.091761213 seconds)
    (115/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.10186177 seconds)
    (116/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.08211017 seconds)
    (117/309) benchmarking ("sort", Bool, false)...
    done (took 0.139119873 seconds)
    (118/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.076562275 seconds)
    (119/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.052212405 seconds)
    (120/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.075193681 seconds)
    (121/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.138344961 seconds)
    (122/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.05356483 seconds)
    (123/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.067172685 seconds)
    (124/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.09773718 seconds)
    (125/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.074635464 seconds)
    (126/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.074151951 seconds)
    (127/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.074548926 seconds)
    (128/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.074850992 seconds)
    (129/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.194390035 seconds)
    (130/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.113982828 seconds)
    (131/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.068104132 seconds)
    (132/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.073897007 seconds)
    (133/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.066699997 seconds)
    (134/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.067692123 seconds)
    (135/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.076120269 seconds)
    (136/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.073703151 seconds)
    (137/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.06708856 seconds)
    (138/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.066643617 seconds)
    (139/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.074907594 seconds)
    (140/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.063305835 seconds)
    (141/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.108196258 seconds)
    (142/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.068228363 seconds)
    (143/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.163599458 seconds)
    (144/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.06673678 seconds)
    (145/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.104801131 seconds)
    (146/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.099149163 seconds)
    (147/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.052199897 seconds)
    (148/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.075572373 seconds)
    (149/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.079314629 seconds)
    (150/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.066871153 seconds)
    (151/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.062835578 seconds)
    (152/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.074248719 seconds)
    (153/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.067366244 seconds)
    (154/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.075151993 seconds)
    (155/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.071426794 seconds)
    (156/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.073844711 seconds)
    (157/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.157915492 seconds)
    (158/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.082112134 seconds)
    (159/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.074244452 seconds)
    (160/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.052516263 seconds)
    (161/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.144800146 seconds)
    (162/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.197712808 seconds)
    (163/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.078421625 seconds)
    (164/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.065912359 seconds)
    (165/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.075618159 seconds)
    (166/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.073141815 seconds)
    (167/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.164433162 seconds)
    (168/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.079145135 seconds)
    (169/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.186164409 seconds)
    (170/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.110570886 seconds)
    (171/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.153380124 seconds)
    (172/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.163670633 seconds)
    (173/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.05304664 seconds)
    (174/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.156495167 seconds)
    (175/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.139075142 seconds)
    (176/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.052977635 seconds)
    (177/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.078080823 seconds)
    (178/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.081908825 seconds)
    (179/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.070562245 seconds)
    (180/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.091784491 seconds)
    (181/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.052714393 seconds)
    (182/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.083118607 seconds)
    (183/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.066016618 seconds)
    (184/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.066973559 seconds)
    (185/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.070536504 seconds)
    (186/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.065170141 seconds)
    (187/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.068099765 seconds)
    (188/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.172991673 seconds)
    (189/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.069434775 seconds)
    (190/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.074394034 seconds)
    (191/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.093919716 seconds)
    (192/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.341581765 seconds)
    (193/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.069349922 seconds)
    (194/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.073789495 seconds)
    (195/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.077957388 seconds)
    (196/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.078065607 seconds)
    (197/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.076103818 seconds)
    (198/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.071131946 seconds)
    (199/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.178471994 seconds)
    (200/309) benchmarking ("sort", Float32, false)...
    done (took 0.136596427 seconds)
    (201/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.069990976 seconds)
    (202/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.158958527 seconds)
    (203/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.068037083 seconds)
    (204/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.081385568 seconds)
    (205/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.070689766 seconds)
    (206/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.073995848 seconds)
    (207/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.053676556 seconds)
    (208/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.073775625 seconds)
    (209/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.052772105 seconds)
    (210/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.05371938 seconds)
    (211/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.054475364 seconds)
    (212/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.072128767 seconds)
    (213/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.065983862 seconds)
    (214/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.145349149 seconds)
    (215/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.069844938 seconds)
    (216/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.067170306 seconds)
    (217/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.076304656 seconds)
    (218/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.092093673 seconds)
    (219/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.066205384 seconds)
    (220/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.052753578 seconds)
    (221/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.067849103 seconds)
    (222/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.089298538 seconds)
    (223/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.052588928 seconds)
    (224/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.141753161 seconds)
    (225/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.053476076 seconds)
    (226/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.063353023 seconds)
    (227/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.075870941 seconds)
    (228/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.052505238 seconds)
    (229/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.066816548 seconds)
    (230/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.073742475 seconds)
    (231/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.090741461 seconds)
    (232/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.052779381 seconds)
    (233/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.052846981 seconds)
    (234/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.159447725 seconds)
    (235/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.093013707 seconds)
    (236/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.053725954 seconds)
    (237/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.052232874 seconds)
    (238/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.093259989 seconds)
    (239/309) benchmarking ("sort", Int8, false)...
    done (took 0.14305839 seconds)
    (240/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.054713525 seconds)
    (241/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.054356257 seconds)
    (242/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.053057908 seconds)
    (243/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.102174263 seconds)
    (244/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.067025838 seconds)
    (245/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.054961115 seconds)
    (246/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.052194614 seconds)
    (247/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.07097016 seconds)
    (248/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.051937527 seconds)
    (249/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.077760181 seconds)
    (250/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.116885656 seconds)
    (251/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.152030461 seconds)
    (252/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.054517534 seconds)
    (253/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.051966315 seconds)
    (254/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.073743408 seconds)
    (255/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.062294046 seconds)
    (256/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.075484375 seconds)
    (257/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.09222493 seconds)
    (258/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.094309921 seconds)
    (259/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.052954937 seconds)
    (260/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.158127888 seconds)
    (261/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.06802691 seconds)
    (262/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.088763331 seconds)
    (263/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.07096231 seconds)
    (264/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.112894642 seconds)
    (265/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.05368768 seconds)
    (266/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.065493319 seconds)
    (267/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.069082457 seconds)
    (268/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.052775455 seconds)
    (269/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.102565193 seconds)
    (270/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.075516559 seconds)
    (271/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.094966673 seconds)
    (272/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.0551453 seconds)
    (273/309) benchmarking ("sort", Float64, false)...
    done (took 0.132584182 seconds)
    (274/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.052769942 seconds)
    (275/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.090179257 seconds)
    (276/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.122729693 seconds)
    (277/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.063870357 seconds)
    (278/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.053966045 seconds)
    (279/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.068342112 seconds)
    (280/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.073026787 seconds)
    (281/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.052398277 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.075325722 seconds)
    (283/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.053196865 seconds)
    (284/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.065448621 seconds)
    (285/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.073323284 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.065975045 seconds)
    (287/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.070134445 seconds)
    (288/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.076789726 seconds)
    (289/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.064082676 seconds)
    (290/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.069664691 seconds)
    (291/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.06866509 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.074979386 seconds)
    (293/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.073770557 seconds)
    (294/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.052639638 seconds)
    (295/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.052818492 seconds)
    (296/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.054136023 seconds)
    (297/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.052916199 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.073703793 seconds)
    (299/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.06742431 seconds)
    (300/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.067642626 seconds)
    (301/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.05356083 seconds)
    (302/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.06670548 seconds)
    (303/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.099472387 seconds)
    (304/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.067556389 seconds)
    (305/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.13607413 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.072590061 seconds)
    (307/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.082918896 seconds)
    (308/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.090657029 seconds)
    (309/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.0672372 seconds)
  done (took 31.562937545 seconds)
done (took 32.966169098 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.086483644 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.095364705 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.076935279 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.095167311 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.083723356 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.078702884 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.074678964 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.080603958 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.082083908 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.083426422 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.080394384 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.056431323 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.076497101 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.07614219 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.076368248 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093243539 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.080359447 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.075288607 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.074500433 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.066422672 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.075295599 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.067185889 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.069265198 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.05591095 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.079903741 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.073622436 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.074366751 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.075480516 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.067146509 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.066895964 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.071338299 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.075426769 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.066799515 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.080160055 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.074194073 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.074728963 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.075899783 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.077977443 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.068643894 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.067553109 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.076380845 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.067190989 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.075049018 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.075088554 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.073579475 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.073473643 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.074767813 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.079306337 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.093260785 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.06887636 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.076734253 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.077762246 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.077190846 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.074231236 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.07096053 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.074781657 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.072544294 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.0932805 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.075315901 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069165796 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.076405038 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.07635801 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.07321147 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.074768443 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.074905467 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.076735654 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.077580414 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.073707065 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.076169789 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.073459562 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.06682801 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.074714699 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.07035706 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.067476043 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.078341458 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.079281973 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.066045044 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.073573731 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.074851239 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.073384473 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.066719283 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.069363843 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.06890722 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.073991097 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069441298 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.055386738 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.071215076 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.073983419 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.066392158 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.075092672 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.073752544 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.074381054 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.068476952 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.077638048 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.066218701 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.073184984 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.067177617 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.067596096 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.069359553 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.071536755 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.066907456 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069067436 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.077064269 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.068746074 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.074629135 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.080912354 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.067040925 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.074108425 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.065807577 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.065913536 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.081423652 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.076354477 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.066818679 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068705115 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.065808016 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.074009423 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.065605771 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.066542231 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.066067686 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.066242515 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.072473965 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.066002237 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068104478 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.073173652 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.079445193 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.06600864 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.06982365 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067998653 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.066120369 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.072085101 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.066150618 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.201075854 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.069202404 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.063902378 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069870414 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.067641408 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.075918442 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069422019 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.075033671 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.068567778 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.075325115 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.072051272 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.073377467 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.072847566 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.066380957 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.060469877 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.06967075 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068817757 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.068967062 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.067490488 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.069237038 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.067190149 seconds)
done (took 12.73106114 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.068245836 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.141616176 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.098997271 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.097198376 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.08696759 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.067973384 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.077054696 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.101029593 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.069374874 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.102654697 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.089313153 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.087734704 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.115532351 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.06615582 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.067264601 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.071133561 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.068979416 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.082610542 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.101167798 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.087824292 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.116649281 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.067483767 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.094421626 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.091397306 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.090052321 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.10483958 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.071369056 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.071456127 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.071023876 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.094670228 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.089856168 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.071046139 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.0681858 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.10038688 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.09585922 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.085402256 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.06787549 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.085299575 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.068250673 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.067410118 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.068902214 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.100753167 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.082619305 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.082603515 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.071575806 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.07831059 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.068919157 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.085612542 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.091741862 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.081048024 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.087370107 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.103295173 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.0701571 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.085333678 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.066064233 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.088151472 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.078487547 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.070287348 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.068113235 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.075472349 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.067828449 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.071255334 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.082401998 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.08178969 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.071831323 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.086673523 seconds)
  done (took 6.954493323 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.085881052 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.092513103 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.085138038 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.085440235 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.067185839 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.067524493 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.067787137 seconds)
  done (took 2.053054339 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.068478715 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.090236717 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.090848757 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.091444891 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.083648899 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.089401773 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.077399447 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.067744224 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.089039604 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.069343642 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.089109053 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.10235632 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.071341109 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.075510826 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.092482338 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.067684844 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.092174407 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.067908877 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.071372541 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.092080825 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069874253 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.097704235 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.071364535 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.068277545 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.082855584 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.068254839 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.116273904 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072335836 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069949053 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.071033089 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065988366 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.109548589 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.082298622 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.076333425 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068411 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.082849164 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.083368396 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066591868 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.084876711 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.076750565 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.081971985 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.068226069 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.068750918 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.066354024 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.072248188 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.078548471 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.069022349 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.068350797 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.071105919 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.088022406 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.06868016 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.082097975 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.071006645 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.073650458 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.069337268 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.074750393 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.078678162 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.068766218 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.08782561 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069595559 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.085667774 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.08443855 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.082234405 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.084603903 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.070829737 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.082231786 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.082018858 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.070692167 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.0701915 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.071536943 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.084728248 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.066556486 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.070007341 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.079266012 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070307639 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.091437109 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.09137171 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069662278 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.081894927 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.068986445 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.068474104 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.068181679 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.091830862 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.073583572 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067967444 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.072337996 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071113191 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.06654412 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.067943862 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.072442974 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.066277821 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.070064986 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.07115111 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.071503376 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.071168242 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.085056446 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.070733417 seconds)
  done (took 8.978667096 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.06994094 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068944966 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.070316956 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.069357542 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.069584438 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.069263735 seconds)
  done (took 1.939109949 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.09428298 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.070236787 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.081023161 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.07329238 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.106286405 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.088503902 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.088718401 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.079422951 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.085380506 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.080336147 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.088065462 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.089161803 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.093459729 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.074100968 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.088339496 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.072964096 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.088973514 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076203751 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.079275662 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.074610859 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.08764916 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.073278836 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.074345989 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.083572196 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.076820538 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.073253215 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.079685698 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.080017665 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.079904764 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.07964378 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.073644047 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.076938698 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.072150115 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.080094109 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.088103464 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.071960852 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073142449 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.077975137 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.073208932 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.076938478 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.089019367 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.074653723 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.075396367 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.078647921 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.079508333 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.072383485 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.078366253 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.080878574 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.088055444 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.078353785 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.078513797 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.072971659 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.076944721 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.077987755 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.072223772 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.079824722 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.078067634 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.088920668 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.073667846 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.071797615 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.070808554 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.077601011 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.078970036 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.078027034 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.080236565 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.0783035 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.071866412 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.07380174 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073960325 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.073392947 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.078112732 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.070636357 seconds)
  done (took 7.196642222 seconds)
done (took 28.609276852 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.533549888 seconds)
  done (took 2.024193519 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.616108866 seconds)
  done (took 2.130518633 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.473968555 seconds)
  done (took 7.982960651 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.400873649 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.526829364 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.726924386 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.13318001 seconds)
  done (took 3.335504206 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.707287548 seconds)
  done (took 2.230239864 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.217665617 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.204411728 seconds)
  done (took 1.952557405 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.37674103 seconds)
  done (took 1.887287912 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.137085171 seconds)
  done (took 2.650381843 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.258837367 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.176340328 seconds)
  done (took 1.953312841 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.475597464 seconds)
  done (took 1.992511918 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.878631798 seconds)
  done (took 6.397855048 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.212497257 seconds)
  done (took 1.776287591 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.236053777 seconds)
  done (took 1.758238911 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.73078988 seconds)
  done (took 3.250757013 seconds)
done (took 42.840716589 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.082775489 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.0830459 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.081888758 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.080768092 seconds)
  done (took 1.835923316 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.079722102 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.07437102 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.077960036 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.073866284 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.078689301 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.074810416 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.075801198 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.07767468 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.074333629 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.074886324 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.074432164 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.074562294 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.076942232 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.076247793 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.07280293 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.077181207 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.077843142 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.074282094 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.076945655 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.074635205 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.072281073 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.076618862 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.077047801 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.073602235 seconds)
  done (took 3.33972771 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.079201133 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.075106861 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.077101146 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.073254216 seconds)
  done (took 1.834356078 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.079973535 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.093402127 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.094092826 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.079534361 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.094093374 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.088242317 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.071039184 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.071120849 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.072853608 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.079506125 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.069588681 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.098276105 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.090114749 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.080043103 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.081908623 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.067645133 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.070565586 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.089366599 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.080357384 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.080042461 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.072160809 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.079962789 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.06986043 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.090248154 seconds)
  done (took 3.46999433 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.087595204 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.106777337 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.082488205 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.090380223 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.092735112 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.067051432 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.089670675 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.092446934 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.129591356 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.067298463 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.072660531 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.067478728 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.074513398 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.06756909 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.083066987 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.10998818 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.113569288 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.071019858 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.099416417 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.067199999 seconds)
  done (took 3.268209759 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.074683877 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.071105735 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.06747643 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.07072839 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.078900938 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.074252978 seconds)
  done (took 1.972985508 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.069667117 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.069218297 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.069314613 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.068534838 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.074423243 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.06881723 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.067576771 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.069766021 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.070085948 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.069099446 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.068923188 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.06808495 seconds)
  done (took 2.363902522 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.203107241 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.070682664 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.071065559 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.06781854 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.072793739 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.068378619 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.082711755 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.070193569 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.094615089 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.069194963 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.068779427 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.070654258 seconds)
  done (took 2.542676823 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208651734 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077949651 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240731459 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153716775 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113350229 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11791219 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114952409 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115204269 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.144025431 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102643893 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170428623 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169996844 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110493224 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139776149 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.091422182 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.103043253 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157440855 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16615812 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10813658 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169747814 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149239658 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129148252 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151061964 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109830281 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109162344 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124296148 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.073525929 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082334755 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173006829 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135364748 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14674407 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113516504 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094938783 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178781601 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174344234 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142587696 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149160093 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.086471931 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.107459575 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.135920172 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204342203 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.092630473 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162567939 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.251206664 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.08361108 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135754086 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121677795 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.121442652 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.108426923 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.092163378 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148681166 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185760455 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.138855645 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.089571259 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127243648 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115306798 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.11645121 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116362916 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18475685 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164457639 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130743633 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.073590904 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110981318 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156056766 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134693075 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.111938041 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.12647971 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094063326 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136715851 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157128614 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123476149 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147128682 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.119701117 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091651412 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120596878 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142792759 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129911642 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163505332 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127007318 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.07518209 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126122335 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104124108 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082927616 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.148011007 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077566931 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177132804 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101140996 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.11072548 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127167024 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11019305 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110311423 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160682483 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147567894 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.246811707 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.068034096 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107787634 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.122929705 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147769745 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089112593 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110564221 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12015719 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.079923308 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139850095 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.077781674 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126133869 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.079385494 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126533365 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133182159 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.079264519 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12484654 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106626261 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.101845059 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134636679 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161943592 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09048724 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084150169 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171441499 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124622174 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.105132312 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146082503 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15837622 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.102148517 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10333027 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150448319 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181347154 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.091472551 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165137793 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108539585 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.085781409 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.090008332 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125633995 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114007039 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.1253219 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083763308 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.120129772 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171157005 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.076999729 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097794587 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136166006 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080655512 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08220403 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107103916 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106616045 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.097472895 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.102025385 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.10453316 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137811773 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124826101 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106792041 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124033723 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.246151762 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172705578 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090884265 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.104703832 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107228331 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.071664781 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.138219622 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159056996 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08203865 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166159142 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.124708219 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118364711 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12086491 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086041745 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143024443 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081689377 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.072420442 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14504689 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110795105 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112614099 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.153761729 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117991274 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.126920691 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.120302266 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135045244 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133576643 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.132700353 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107514674 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.089349317 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113158973 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128766906 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.074971962 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.092747126 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.081878882 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107202271 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097804157 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.085120144 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143877111 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126188397 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111646686 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113423855 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098827057 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150148106 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.078374268 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130708515 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.120677195 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097256685 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.153826952 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154458572 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133123233 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10096574 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138215516 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.071775916 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075280925 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.089656276 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.267602357 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08576877 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.086513362 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11837707 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149981879 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130829481 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13905346 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125344591 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123144306 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158329113 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.072169307 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.119819934 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148515005 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123643934 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.106848814 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093028294 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.100691716 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144997925 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10938086 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184242112 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117484894 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125098363 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155135167 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.103680192 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081893057 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103900066 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138585696 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105448622 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147020556 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101046215 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090180921 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11095401 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.076657543 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100585342 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129050646 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120935266 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13590494 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.117680763 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135517775 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07966399 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118014753 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12398969 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124241385 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.06622576 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1216056 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162206528 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095992634 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118705895 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155102199 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080484623 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.136124783 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175987176 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.292362507 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.088523406 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111242598 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.123465144 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131125782 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122131674 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142811656 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109451453 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138927261 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112178705 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.087370267 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090075908 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099499274 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107291707 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.097188799 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.109082922 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.115340958 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.097999266 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134734121 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105397559 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1118659 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119115609 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.100924455 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.093709843 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098782491 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178805039 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121128302 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172325419 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.102774238 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.147354126 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165764645 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077103477 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080650131 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.079678836 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142743058 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086305533 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132755509 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.109001305 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119532412 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126087653 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145170427 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097529948 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.070180604 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11049539 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135380267 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127141763 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100872823 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.105378673 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165242063 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.102751336 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083425563 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115437359 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117371038 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104643896 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172500539 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.062769799 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105503384 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.222113442 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084619958 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130579757 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155181023 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.083366909 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.107009426 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121298278 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115082602 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13076958 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102804049 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111059287 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128629439 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152039092 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131152014 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.091502738 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11390703 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128885195 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158346841 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107502451 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.099180044 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174956079 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154824809 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.162828551 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.088946835 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115405357 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114913015 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11011453 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140814715 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085298539 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164915738 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083620182 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137938963 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105384377 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091340917 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131416616 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.11016556 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090594715 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150711133 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120366535 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084849848 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079832954 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120271102 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122426696 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107830914 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.07697023 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139795766 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.07533487 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133626024 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160943696 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082654586 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106347534 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096651527 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080385691 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.255610739 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105326146 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089794088 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.102023391 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174334002 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.088936767 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15266662 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136639532 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115046265 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137143131 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104232892 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.641085323 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.080499967 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154657051 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118712102 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176871982 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102137393 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119532619 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111648923 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124673539 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14764042 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105807272 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.184559784 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134493125 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.118448342 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081813647 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10389943 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106129589 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.089789911 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109032259 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114214494 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117196593 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.09440175 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.117510853 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126483981 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.084072499 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09778603 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158694401 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.119039655 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146144961 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143228902 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087773968 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119489355 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140089181 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082410562 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.121773113 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153156882 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107262739 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101516671 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.082681741 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.101601794 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.306490077 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.076791199 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162148224 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123188428 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111635526 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115591626 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.11537502 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134183982 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110347619 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124672829 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094481529 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.111131229 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11559792 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083557953 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.07908261 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108052423 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11310054 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.099907771 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099117497 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.101647363 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154548796 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.074549434 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100753856 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117820976 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146282279 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177177988 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.089602518 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08507112 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121136219 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116217008 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.114501398 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123640009 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.081243504 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083878207 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.081691698 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.080117882 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.111573349 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115183894 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116995817 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111878015 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165836074 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.085196398 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.232608702 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097705276 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107353613 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.071539199 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.080594236 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098550975 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100352388 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109655772 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111975067 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161309214 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.097214121 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.091114791 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092024387 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.075508708 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084453267 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128837821 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110407371 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.26639617 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101897233 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.065031524 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112126676 seconds)
  done (took 60.082967424 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.109884018 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.08507972 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.095506214 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.145853655 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.12524899 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.205337871 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.155552398 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.190606466 seconds)
  done (took 2.76244994 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.07001861 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.097403984 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.104893806 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.085682698 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.069194971 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.070845534 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.234780801 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.084034925 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.068317419 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.100940414 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.081157252 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.07152799 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.430306234 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.068182364 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.06969776 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.06363491 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.069299118 seconds)
  done (took 3.479154017 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.393653528 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.615127265 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.355274336 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.074392929 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.520920411 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.086922903 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.173975152 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.130859022 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.075224753 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.539962776 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.410219253 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.126266658 seconds)
  done (took 18.156983542 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.078294286 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.071527244 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.085371026 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.085577778 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.075487132 seconds)
  done (took 2.046457451 seconds)
done (took 108.729990131 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.083280737 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.607392991 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.054705705 seconds)
  done (took 2.33764026 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.085627266 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.087739543 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.087681929 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.085412827 seconds)
  done (took 2.003132698 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.075880166 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.078692362 seconds)
  done (took 1.802476715 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.235880559 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.166306508 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.098635933 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.085450973 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.081812363 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.081738262 seconds)
  done (took 1.901021539 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.075135253 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.077410977 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.074653904 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.078697931 seconds)
  done (took 1.954670924 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.080553136 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.053720024 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.056742254 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.059799392 seconds)
  done (took 1.897022248 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.089524303 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.081607991 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.080107723 seconds)
  done (took 1.897857298 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.104136724 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.087659744 seconds)
  done (took 1.838365995 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.083890216 seconds)
  done (took 1.734214082 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.097923464 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.103818276 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.134496141 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.113740753 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.141687227 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.11177108 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.086516728 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.087905061 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.078198786 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.088720129 seconds)
  done (took 2.693218381 seconds)
done (took 22.288675696 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.081729722 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.465233668 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.362513904 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.091802986 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.670748443 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.359115051 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.990120787 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094661612 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.117591402 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069387542 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087217624 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.652087536 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.980993038 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.420395223 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.965322458 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.321551037 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.651703329 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070603828 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069995113 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069577838 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.973151504 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069601345 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069913476 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070524697 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.651393567 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.374716968 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070475392 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.326587607 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069972328 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071371639 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.35784433 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070500455 seconds)
  done (took 16.404973325 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.072553991 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.121643027 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075285234 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.086978995 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.072192133 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.07108571 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.073188716 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.070869709 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.122724986 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069514257 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087069721 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069397123 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.073907502 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.08804868 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.089851039 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.069760147 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070597164 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070958996 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070357877 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070456775 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.089010106 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070024321 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070199911 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070301516 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069992527 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082372883 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071387409 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.07013406 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070497738 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072359093 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.073324566 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.07085 seconds)
  done (took 4.139372395 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.117686888 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.127643916 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.076185534 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.106185241 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.114027986 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.072342262 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.145628293 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.095643482 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.129152533 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.07003697 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087115859 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.070023473 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.104529872 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070947065 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.090294509 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.07002303 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.0712988 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070492697 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070195429 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070953281 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.090132471 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.07029441 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070535781 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070877136 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.07032268 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.084206227 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071247159 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.07079504 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070397159 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071831139 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.073032567 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.07081575 seconds)
  done (took 4.38082909 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.075422084 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.077580657 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.085890778 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.086501636 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.071272499 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.073966185 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.074980648 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.071200127 seconds)
  done (took 2.286476729 seconds)
done (took 28.871116205 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.081233562 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.071501202 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.074492902 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.085081834 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.075500544 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.081013048 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.069945641 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.077737159 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.074545897 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.075431773 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.077029898 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.069535493 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.073245588 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.069576135 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.076277284 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.069647872 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.081317249 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.073116636 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.081059131 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.081122742 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.071674143 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.074822604 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.07708942 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.080711817 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.080950513 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.080650462 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.079821011 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.074885538 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.071329043 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.072567338 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.078475531 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.085723127 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.069726863 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.080809708 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.069618007 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.069195052 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.073393727 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.069064543 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.081405856 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.079053901 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.071762662 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.078419997 seconds)
  done (took 4.832724252 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.090728281 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.094860397 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.087779057 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.063965956 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.068667504 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.068510455 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.090990337 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.061787275 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.060946717 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.090454887 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.05712651 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.062397212 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.065155062 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.055387519 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.062277368 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.058832002 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.0638202 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.056974582 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.062013992 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.061464389 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.09352521 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.055439207 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.079482383 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.06514395 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.058199304 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.063240816 seconds)
  done (took 3.475491594 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.077123603 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.086964257 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.091939645 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.133401217 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.108688457 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.081778754 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.08122334 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.097289034 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.090958457 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.069147507 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.073142206 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.095173854 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.092178495 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.075999464 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.06976312 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.088463731 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.086593903 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.07089148 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.076284087 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.096740751 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.089129371 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.087606813 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.097882972 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.085696067 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.068505344 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.071759285 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.073154092 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.083779538 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.074148639 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.079174506 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.07307565 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.072966486 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.072088042 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.081288056 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.072960745 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.071040534 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.094507299 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079179821 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.080636177 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.069943331 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.077714282 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.07044509 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.094839685 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.127874816 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.068864398 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.075774855 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.073259639 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.07982144 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.069598725 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.089726228 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080698979 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.069431313 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.072674206 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.069146888 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.06964545 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082856095 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.071916016 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.071763915 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.078712444 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.07535401 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.094413369 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.073888042 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.085641464 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.069161353 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.077615857 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.068712703 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.070281791 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.069055206 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.098334311 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.071003088 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.113400856 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.070820498 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.070315743 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.079083355 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.0776112 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.075873242 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.070067126 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.084951647 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.080646145 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.073093014 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.078119412 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.072948116 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.072775903 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.093604159 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.072093011 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.071153184 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.070550768 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.075406398 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.072789188 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.072663934 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.08278639 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.06889432 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.072169385 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.087000689 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.06976869 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.070757624 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.075175374 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.074546343 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.069544745 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081196519 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.074671692 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.070499584 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.079907755 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.069858384 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.072804607 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.083059358 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.076208756 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.068374046 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.073683152 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.07505081 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.070044734 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.070997959 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.072950254 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.071316439 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.078106389 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.076453298 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.074125951 seconds)
  done (took 10.908467042 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.172177944 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.160924684 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.073187595 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.152257169 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.079359435 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.081667193 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.153190786 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.09801867 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.070242285 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.07068656 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.070727488 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.112824789 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.108867356 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.118866559 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.081221629 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.070345622 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.087054564 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.117564625 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.155956046 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.150237845 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.087650554 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.079344092 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.071948893 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.071552717 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.073419847 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.080720397 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.087537722 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.079698379 seconds)
  done (took 4.524880618 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.082793071 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.107533388 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.077571133 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.093037119 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.092969004 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.069902518 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.072065368 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.07183594 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.084716684 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.080317689 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.070027916 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.075358933 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.077036425 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.073218109 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.070941501 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.076695223 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.077234607 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.072174597 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.073670206 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.075636456 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.081090831 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.094762401 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.073915922 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.069125328 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.075794407 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.069601594 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.066213407 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.086492048 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.070644167 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.098159437 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.067865225 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.07523238 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.085229115 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.071213684 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.070626237 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.069998662 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.069740566 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.070701698 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.071954985 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.068167168 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.068624017 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.058962549 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.069337335 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.08116603 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.076759982 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.058208065 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.075300801 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.075038838 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.075012356 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.067668377 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.073206259 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.072262824 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.073094575 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.07780998 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.073829879 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.075058613 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.071331519 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.076084283 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.078925817 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.069491675 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.067273109 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.067730984 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.074454184 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.06715942 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.078307718 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.074137439 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.068280649 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.069528059 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.071505531 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.07734499 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.070064714 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.07442458 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.067044109 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.071727933 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.074541386 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.07148297 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.070982955 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.068315975 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.069600534 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.070788361 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.057604668 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.070017903 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.055696563 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.07271113 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.06797771 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.06787421 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.069524875 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.074629868 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.081842641 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.070944703 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.075604944 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.070806894 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.068882509 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.072691623 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.0621636 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.072687756 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.085709327 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.08530007 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.069569708 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.067801682 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.083897921 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.074573303 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.069142637 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.057946124 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074938844 seconds)
  done (took 9.433147297 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.093605361 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.071882922 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.087205578 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.094091081 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.089614379 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.077016632 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.079702175 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.071774947 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.085561095 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.076636347 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.079128005 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.07037349 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.080901096 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.07987851 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.072539375 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.080712148 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.07447248 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.087326968 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.085114049 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.070394659 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.078848715 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.082860253 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.092613254 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.084596858 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.083144844 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.084813623 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.092443029 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.080066443 seconds)
  done (took 4.002277901 seconds)
done (took 38.838559767 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.747862481 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.921069475 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.749808843 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.102440611 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.821805008 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.98066549 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.939668245 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.74141028 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.875565491 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.783853347 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.980881397 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.88333573 seconds)
done (took 65.21087778 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.831111453 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.885589862 seconds)
    (2/2) benchmarking "String"...
    done (took 1.985702354 seconds)
  done (took 5.553643664 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.967472624 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.304051568 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.990711413 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.743327958 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.751682917 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.082052753 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.563452041 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.257863903 seconds)
  done (took 30.374352966 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.88664595 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.973955284 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.434355322 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.466877242 seconds)
  done (took 15.494498844 seconds)
done (took 62.992662007 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.772666299 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.78611396 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.765830033 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.727929434 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.805880228 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.757602145 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.259572684 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.845091416 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.745358145 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.736754793 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.747874066 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.180944184 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.747142952 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.296249685 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.744937538 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.754662005 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.809666799 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.239052742 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.903328862 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.765441603 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.766917673 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.773889837 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.745507389 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.753478238 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.790594447 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.74655176 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.181151149 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.751618965 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.367494124 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.747021872 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.780252245 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.760324723 seconds)
  done (took 203.237042488 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.74669342 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.766987252 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.832622705 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.784406955 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.241038452 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.927604225 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.865922761 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.281651014 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.748950344 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.77621071 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.05154303 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.743597163 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.082109615 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.693276756 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.776601815 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.81934459 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.009129447 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.05903951 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.780044621 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.919416993 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.759218111 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.872436848 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.817969037 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.003236237 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.784553731 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.845592645 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.76394877 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.925660792 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.940460218 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.992458201 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.747987115 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.793342051 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.970689342 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.620772184 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.775411036 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.773425998 seconds)
  done (took 169.974880625 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.128766235 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.748474033 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.745784796 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.748732678 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.760000976 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.746444328 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.869151883 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.871987643 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.342880383 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.490032229 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.801736675 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.596680895 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.74625894 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.81722846 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.760993849 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.750841401 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.761324466 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.775081884 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.749996742 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.751761052 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.871678315 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.760386183 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.819023923 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.7571008 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.750842262 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.753751572 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.121227734 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.748716567 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.752193816 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.008129336 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.750086823 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.750574355 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.647208666 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.80446002 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.833803224 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.748039519 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.754298138 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.748678881 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.968080907 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.7483595 seconds)
    (40/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.749256776 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.750565667 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.746809247 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.754471094 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.920805011 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.74758414 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.870580375 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.74999169 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.253257309 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.748939383 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.748279976 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.431696725 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.434028357 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.748825293 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.751413476 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.755272956 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.749851846 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.755320463 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.757924367 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.397292062 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.824135116 seconds)
    (61/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.751424833 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.752285506 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.75344484 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.75372813 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.750311827 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.834724838 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.748285387 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.395180648 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.807439314 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.987586754 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.873922924 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.753944519 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.817677515 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.843289605 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.751523729 seconds)
    (76/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.75330375 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.754316282 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.754104976 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.752426896 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.831360613 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.751908348 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.877379499 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.757640061 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.752165294 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.802749624 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.821142513 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.756085551 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.66501761 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.753466452 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.753758189 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.074711135 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.816219829 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.750719092 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.751016738 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.751963328 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.887264671 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.872677139 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.542730771 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.75407242 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.494137937 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.754173151 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.903005381 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.752384558 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.93632868 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.755556597 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.834855835 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.755726458 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.755130688 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.753966314 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.784280036 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.753271392 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.817940297 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.752278456 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.127480764 seconds)
  done (took 400.521342954 seconds)
done (took 777.601303557 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.418024577 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.368313934 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.482077703 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.391414177 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.370193065 seconds)
  done (took 13.717288813 seconds)
done (took 15.40845173 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.842992869 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.845633248 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.777674519 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.84693341 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.773340972 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.84529144 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.827706618 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.78123226 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.810897771 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.781188665 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.812736034 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.782340722 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.763867031 seconds)
  done (took 25.179229146 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.981957626 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.986302547 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.828275328 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.986415551 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.804057172 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.982845039 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.917878878 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.90493989 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.904291979 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.772910529 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.770682804 seconds)
  done (took 22.530649828 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.987850508 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.996358995 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.834414401 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.006612053 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.805757745 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.989434445 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.921156715 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.907887797 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.910731362 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.772554663 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.770435432 seconds)
  done (took 22.593117957 seconds)
done (took 71.993456227 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.763838582 seconds)
  done (took 3.452970263 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.787682309 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.946472778 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.770539759 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.770429507 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.762667073 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.764593686 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.766442651 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.765781922 seconds)
  done (took 16.026441793 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.764188353 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.759854162 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.7618405 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.7666128 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.765950222 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.76270387 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.763329036 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.761278235 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.763803761 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.765691487 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.765728722 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.764798803 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.763080817 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.765261488 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.761536472 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.76746743 seconds)
  done (took 29.915461027 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.765666898 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.763382736 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.761326394 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.76271555 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.763788958 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.764910146 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.765389327 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.763070696 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.766815301 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.761721045 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.766553476 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.760675715 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.767070454 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.764508784 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.766011125 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.76806642 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.763805357 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.764278948 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.767638741 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.766738915 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.765472661 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.763350349 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.76391207 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.763938876 seconds)
  done (took 44.046942678 seconds)
done (took 95.1323683 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.672770078 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.14931818 seconds)
  done (took 8.513354933 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.769050497 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.767883275 seconds)
  done (took 5.265860491 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.768894409 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.769217646 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.76909497 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.769919237 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.766578664 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.765371003 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.766564137 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.77101258 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.771407902 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.770240726 seconds)
  done (took 19.382233794 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.770112105 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.767529774 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.763669706 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.766087509 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.768104964 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.765144717 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.768091071 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.766602183 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.769539807 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.766129464 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.767591876 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.767406685 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.769865024 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.765063503 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.769053622 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.766406792 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.767518621 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.765580548 seconds)
  done (took 33.505847034 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.769747392 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.770334989 seconds)
  done (took 5.234984231 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.766318992 seconds)
    (2/7) benchmarking "second"...
    done (took 1.766117883 seconds)
    (3/7) benchmarking "month"...
    done (took 1.767562746 seconds)
    (4/7) benchmarking "year"...
    done (took 1.765001549 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.769377591 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.768788619 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.768117968 seconds)
  done (took 14.069842655 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.77362928 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.932559168 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.99763491 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.404445424 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.7731377 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.77123397 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.728445969 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.77671857 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.776337964 seconds)
  done (took 19.632883076 seconds)
done (took 107.298708587 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.583860486 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.766108673 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.105239555 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.819598484 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.82284923 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.107004103 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.789159097 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.06659785 seconds)
done (took 42.75816471 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.849145922 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.33094055 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.378731588 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.404414315 seconds)
  done (took 12.808630182 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.748618089 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.28868904 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.799620965 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.342996804 seconds)
  done (took 19.899869383 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.135990739 seconds)
    (2/2) benchmarking "read"...
    done (took 2.106824945 seconds)
  done (took 5.945855299 seconds)
done (took 47.20647693 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.771073981 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.769771106 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.767873462 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.775235858 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.767730899 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.769686223 seconds)
    (7/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.770748809 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.766520214 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.773026479 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.76971728 seconds)
    (11/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.772828341 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.771603205 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.773326679 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.770349188 seconds)
    (15/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.774611505 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.768750672 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.768762677 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.772752179 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.770614372 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.767386618 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.769350706 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.769962463 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.768398463 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.767795662 seconds)
  done (took 44.185821826 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.774201752 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.769034766 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.77347944 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.772575002 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.769452745 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.773426671 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.769718847 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.773367391 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.772682267 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.772363744 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.771907844 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.76953159 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.770856889 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.767414531 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.771976805 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.769829976 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.773368109 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.768906346 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.771084949 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.770231851 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.772132424 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.771358313 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.768115099 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.771759534 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.770332386 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.771626337 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.772581731 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.771881447 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.774263705 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.769458081 seconds)
  done (took 54.840365855 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.778684574 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.781750115 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.773402086 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.774293511 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.776673934 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.774521686 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.775445102 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.776972394 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.773978382 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.776068545 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.775313681 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.775179636 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.775822854 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.774958094 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.774010224 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.777601681 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.77465142 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.775364301 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.776439781 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.772820621 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.775524582 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.772537866 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.774981487 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.779988996 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.777476051 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.776273708 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.775106405 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.776210559 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.776592899 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.775989364 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.778242408 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.777766523 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.776793467 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.777089499 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.781138903 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.775290782 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.781979651 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.783886101 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.778993074 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.777264044 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.776162894 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.77854683 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.779082061 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.775518241 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.778352513 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.776956445 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.779381107 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.780339451 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.775516109 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.776759951 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.778579531 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.77712215 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.778227176 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.780291814 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.777307139 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.779247873 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.78045409 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.777859504 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.782048979 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.781528361 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.779645206 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.779871811 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.778620059 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.783548631 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.779452807 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.777882117 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.779733391 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.778412055 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.781572876 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.781511 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.78004059 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.780652626 seconds)
  done (took 129.699064833 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.781695516 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.778398051 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.776723354 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.777276598 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.774605928 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.780849003 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.776952219 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.777756454 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.77711256 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.781175083 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.783234703 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.777931591 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.780900864 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.783890311 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.782548793 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.779840608 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.780718274 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.782736949 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.780871687 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.782450721 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.781825726 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.780824837 seconds)
  done (took 40.866734863 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.784759007 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.783928446 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.781324047 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.784729477 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.778328998 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.784896917 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.784730959 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.786844868 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.779656835 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.783291404 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.778549033 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.78437266 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.779151763 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.781496823 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.782935788 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.782927155 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.786450253 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.779575186 seconds)
  done (took 33.798963322 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.781966192 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.780071446 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.78378073 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.782719788 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.783263725 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.781662469 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.779911239 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.786111404 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.784258871 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.783324747 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.786035404 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.783578399 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.78588297 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.778916521 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.78692891 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.781988969 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.785046143 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.782724539 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.781931899 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.782512498 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.78120937 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.785149609 seconds)
  done (took 40.941960624 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.78419733 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.785964593 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.78307095 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.777044173 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.781566884 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.786053685 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.784711905 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.785562983 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.784057338 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.783560538 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.781660812 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.784100581 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.782583358 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.78397375 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.784677454 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.782149468 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.787673326 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.784282152 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.786424991 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.785182842 seconds)
  done (took 37.39204523 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.785307034 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.787257452 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.786869035 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.787351051 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.791061288 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.788169667 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.788582308 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.786824485 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.786903177 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.78710916 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.788105263 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.791639314 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.788256127 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.787691136 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.786145397 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.791339291 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.786837095 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.788931746 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.784789049 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.788578675 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.789231694 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.786700616 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.788473024 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.786603196 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.788994082 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.784996235 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.789535067 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.789994073 seconds)
  done (took 51.778569033 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.790343787 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.789303361 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.781355787 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.787016749 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.781774979 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.787148246 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.786357579 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.783708869 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.789135986 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.783252921 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.786806659 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.791170123 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.791557455 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.79068571 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.789156021 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.789496461 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.791002654 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.785043057 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.787653884 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.787578365 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.788852871 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.789434247 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.790001455 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.784601444 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.785911029 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.788452731 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.783871117 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.786818517 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.789090193 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.787515293 seconds)
  done (took 55.340877323 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.810122682 seconds)
    (2/2) benchmarking "in"...
    done (took 1.809047139 seconds)
  done (took 5.33495425 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.786486171 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.789545801 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.789852119 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.785096845 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.787635361 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.793264578 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.790693989 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.790452504 seconds)
  done (took 16.034513942 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.788931147 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.787589887 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.791705283 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.789151745 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.788973664 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.785915188 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.797709526 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.789630354 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.791220311 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.787890754 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.797051968 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.79910394 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.794472522 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.78832441 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.792419214 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.792837172 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.791509728 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.792850734 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.790960645 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.790179898 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.790102921 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.792772912 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.792323944 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.78754479 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.791607506 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.800012024 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.793466314 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.786828088 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.793351069 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.796802741 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.791036622 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.790292464 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.791628476 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.790089916 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.789477343 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.788876925 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.796203039 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.790450937 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.793459541 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.795896957 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.793414541 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.786088142 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.794114793 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.794073658 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.792515673 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.790285719 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.791767992 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.793857914 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.790357571 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.796491397 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.797943397 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.790947236 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.787836586 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.797051367 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.791938325 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.800049345 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.79366903 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.796767418 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.800645442 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.803745205 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.806024654 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.80404319 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.794123443 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.793366313 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.806250428 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.818173815 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.799113853 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.790089135 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.791826986 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.792707678 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.802120541 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.80535865 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.801843558 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.797286114 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.794318818 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.791622601 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.792249306 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.796170535 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.801791747 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.793331042 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.792888194 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.795714213 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.798508317 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.817000076 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.794790389 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.792503557 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.793801618 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.795833184 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.790765566 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.805213764 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.79442924 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.792583946 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.791404239 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.796470702 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.792224065 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.792188855 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.790089176 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.79157175 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.789629033 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.795941437 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.794046297 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.792530454 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.80652006 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.791889404 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.79471172 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.799703219 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.793096182 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.793914853 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.802099452 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.792923078 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.794862236 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.794482746 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.798607496 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.790738147 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.79715787 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.805411273 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.793135931 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.79632764 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.797911788 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.794165172 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.808583562 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.824454454 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.794981834 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.796318785 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.797964985 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.813840976 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.79924469 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.795767004 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.797765547 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.791221027 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.789164153 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.798268938 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.795764781 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.798313429 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.798894138 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.797501134 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.793638525 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.793674994 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.799154397 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.799998623 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.799856912 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.792455649 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.799128242 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.800140201 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.796742874 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.797861673 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.802013756 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.795668244 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.79607464 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.79717514 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.792258713 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.796171194 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.792569256 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.796301699 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.795142174 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.79884525 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.790717443 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.795323447 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.799545301 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.795423095 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.795869904 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.795109259 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.801779171 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.799175074 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.799912628 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.795353743 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.794467756 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.801264961 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.793898058 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.797230278 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.79651151 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.794863195 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.801670259 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.807050213 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.797988101 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.798474758 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.800384393 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.800793406 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.795847485 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.797964404 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.799420219 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.809367524 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.795796226 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.799138535 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.796897448 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.795810432 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.794151948 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.79613521 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.796905596 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.796535343 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.801564244 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.80658743 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.811434172 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.807515108 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.795987678 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.800358689 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.797249032 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.804440658 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.803058775 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.797834123 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.801049443 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.801440911 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.799274716 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.799082101 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.799836677 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.803704149 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.798382586 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.803557222 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.799035514 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.801864352 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.801317121 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.800852856 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.803131947 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.795531188 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.80241704 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.800765298 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.800387626 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.798313214 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.801841647 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.800156875 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.799963341 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.799215801 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.80510358 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.796181743 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.800223657 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.801576569 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.804563862 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.799152936 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.800768675 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.799829535 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.798991907 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.804222576 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.799201963 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.803045008 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.806841132 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.798517542 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.799593936 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.803857975 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.797428847 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.80029369 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.80456654 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.813061315 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.798905906 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.80342614 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.802119303 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.804206072 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.803694499 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.807861352 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.80029524 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.801306298 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.80398498 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.802196463 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.800905908 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.806093368 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.805065974 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.803541572 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.804048949 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.804577144 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.798935794 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.805612404 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.803622168 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.801858832 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.801865593 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.802905244 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.812326331 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.807573488 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.802945635 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.806006292 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.801596834 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.811152098 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.802521492 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.801997371 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.800844355 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.815725243 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.811878913 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.809083063 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.804897496 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.79961176 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.805579794 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.801344756 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.810549906 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.801248057 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.804726013 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.800753328 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.802219616 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.800210618 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.804485692 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.803720597 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.804271175 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.801491724 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.808357892 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.802240542 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.804965257 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.805751115 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.801378904 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.80331299 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.801349509 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.805717681 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.804089073 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.802516678 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.804999664 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.802616745 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.808934576 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.80627521 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.805963612 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.802738682 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.807995596 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.807125152 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.807241734 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.807817292 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.808342424 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.815536502 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.806364003 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.814376824 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.803880268 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.811405969 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.802647584 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.805363583 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.812138703 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.801357422 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.803308071 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.805350729 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.806128639 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.811011318 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.807020918 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.80623879 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.811040867 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.805836834 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.80478076 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.806762545 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.806259096 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.80556257 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.806298764 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.814036488 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.807550387 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.811418736 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.805048729 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.801999637 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.804306196 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.80309395 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.804045406 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.808875547 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.80583305 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.804750867 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.806924832 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.806027398 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.807327782 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.805399733 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.805948791 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.804274133 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.804007377 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.814268765 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.807560021 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.811935031 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.805919556 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.80916941 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.804791617 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.812118305 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.808872856 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.80767307 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.80638212 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.807306456 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.806358302 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.804080907 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.805886605 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.805508714 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.809712155 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.809901234 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.80902736 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.807808694 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.802531275 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.803809803 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.808226033 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.820237618 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.834023374 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.812905406 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.816970502 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.806377876 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.80831481 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.815094403 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.808584156 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.806589193 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.809267499 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.820435065 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.818351144 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.810591291 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.807703209 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.806823315 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.809153158 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.805655174 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.808521478 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.808199018 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.806838819 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.807632134 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.807791853 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.809988683 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.808213223 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.806859839 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.811996066 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.809273681 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.819441689 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.80652679 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.808638599 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.808443204 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.806257108 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.809666299 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.807228793 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.810942263 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.810331307 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.809508301 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.807822497 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.817107699 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.819806904 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.809639289 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.808965136 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.81117705 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.808883747 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.806578639 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.808491784 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.81080887 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.809093114 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.809417513 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.808632558 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.809953235 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.809663285 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.812528673 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.811465498 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.80845136 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.81527897 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.81912892 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.812785676 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.805682538 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.808343632 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.808488265 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.811478211 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.807645803 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.816769185 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.814096957 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.825206485 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.82330665 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.816450993 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.809303907 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.811866281 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.822313398 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.810964977 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.811695516 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.811634747 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.811650269 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.814008177 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.816299237 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.814322583 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.818071148 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.815516286 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.80897791 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.814093964 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.814484758 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.810716719 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.811774929 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.817819069 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.810569468 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.807848123 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.811558365 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.811355267 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.820211293 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.813982182 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.812961533 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.81539576 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.808431151 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.811318174 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.818419591 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.81343653 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.815973101 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.807343785 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.813925636 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.811546896 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.811071051 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.812588101 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.816066434 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.811843172 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.817057394 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.822008869 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.812712782 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.814511515 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.814730155 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.813270561 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.815870033 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.813728917 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.809548086 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.808067857 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.812968426 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.813020827 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.808827963 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.813894986 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.809114134 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.813794162 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.815255587 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.815514134 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.818053386 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.824436067 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.821965123 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.811023373 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.81498608 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.812472306 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.814548355 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.816936524 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.814623251 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.813398947 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.816587764 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.812033301 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.813409757 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.812502227 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.817707103 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.829604067 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.81408833 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.811634151 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.814437418 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.815804327 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.813325393 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.81215289 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.814973737 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.814620992 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.817743063 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.824217253 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.813681223 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.8203603 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.815113433 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.816063151 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.819571794 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.820056952 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.826885218 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.819182144 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.81621874 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.809798079 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.818593958 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.832440666 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.813407029 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.824355094 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.84694862 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.81664745 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.814236461 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.816811657 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.813735517 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.817146329 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.81915754 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.818312282 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.815890496 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.820087912 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.818521276 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.81630762 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.821137353 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.817840464 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.81558599 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.81590179 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.813406925 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.821524175 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.811788838 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.814455562 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.815963572 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.817939293 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.815891014 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.815820453 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.81398731 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.829026573 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.828045204 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.814077791 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.816444272 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.811419656 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.817572475 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.820358243 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.831965041 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.82425256 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.820465785 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.817410664 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.818805969 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.814859854 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.813057049 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.815411737 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.815859777 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.818798621 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.813919973 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.828855315 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.82530193 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.819094724 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.816965016 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.820468374 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.818171991 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.816858001 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.815990241 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.818148621 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.819069935 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.816135813 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.823880937 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.818675323 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.819049906 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.821622852 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.827092105 seconds)
  done (took 1077.882767766 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.813769869 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.816874639 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.813173242 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.815013694 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.814553228 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.815850914 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.818656437 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.815141295 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.817149526 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.816786568 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.814064811 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.818176584 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.815479018 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.817212955 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.817599185 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.8189924 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.815517051 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.817737434 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.813100328 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.81765751 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.813997243 seconds)
  done (took 39.878567931 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.818939442 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.821974119 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.817743032 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.820280249 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.817778213 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.820319966 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.82036349 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.823982998 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.821200541 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.818246675 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.820911179 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.820029178 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.820883615 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.815915754 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.817429333 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.820571762 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.822525899 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.817783688 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.822678876 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.81900859 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.822642794 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.817382833 seconds)
  done (took 41.783430074 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.822913391 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.822978164 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.821235559 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.818726206 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.821618146 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.824027279 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.825256734 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.820874091 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.825887852 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.825329594 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.821347938 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.818766637 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.831762322 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.826899214 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.826070392 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.822252799 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.965457631 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.81985909 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.824484585 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.823911904 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.821573709 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.827337653 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.820578335 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.817489916 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.824616474 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.823667992 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.822263859 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.822116933 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.824991036 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.824812855 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.830140027 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.820785233 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.823873858 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.820781771 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.826621995 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.824366919 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.83038551 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.828080023 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.821776869 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.821420109 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.838228267 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.850501724 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.82276524 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.828211995 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.82679598 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.825727745 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.826236421 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.836438385 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.818774273 seconds)
  done (took 91.312891158 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.824090457 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.826375697 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.825733056 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.825726869 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.825425872 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.825536417 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.825809339 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.825085115 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.825907922 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.820278952 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.824939437 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.82379538 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.819510114 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.824192557 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.825104131 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.821420848 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.819233842 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.821477041 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.822240382 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.82132064 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.822759292 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.824675275 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.825138909 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.82330744 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.824341921 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.824102511 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.823136788 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.827433962 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.822347998 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.823494089 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.825939264 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.827031231 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.825581305 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.825337873 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.826201996 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.824664955 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.830303153 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.823202264 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.823822997 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.821783908 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.827586404 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.831159735 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.827405522 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.830485832 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.827253052 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.828045471 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.826028721 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.825733838 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.824728887 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.828633711 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.830555851 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.827389813 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.827665127 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.823884674 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.826431525 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.82961365 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.821991488 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.825620004 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.828053959 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.828927119 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.825119702 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.82771924 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.825902954 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.830963587 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.829692702 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.829404306 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.825867969 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.827226992 seconds)
  done (took 125.890477428 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.831321838 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.829896559 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.831024596 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.829222859 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.831591862 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.831770732 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.831743936 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.831300557 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.828388788 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.831307173 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.83116515 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.831843733 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.831201399 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.832218034 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.833152402 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.82874306 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.830131063 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.832304317 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.831484803 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.8320888 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.832796635 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.831410868 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.829270428 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.832273791 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.832054069 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.82887643 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.83113303 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.829182481 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.832091287 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.833392553 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.829426663 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.830888551 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.830191133 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.830283114 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.833865874 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.833280625 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.831245762 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.832329617 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.831275845 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.831139751 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.831381391 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.830207298 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.831395181 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.833821558 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.834130686 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.831181342 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.831395471 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.832726291 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.830296683 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.834403291 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.832664554 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.833528853 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.834382793 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.833487574 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.834975735 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.830492038 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.833117401 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.834729772 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.833577343 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.83041043 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.832443855 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.831543624 seconds)
  done (took 115.321956963 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.831680381 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.828735899 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.830438286 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.832015051 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.833080624 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.828018796 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.832213818 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.831533659 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.834742817 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.833462737 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.831054769 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.828103704 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.831757158 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.832591921 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.82861799 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.829217098 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.826613418 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.828710066 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.833728472 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.828966696 seconds)
  done (took 38.377086504 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.829086447 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.835571629 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.831233743 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.834432688 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.832318782 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.830583133 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.834876913 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.834608372 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.83150245 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.833340862 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.836954976 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.831267631 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.833899299 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.830093047 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.834015149 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.833661484 seconds)
  done (took 31.087451754 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.828852265 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.83114643 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.835100143 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.832563486 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.831838744 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.832110279 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.836950131 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.834395971 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.831212852 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.835553251 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.834439785 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.835558311 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.835879139 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.832876122 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.832362186 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.83627146 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.831135693 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.829836098 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.836489956 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.832886457 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.834957988 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.83280413 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.837427211 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.835869225 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.830475289 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.833815743 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.831985445 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.83477963 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.830493845 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.836708061 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.832620533 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.834781069 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.831783769 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.828850563 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.836570638 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.83276973 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.835190757 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.834899216 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.837145801 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.83562549 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.836487357 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.833189942 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.836131926 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.836219905 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.836009975 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.835188407 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.832728933 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.835157957 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.833610713 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.834648058 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.836339338 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.83802435 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.838235903 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.838471284 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.835024152 seconds)
  done (took 102.645496703 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.835722811 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.837765631 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.833316317 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.836345638 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.838336864 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.833994009 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.839334506 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.833805804 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.834046477 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.83755673 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.835584902 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.836978099 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.834407054 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.838295884 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.835961939 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.838123205 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.835432386 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.834096461 seconds)
  done (took 34.813400381 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.834861019 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.836411102 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.839010336 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.834707115 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.83698553 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.83916496 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.833341441 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.837985683 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.837800717 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.835367456 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.835904687 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.838466727 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.837552825 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.837686173 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.834133351 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.838033091 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.841038547 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.837990297 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.840296094 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.836783826 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.840997091 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.837370911 seconds)
  done (took 42.187790658 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.836596375 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.837148904 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.854677722 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.86240855 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.86078554 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.876010363 seconds)
  done (took 12.895447112 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.837418729 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.840351166 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.836431467 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.839218024 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.838973665 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.834053086 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.836324153 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.8349684 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.840379646 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.837292239 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.837077892 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.838955347 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.840185735 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.835756718 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.838579733 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.840322389 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.83714967 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.837200776 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.835394454 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.836838917 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.837599503 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.840473351 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.834732977 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.837036774 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.83650156 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.824813337 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.828579177 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.826288288 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.824863065 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.827972027 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.827849589 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.824733633 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.828203664 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.825938813 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.829820503 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.828523183 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.824999988 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.828508188 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.828754281 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.826462371 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.828188066 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.833790051 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.833953362 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.831306745 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.832224377 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.829128957 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.828575396 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.822725072 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.821983308 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.825903695 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.826392202 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.822066519 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.82462545 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.822977641 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.82270762 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.822147136 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.819272773 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.82009845 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.82122026 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.818245808 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.818383172 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.82174639 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.817290879 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.819681429 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.820973451 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.816808411 seconds)
  done (took 122.535960895 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.817979228 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.817769213 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.816144584 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.816948309 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.816784867 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.817480092 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.8189907 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.818383999 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.819084029 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.819251682 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.820103927 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.817913676 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.816446 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.817678166 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.817929947 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.819280792 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.819965607 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.817631637 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.821447591 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.821680519 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.818846583 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.819730872 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.82038927 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.819069095 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.819371201 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.823252785 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.81788807 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.819674599 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.816973007 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.818204766 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.820313845 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.818606432 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.816956639 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.818892772 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.818246321 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.817618913 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.819369087 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.818911809 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.820289031 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.822135406 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.817785549 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.821021865 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.820997404 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.817971317 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.819222546 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.819613935 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.817323664 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.819291364 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.821294579 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.818820899 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.818955241 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.82088339 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.821509432 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.819036211 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.818930639 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.820537783 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.822748186 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.820670009 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.820390435 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.82281204 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.820223224 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.818164375 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.824612024 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.821638209 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.820656512 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.820361985 seconds)
  done (took 121.828268711 seconds)
done (took 2510.35180955 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.865365715 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.875214259 seconds)
  done (took 15.494339419 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.983848249 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.939412141 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.822639485 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.823797431 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.823176022 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.833417453 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.838696782 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.821962261 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.820859596 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.821786219 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.824320003 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.008491415 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.823979435 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.811377858 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.813374145 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.904773849 seconds)
  done (took 51.630939772 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.815889287 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.817065334 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.827190579 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.820201211 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.816955433 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.832519072 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.853772198 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.816140672 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.880409757 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.830164736 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.939426582 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.827176957 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.822821749 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.884165062 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.831048993 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.834069451 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.910849695 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.894644464 seconds)
  done (took 34.994835339 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.896625903 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.816868549 seconds)
  done (took 10.466985553 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.828791751 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.872429088 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.862167464 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.808825413 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.810827429 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.837271868 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.846289236 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.851216181 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.828798798 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.845678166 seconds)
  done (took 70.138087929 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.81999665 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.816744086 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.818480297 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.818011417 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.805996891 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.810295058 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.812926563 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.808908599 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.484783384 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.84558516 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.816459201 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.821233362 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.80904389 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.813513414 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.807006304 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.83142064 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.929707018 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.806492638 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.805321616 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.811693569 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.809959719 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.877774421 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.824926752 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.808654785 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.841012013 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.48485712 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.812700739 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.817928106 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.924561021 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.802526527 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.804122852 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.804815167 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.805915466 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.198952467 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.095581049 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.803497213 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.817091163 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.810665339 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.799572649 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.933445402 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.804025377 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.809268168 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.738444589 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.092841418 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.914561255 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.847041024 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.160361846 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.819377312 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.804845519 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.83295434 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.8054258 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.801571212 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.815664901 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.330578236 seconds)
  done (took 129.29258549 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.79768045 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.063688714 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.95205233 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.794225499 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.086017761 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.003529292 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.795445855 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.844597334 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.795500472 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.02708412 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.016071512 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.908832834 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.796069414 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.793177598 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.789620059 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.789113662 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.960055389 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.873631852 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.793935439 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.79198928 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.828410386 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.041860986 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.923766159 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.79555294 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.813468396 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.007750713 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.921296799 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.905366442 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.181771002 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.790138233 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.857646113 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.791491331 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.789712837 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.78625966 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.949610118 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.890567297 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.883099776 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.790330902 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.791066677 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.787326466 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.462583562 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.988651358 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.889739555 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.935753036 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.050097308 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.999802875 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.579789365 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.790556379 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.529247939 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.952834086 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.028049973 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.029740311 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.915241781 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.792943701 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.06531746 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.78901651 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.785359648 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.029077695 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.031667378 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.892630781 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.791509608 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.787513074 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.787774118 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.038561864 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.791090832 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.885798327 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.791315509 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.789024072 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.885570025 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.893848469 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.035776993 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.005775672 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.821749342 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.088082288 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.259570838 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.039795486 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.859409955 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.023244044 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.788979743 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.787289753 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.876401069 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.641805451 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.988468984 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.042800547 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.045756534 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.829658678 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.513413859 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.788555999 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.020703586 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.014319938 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.040952735 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.033911043 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.943845697 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.111380085 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.788097671 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.788918625 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.053303208 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.928580224 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.79092778 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.153301941 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.025329783 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.365262395 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.823253137 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.098889201 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.922957548 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.791465459 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.436346304 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.790012823 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.015670376 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.834085178 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.791625799 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.788602476 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.013010306 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.773472603 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.789659284 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.497398843 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.854328878 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.796814901 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.027568801 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.790838911 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.055790392 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.790930671 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.031745931 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.16273167 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.825614423 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.964334499 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.034490681 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.79132428 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.048252897 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.039761102 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.91058005 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.07129781 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.714823149 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.796091033 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.081358373 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.791988903 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.790761931 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.964180288 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.790231362 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.030185576 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.794327601 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.085043052 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.815617475 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.950946667 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.794408253 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.052908446 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.826958294 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.844977955 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.793852668 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.924829708 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.793761999 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.656817306 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.948283437 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.794884366 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.789761322 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.320941849 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.790184213 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.948689398 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.027617096 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.814824981 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.872088852 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.464564962 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.792319754 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.883396478 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.81917559 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.147010111 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.791865365 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.010221124 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.794365325 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.326412154 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.794272108 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.035376641 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.024230944 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.796885731 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.790246835 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.699169454 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.791378901 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.791951201 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.957984519 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.629195702 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.790202344 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.997517339 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.794586864 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.926272282 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.795050459 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.871753957 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.14958603 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.789041663 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.792972203 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.794191793 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.795145734 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.792696308 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.003709863 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.823287899 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.326999433 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.937780223 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.067295891 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.112851043 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.050890893 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.838307352 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.797803818 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.040726295 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.796804391 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.856263297 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.795169567 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.819502602 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.028712601 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.79479565 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.00545626 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.077202848 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.718252029 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.846770988 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.795872937 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.798518114 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.711040502 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.950449757 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.88605245 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.795405933 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.79498891 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.912291363 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.922534848 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.008854328 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.796737793 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.027211089 seconds)
  done (took 886.344735234 seconds)
done (took 1200.113627622 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.79592345 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.793441147 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.782127563 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.794820714 seconds)
  done (took 28.893775282 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.806084227 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.801101558 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.803163822 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.802487173 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.802528999 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.805182918 seconds)
  done (took 12.548164784 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.818830585 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.797388619 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.796601779 seconds)
  done (took 21.142277663 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.870345111 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.185937569 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.915051281 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.230732066 seconds)
  done (took 9.930527323 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.80477832 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.804637531 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.804409067 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.806534129 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.806595562 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.808949216 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.806531583 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.803561472 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.807407933 seconds)
  done (took 17.986625748 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.115143728 seconds)
done (took 96.342360546 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.925039113 seconds)
    (2/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.884263986 seconds)
    (3/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.934715456 seconds)
    (4/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.824929421 seconds)
    (5/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.278251535 seconds)
    (6/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.893247416 seconds)
    (7/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.786258521 seconds)
    (8/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 7.469627351 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.934949536 seconds)
    (10/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.091589581 seconds)
    (11/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.969839843 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.853815011 seconds)
    (13/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.826197111 seconds)
    (14/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.798397342 seconds)
    (15/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.824434398 seconds)
    (16/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.797655329 seconds)
    (17/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.693774803 seconds)
    (18/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.929137212 seconds)
    (19/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.15264485 seconds)
    (20/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.826351223 seconds)
    (21/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.783955421 seconds)
    (22/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 4.106722849 seconds)
    (23/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.818959981 seconds)
    (24/309) benchmarking ("sort", BigInt, false)...
    done (took 6.804495472 seconds)
    (25/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.802280347 seconds)
    (26/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.146084724 seconds)
    (27/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.905839239 seconds)
    (28/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.798151778 seconds)
    (29/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.939605618 seconds)
    (30/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.80176159 seconds)
    (31/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.042255279 seconds)
    (32/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.974646163 seconds)
    (33/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.881604179 seconds)
    (34/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.802103674 seconds)
    (35/309) benchmarking ("perf_sum", Bool, true)...
    done (took 2.921933016 seconds)
    (36/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.941112828 seconds)
    (37/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.800787935 seconds)
    (38/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 3.095016012 seconds)
    (39/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.822247746 seconds)
    (40/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.007675284 seconds)
    (41/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.224913981 seconds)
    (42/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.912702166 seconds)
    (43/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.800516423 seconds)
    (44/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.061899344 seconds)
    (45/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.778020743 seconds)
    (46/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.992152891 seconds)
    (47/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.703196745 seconds)
    (48/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.412723358 seconds)
    (49/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.703403938 seconds)
    (50/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.860109693 seconds)
    (51/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.801928744 seconds)
    (52/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.558410336 seconds)
    (53/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.794165897 seconds)
    (54/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.193800269 seconds)
    (55/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.966182033 seconds)
    (56/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.905970715 seconds)
    (57/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.789176828 seconds)
    (58/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.094363307 seconds)
    (59/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.194393206 seconds)
    (60/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.888438426 seconds)
    (61/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.940777879 seconds)
    (62/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.803820345 seconds)
    (63/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.072737741 seconds)
    (64/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.165243775 seconds)
    (65/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.789891883 seconds)
    (66/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.162393229 seconds)
    (67/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.806218915 seconds)
    (68/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.077749992 seconds)
    (69/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.804701133 seconds)
    (70/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 3.580041714 seconds)
    (71/309) benchmarking ("sort", Int64, false)...
    done (took 5.524212061 seconds)
    (72/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.834346193 seconds)
    (73/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.903971276 seconds)
    (74/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 2.750506924 seconds)
    (75/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.070909414 seconds)
    (76/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.001584589 seconds)
    (77/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.794380035 seconds)
    (78/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.049954493 seconds)
    (79/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.141240097 seconds)
    (80/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.789822015 seconds)
    (81/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.503651399 seconds)
    (82/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.034117266 seconds)
    (83/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.792777316 seconds)
    (84/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.935409498 seconds)
    (85/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 8.000223225 seconds)
    (86/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.140755698 seconds)
    (87/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.057736841 seconds)
    (88/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.937080026 seconds)
    (89/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.098815036 seconds)
    (90/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.810389234 seconds)
    (91/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.344786533 seconds)
    (92/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.80596637 seconds)
    (93/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.957480053 seconds)
    (94/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.013249304 seconds)
    (95/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.984348423 seconds)
    (96/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.933684134 seconds)
    (97/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.290105663 seconds)
    (98/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.994985912 seconds)
    (99/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.162667811 seconds)
    (100/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.317384727 seconds)
    (101/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.809500591 seconds)
    (102/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.980146998 seconds)
    (103/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.217385809 seconds)
    (104/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.81028302 seconds)
    (105/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.882317569 seconds)
    (106/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.928421057 seconds)
    (107/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.496323696 seconds)
    (108/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.941253691 seconds)
    (109/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.31711593 seconds)
    (110/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.828498463 seconds)
    (111/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.182617745 seconds)
    (112/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.106537 seconds)
    (113/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.495411445 seconds)
    (114/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.719476617 seconds)
    (115/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.965493464 seconds)
    (116/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.503784202 seconds)
    (117/309) benchmarking ("sort", Bool, false)...
    done (took 2.254605467 seconds)
    (118/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.826723996 seconds)
    (119/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.154220295 seconds)
    (120/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.084647446 seconds)
    (121/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.835567153 seconds)
    (122/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 7.059696224 seconds)
    (123/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.270427348 seconds)
    (124/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.864215422 seconds)
    (125/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.833278535 seconds)
    (126/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.024228798 seconds)
    (127/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.83388804 seconds)
    (128/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.057567911 seconds)
    (129/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.10794544 seconds)
    (130/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.793393895 seconds)
    (131/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 3.346275874 seconds)
    (132/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.931934997 seconds)
    (133/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.146567682 seconds)
    (134/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.106640147 seconds)
    (135/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.910579463 seconds)
    (136/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.188397177 seconds)
    (137/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.136382716 seconds)
    (138/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.029754727 seconds)
    (139/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.837542009 seconds)
    (140/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.109137419 seconds)
    (141/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.795306366 seconds)
    (142/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.940417287 seconds)
    (143/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.458974252 seconds)
    (144/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.200266793 seconds)
    (145/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.885652108 seconds)
    (146/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.815697741 seconds)
    (147/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.979046492 seconds)
    (148/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.831575338 seconds)
    (149/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.930678786 seconds)
    (150/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.105148544 seconds)
    (151/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.286009962 seconds)
    (152/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.147832865 seconds)
    (153/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.135804833 seconds)
    (154/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.056268734 seconds)
    (155/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.894009434 seconds)
    (156/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.824700915 seconds)
    (157/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.07244417 seconds)
    (158/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.980716675 seconds)
    (159/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.835942818 seconds)
    (160/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.91357087 seconds)
    (161/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.135871454 seconds)
    (162/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.40177873 seconds)
    (163/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.821973892 seconds)
    (164/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.926490893 seconds)
    (165/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.837055113 seconds)
    (166/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.964403115 seconds)
    (167/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.005171263 seconds)
    (168/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.842174602 seconds)
    (169/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.807988421 seconds)
    (170/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.794809537 seconds)
    (171/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.431654092 seconds)
    (172/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.270630211 seconds)
    (173/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.958605789 seconds)
    (174/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.910620797 seconds)
    (175/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.815003696 seconds)
    (176/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.156180828 seconds)
    (177/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.81031208 seconds)
    (178/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.476823373 seconds)
    (179/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.885108197 seconds)
    (180/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.621562432 seconds)
    (181/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.795607963 seconds)
    (182/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.758328136 seconds)
    (183/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.73272437 seconds)
    (184/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.813042412 seconds)
    (185/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.959500752 seconds)
    (186/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.867957024 seconds)
    (187/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.812671902 seconds)
    (188/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.893462314 seconds)
    (189/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.952234352 seconds)
    (190/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.8339088 seconds)
    (191/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 7.014857351 seconds)
    (192/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.881039561 seconds)
    (193/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.811927588 seconds)
    (194/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.400673375 seconds)
    (195/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.606248168 seconds)
    (196/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.918621402 seconds)
    (197/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.028798615 seconds)
    (198/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.895800863 seconds)
    (199/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.029622817 seconds)
    (200/309) benchmarking ("sort", Float32, false)...
    done (took 5.551596037 seconds)
    (201/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.868400581 seconds)
    (202/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.022638084 seconds)
    (203/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.208228382 seconds)
    (204/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.506182052 seconds)
    (205/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.876694574 seconds)
    (206/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.896483269 seconds)
    (207/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.796828644 seconds)
    (208/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.90345315 seconds)
    (209/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.719537201 seconds)
    (210/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.150680706 seconds)
    (211/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.280115651 seconds)
    (212/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.799522416 seconds)
    (213/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 2.162796749 seconds)
    (214/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.82913831 seconds)
    (215/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.936224283 seconds)
    (216/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.088941436 seconds)
    (217/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.813295155 seconds)
    (218/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.959482835 seconds)
    (219/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.914477802 seconds)
    (220/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.994727805 seconds)
    (221/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.814944542 seconds)
    (222/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.914675567 seconds)
    (223/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.172697911 seconds)
    (224/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.809474278 seconds)
    (225/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.359068104 seconds)
    (226/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.04604811 seconds)
    (227/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.835135237 seconds)
    (228/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.918116711 seconds)
    (229/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.901475117 seconds)
    (230/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.902835437 seconds)
    (231/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.002650887 seconds)
    (232/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.945763209 seconds)
    (233/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.113642934 seconds)
    (234/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.27278074 seconds)
    (235/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.634706762 seconds)
    (236/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.297867048 seconds)
    (237/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.403708275 seconds)
    (238/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.194284007 seconds)
    (239/309) benchmarking ("sort", Int8, false)...
    done (took 4.782899092 seconds)
    (240/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.80054581 seconds)
    (241/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.136764375 seconds)
    (242/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.54988474 seconds)
    (243/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.889810069 seconds)
    (244/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.90188083 seconds)
    (245/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.145904229 seconds)
    (246/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.997340709 seconds)
    (247/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.837285984 seconds)
    (248/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.900819436 seconds)
    (249/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.782708118 seconds)
    (250/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.93366222 seconds)
    (251/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.878957882 seconds)
    (252/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 7.069631721 seconds)
    (253/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.100959254 seconds)
    (254/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.841520484 seconds)
    (255/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.983931634 seconds)
    (256/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.182367236 seconds)
    (257/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.454768261 seconds)
    (258/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.920421963 seconds)
    (259/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.942267442 seconds)
    (260/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.967604054 seconds)
    (261/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.819640335 seconds)
    (262/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.79709624 seconds)
    (263/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.277207218 seconds)
    (264/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.068250244 seconds)
    (265/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.792592974 seconds)
    (266/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.896095467 seconds)
    (267/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.992308589 seconds)
    (268/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.191684401 seconds)
    (269/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.98923306 seconds)
    (270/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.827067891 seconds)
    (271/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.915020972 seconds)
    (272/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.800464955 seconds)
    (273/309) benchmarking ("sort", Float64, false)...
    done (took 5.630006816 seconds)
    (274/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.252485817 seconds)
    (275/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.01648396 seconds)
    (276/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.823021579 seconds)
    (277/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.084612699 seconds)
    (278/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.287221829 seconds)
    (279/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.823311666 seconds)
    (280/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 2.046308197 seconds)
    (281/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.88809883 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.908542659 seconds)
    (283/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.952479815 seconds)
    (284/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.912318378 seconds)
    (285/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.059415353 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.966063027 seconds)
    (287/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.886408709 seconds)
    (288/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.904356557 seconds)
    (289/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.113128825 seconds)
    (290/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.820489343 seconds)
    (291/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.340560274 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.571740614 seconds)
    (293/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.844301009 seconds)
    (294/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.104724911 seconds)
    (295/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.870792463 seconds)
    (296/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.21497902 seconds)
    (297/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.927560488 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.856505667 seconds)
    (299/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.195455968 seconds)
    (300/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.497856642 seconds)
    (301/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.361784416 seconds)
    (302/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.04437659 seconds)
    (303/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.818212814 seconds)
    (304/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.063161974 seconds)
    (305/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.932608023 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.841537171 seconds)
    (307/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.723338121 seconds)
    (308/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.90832144 seconds)
    (309/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.82036876 seconds)
  done (took 989.86677453 seconds)
done (took 991.657080576 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 2.066989047 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.847704208 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.830568929 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.851308056 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.940989878 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.86306493 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.843997675 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.83351632 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.878764798 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.882168999 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.829421529 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.862998834 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.834940034 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.828248634 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.832643587 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.845939624 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.143494679 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.852138424 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.847783944 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.840703933 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.848193123 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.826898635 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.880505174 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.861745619 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.835054647 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.834468849 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.838083298 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.848545631 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.942320834 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.834951033 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.832655239 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.845479457 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.140787516 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.848598587 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.824765167 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.84986047 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.84119487 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.838129729 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.835153901 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.864006142 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.223397278 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.858722616 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.835173776 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.833526504 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.831834321 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.83788905 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.834608072 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.836913681 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.845593116 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.849007975 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.223301526 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.879003275 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.835567652 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.835043221 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.841663673 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.832213101 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.8366957 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.852259801 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.848535727 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.848933228 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.128620826 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.858648583 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.836593319 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.849118487 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.842912825 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.262765769 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.862109685 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.834937618 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.229687472 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.867246387 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.262871051 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.872701007 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.835781732 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.849448028 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.866236399 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.146205708 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.849756002 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.830544538 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.840456581 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.834043331 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.848691848 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.849034454 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.842251986 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.832309647 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.847178487 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.872062776 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.842188981 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.835511743 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.840377174 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.856044848 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.840300413 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.84807785 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.837098834 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.828275201 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.845660219 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.840571667 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.839798845 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.83592095 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.840587819 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.844280464 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.225629283 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.884781121 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.829778089 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.830155555 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.834205758 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.849775132 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.224143755 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.869095612 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.855815613 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.881499653 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.838893603 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.130017757 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.862131037 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.849138589 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.841383991 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.839452131 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.830532594 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.13469336 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.24962412 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.87995516 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.837792021 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.836767892 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.854428624 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.836556746 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.831985441 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.559210404 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.857701432 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.853445146 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.951921148 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.845498522 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.869099253 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.833509024 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.838060788 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.879714383 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.854323909 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.867935052 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.838760879 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.852144695 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.852175177 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.833241592 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.846368094 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.844721946 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.83967445 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.840974413 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.830660749 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.868353587 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.852004717 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.849331583 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.856118665 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.959305412 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.833942439 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.130281213 seconds)
done (took 290.170008108 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.90708448 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.825341135 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.931547502 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.836737978 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.916401396 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.92068892 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.834842195 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.833293298 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.833294526 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.248437089 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.832766444 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.834193239 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.830418859 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.832674439 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.916632075 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.834017035 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.835131072 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.169323193 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.836099326 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.909140746 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.828138386 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.834697698 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.834396195 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.208461557 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.832840432 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.831436522 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.907266406 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.835454121 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.174221793 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.834938824 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.830731343 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.173597473 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.925105459 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.85412748 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.847241444 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.842171971 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.918779762 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.839314783 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.920242222 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.919624061 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.936867196 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.87745056 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.831502797 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.837000717 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.842124191 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.838328665 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.834130934 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.864737924 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.826251836 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.834396589 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.174052204 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.846775285 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.839079285 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.83964469 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.835794738 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.869630908 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.83354673 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.839522519 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.931946555 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.836039363 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.8999436 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.235624733 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.209878733 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.840466744 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.836916415 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.836241438 seconds)
  done (took 182.093545831 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.904560689 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.913453791 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.905978973 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.837634761 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.892291952 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.904232488 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.839719479 seconds)
  done (took 14.957319136 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.844299656 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.839090372 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.889856994 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.886665545 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.837018664 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.986344229 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.838077904 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.853005783 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.839132696 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.889225116 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.840648974 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.840819222 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.845948836 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.828739322 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.887567416 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.850491897 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.95259285 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.840186231 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.840784257 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.989426902 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.838409323 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.846857502 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.892674441 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.849773316 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.838857579 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.845002081 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.426800467 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.841242932 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.836988362 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.839034844 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.837254806 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.87979001 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.842376052 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.836680994 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.837396017 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.955063542 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.840447039 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.834962135 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.842460001 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.833601101 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.841938131 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.839103704 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.840927612 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.836899889 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.841200444 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.864974807 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.841346138 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.841277956 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.840926357 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.843453849 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.892131433 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.842142129 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.839477857 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.841547653 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.897983227 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.848785198 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.841758953 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.840998558 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.842276731 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.839221813 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.994705859 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.888452167 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.844839217 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.891700454 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.838726741 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.842187727 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.842260685 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.840183593 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.93557805 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.839698167 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.889146796 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.838433461 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.999709053 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.864214472 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.841328927 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.844089762 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.843763887 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.84202346 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.837797618 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.847940258 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.836681055 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.84399843 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.851065237 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.840329651 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.838049873 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.955029096 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.949221168 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.841316931 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.853153533 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.851424607 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.842067642 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.894665008 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.842051802 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.843416524 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.898019041 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.956973805 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.894526484 seconds)
  done (took 202.977319887 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.850208744 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.85075496 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.843597767 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.858151618 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.841261697 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.844603674 seconds)
  done (took 12.851484383 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.841368517 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.844350775 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.844103833 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.844137419 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.845082734 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.841470347 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.841977196 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.843972461 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.844393771 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.84510152 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.843114854 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.844056389 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.842108425 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.840452425 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.844755008 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.845050973 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.843410325 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.84236195 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.844695077 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.845706508 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.005481266 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.844574921 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.84389857 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.845346055 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.848077367 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.846447305 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.850442446 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.841784417 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.844652644 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.853154217 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.84873243 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.844797457 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.843877447 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.849080329 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.848398748 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.842464602 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.848959821 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.842638461 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.841385509 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.845125939 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.843226357 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.849258014 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.84159087 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.845154714 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.847030015 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.850439816 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.847026953 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.856177877 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.845234352 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.847029585 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.843653987 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.844568447 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.843865959 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.844462546 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.848530159 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.848894624 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.847744378 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.844718666 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.846193808 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.843831289 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.845101719 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.84511765 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.845095656 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.850786385 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.843574712 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.845758566 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.846369583 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.848535663 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.846255596 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.845136799 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.846655572 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.842780483 seconds)
  done (took 135.802046234 seconds)
done (took 550.447361248 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.034359067 seconds)
  done (took 8.80061002 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.842953239 seconds)
  done (took 8.649932102 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.056385144 seconds)
  done (took 9.831928591 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.855214044 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.842932906 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.846943244 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.848095699 seconds)
  done (took 29.18216156 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.006344837 seconds)
  done (took 8.776004296 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.860357424 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.842839796 seconds)
  done (took 15.510116178 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.992103515 seconds)
  done (took 8.773105981 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.930650133 seconds)
  done (took 8.722261716 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.866759245 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.876918505 seconds)
  done (took 15.525761096 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.828556336 seconds)
  done (took 8.601514348 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.449061293 seconds)
  done (took 11.320181386 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.864415369 seconds)
  done (took 8.73936527 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.844171968 seconds)
  done (took 8.617768613 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.819760967 seconds)
  done (took 9.593226225 seconds)
done (took 162.412625404 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.852578381 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.844648782 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.840012937 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.841361428 seconds)
  done (took 29.150990215 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.887779854 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.886815254 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.898572836 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.893013731 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.887686736 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.883492499 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.875346424 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.875544654 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.894689246 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.885770104 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.885085322 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.885404301 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.883422399 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.875812105 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.889557155 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.88425812 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.897127528 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.888887094 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.879336274 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.884364105 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.853206803 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.895048668 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.886068533 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.850072012 seconds)
  done (took 46.97817525 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.052592417 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.921767499 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.003066308 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.901962165 seconds)
  done (took 9.653426966 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.902087613 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.905788705 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.913067603 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.955384603 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.97614062 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.916157226 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.877588546 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.872482295 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.8612031 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.906704527 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.980999832 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.89894567 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.994803938 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.854656433 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.041385991 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.854472149 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.852496617 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.909392781 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.959352121 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.970219119 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.854520107 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.904489202 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.908662074 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.900799364 seconds)
  done (took 47.744238697 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.852872717 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.858982403 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.858776097 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.851312627 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.851873198 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.855136245 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.860574295 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.855809776 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.876202186 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.853829624 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.851048826 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.850758521 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.852574174 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.853985964 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.852362858 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.863924805 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.867533453 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.852747494 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.855304787 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.859301804 seconds)
  done (took 38.909917198 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.849021919 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.700832556 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.200928149 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.103011775 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.842101277 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.847797548 seconds)
  done (took 31.321063202 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.867466396 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.858492164 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.854671053 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.907452366 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.992462794 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.859203403 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.853004606 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.866795762 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.899991382 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.913079364 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.868724179 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.882772808 seconds)
  done (took 24.399110647 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.847821696 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.865784692 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.847300012 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.881323735 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.864757655 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.863245132 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.863515073 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.850294206 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.869264992 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.872567031 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.862360691 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.867912243 seconds)
  done (took 44.13639097 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.943339512 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.735768044 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.927416157 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.573561803 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.322533684 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.060181208 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.383035138 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.191045439 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.853140039 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.123490353 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.817398056 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.088557616 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.107148844 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.852824668 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.853876702 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.338834676 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.148029099 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.088843632 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.880169452 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.567757922 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.970449044 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.242840681 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.607577681 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.9750808 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.065319491 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.985175766 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.132790519 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.817663788 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.991996523 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.890630979 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.863231859 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.853219961 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.123715716 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.237185852 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.952093946 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.862648903 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.510947622 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.570282467 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.845047118 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.568203034 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.786260803 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.979201275 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.860753403 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.849669474 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.786624876 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.235238899 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.19767984 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.856095345 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.564686181 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.849490462 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.863491 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.94344494 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.85976595 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.673334543 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.805061769 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.129861726 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.849657427 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.859387281 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.424277643 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.910408292 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.349232857 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.790223386 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.046688826 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.66790743 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.322413685 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.004390023 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.857051797 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.856472983 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.792286698 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.573635743 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.973042245 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.001483911 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.870513616 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.50752426 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.168235468 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.843308957 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.929283346 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.147325734 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.518477031 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.790964348 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.083818467 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.814169702 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.789058342 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.715045047 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.790278015 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.128438863 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.894395262 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.505758086 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.898575298 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.190614071 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.868270497 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.868355635 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.862106071 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.077647573 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 5.537711707 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.854398518 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.571053273 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.156890758 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.87610336 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.194279506 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.7901321 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.85600092 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.109886381 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.06416833 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.954893175 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.341577902 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.016593987 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.854450904 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.942468026 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.645852274 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.86674398 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.132772975 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.918093686 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.908487719 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.981562151 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.806512363 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.166519911 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.885790519 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.026119475 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.825738729 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.115133443 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.192146837 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.150835769 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.920362131 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.857697202 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.858005876 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.581626115 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.478541414 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.125754397 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.858371471 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.12863512 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.956014258 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.857487955 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.79489264 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.48731946 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.828140118 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.96790669 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.089089346 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.580227088 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.220248114 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.794131075 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.047995317 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.971255582 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.080026006 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.519538924 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.93991228 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.11908394 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.109962032 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.948223957 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.955837908 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.872658406 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.951032278 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.877851452 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.041378211 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.196339198 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.862411072 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.862264778 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.584313712 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.926002591 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.860404585 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.862529606 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.659614528 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.145918969 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.884175612 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.859168525 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.747341749 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.871004436 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.924002406 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.859044961 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.865677634 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.423567857 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.624387077 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.868027633 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.531223145 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.109808107 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.865697051 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.585072993 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.039231449 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.936766441 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.140109243 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.919694486 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.793502187 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.570343263 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.548737812 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.860197355 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.797230824 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.860083666 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.864876304 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.871406142 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.24309237 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.143841036 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.90455505 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.602289154 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.970046768 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.872088039 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.866227112 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.856727075 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.381502701 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.931649029 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.252049064 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.956554113 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.996543157 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.873718355 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.797979411 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.863219527 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.862802943 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.862699061 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.815054965 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.912820411 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.58364181 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.314532622 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.118511677 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.5548032 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.875747183 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.602685988 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.985379625 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.879360594 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.580167685 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.697679429 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.946824234 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.933309072 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.871484183 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.589743701 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.640082172 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.430683292 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.201844124 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.17894674 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.30922164 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.099142229 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.215684522 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.206279667 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.095957133 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.391009196 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.921881323 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.205769205 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.804527694 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.944813373 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.513290796 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.215388017 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.871061051 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.090427824 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.258368202 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.647638817 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.015989308 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.072269475 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.892246623 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.546040388 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.876888521 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.062512615 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.005966734 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.668729201 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.077966592 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.195968612 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.598392444 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.962839557 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.863972718 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.587402463 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.947403118 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.566992991 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.227561814 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.260462649 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.831400423 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.355837907 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.865744031 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.310930759 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.223597164 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.052590083 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.947720795 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.797333577 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.874500488 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.873583269 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.866523508 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.835366329 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.807526216 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.159506267 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.87503919 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.096326632 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.002021764 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.131246467 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.769806727 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.869262383 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.867618062 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.171559932 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.435666969 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.092960892 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.081249178 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.431678197 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.867152132 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.801376469 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.798252965 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.55799669 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.875751752 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.84150399 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.094123757 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.052179393 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.816096512 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.140518389 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.158012156 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.121864386 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.883154088 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.146791701 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.141401802 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.599002291 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.893077142 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.967982105 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.593799539 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.977928221 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.134724548 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.099213299 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.663771535 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.092246266 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.936776035 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.682206037 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.865446522 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.077616001 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.13520877 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.831701056 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.110059607 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.584046104 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.876773063 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.2458587 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.927553256 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.863958619 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.033563079 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.056412629 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.874543314 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.948375185 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.872971128 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.875504962 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.873783514 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.909799974 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.888203597 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.997152792 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.883584643 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.955791685 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.941741145 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.451590641 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.883748616 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.155773381 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.235472962 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.203071604 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.930737617 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.865244651 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.868800811 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.805651921 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.001665296 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.319730159 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.137939562 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.998647516 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.164608191 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.897731128 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.602886375 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.02499914 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.162884033 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.142028442 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.761690178 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.76660376 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.958753073 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.13230472 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.875887982 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.082121714 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.104708043 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.198175381 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.341320344 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.888457028 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.290839955 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.142425219 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.233938011 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.869084602 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.4594511 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.87086512 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.648278197 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.908675109 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.961992007 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.141774279 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.880288987 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.25815447 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.890749025 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.063811675 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.384813143 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.713521338 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.225043067 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.860801662 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.932691467 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.148981063 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.263316 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.180462445 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.944553086 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.880868359 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.582260064 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.008906734 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.840562279 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.187454307 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.869528249 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.082997732 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.580464778 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.878583439 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.155529644 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.177132702 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.871707962 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.868052322 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.936368327 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.878943268 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.091456201 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.146818991 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.123356957 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.880453533 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.878313128 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.686721605 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.153146468 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.923820504 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.805304973 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.871527582 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.966622564 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.12102379 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.891677792 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.55878813 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.583631875 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.17949265 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.788629692 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.890788982 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.157114485 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.291981713 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.202732773 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.403629841 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.11394692 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.426650081 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.589796573 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.2249016 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.876550394 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.156718726 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.233043413 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.872206323 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.271735716 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.964489585 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.148068746 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.190653999 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.877660276 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.06262886 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.93839506 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.10888642 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.555394518 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.825847825 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.88312539 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.944951253 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.886147911 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.011516539 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.894249738 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.99320294 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.941707794 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.692040301 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.383402232 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.891034458 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.872728588 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.634122728 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.511800474 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.997639554 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.029079214 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.88864134 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.605199737 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.184350456 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.140561149 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.441955063 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.962073282 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.890123538 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.887428528 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.815222187 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.08527724 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.269008706 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.189052749 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.292937646 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.000841205 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.886749835 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.101583856 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.097036563 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.846060557 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.045937865 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.331637839 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.005288307 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.65501284 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.567897172 seconds)
  done (took 1682.440680925 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.895355856 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.902973987 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.893197006 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.895798015 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.913842769 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.947504519 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.887813507 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.91663676 seconds)
  done (took 57.068613479 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.881979467 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.105761723 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.892456448 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.882333154 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.917446894 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.887999929 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.07872897 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.894846258 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.908480064 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.893306132 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.888269208 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.892968808 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.23953751 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.909120306 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.882870168 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.926932472 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.893475877 seconds)
  done (took 74.795767532 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.892494642 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.162456845 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.92132063 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.913555003 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.842677754 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.898125512 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.918617232 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.922259332 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.89273383 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.124199013 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.232140021 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.906384688 seconds)
  done (took 90.4443639 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.901703238 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.893802696 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.897169619 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.894294234 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.895606722 seconds)
  done (took 11.307824198 seconds)
done (took 2190.205761342 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.145544499 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.113043622 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.129690686 seconds)
  done (took 6.055700367 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.040780217 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.085764723 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.208399799 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.224769283 seconds)
  done (took 10.380815994 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.183925534 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.261641927 seconds)
  done (took 6.263483245 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.258590743 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.916810389 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.289546889 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.890533605 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.891554558 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.893929968 seconds)
  done (took 22.500270656 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.896524469 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.895034837 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.898573417 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.894930774 seconds)
  done (took 9.403500761 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.874570177 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.622559818 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.877430305 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.892370757 seconds)
  done (took 21.085602196 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.647878735 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.296233538 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.645169261 seconds)
  done (took 9.408077941 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.408658382 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.743782014 seconds)
  done (took 8.97456737 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.149359587 seconds)
  done (took 3.971675704 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.924954698 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.169995233 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.44008968 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.427524934 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.517334327 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.74048267 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.216218907 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.135317543 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.341092286 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.364003868 seconds)
  done (took 25.101118638 seconds)
done (took 138.568568542 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.271722152 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.269243043 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.098628815 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.236618309 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.130144017 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.09832146 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.101893454 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.218805643 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.741196443 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.736132615 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.285035125 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.165770251 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.048769929 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.266477952 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.053277373 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.138833446 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.118489503 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.292162952 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.931605707 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.128065981 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.092384824 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.862636336 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.120163048 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.880313477 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.134544844 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.053631013 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.452413994 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.148371242 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.105114247 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.492869401 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.070177008 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.324565082 seconds)
  done (took 171.889502113 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.672418137 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.911349455 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.9149029 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.894608286 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.345555794 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.921751201 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.89762389 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.895583058 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.289578765 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.253289979 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.920150619 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.357376182 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.919148282 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.895394957 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.923647894 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.893257271 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.461577864 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.769936833 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.918210468 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.92249316 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.92675571 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.164801143 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.920282035 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.207503206 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.411302716 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.918616572 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.887207332 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.920316002 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.91851468 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.920658756 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.921469297 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.899160109 seconds)
  done (took 209.836326875 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.897332819 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.89707099 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.901489415 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.90016216 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.915866207 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.910906662 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.89872751 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.899827156 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.508026978 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.553628984 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.913117108 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.913531388 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.915204234 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.894766433 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.915030113 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.892821567 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.917546331 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.91693073 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.917646468 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.916519969 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.91386233 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.565595947 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.911211815 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.523054413 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.897001634 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.905102306 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.895838279 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.904442963 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.909501094 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.910653042 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.914092296 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.894421038 seconds)
  done (took 221.392749889 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.101206219 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.905724485 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.904254189 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.840657178 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.904948678 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.902197312 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.841629643 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.094816046 seconds)
  done (took 19.343477087 seconds)
done (took 624.29381001 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.417270418 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.257662563 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.081307747 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.929822084 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.1585434 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.964467786 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.924877208 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.995437036 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.6581952 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.9979978 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.579259707 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.942894397 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.666997219 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.955506532 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.047251693 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.979598232 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.519277247 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.616766286 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.108318841 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.976469511 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.098493521 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.863180898 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.008377978 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.686800408 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.691256841 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.903042284 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.094463747 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.525693122 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.938039394 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.0894865 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.718864251 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.310577017 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.93969412 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.925213437 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.977825626 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.962405368 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.25973595 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.93783824 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.044114124 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.660550819 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.983453283 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.533025177 seconds)
  done (took 104.752989095 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.894923842 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.893396605 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.891028367 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.893706402 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.896804388 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.895261175 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.893513461 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.893696289 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.890397798 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.890196977 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.890623273 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.893645697 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.891757246 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.893007341 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.892502373 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.89229918 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.892309453 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.894656829 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.894121878 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.894488978 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.89498109 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.894789844 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.907910363 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.892451074 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.893755227 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.89247272 seconds)
  done (took 51.075185998 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.910216007 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.059457366 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.174015738 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.929911094 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.906078076 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.910208941 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.92385051 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.912100357 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.907537036 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.910980781 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.004464311 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.915334033 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.928010439 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.174103702 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.927126022 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.900741399 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.899492594 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.899696594 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.057319151 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.91825945 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.925012092 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.90393287 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.920875525 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.91147988 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.901126732 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.905708326 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.903649275 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.373473596 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.911980884 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.993742983 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.946861267 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.927766378 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.31555238 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.174888753 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.958073565 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.908939299 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.898041096 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.993500994 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.904692052 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.896013536 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.914773968 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.90283722 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.158144592 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.398176022 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.910079216 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.896312539 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.373531465 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.996638318 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.930582483 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.902720682 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.157187488 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.908203325 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.890556329 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.888617873 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.924073568 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.898938863 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.885734955 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.216964146 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.899629953 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.905456057 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.896623375 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.885518885 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.0477583 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.897236946 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.036243678 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.901094063 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.893905462 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.887983394 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.148300111 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.903805578 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.393733962 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.902128394 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.885562881 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.976515109 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.041959783 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.392660946 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.896391186 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.046540912 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.314581011 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.909532645 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.889040858 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.3427676 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.913533894 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.889244184 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.884073244 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.885263903 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.880038893 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.926920555 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.898509038 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.306898008 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.391483902 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.224814325 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.909291154 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.896038278 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.880667025 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.205985405 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.889855302 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.881113416 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.136750764 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.396408342 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.896346967 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.887786743 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.37259552 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.89767754 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.9021197 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.890267816 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.148821169 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.899246825 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.92720959 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.880603704 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.886520766 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.884511958 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.900988299 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.889044799 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.882046512 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.361495431 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.996218222 seconds)
  done (took 234.928376976 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.878372414 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.903791941 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.875909918 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.878232896 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.875428302 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.88064781 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.874910239 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.874234818 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.878611956 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.873250308 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.872792361 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.875602524 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.874482111 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.881719624 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.510550274 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.883412183 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.530390079 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.874997071 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.875963027 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.882277452 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.55696805 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.88835439 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.872620804 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.87226068 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.872415192 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.869083289 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.97072079 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.871458538 seconds)
  done (took 168.440215443 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.875102762 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.054900813 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.891936139 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.913811669 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.87958678 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.868441889 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.893496043 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.892855906 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.876672142 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.865853639 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.866978772 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.929029052 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.879443525 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.00817939 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.898796808 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.900122503 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.970891811 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.87455308 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.867332291 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.861593063 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.891748552 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.859750054 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.925140494 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.992028117 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.882959837 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.97734227 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.868781266 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.864180152 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.861824884 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.979661648 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.876385104 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.92114551 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.89096784 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.879450378 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.982807894 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.974848099 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.962272418 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.886543747 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.86311554 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.858798778 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.853960611 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.842727517 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.975273307 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.874439277 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.856477081 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.9629538 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.8738809 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.855869703 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.863454223 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.854557748 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.867656636 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.875104273 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.924097719 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.986104133 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.888113032 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.880783701 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.877403681 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.131340613 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.86326108 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.953331424 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.848520558 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.972479299 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.873223201 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.839259789 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.851835218 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.85639151 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.880775929 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.882337147 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.953790929 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.855715537 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.947801333 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.886083652 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.856718287 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.846652088 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.850349189 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.966955717 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.968730554 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.881116524 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.887269751 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.881047021 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.843258298 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.846841415 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.837411353 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.862768196 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.847794712 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.96004031 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.960987113 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.852163165 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.843280097 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.84344118 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.845209672 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.867484502 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.969656215 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.874744247 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.936714301 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.909297373 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.914430822 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.853229968 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.851973748 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.843626714 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.901931786 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.855575215 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.850657591 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.165269827 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.908499905 seconds)
  done (took 201.165264312 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.316967296 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.889442778 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.899589535 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.143701887 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.271240708 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.700772325 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.88337042 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.882947952 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.90746568 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.072190935 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.952867383 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.902189085 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.869997418 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.855808426 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.884918452 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.903610577 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.89186676 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.224061862 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.008573721 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.984797884 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.861925284 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.199092283 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.200476264 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.324908917 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.916621997 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.232355745 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.557434121 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.01925765 seconds)
  done (took 60.528245439 seconds)
done (took 822.718768965 seconds)
SAVING RESULT...
DONE!
