cset: moving following pidspec: 1876
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.416752982 seconds)
loading group "string"... done (took 0.604622334 seconds)
loading group "linalg"... done (took 7.800539583 seconds)
loading group "parallel"... done (took 0.164794858 seconds)
loading group "find"... done (took 1.269048437 seconds)
loading group "tuple"... done (took 1.969767797 seconds)
loading group "dates"... done (took 1.305667667 seconds)
loading group "micro"... done (took 0.247092443 seconds)
loading group "io"... done (took 0.976093851 seconds)
loading group "scalar"... done (took 39.101327087 seconds)
loading group "sparse"... done (took 12.342154442 seconds)
loading group "broadcast"... done (took 0.988823122 seconds)
loading group "union"... done (took 12.46935922 seconds)
loading group "simd"... done (took 4.649718567 seconds)
loading group "random"... done (took 9.604745621 seconds)
loading group "problem"... done (took 1.880952102 seconds)
loading group "array"... done (took 21.74524138 seconds)
loading group "misc"... done (took 1.713987853 seconds)
loading group "sort"... done (took 3.579924145 seconds)
loading group "collection"... done (took 17.834554109 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.529113537 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.130708393 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.132954722 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.125335854 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.152508099 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.120171843 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.132147302 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.090883476 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.889581327 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.154832378 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.123079393 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.442173304 seconds)
done (took 5.372860925 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.18088496 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.087285904 seconds)
    (2/2) benchmarking "String"...
    done (took 0.087722395 seconds)
  done (took 1.339284435 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.069793364 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.130100352 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.071767223 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.071381821 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.071674355 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.07032017 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.070090803 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.070604462 seconds)
  done (took 1.721265177 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.076846892 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.07348744 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.069702723 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.072254995 seconds)
  done (took 1.463364415 seconds)
done (took 5.950875626 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.820239595 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.216849281 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.193860734 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.43075991 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.133325905 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.16517926 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.643471883 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.340100178 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.195315895 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.084578252 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.113770162 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.352100828 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.114191344 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.641621218 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.07851746 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.095327136 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.14734933 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.426225618 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.071181262 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.085811706 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.092340584 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.132269656 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.092815536 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.077830432 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.152212339 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.071552147 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.141326658 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.084105268 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.070297338 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.225502003 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.175843285 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.669269149 seconds)
  done (took 10.547798981 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.105153645 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.105406109 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.072743054 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.130112752 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.107480507 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.073449898 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.080018194 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.071694418 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.094817005 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.136050372 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.09679325 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.108108979 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.06977655 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.072823374 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.08901868 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.210327357 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.084245562 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.086701787 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.075106649 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.083566803 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.112152875 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.08223909 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.085377364 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.08542235 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.13314983 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.185264165 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.099908049 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.103352878 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.071008888 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.087088751 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.11834943 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.133985873 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.071197129 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.070241679 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.131600822 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.098801671 seconds)
  done (took 4.828485086 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.055392538 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.150201105 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.093707846 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.140396353 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.068821707 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.114136856 seconds)
    (6/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.089643543 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.070130954 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.084967556 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.216888021 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.34505916 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.63976203 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115253881 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.11087249 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071184265 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.072842811 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.070759484 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.593631063 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.102158479 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.113139639 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.08690755 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.074900545 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.073536235 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.362933983 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.073210421 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.068280956 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072849236 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.061350249 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.131320883 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072879271 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.986529252 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.16918925 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.07098914 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.104620708 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.171036216 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.227471658 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.149598316 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.073021732 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.068835112 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.163708047 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.075318911 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.070882163 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.089244583 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.108593983 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.123068136 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.069795495 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.071020823 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.170613493 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.068871912 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.084331354 seconds)
    (50/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.068363169 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.107889316 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.155916756 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.082949936 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.068966805 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.264378159 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.092890611 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.074128015 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.068392524 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.176013123 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.135035588 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.072174425 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.070873459 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072600552 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.074461233 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.364330072 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.07015956 seconds)
    (67/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.096645213 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.071370772 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.080303284 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.180540327 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.073438425 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.073845934 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.076884721 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.076447047 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.094516611 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.070088218 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.079102025 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.069867306 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.070625066 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.07036377 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.087184278 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.40641925 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.07086451 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.072544112 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.068698019 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.093653592 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.100128001 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.175811957 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.070293384 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103736682 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072861381 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.07041751 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.112524171 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.071438009 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.087558112 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.073923169 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.116833181 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.070943539 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.110595131 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.071352932 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.100430531 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.074337336 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101866242 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.084420154 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072532504 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.450734564 seconds)
    (107/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.068615155 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.069282834 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.068670469 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.073190923 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.069699338 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.071717562 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.071155176 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.083503413 seconds)
  done (took 22.584062494 seconds)
done (took 40.186196488 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.269195464 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.076742924 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.077522273 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.077687876 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.077413677 seconds)
  done (took 1.84196967 seconds)
done (took 3.084888534 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.128632243 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.104780211 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.068915702 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.102127964 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.067999458 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.107288394 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.105857682 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.08218075 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.10738508 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.068636988 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.102798064 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.068418068 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.068186283 seconds)
  done (took 2.438608292 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.089049009 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.089393033 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.073625698 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.087869996 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.067615453 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.087423384 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.086702837 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.093656095 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.086393056 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.077069631 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.0676032 seconds)
  done (took 2.136185698 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.087208799 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.088955673 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.074203236 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.086728339 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.070002246 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.086983308 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.086313857 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.091071829 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.087282785 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.07846441 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.068163468 seconds)
  done (took 2.135998968 seconds)
done (took 7.932952659 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.082017641 seconds)
  done (took 1.300185084 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.602954196 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.129474548 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.086734382 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.115952023 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.199127814 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.12265806 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.276961072 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.091356847 seconds)
  done (took 9.033831573 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.094329001 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.086213668 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.074112261 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.075570966 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.072147448 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.072685861 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.073622692 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.074995868 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.074004149 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.073512245 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.074482839 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.072424825 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.076169192 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.07636507 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.075696156 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.075029565 seconds)
  done (took 2.514963925 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.097670382 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.097083925 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.077832778 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.078650586 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.075894269 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.075847123 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.078892863 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.077102363 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.0748996 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.076888362 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.07869757 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.077046857 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.075148644 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.068129626 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.077523047 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.078886822 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.074541224 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.077863651 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.07844024 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.079527283 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.078545686 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.067937166 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.075202426 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.077467893 seconds)
  done (took 3.210689185 seconds)
done (took 17.28561811 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.111088955 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071513974 seconds)
  done (took 1.4078252 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.085575068 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.086824251 seconds)
  done (took 1.406479393 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.087176213 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.069159997 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.094577126 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.081712084 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.069698497 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.069431637 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.091560372 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.069379827 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.069442739 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.069719446 seconds)
  done (took 2.010036124 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.072875504 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.081036483 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.07388002 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.085175108 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.077436237 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.067826533 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.076642598 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.071642478 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.08127914 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.066472098 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.075208466 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.087191396 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.074971294 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.088269658 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.075847727 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.072357147 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.074829063 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.070964403 seconds)
  done (took 2.615125393 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.069852323 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.070438822 seconds)
  done (took 1.386803481 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.072410606 seconds)
    (2/7) benchmarking "second"...
    done (took 0.067349232 seconds)
    (3/7) benchmarking "month"...
    done (took 0.070353526 seconds)
    (4/7) benchmarking "year"...
    done (took 0.070302934 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.067237776 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.065874611 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.066933201 seconds)
  done (took 1.723904886 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.394613013 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.12016071 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.326074229 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.075175283 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.085589559 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.270381506 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.069787228 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.074851165 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.07491602 seconds)
  done (took 2.77906362 seconds)
done (took 14.570752302 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.08590905 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.091004437 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.100364985 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.394430881 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.095235227 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.070459609 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.118000469 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.1928609 seconds)
done (took 2.403229554 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.218070262 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.727180818 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.448375463 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.219207137 seconds)
  done (took 2.642715031 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.360564614 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.093625597 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.063385831 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.071693884 seconds)
  done (took 1.848601804 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.071825129 seconds)
    (2/2) benchmarking "read"...
    done (took 0.073590911 seconds)
  done (took 1.401522917 seconds)
done (took 7.364059631 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.071448717 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.091706852 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.070019954 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.070235131 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.068069217 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.069672137 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.067355434 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.067910855 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.069817041 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.069744786 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.068415662 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.069730524 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.069708589 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069699696 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067099638 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067007455 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069610399 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.067197618 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067460019 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.067103595 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06719644 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069945437 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.067583039 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.067397542 seconds)
  done (took 2.960742212 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.088775938 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.070402591 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.07503405 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.07456778 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.073502692 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.074491039 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.074970083 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.069924647 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.075087162 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.072379005 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073075093 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.073159648 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.071673859 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.073343485 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072009387 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.072828869 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.075476296 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069347765 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071875728 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.073551003 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.188618901 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070739476 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.072887798 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074345198 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.072782224 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072733963 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.072581008 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.069214003 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074603822 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.072477756 seconds)
  done (took 3.582014186 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.074660579 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.066690239 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.067647954 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.074228181 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.067819491 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.068279966 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.067104336 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.0676327 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.068089339 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.066931077 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.068263569 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.06698082 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.06721069 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.068184735 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.068180087 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.071357754 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.083064125 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.067667755 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.067421661 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.067991727 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.070482018 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.067255958 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.06700621 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.06656415 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.066634915 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.066848865 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.067525495 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.067154484 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.067860029 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.067384062 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.070078703 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.07096108 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.066975093 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.074559947 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.070856698 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.067143536 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.07150123 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.066900625 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.068007912 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.066760971 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.066335248 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.066791341 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.066811835 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.07555108 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.067812159 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.068783318 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.067151969 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.069345532 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.067479906 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.070553852 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.067113776 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.067049838 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.069130796 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.068632742 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.071701158 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.066643668 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.067846298 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.066735456 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.068101722 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.066894283 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.067316479 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.066776944 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.069956321 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.068037382 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.084105681 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.074976956 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.067693041 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.069665766 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.068640181 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.070708826 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.069006676 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.081932142 seconds)
  done (took 6.246628344 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.094466292 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.09152524 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.069745557 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068804244 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06595781 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.068836348 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.073860937 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067961353 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069525157 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.086293675 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067799574 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068768707 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069163707 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.071201528 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06799231 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.06921099 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.076298326 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064946796 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.067600078 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.071131088 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068169001 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.073044043 seconds)
  done (took 2.868317451 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.16124853 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.073938271 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.111161534 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.079142225 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.073657939 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.078678698 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.073423748 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074015255 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073355176 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070921204 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070905101 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073450433 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.073454993 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070832672 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070991611 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070951235 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073383879 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071535343 seconds)
  done (took 2.716775528 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.081765631 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.069858789 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.091478178 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.069828789 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.069423191 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.072017632 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.074218502 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.078484018 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.072347296 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.069787849 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.077564584 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071733844 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.072168056 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069827051 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07280086 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.06988144 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.072272436 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069804231 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077600559 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073539517 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.073673378 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.077434942 seconds)
  done (took 2.89780911 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084467121 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.072026016 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.085296908 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.071528093 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.066540566 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.068214035 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.073676401 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.069216353 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.073870507 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.071860546 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069644617 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.067844021 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.072310576 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069203941 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.072407181 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069669536 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071515996 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.069404421 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071757687 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.065448722 seconds)
  done (took 2.708794643 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.091940483 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072006045 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.071531587 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079607155 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071342325 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.072159511 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078865432 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.071699438 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071545309 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.091875717 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.071161663 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.072211675 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078834234 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.076474979 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071323801 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079157626 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079050145 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.078609812 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.07156661 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071337169 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.092316437 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071593547 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.078832746 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.071872245 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.0717963 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072023915 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071988281 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076235659 seconds)
  done (took 3.40348499 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.070404825 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069670909 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.068075496 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.066952376 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.067507263 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.068024885 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.067142277 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.067015673 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.069989216 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067327815 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.070310021 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.069920531 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.069906088 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.069985828 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.0696922 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.07052512 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06965355 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.067779022 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067385187 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067758087 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.069644371 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069376344 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.06951874 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067710709 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067140414 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.070143409 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067154425 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067306442 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069695775 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067801502 seconds)
  done (took 3.338172286 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.081260446 seconds)
    (2/2) benchmarking "in"...
    done (took 0.077459916 seconds)
  done (took 1.43852548 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.066886502 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.085072382 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.06755285 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.07506048 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.073825428 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.070768542 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.077322033 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073138358 seconds)
  done (took 1.863752948 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.088027811 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.082611388 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.07121026 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.08286363 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.081386635 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.088249986 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.141401219 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.070663407 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.076834934 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.068256603 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.086408071 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.07006049 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.077142449 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070696682 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.077122871 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.077468978 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.067760186 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.075810553 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.072711002 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.068811506 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071202496 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078882354 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.073001019 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.065281043 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.071601659 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.09415891 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.081971778 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.069835329 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073921561 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.078007054 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.075942959 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.064676016 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.070319215 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.071010857 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.06812179 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.080409557 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085291343 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073411136 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.079138175 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071738744 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.079739357 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.064979493 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.075094999 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.077358784 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.081460804 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.070546694 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.071822504 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.064812179 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.068095856 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.075197749 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.065387801 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.071080388 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.064637959 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077316551 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.074110237 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.081131106 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.069086116 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.072017913 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.072961967 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.074154491 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.077581088 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.072070268 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.074473002 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.070003416 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.080939112 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.075419279 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.079386703 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.065476058 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.064222496 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.068636818 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.080282122 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.09445083 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.077142626 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.071030364 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071534637 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.067774304 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073745331 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070694929 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076423558 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.077476935 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.070101359 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.076295822 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077593362 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070997962 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.073693956 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.077942978 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.068848789 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.073142969 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.068649544 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.087379496 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.069499102 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.068015995 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.06840752 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.081360748 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.07375605 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.070653522 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.068490522 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077731797 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.064342992 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.070475962 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071209785 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071243068 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.080435715 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.074775676 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.074414023 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.078908769 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.07739899 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070360084 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.072960596 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.066288695 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070200802 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.069443602 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.076478276 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.063035508 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071941162 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.199013731 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.071931512 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.07989749 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.069949682 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.07081179 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.079673787 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.077446956 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.070048283 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.067810292 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.073797917 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.071038481 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.073825478 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.079505583 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.06927563 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.065164347 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.065321363 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.073805317 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.070538108 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.074996396 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.074362128 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07378663 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.064856803 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.068372773 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.075047727 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.079273652 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.070953067 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.071932871 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.076518752 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.072499936 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.070039789 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.077296909 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.073486928 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.069449969 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.07683183 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.072146053 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.065450347 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.073504624 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.074143362 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.069870867 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.074455555 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.074269516 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.073653437 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.072032375 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.069410721 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.076875733 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071258707 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.069493784 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.071187971 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.069191302 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.081440274 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.072655117 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.065045389 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.067325433 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.078823617 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.068998704 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.069944416 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.069917094 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.07277721 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.071636877 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.067797522 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.069640596 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.072147209 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.080985379 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.073953575 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070860949 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.075992527 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.081373407 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.069533395 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.072389681 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.070108187 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071627947 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.070343865 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.079501937 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.076395198 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.074751492 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.072710021 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.066744759 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076287036 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077800705 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.069377875 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.067626036 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.069159815 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.074071379 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.075888524 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.074179563 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.070539917 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068849365 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071008618 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.073623795 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.073394978 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.070064882 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.069511925 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.076250956 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.068457891 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.077659703 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.07062031 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.081681876 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073645229 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.065612157 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.073231519 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.069306108 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.076809706 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.065173862 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.06893136 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.069612301 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.071045766 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.069524846 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.072455671 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.064007837 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076845097 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.077898941 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.070778742 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.069202157 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.068773061 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076423083 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.071150084 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072863003 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.073001944 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.206205797 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.082144804 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.070752419 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.075176453 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.083059681 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.071284569 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.064597646 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.077445022 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.069334672 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.06947611 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.070921963 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.068843901 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074567702 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.078520497 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.078286941 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.064184417 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.073316059 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.068965619 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.069809562 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.065601744 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.075645367 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.074497508 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.072525909 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078424977 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071769323 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.071916017 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07501695 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.07036891 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.071643359 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.07246589 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074357565 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.071308772 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.072485184 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.070605127 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.073764228 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.070191152 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.068487178 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.071998817 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.07010214 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.071924556 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.076044846 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.070056729 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070806629 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.073346524 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.07118058 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071322233 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.07148637 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.070186666 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.074089413 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071845394 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.071375904 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.072872044 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.065125897 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.077993432 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.069979652 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.079137817 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.070720489 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.066669191 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.077119883 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.073279187 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.076309902 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.071650719 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.071976608 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.071831923 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.070054826 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.07344331 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077339137 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.068108905 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.081203948 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.078476256 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072291377 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.074120151 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.071223098 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.072056744 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.070130095 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.071482796 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.072045256 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.07085963 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.071036016 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.075938621 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.07291486 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.070760818 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.072148952 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.070978275 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.07096011 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.071599703 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.064621053 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.069867636 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.070330965 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.073201806 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.079868269 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.071364514 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.070622886 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.06969896 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.07139121 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.069775491 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.067770897 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.077908198 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.078441028 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.071091171 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07759842 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.069579281 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.071866199 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081369242 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.064433593 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.068432752 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.06754746 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.068134387 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.077468769 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.07118596 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.07942807 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.070713297 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.069370294 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.066700199 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.070302038 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.069072663 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.064067255 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.067066073 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072635174 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.068750223 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068389912 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.203239867 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.074079274 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.072491622 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.080712427 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.07075526 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.070983808 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.071189742 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.067419987 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.070662862 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.070229489 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.073745506 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.071409107 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.068712165 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.067961768 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.070383726 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.072017705 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.071779424 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.071254889 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.072210921 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.077813365 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070431058 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.073876645 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.073596806 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.065036551 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.074764192 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.070468432 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.070433778 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.069468743 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.074063968 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074405897 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.071330975 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.080185323 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.071644894 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070972371 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070799101 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.068076576 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.06956348 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.071328603 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.070171765 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.069404921 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.072320989 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078196012 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.067736555 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.073406723 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.071395241 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.07067028 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.076394997 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.070929326 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.074240314 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.07632768 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.070531649 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.072643484 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.079289969 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.074892857 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074211799 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070936994 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.072189754 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077107607 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.069904715 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.077596919 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.071262898 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.071433964 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.072650009 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.069020431 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.0714188 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.070674241 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.071016574 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.076861756 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.071790777 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.069022721 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.069572068 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.068401534 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.072046993 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.072865991 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07904458 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.072698042 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074422409 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.065302768 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.067670514 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071560441 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.068907937 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.071602415 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.073572875 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076385949 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.072753883 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.070577281 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.069265407 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.079624131 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076185249 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.074080667 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.068320368 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.073827002 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.070824021 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.072611363 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.071282866 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.070786642 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.071820437 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.074740062 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.072209828 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.069907899 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077435513 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.074359935 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071468794 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.072339004 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.071787597 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.071177303 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.065198955 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.070653536 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.072551585 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07515574 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.073212782 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.070322485 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080121537 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.067712102 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.070245651 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.072538509 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.068848525 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.074372961 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.064579298 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.071142256 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069907004 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069476549 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.197722622 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.070115704 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.06952316 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.07272844 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.069458361 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.065902082 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082324613 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.079651055 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.074247505 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069651282 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.069504043 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.066334704 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.065134325 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.070242832 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.072102138 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.072579829 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.080826893 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.069972547 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.069677252 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.065676068 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070704645 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073555307 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.073659904 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.067854915 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.065598887 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.070713155 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.073867161 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.076337297 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068975517 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.070064815 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073904204 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.073522083 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.068464648 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073479527 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.066768636 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.07415095 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083559358 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.071010634 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071604262 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.077731851 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.0777491 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.070761605 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.065558211 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.070805578 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.074346622 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.07204846 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.071926175 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.071572637 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.086350822 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073967146 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.070232207 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.069206267 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.073754173 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.069848483 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.079263323 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071749459 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.071070804 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.075967425 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.072868575 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.078842536 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.073960992 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.078179084 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.073702879 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.074106805 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.070381978 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070450485 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.068645154 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.070004252 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.071855465 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.070135656 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.074808863 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.07846162 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.069627459 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081746599 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.07959698 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.072382193 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.06702495 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.069753183 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.070482756 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.06550009 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.072021831 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.068460174 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.068384986 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.068695523 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.070039471 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.072205621 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075644703 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.071534879 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.071481748 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.070090435 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.064237481 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.072715985 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.073210039 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071537332 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.067260305 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.070773086 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.071589947 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.075330072 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.073713339 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.068016239 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.071989634 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.071746315 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071258169 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.065406366 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.077417146 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069635106 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.072201299 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.06954188 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.070368826 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.071290932 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073807226 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.074039183 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.07094445 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.071970794 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.073902388 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.071598738 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.066928026 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.067023227 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.074328004 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.067399229 seconds)
  done (took 45.07823749 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.106753675 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067385629 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06628617 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.066179582 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076640419 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066574176 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.065501863 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066331877 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.066135583 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.068232085 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.06503359 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065458718 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07347716 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.080253255 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.076261669 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.06942857 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06541507 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066250032 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.065730219 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066350448 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.073666421 seconds)
  done (took 2.858206939 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.078040791 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.08081788 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.078633977 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.085510358 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.074517784 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.07401703 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.079114472 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074460903 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.081695232 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075899696 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.081796473 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074020467 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.075563961 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.075400984 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075547154 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074891095 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.083745888 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.074308312 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.073622011 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.078297483 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07397134 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.079104646 seconds)
  done (took 3.048677497 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.071165737 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.070034451 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.071634441 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.0651058 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.069916617 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.065110711 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.073077807 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.067270507 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.07268553 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.069081946 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.068602526 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.069069367 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.071804976 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.064757576 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.070472576 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.066983493 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.110600639 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.072495584 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.069465646 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.070502016 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.064891073 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.071407332 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.065238811 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.06548246 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.068493382 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.073396063 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.0700665 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.067457933 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.069631122 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.068671954 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.069947217 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.06764916 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.071654454 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.070156261 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.068749118 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.06929648 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.068933499 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.069648689 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.065562742 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.06747129 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.069933396 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.065115537 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.070084362 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.070866564 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.067600506 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.067587446 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.072060338 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.069671733 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.06418531 seconds)
  done (took 4.768661382 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.084257851 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.114169494 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.070963087 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.09344416 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.083204854 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.075661866 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.07294181 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.094341594 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.066583477 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.067414191 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.084763812 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.082011332 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.068765469 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.073684664 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.075798863 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.068530973 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.070247576 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.067754918 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.072873393 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068574097 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.072672736 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.075816223 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.082605315 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.081762177 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.072933169 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.067686945 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.068154871 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.073088458 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.081083349 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.073099827 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.073308911 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.074743927 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.083579871 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.073917005 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.068041748 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.072424509 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.084521967 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.069023147 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.071598134 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.066704968 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.071069735 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.072977686 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.076283811 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.085153173 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.069109979 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.073637247 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.069058961 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.066468158 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.080990404 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.071736138 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.076361973 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.082714996 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.072405625 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.06901186 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.073291736 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.083531153 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.068779616 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.067053065 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.071889181 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.080381966 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.066880295 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.072507057 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.081420514 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.070744939 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.075739253 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.081986408 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.073767627 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.072707779 seconds)
  done (took 6.611595603 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.08014959 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.1002074 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.087124279 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.086699373 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079083981 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.079603996 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.078682983 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.079998076 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.07909066 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.083498566 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079255552 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.120421685 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.074824781 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.081047318 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.078932979 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.078741257 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.079252868 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079156931 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.079527101 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079057886 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.078899771 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.086564893 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.079426403 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.086272365 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.092137051 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.075119355 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.078748628 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.079230548 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.086810772 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.07947982 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.082679419 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.080237481 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.078892037 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.086074947 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.082790646 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.078722432 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069205667 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078945586 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.079535135 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.07919367 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.074451881 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.086856107 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.079303634 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.074563768 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.078955958 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.078811786 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.08655726 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.08277678 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.081583564 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.08332767 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.079083641 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086254605 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079034951 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.07890409 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.086240914 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.089031623 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.086253579 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.086822077 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079114784 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.086136111 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.086632589 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.089118306 seconds)
  done (took 6.474870961 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.087256433 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.077060937 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.085778711 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.064708975 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.067741459 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.075310379 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067780608 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.067257167 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.077488298 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.077155347 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079660702 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.074918877 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07781711 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079412413 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.074886723 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077894849 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07531822 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.075498876 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.077005465 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.074905717 seconds)
  done (took 2.885346497 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.07900118 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.086716768 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.070567752 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.075356699 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.072907165 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.074503667 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.072221165 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07359797 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070225165 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07264438 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.080324134 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.079407574 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07038326 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.074588208 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.079523121 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.074868292 seconds)
  done (took 2.569716113 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.088635751 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.076838948 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.083618584 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.070223286 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.070214716 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.065798747 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.069136481 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.064529757 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.065552282 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.083100929 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.069478132 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.079916626 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.070005281 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.068335922 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.065920859 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.075596259 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.065574633 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.066599262 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.069086948 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.082018353 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.073251654 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.067813684 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.072803736 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.070186803 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.071755986 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.073715207 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.068754258 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.069683025 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.066270567 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.070662501 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.072456233 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.073344594 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.066616835 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.067352388 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.068382844 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.067218019 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.06930198 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.069600651 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.074671707 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.069326638 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.067561059 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.07179226 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.069574017 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.070664485 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.065822271 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.069538085 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.065377409 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.071805531 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.066786829 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.072163121 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.069240614 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.071533014 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.070045069 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.076130172 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.072297164 seconds)
  done (took 5.267433623 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083840945 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.073572023 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.066774827 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.067998293 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.073100591 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.070729192 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.07308685 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.070802602 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071317927 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.068060815 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071085722 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.072901325 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070949707 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.072933881 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.070854423 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073344257 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.065256596 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070670984 seconds)
  done (took 2.661468111 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.075025268 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.070629293 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.077078586 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.069844515 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.06921226 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.071850131 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065365932 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.068292138 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068991711 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.069777268 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069924261 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.071942806 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070470481 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.072650373 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.069172293 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069428159 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.072471871 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.068226094 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.069580796 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.065298519 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.072137693 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068533766 seconds)
  done (took 2.914827131 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.09831091 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.086858107 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.143331263 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.082924845 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.089672981 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.075083718 seconds)
  done (took 1.945670892 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096366104 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105333557 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.070487822 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073420308 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079787222 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073825537 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073690091 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073820667 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081857183 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079172472 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073791885 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082343276 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081799992 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080916248 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079102426 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078913764 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073303934 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073461229 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069605611 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08725674 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07374133 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081855101 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073650068 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073475359 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074165051 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080820087 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08143828 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079483493 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073764182 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081569546 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079291801 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073837978 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082493224 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07919676 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072672956 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08202583 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074129115 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086848595 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080042694 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081253029 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.072490334 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079121315 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081948289 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078187782 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082980213 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073823379 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078218802 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07395883 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073840262 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089432055 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079458931 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080990959 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079492158 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082463216 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081803009 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088842122 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079498223 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081527556 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07948396 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079388605 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081363337 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079607294 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08091869 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079220684 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079575676 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080800056 seconds)
  done (took 6.607111055 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108499091 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.071298256 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074078661 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079207735 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081037001 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073608331 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07374767 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073425245 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073739805 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070603417 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112290286 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074437745 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081337563 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081075549 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07405801 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07390314 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074128095 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081046497 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070542324 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088682536 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073857553 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080937388 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081045496 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081274477 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079075526 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079375006 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073977374 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073705783 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073369152 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073724892 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077980613 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073716718 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08102178 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070377274 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080952732 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074242828 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074021736 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078671538 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073808924 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079506643 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081065 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086937956 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073789072 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073880532 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079218912 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073687791 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073763763 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070312638 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073784518 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07013888 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078976436 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079249382 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079134641 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081141066 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073868395 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074200072 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07358851 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073961662 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073667478 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079102985 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081534967 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074430699 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089001969 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073868115 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074572907 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081179574 seconds)
  done (took 6.512288687 seconds)
done (took 135.481905601 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.193946169 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.173035222 seconds)
  done (took 1.732548156 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.072806964 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.102816885 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.08101418 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.133098125 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.070892815 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.104341794 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.10323279 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.081644634 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.069802438 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.069849862 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.070192051 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.072397543 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.13468128 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.069808174 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.069529442 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.072879486 seconds)
  done (took 2.75756149 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.102923136 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.169508335 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.107050166 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.068769933 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.104321553 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.076329247 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.06851485 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.079020478 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.074737701 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.06950806 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.077096263 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.074106597 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.068862372 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.074386227 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.074878977 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.076088006 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.069449219 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.076630582 seconds)
  done (took 2.893585418 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.103108295 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.095250911 seconds)
  done (took 1.579567171 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.159388424 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.137655396 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.212902153 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.359531325 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.165106246 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.151807686 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.147162227 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.146169524 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.116484498 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.142123753 seconds)
  done (took 3.115134497 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.104467486 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.160128218 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.279141606 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.122830942 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.076958038 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.097532174 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.124795802 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.082125241 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.084434016 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.08429896 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.084114512 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.080021452 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.104663639 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.076825635 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.07853786 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.080354759 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.108221251 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.076710041 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.078704048 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.079169071 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.105367848 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.06969431 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.076998012 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.077029231 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.080558171 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.081104182 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.0696643 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.069409705 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.079466193 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.078861971 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.079689173 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.095965596 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.080854354 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.110039674 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.075067749 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.111432039 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.080686396 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.076682322 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.079012928 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.077500537 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.081452172 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.081978387 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.07721625 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.080349196 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.069595838 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.081282489 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.069553055 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.070030487 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.081365272 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.070758389 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.081260326 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.080013443 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.109938072 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.070794644 seconds)
  done (took 6.233922603 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.11044452 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.11262983 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.075199775 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.120170133 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108971464 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.076671428 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.109266215 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.102698133 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.110386643 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.073769672 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.072610063 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.073965204 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.085791941 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.086659752 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.121362456 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.112780439 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.077715633 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.074752673 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.112815618 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.111313552 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.07256409 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.10308547 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.096885487 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.109897004 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.07131981 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.074237984 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.072452944 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.074220951 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.080918239 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.082357751 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.073273647 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.084060222 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.088653522 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.081565924 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.071422365 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.071700123 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072685099 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.082964971 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.083246807 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.08277363 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.081820447 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072056537 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.071729791 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.073688713 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.074208861 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071747699 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.082110278 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.084193526 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.082126673 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.073217283 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.074316936 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.074150945 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.073571732 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.084480731 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.081902139 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.084748201 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.083648789 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.072382796 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072216048 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.076595489 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.08504379 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.083248301 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.083228683 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073319914 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.083488763 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.07231666 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083820555 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.088637441 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.072459252 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.074746524 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.07312714 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073640619 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.073683398 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.081552205 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.081166256 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.073635427 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.073127626 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072994889 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.084288121 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082249954 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072788159 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.080618978 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.071047642 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.072697902 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.073968916 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.073597103 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.08189437 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.083552589 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.073881643 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.072105517 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.073027432 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072225033 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.07125506 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.081102272 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.083193768 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.082206493 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.081594833 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072460624 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.081595615 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.080764002 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073175058 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.08170494 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.071607733 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.20670262 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.074528705 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.083773775 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.081773305 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084398614 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.073898275 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.072596833 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.082305712 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085962219 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.072843956 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.082980635 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.084788295 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.082820053 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.072644359 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.084991941 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.073405813 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.083726652 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073943567 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.084298051 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072612445 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.083733177 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.072912757 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.071958504 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.07246972 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.083676908 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073747028 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072464087 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.074091575 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07494544 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.083137296 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.08647764 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.07570218 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081982555 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.08255126 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.074247167 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.08229051 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072357474 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.082518377 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07400893 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.073430059 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07162818 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.085948903 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.072098114 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.073048638 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.073334779 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.084339843 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072652056 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084064782 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.082363808 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.07236792 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.085075382 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.083812616 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.081770537 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.084008076 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074758025 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.071940788 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071981307 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.073073135 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.081339728 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.083394419 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.07417194 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.072289767 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.081271626 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.082541967 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.071752951 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.082306976 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.082039173 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.082049581 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.072776989 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.073704358 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.08381875 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.08395644 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.081769916 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.081884671 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.081715674 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.073440482 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.081473401 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.082126152 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072820199 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.087775184 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072184342 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.086373189 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.08263891 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.080815314 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.083179013 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.08461718 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.083918311 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.084249531 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.086956051 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.071830205 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.072061152 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.083285224 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.072101389 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073600206 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.082238068 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.073239017 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.073514655 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.085666438 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.071119925 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.082045456 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.070833506 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.081763405 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069962257 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072844621 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.220662318 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.073437789 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.074349173 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.084241057 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.07344775 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.082724895 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.085756352 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.083964081 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.072851174 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.074249669 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.08350076 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.083034898 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.071879675 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071998213 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074820906 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.082267135 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.080935812 seconds)
  done (took 19.610280338 seconds)
done (took 39.312222365 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.216097022 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.158509454 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.179271355 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.122366327 seconds)
  done (took 2.162399156 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.120378225 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.105260316 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.096634322 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.069012452 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.103221344 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.068770823 seconds)
  done (took 1.979658968 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.317359226 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.214968301 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.192633433 seconds)
  done (took 2.141171016 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.213962723 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.19907569 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.456892625 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.280936384 seconds)
  done (took 2.686215075 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.148919398 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.092511071 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.071375735 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.088156678 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.137356905 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.165019116 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.104085393 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.129665674 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.082836569 seconds)
  done (took 2.499249534 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.153367999 seconds)
done (took 13.042711744 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.097181769 seconds)
    (2/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.263345695 seconds)
    (3/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.184734068 seconds)
    (4/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.216229169 seconds)
    (5/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.085288196 seconds)
    (6/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.08071809 seconds)
    (7/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.127716357 seconds)
    (8/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.120378566 seconds)
    (9/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.172466234 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.087417594 seconds)
    (11/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.080433105 seconds)
    (12/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.084241756 seconds)
    (13/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.128558942 seconds)
    (14/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.098273813 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.082855762 seconds)
    (16/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.224435539 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.078018184 seconds)
    (18/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.186727217 seconds)
    (19/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.094360046 seconds)
    (20/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.178266969 seconds)
    (21/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.226028458 seconds)
    (22/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.068140476 seconds)
    (23/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.211117822 seconds)
    (24/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.112282499 seconds)
    (25/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.215324198 seconds)
    (26/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.161418041 seconds)
    (27/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.16547542 seconds)
    (28/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.116037731 seconds)
    (29/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.117170874 seconds)
    (30/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.076724772 seconds)
    (31/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.081235638 seconds)
    (32/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.074081025 seconds)
    (33/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.079774231 seconds)
    (34/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.078096823 seconds)
    (35/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.113306873 seconds)
    (36/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.075105345 seconds)
    (37/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.096646794 seconds)
    (38/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.086126838 seconds)
    (39/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.182568758 seconds)
    (40/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.120859093 seconds)
    (41/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.227380811 seconds)
    (42/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.197255092 seconds)
    (43/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.116072389 seconds)
    (44/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.098550249 seconds)
    (45/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.080802153 seconds)
    (46/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.184486945 seconds)
    (47/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.170525783 seconds)
    (48/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.202222329 seconds)
    (49/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.095768417 seconds)
    (50/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.220689806 seconds)
    (51/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.13609863 seconds)
    (52/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.077639759 seconds)
    (53/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.161519179 seconds)
    (54/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.089855126 seconds)
    (55/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.20176676 seconds)
    (56/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.099447542 seconds)
    (57/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.076101936 seconds)
    (58/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.117226389 seconds)
    (59/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.116677292 seconds)
    (60/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.436375781 seconds)
    (61/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.213029884 seconds)
    (62/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.190591541 seconds)
    (63/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.071524003 seconds)
    (64/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.17332406 seconds)
    (65/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.076484295 seconds)
    (66/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.072236765 seconds)
    (67/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.069230969 seconds)
    (68/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.067021016 seconds)
    (69/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.068360085 seconds)
    (70/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.075735656 seconds)
    (71/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.075458338 seconds)
    (72/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.097223448 seconds)
    (73/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.053596615 seconds)
    (74/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.066170062 seconds)
    (75/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.08058933 seconds)
    (76/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.073922637 seconds)
    (77/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.095696475 seconds)
    (78/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.072593021 seconds)
    (79/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.076927162 seconds)
    (80/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.18510303 seconds)
    (81/309) benchmarking ("sort", Int64, false)...
    done (took 0.071773757 seconds)
    (82/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.242292256 seconds)
    (83/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.092075612 seconds)
    (84/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.158027337 seconds)
    (85/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.077839306 seconds)
    (86/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.076906979 seconds)
    (87/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.075358881 seconds)
    (88/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.101654354 seconds)
    (89/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.069458057 seconds)
    (90/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.12459903 seconds)
    (91/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.120831658 seconds)
    (92/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.166954125 seconds)
    (93/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.079850267 seconds)
    (94/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.077927346 seconds)
    (95/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.109349211 seconds)
    (96/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.193875231 seconds)
    (97/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.078784989 seconds)
    (98/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.077047857 seconds)
    (99/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.11204129 seconds)
    (100/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.100238391 seconds)
    (101/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.193342177 seconds)
    (102/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.195981636 seconds)
    (103/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.054374504 seconds)
    (104/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.076593851 seconds)
    (105/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.095424153 seconds)
    (106/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.076439956 seconds)
    (107/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.055424564 seconds)
    (108/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.077291236 seconds)
    (109/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.212742542 seconds)
    (110/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.199515053 seconds)
    (111/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.070560417 seconds)
    (112/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.093101917 seconds)
    (113/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.129446752 seconds)
    (114/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.151444271 seconds)
    (115/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.081413334 seconds)
    (116/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.080488232 seconds)
    (117/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.077686143 seconds)
    (118/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.054543112 seconds)
    (119/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.073134597 seconds)
    (120/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.079716658 seconds)
    (121/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.131564501 seconds)
    (122/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.083505437 seconds)
    (123/309) benchmarking ("sort", Bool, false)...
    done (took 0.143716217 seconds)
    (124/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.078047266 seconds)
    (125/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.055842408 seconds)
    (126/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.076906664 seconds)
    (127/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.186013913 seconds)
    (128/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.080705692 seconds)
    (129/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.067058423 seconds)
    (130/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.160954835 seconds)
    (131/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.075519771 seconds)
    (132/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.076216577 seconds)
    (133/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.169886151 seconds)
    (134/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.159100864 seconds)
    (135/309) benchmarking ("sort", BigInt, false)...
    done (took 0.199715438 seconds)
    (136/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.087212533 seconds)
    (137/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.08069909 seconds)
    (138/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.075809142 seconds)
    (139/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.17009665 seconds)
    (140/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.160763083 seconds)
    (141/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.104886845 seconds)
    (142/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.069010581 seconds)
    (143/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.0689963 seconds)
    (144/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.080524008 seconds)
    (145/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.153982155 seconds)
    (146/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.068701433 seconds)
    (147/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.076833885 seconds)
    (148/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.070941405 seconds)
    (149/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.077295159 seconds)
    (150/309) benchmarking ("sort", Float64, false)...
    done (took 0.13652902 seconds)
    (151/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.056510574 seconds)
    (152/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.070622443 seconds)
    (153/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.190198025 seconds)
    (154/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.055353519 seconds)
    (155/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.08427753 seconds)
    (156/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.067445848 seconds)
    (157/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.163055075 seconds)
    (158/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.077990671 seconds)
    (159/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.069708055 seconds)
    (160/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.153819384 seconds)
    (161/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.107888247 seconds)
    (162/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.077694719 seconds)
    (163/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.05429352 seconds)
    (164/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.070247471 seconds)
    (165/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.055674539 seconds)
    (166/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.068642183 seconds)
    (167/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.136488037 seconds)
    (168/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.076971946 seconds)
    (169/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.1254614 seconds)
    (170/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.075981334 seconds)
    (171/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.115677423 seconds)
    (172/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.118759928 seconds)
    (173/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.142978502 seconds)
    (174/309) benchmarking ("sort", Int8, false)...
    done (took 0.147784055 seconds)
    (175/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.054361192 seconds)
    (176/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.055397371 seconds)
    (177/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.053808082 seconds)
    (178/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.055241281 seconds)
    (179/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.115799905 seconds)
    (180/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.076235542 seconds)
    (181/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.053904936 seconds)
    (182/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.055073549 seconds)
    (183/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.054433267 seconds)
    (184/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.095704011 seconds)
    (185/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.078060613 seconds)
    (186/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.055333239 seconds)
    (187/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.071629513 seconds)
    (188/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.289633038 seconds)
    (189/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.070574759 seconds)
    (190/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.070869764 seconds)
    (191/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.070412545 seconds)
    (192/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.05692319 seconds)
    (193/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.077739792 seconds)
    (194/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.070792827 seconds)
    (195/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.06922531 seconds)
    (196/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.162050537 seconds)
    (197/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.09597871 seconds)
    (198/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.068885373 seconds)
    (199/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.077611067 seconds)
    (200/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.054306982 seconds)
    (201/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.093044724 seconds)
    (202/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.056190148 seconds)
    (203/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.118813302 seconds)
    (204/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.05406454 seconds)
    (205/309) benchmarking ("sort", Float32, false)...
    done (took 0.138162874 seconds)
    (206/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.099104783 seconds)
    (207/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.056179478 seconds)
    (208/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.090480953 seconds)
    (209/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.079103166 seconds)
    (210/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.054579395 seconds)
    (211/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.18166902 seconds)
    (212/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.070809482 seconds)
    (213/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.095328584 seconds)
    (214/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.055144515 seconds)
    (215/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.078272131 seconds)
    (216/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.054300432 seconds)
    (217/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.053919248 seconds)
    (218/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.053974235 seconds)
    (219/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.054275266 seconds)
    (220/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.071321998 seconds)
    (221/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.184265317 seconds)
    (222/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.055637502 seconds)
    (223/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.068992938 seconds)
    (224/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.074794014 seconds)
    (225/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.085648568 seconds)
    (226/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.096762614 seconds)
    (227/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.054398568 seconds)
    (228/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.067894768 seconds)
    (229/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.103137679 seconds)
    (230/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.075425978 seconds)
    (231/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.081702505 seconds)
    (232/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.094683218 seconds)
    (233/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.054729298 seconds)
    (234/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.147181091 seconds)
    (235/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.070978042 seconds)
    (236/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.053815862 seconds)
    (237/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.069278052 seconds)
    (238/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.092968246 seconds)
    (239/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.075291491 seconds)
    (240/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.068627977 seconds)
    (241/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.055356716 seconds)
    (242/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.068163773 seconds)
    (243/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.065360963 seconds)
    (244/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.077135984 seconds)
    (245/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.056090636 seconds)
    (246/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.056514709 seconds)
    (247/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.077576686 seconds)
    (248/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.05457383 seconds)
    (249/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.054226238 seconds)
    (250/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.071982298 seconds)
    (251/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.054991615 seconds)
    (252/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.068077442 seconds)
    (253/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.069354824 seconds)
    (254/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.068898862 seconds)
    (255/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.054741045 seconds)
    (256/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.069682774 seconds)
    (257/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.070132929 seconds)
    (258/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.069603003 seconds)
    (259/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.075985381 seconds)
    (260/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.055240768 seconds)
    (261/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.066769747 seconds)
    (262/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.077701496 seconds)
    (263/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.091255259 seconds)
    (264/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.05693039 seconds)
    (265/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.068575789 seconds)
    (266/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.130141484 seconds)
    (267/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.053812776 seconds)
    (268/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.069395871 seconds)
    (269/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.056285516 seconds)
    (270/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.067004677 seconds)
    (271/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.068776478 seconds)
    (272/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.136877321 seconds)
    (273/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.075160341 seconds)
    (274/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.085093151 seconds)
    (275/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.091123971 seconds)
    (276/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.069741056 seconds)
    (277/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.077718252 seconds)
    (278/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.071213448 seconds)
    (279/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.093834227 seconds)
    (280/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.054643596 seconds)
    (281/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.054730944 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.077051967 seconds)
    (283/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.054401943 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.069472461 seconds)
    (285/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.06815797 seconds)
    (286/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.070601031 seconds)
    (287/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.0830679 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.068025758 seconds)
    (289/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.066923708 seconds)
    (290/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.069056926 seconds)
    (291/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.069254304 seconds)
    (292/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.147753997 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.077037487 seconds)
    (294/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.055484679 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.075892977 seconds)
    (296/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.083515953 seconds)
    (297/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.092901823 seconds)
    (298/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.054881562 seconds)
    (299/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.140760326 seconds)
    (300/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.093877865 seconds)
    (301/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.055743568 seconds)
    (302/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.076746625 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.075276233 seconds)
    (304/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.06951175 seconds)
    (305/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.054714755 seconds)
    (306/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.05499538 seconds)
    (307/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.072108002 seconds)
    (308/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.091408422 seconds)
    (309/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.054260564 seconds)
  done (took 32.46853735 seconds)
done (took 33.901375553 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.091749574 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.096859873 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.079576701 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.097978341 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.085012178 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.080183413 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.077995692 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.081906033 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.084200484 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.085399147 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.081784997 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.057753953 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.077892923 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.078255041 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.07942464 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.09521481 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.083657761 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.076935367 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.076970172 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.068295792 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.077832838 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.069108198 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.0704672 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.057522979 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.082523427 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.075448916 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.076375031 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.077934147 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.069370806 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.069108258 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.07277278 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.077506276 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.068820464 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.082099999 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.07661192 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.077155547 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.078296682 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.080851511 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.070960764 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.06896956 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.077918316 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.069692934 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.076249917 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.077787396 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.076124617 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.075501158 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.076889471 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.080675418 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.095077122 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071555606 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.078209855 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.07958413 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.078717685 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.076562688 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.074330919 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.076644645 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.074220578 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.095120909 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.076810874 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070854489 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.078221527 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.078651039 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.07513737 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.077026014 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.076566662 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.079074288 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.079699907 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.07497746 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.078827959 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.075753087 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.068911285 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.076882368 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.072709478 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.069005567 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.079962075 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.081826486 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.067539496 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.075742782 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.077382284 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.074660945 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.068281943 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.071253889 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.07330426 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.075742893 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071034269 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.057395312 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.073202344 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.075837381 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.068110843 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.076967305 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.075927705 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.076461562 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.070699987 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.079679464 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.068557013 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.074592514 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.069240247 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.069071482 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.070629159 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.073560622 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.069479651 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071101657 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.079208115 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.07086396 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.075918487 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.082420901 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.069312544 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.075829798 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.068059652 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.068078079 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.083022058 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.078754286 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.068969402 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070785532 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.067709871 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.075719067 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.068152496 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.068771137 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.068741711 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.068644397 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.074814087 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.068805358 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069998656 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.076027597 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.081040922 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.067442226 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.071742847 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070169057 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.067772488 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.073925059 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.205606597 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.069708603 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.071555041 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.066406231 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071781244 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.069392728 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.076737674 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071119861 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.077686393 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.071336451 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.077860374 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.074810437 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.075613425 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.074326367 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.067964041 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.062739063 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070707747 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071762305 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.070828613 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.069053838 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.070511483 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.069149112 seconds)
done (took 13.074147427 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.072304972 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.144136681 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.101128043 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.099878135 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.08960779 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.070285084 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.079314629 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.104092876 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.071567078 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.104716748 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.091881777 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.090103171 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.118483747 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.068374765 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.069546703 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.073828093 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.070844409 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.084845508 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.103223424 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.091873888 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.119784092 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.068790231 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.096713888 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.092587145 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.092731415 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.107437696 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.070613912 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.073968939 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.073515557 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.097341718 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.092430882 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.073138955 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.070497877 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.102013205 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.097890572 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.088257853 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.069823307 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.086852045 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.070613477 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.069191805 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.071302012 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.10286956 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.08400815 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.084160219 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.073666448 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.08025936 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.071211468 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.087320881 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.093737105 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.082825344 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.090372432 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.105678546 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.072392776 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.088141415 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.068612095 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.089907085 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.080751286 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.072869372 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.069542768 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.077923362 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.069886815 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.073055982 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.08446991 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.084190305 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.074667651 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.089016137 seconds)
  done (took 7.125520861 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.090339754 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.096609617 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.088175588 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.087869972 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.068847628 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.069963757 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.071165819 seconds)
  done (took 2.091242094 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.072426707 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.092641356 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.093803117 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.09370752 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.086202526 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.092130561 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080085494 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.070457759 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.091820102 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.071131312 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.091741713 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.105289195 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.073106934 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.077813778 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.094765442 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.069976583 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.094945565 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.070588774 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.074107531 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.094210399 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.073037816 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.100456411 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.073497504 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.070466441 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.085008657 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.070626385 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.119341194 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.074592578 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.0718902 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.073339865 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067758492 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.111642216 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.084751724 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.077998295 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070706624 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.08544255 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.085089384 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06853308 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.087199176 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.079674202 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.084683484 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.070515897 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.071203886 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.068006924 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.074770877 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.080893978 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.070873434 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.071750786 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.073051941 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.090943196 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.071419821 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.084384515 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.07331264 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.075970355 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.071985612 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.077049297 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.081540007 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.071318529 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.090964558 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.071815695 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087471158 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.087189696 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.084326223 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086989587 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.072861837 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.085064698 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.084529983 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.073323001 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072334814 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.074341069 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.086927676 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.068488198 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.072970118 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.081729357 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.07238979 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.094565037 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.093957984 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072345891 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.084815508 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.070810472 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.07065167 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.0703954 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.094174582 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.076036172 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069978705 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.075252825 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073929092 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.068872956 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.06941245 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.074685826 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.068149762 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.071998655 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.073952027 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.073475666 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.073503043 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.087918104 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.073244781 seconds)
  done (took 9.229233609 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.072983204 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.071527667 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.072857154 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.071296236 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.072074035 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.07213499 seconds)
  done (took 1.972188143 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.100173513 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.072625115 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.08461963 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.075810969 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.110142373 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.090819861 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.091142647 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.081877814 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.087864299 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.083620088 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.090867187 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.092370512 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.096522418 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.076147417 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.091191622 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.075097747 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.091872335 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.078217466 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.082610026 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076474193 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.090398488 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.075927993 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076629216 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.08541325 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.079667808 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.07561867 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.08197871 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.082809491 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.082152921 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.081481217 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.076226144 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.07952954 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.074653498 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.081144282 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.091139828 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.074642444 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.075250674 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.081265484 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.076306873 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.079870245 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.092209032 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076179619 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.077943962 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.080951978 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.081720326 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.07436032 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.081563588 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.083076064 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.091676989 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.080754994 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.08059498 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.0749815 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.079613072 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.080877896 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.074212739 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.082310229 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.081238471 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.091118063 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.076226314 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.075259065 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.072497954 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.079578027 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.081206916 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.079569717 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.08428356 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.080546051 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.073909156 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.076167281 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076620886 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.075456763 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.08087229 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.072417226 seconds)
  done (took 7.401629162 seconds)
done (took 29.331968663 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.54464914 seconds)
  done (took 2.052076598 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.638539108 seconds)
  done (took 2.173273635 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.519095316 seconds)
  done (took 8.04802955 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.414695856 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.521952373 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.758587345 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.139057549 seconds)
  done (took 3.402770701 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.734634452 seconds)
  done (took 2.273656442 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.23907621 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.222381067 seconds)
  done (took 2.011613373 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.388028132 seconds)
  done (took 1.921335191 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.172255851 seconds)
  done (took 2.704077642 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.270833047 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.184851789 seconds)
  done (took 1.993754153 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.500163398 seconds)
  done (took 2.035798796 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.902613189 seconds)
  done (took 6.440488074 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.225970873 seconds)
  done (took 1.809455495 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.247204849 seconds)
  done (took 1.782918442 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.785017628 seconds)
  done (took 3.321376548 seconds)
done (took 43.509803523 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.089371476 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.089997837 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.088791772 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.085825749 seconds)
  done (took 1.873379761 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.082820086 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.076713441 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.080654843 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.07668552 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.08089814 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.076731596 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.078609132 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.079492178 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.076865297 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.077013615 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.076813349 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.077009328 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.079679218 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.07857076 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.074978335 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.079292834 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.080773063 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.076539668 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.079572697 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.076734882 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.074471584 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.078839605 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.078888585 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.075490139 seconds)
  done (took 3.410991997 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.084670212 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.077603421 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.078976235 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.075918125 seconds)
  done (took 1.861153931 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.083609958 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.09690775 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.09394015 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.08256598 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.097389013 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.090976332 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.072962087 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.072789973 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.074634853 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.081723028 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.072102702 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.100243272 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.092751043 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.081827588 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.084441982 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.069740757 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.072292915 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.091651213 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.082302368 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.083038199 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.074227235 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.082174821 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.072215896 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.093415471 seconds)
  done (took 3.540754188 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.092530472 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.109391265 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.085175015 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.093823831 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.096242903 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.069341913 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.091919092 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.0952642 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.131957611 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.069184727 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.074706831 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.069421977 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.077233788 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.069029016 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.085278027 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.11224519 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.116253973 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.072726521 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.10157009 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.069233165 seconds)
  done (took 3.333391486 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.078756235 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.073038225 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.072078297 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.069419265 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.082048501 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.07706666 seconds)
  done (took 2.004228311 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.073294639 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.071747377 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.071905173 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.070522868 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.076090373 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.071059329 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.070448421 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.072015786 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.071860235 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.070721911 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.070625675 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.070613057 seconds)
  done (took 2.406619815 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.210257887 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.071863069 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.07232605 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.069561368 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.074185392 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.070715681 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.085161514 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.072018295 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.096195746 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.070334359 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.071284315 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.072373925 seconds)
  done (took 2.584470315 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213598206 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080482439 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243418338 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156975414 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116075542 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121452409 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117816526 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117932783 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.146652657 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.104619906 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171574448 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172026552 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112172312 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142097542 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.093552952 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.103240644 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158839985 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169038534 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111167673 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171022438 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155262391 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131054633 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151995408 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106972773 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110324605 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126445108 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.076514761 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084498965 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175463578 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137947685 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14897656 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115917882 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096266344 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181957859 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177332342 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145403738 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153296644 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088838219 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.106113233 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.138350468 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203436252 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.092346497 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165210599 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.255333684 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.08637006 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137904188 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124045811 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.123816283 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.109735671 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094248072 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151254862 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187756404 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.142356317 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.092516809 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129024467 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11820714 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.11898792 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118436742 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188479094 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166912542 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132824725 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.075356169 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113378426 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156873607 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137397626 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.113282796 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.129740977 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096535479 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139077507 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159320359 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127050339 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148912788 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.121831323 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092829387 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122647459 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144763672 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131875304 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16532496 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128370708 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.077886313 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128274083 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105833968 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085059415 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.153002291 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079871668 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180214305 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10400261 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.110219012 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13054041 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112858581 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113227315 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161980406 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147072837 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1067796 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.214967058 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111042232 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.12536832 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151105046 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091703856 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113152961 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120727514 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.082012128 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140709126 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.080056612 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127665493 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.0786526 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12903509 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134496139 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.082108001 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126305506 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109821378 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.104796603 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13747578 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163431425 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092063519 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086296908 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173303478 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124686974 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.107389844 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14796727 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160352991 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.103257523 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106127613 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155099009 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183375428 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09283926 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166246316 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110631657 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.088074657 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.092160511 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126954085 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115493399 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.127945021 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085913013 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.121388352 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171341311 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.078895917 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099221342 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13817564 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.0827307 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084144583 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109529691 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108466373 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.099392644 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.103244377 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.10565473 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139889965 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126686166 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107917624 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126094082 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.249836601 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177272286 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092192903 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.105760065 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108616047 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.074020226 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.140653164 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159737883 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082769944 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167918549 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.12679905 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121380641 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122891788 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087656607 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145044168 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083752428 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.074295226 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151315369 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.11455522 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114200382 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.153790245 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120397188 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.128441147 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.125904719 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137004158 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135449363 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.133884787 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109989903 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.091620201 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115271095 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130774677 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.076590562 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.094480214 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.083774036 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108398317 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100168843 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086956619 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145483976 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127799724 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113942492 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115089819 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100375945 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151217192 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.080385992 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132990007 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.122798649 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10031448 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.155583297 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154990209 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135236627 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102762131 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139687264 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.073373551 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077047311 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.090951728 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.272137429 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087221103 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.088206545 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12060217 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151364929 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13309354 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140763047 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127635113 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123628985 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158700364 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.074051876 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.123630715 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150432207 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126484909 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.108605587 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094108429 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.103213613 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145981774 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111504586 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187101875 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117102724 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126788954 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157074976 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.104744515 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083734923 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106193822 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138912493 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10702131 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146718035 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102524513 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092095163 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111941019 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.079234946 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102410701 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13011851 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12225296 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137763311 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.118729017 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13646601 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080892447 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119723647 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125390791 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125190609 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.067400004 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123456196 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164439754 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09881607 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121858855 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155368371 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082335044 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.138892622 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175870103 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.296472248 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089736779 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113338782 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.124097517 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132355308 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12319076 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14494656 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110971885 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141496659 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113886169 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.089405623 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091841603 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.101871506 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109306656 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.099642204 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.10918676 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.117807652 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.098961169 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136942711 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107778527 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113649844 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120293703 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.103119343 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.094741695 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100845419 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180892111 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12266522 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176012257 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.103745513 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.146903283 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165783539 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079269027 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083213905 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.081886993 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143804791 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.0883239 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1347242 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.111829309 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12167101 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127612919 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145493611 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102033341 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.072082498 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114932546 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136403207 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129406118 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102757446 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.107469567 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166741207 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.104276018 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083153792 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117504978 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119616244 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106137303 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172389418 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.064606849 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108736555 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.226580265 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085062848 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132285894 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158275421 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.084171623 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.108256738 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121964061 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116855911 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131675221 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104166437 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113105921 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132251052 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155085508 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131953354 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.092710196 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11613738 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131653784 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16011824 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109461915 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.100966078 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175922862 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154580249 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.163342297 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.091671258 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116775675 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116384801 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111782186 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140825886 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.086915969 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167180216 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085780963 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140615597 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10756562 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.0927846 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132972424 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.113298767 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091646704 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151139507 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121632119 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086943251 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081037121 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121935115 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123254119 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109634718 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.078991826 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142683766 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.076778283 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135363443 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163140433 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084829924 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107881052 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098613203 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082495586 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.258408667 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107276545 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091596587 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.103497633 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17614746 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.090227849 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153339138 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137629415 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116446647 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139039183 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106004291 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.644232196 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.081839228 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155862963 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120086501 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178467744 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104006648 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121417335 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113094721 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12613832 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151043947 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108004167 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.189012615 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136785361 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.119981802 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083243963 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105733257 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107909891 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.09229391 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111559729 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115508342 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11835732 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.096432893 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.119402204 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127475472 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.085792517 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099756195 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158540716 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120897356 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148365641 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144902788 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.090575949 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121293867 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14033109 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084329951 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.124240199 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156043277 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108884865 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103819683 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.083780601 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.103383327 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.311891985 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.077642921 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16580677 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125408917 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113104003 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116004426 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.115328435 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135592924 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111461237 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125045805 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096775015 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.112010587 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.117531083 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086052039 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.081759372 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111258476 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115289274 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.10218626 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100981728 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.102199482 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154326086 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.075402828 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103082487 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119045188 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148005523 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179729068 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.092179466 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086304299 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122605193 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119444355 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.117023675 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124309624 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.082730751 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085128301 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.084049924 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.082082112 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.112361896 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116404131 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118120776 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114490942 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167448959 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.086701561 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.241453384 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099342289 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10864457 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.07377574 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.081598312 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100478803 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101989656 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111394574 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11448319 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16335863 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.098877037 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.093284065 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095018065 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.077314422 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08643203 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129857536 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111192608 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12027711 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10250558 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.065713755 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108477823 seconds)
  done (took 60.862476853 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.11486386 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.088022722 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.10060406 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.148801481 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.127031449 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.205493508 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.157622017 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.193198635 seconds)
  done (took 2.815397334 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.074086759 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.099639219 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.107793342 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.087481365 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.07029676 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.073234095 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.236381335 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.085913671 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.070734721 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.100067259 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.082163131 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.072869757 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.44058865 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.069331606 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.071260609 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.065394866 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.071160899 seconds)
  done (took 3.523488525 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.413471954 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.61862662 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.361390097 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.079835125 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.981707706 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.092493514 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.19396228 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.136773873 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.081784246 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.527947481 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.415923844 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.1315919 seconds)
  done (took 18.690826878 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.086905085 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.078990672 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.092985569 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.09235722 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.081142104 seconds)
  done (took 2.081314856 seconds)
done (took 110.5607854 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.086845082 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.617967127 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.056345489 seconds)
  done (took 2.354848505 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.089475344 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.088760532 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.08907235 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.086650024 seconds)
  done (took 2.015935426 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.079802731 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.080313461 seconds)
  done (took 1.815159682 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.240148156 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.171523116 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.10153954 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.0891859 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.082714754 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.083108488 seconds)
  done (took 1.918199626 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.077241295 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.079084344 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.076917251 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.079626754 seconds)
  done (took 1.970916863 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.082993954 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.05472523 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.057722678 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.061950382 seconds)
  done (took 1.915951815 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.092546367 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.082908795 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.082616698 seconds)
  done (took 1.917604776 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.108888021 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.091018521 seconds)
  done (took 1.859886753 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.087875112 seconds)
  done (took 1.745264578 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.101618082 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.104952358 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.136777226 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.115648544 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.143784388 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.113793438 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.088556804 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.08962059 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.080974484 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.090285367 seconds)
  done (took 2.722811675 seconds)
done (took 22.485016051 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.084912485 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.374875061 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.364265378 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.094191045 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.672896679 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.360210022 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.984807197 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.097602187 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.11948656 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071481639 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.089123094 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.650904208 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.975431481 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.33375605 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.965968705 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.328604069 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.651902468 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071680417 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070969176 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072025525 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.968960714 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070988742 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071350389 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072352316 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.651191845 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.375584667 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071595898 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.332592397 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071606647 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073725445 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.358502347 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072009234 seconds)
  done (took 16.267504092 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.076680379 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.125162389 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.077757377 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.088121972 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.073978992 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.07397627 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.074993188 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.089259615 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.125573326 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071429443 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08950068 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071664258 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.075043149 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071991896 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.091831602 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.071651338 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.072089684 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071863482 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071738363 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072031707 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.091046849 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071491199 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.072280585 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.07252265 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.071449356 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.08415356 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072093849 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.07199321 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071964903 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074280531 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.074777593 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072458178 seconds)
  done (took 4.207046581 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.122593953 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.13010237 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.077940286 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.107646916 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.115947045 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.073629596 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.148810402 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.098182616 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.132049673 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071654839 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.089185215 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071896561 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.106797022 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.072389076 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.092326889 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.071790611 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.073489184 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072286074 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.072156603 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072578333 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.091614109 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071767749 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.072622461 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072676409 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.071988567 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.085742668 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072305154 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.072401577 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.072270936 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073809169 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.075716033 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072748654 seconds)
  done (took 4.45500097 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.07858399 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.079464334 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.087300944 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.08874494 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.073726743 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.076558377 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.077236218 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.07388683 seconds)
  done (took 2.31291293 seconds)
done (took 28.905935512 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.085661113 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.072764566 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.076602845 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.086351947 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.077156779 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.082122794 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.070817371 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.079917749 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.076193878 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.076891082 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.078452498 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.070742429 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.07498371 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.070718112 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.077735178 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.071337675 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.083210007 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.075552812 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.083430896 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.083536135 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.074738097 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.077200958 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.079129621 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.082999091 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.083478313 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.083017253 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.080910026 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.077489425 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.072254204 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.074072185 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.081254629 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.088317927 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.072325396 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.08391751 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.070735519 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.071056695 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.075966471 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.070933013 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.082642164 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.080186574 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.073247086 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.079371258 seconds)
  done (took 4.921031176 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.094875366 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.097158579 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.090000119 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.065197401 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.070420137 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.06949292 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.093296459 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.063502662 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.063275358 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.09271044 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.059369573 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.063006758 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.066699852 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.056739823 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.06396875 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.060362922 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.06570972 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.058868544 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.063736454 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.063649916 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.093201939 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.056740323 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.08170659 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.066761021 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.059451713 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.065185392 seconds)
  done (took 3.529180751 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.080562597 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.089750486 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.09559969 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.13491083 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.109886442 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.08314914 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.083202806 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.099640591 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.093496409 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.070135905 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.074727936 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.097442674 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.093974266 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.077408912 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.071028081 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.089952276 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.087355074 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.073055253 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.077313688 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.099213072 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.090602536 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.089706874 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.099794535 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.086649236 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.070994679 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.073887051 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.0750257 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.084803929 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.074739036 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.08106944 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.074172577 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.074804389 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.073104058 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.084133867 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.073915743 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.072660311 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.09929001 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.081343577 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.083035928 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.07175724 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.079440802 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.072803764 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.097880607 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.131504683 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.070433048 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.077907601 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.074865981 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.082252789 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.070464289 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.092026406 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.083290412 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.070714505 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.074943213 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.071086658 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.070561853 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.074734806 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.073289762 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.073201505 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.079837325 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.077453664 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.096829066 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.075836155 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.087662947 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.070975118 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.08011827 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.070387681 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.071809546 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.070282691 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.100259343 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.072850529 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.115478086 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.071974774 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.072376035 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.080387875 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.080247199 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.078002113 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.071911379 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.087735349 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.08223891 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.074655223 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.079541979 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.076504685 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.074437678 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.095111823 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.073642202 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.072749051 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.0724945 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.077415005 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.074430622 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.072966386 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.084932831 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.071370272 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.073942761 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.088548443 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.070827633 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.073240673 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.07678079 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.075528196 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.070984979 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082892701 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.076095975 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.072149047 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.081849691 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.07123336 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.074166389 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.084458739 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.077623599 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.070324904 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.075481357 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.077219425 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.072361717 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.073122134 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.073782075 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.073404521 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.079958722 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.078452926 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.075845995 seconds)
  done (took 11.119482663 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.174346904 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.163058113 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.074362316 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.155069359 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.080580805 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.083520676 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.156267333 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.099390469 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.072353425 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.073306327 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.072580493 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.115692637 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.110319619 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.120280144 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.082404024 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.071441952 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.088230663 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.120002702 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.15917905 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.152209031 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.088583251 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.081342929 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.073612022 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.072692967 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.073976696 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.082023915 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.089847945 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.083289718 seconds)
  done (took 4.583996857 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.087442607 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.110414807 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.078851693 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.096400441 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.094782953 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.071894428 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.073972761 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.074053454 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.085742518 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.081997637 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.071571941 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.077080432 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.078487765 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.074868202 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.072871763 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.079011501 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.079045891 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.073164655 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.074768112 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.077379886 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.082723059 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.096951748 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.076165967 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.070718336 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.076696866 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.071316957 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.067099321 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.08807641 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.072150319 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.100213045 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.069778021 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.076872492 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.087088406 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.072567729 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.071989159 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.071911169 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.072146446 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.071821097 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.073248013 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.069832611 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.070282203 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.061442312 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.070619834 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.082609724 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.078723791 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.060018018 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.076551057 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.076944931 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.077211681 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.068922609 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.074511443 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.07443397 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.074538384 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.079686355 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.075588064 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.076728544 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.072914451 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.078105379 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.080562874 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.071887772 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.068668852 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.069792968 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.076159332 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.068656 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.080578189 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.076225527 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.070770651 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.071236123 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.073966006 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.079205501 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.071530938 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.07631154 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.069341318 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.073248537 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.077113058 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.073633652 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.073115967 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.070955526 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.071178033 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.071943084 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.058435083 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.071330246 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.056344413 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.074309621 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.070051924 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.069696393 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.071934875 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.076720714 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.083161397 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.072958723 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.077767599 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.072818476 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.070490562 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.074841466 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.064038769 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.074455797 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.083212168 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.086428805 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.072233922 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.069774427 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.085381574 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.076611151 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.071325908 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.059360111 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.076213645 seconds)
  done (took 9.623297539 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.096859193 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.073381509 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.088776523 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.095917842 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.092411268 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.078934619 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.082565967 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.073001757 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.087779908 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.078070949 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.082098503 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.071726328 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.082657626 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.081434133 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.073547467 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.081885519 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.076399423 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.088993662 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.087144767 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.071799072 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.080379717 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.084738424 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.094757931 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.086061499 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.084912885 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.086813871 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.094850404 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.081437088 seconds)
  done (took 4.059679208 seconds)
done (took 39.506915408 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.767028804 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.013443023 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.759185588 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.140833009 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.839812599 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.925927001 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.854141605 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.752887437 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.932102494 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.794079604 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.023444847 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.943650981 seconds)
done (took 65.433595823 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.779165787 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.89605638 seconds)
    (2/2) benchmarking "String"...
    done (took 1.994606483 seconds)
  done (took 5.584101848 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.01553292 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.327947825 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.000789522 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.754064453 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.758422812 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.071122192 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.567353263 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.263516556 seconds)
  done (took 30.438056039 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.938668781 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.977378012 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.458583747 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.503492603 seconds)
  done (took 15.630425375 seconds)
done (took 63.224110443 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.759991719 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.774121905 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.80184184 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.737304685 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.813693662 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.762509545 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.854034078 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.762593299 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.753631401 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.739017436 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.755516057 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.240499904 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.765048167 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.893546991 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.754861906 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.756508518 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.809179678 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.217259279 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.913930268 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.769803417 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.758755496 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.819683049 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.757408203 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.762469261 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.762023875 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.753722447 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.151426307 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.762364663 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.574940068 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.755561418 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.80083549 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.123131865 seconds)
  done (took 203.109360851 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.754649052 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.807922199 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.888206772 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.803748583 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.268952436 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.966001122 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.86839634 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.302785813 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.758942007 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.783022673 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.074602844 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.754705838 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.0414028 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.787729925 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.786756757 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.85092897 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.031098093 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.037278566 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.789065455 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.907477361 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.772997378 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.951729908 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.898203546 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.996813881 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.801392902 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.850885402 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.768400679 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.760056149 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.950173413 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.994794859 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.802536363 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.773992579 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.962348744 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.628724543 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.759015908 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.774460909 seconds)
  done (took 170.406711513 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.922333084 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.758439049 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.75675062 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.757298566 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.764113805 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.756539049 seconds)
    (6/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.756876023 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.879104337 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.880341319 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.366142158 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.296019125 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.80919406 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.567504068 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.756723064 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.826121571 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.770158027 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.757761928 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.774112359 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.786680257 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.758282494 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.758468891 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.883392688 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.770191071 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.90789233 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.763662288 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.758941927 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.764180006 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.127044653 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.757085439 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.764119415 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.999868097 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.757615031 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.7585034 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.606607213 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.949549054 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.841500678 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.758920064 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.765362537 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.757525454 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.978984834 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.758529561 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.760358653 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.763169653 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.898467421 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.76066817 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.881572935 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.759564214 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.249867819 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.760453189 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.760309039 seconds)
    (50/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.759560296 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.540748764 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.353207906 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.760741071 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.760228956 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.762886172 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.759407599 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.760247085 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.766484314 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.488147228 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.833034224 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.761454579 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.764709092 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.765219312 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.758417569 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.957587518 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.761196689 seconds)
    (67/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.761475442 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.822277165 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.889807333 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.010794921 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.882698175 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.760918586 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.828693968 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.853585524 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.759771359 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.761176077 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.7611933 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.759880399 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.841430889 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.759465802 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.885318677 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.767836182 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.762476426 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.812363201 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.831587321 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.760478081 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.597882635 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.762751251 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.761846645 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.054760571 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.827819522 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.76051563 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.761924628 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.762737879 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.888629801 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.882730819 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.48011529 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.763951209 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.479017513 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.763672836 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.898101031 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.761155321 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.905226468 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.763804886 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.844844247 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.765743887 seconds)
    (107/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.763018948 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.763768675 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.762354727 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.794643672 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.764528259 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.822407115 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.761908515 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.135598008 seconds)
  done (took 400.913395253 seconds)
done (took 778.098630608 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.413769593 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.378612523 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.47840461 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.396790677 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.370969589 seconds)
  done (took 13.738919274 seconds)
done (took 15.436501799 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.85404631 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.860967386 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.787890068 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.856816774 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.785129455 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.856855186 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.83974103 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.790412138 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.825239237 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.789708431 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.827328682 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.789890305 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.777286876 seconds)
  done (took 25.341972752 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.99769178 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.996408361 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.836532013 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.99584377 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.812806389 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.992058181 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.933245409 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.91810763 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.932407464 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.782944008 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.778373391 seconds)
  done (took 22.680857028 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.990699753 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.003655616 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.843260128 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.990575303 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.814937314 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.99847545 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.927665886 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.92039757 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.918105252 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.781699429 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.779549647 seconds)
  done (took 22.673658502 seconds)
done (took 72.396412864 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.775601459 seconds)
  done (took 3.478853722 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.803459996 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.968557678 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.782160751 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.779808147 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.774782275 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.777250655 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.778798575 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.775032252 seconds)
  done (took 16.14545949 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.771419968 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.773558709 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.771190086 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.774646486 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.770330874 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.77108152 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.771672759 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.774179561 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.771989063 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.771450113 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.774436704 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.771840326 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.774103584 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.775181536 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.775137202 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.776190383 seconds)
  done (took 30.07269485 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.774564722 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.7715655 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.773110472 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.772625294 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.772003967 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.77239304 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.773059484 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.771605825 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.773455993 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.772231204 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.773678715 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.773135943 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.77232943 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.77340427 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.771404973 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.773792054 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.772586052 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.773375212 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.777281605 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.772505682 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.773442898 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.772056857 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.771855277 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.773715003 seconds)
  done (took 44.25986569 seconds)
done (took 95.657426637 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.487584467 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.397121947 seconds)
  done (took 9.589592864 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.778609952 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.776064922 seconds)
  done (took 5.318677329 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.776461692 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.776080756 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.776108418 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.77642271 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.775848171 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.776147154 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.776014623 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.776230228 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.776456085 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.775969363 seconds)
  done (took 19.468393004 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.77661442 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.775977495 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.773591618 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.77752831 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.777518009 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.774522552 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.777356544 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.777856325 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.777556466 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.775403281 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.776162669 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.774529632 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.777284853 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.774498779 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.778314447 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.774370259 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.774060256 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.774085987 seconds)
  done (took 33.673679764 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.777751649 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.778419451 seconds)
  done (took 5.263771784 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.775949603 seconds)
    (2/7) benchmarking "second"...
    done (took 1.774746341 seconds)
    (3/7) benchmarking "month"...
    done (took 1.775129853 seconds)
    (4/7) benchmarking "year"...
    done (took 1.775188741 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.774555534 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.774404686 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.774540557 seconds)
  done (took 14.132485055 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.77919946 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.94078094 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.007435239 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.421316094 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.779916093 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.783000955 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.698291959 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.782744101 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.784312041 seconds)
  done (took 19.685997746 seconds)
done (took 108.834331867 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.587951957 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.773521528 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.019185981 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.868426219 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.789709885 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.115234073 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.815053461 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.33714037 seconds)
done (took 43.012628116 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.795599302 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 4.024391113 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 4.054720616 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.797246834 seconds)
  done (took 16.584513577 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.760742406 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.309250423 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.813461907 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.429342882 seconds)
  done (took 20.236381436 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.146993242 seconds)
    (2/2) benchmarking "read"...
    done (took 2.126009162 seconds)
  done (took 5.988341577 seconds)
done (took 51.313633479 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.780030817 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.779582238 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.778748223 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.780134455 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.77692407 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.779175104 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.777696001 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.776310233 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.779567651 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.779839109 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.777909584 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.779527518 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.780969503 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.780521447 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.777075336 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.777470992 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.780225724 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.777429772 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.778432488 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.776855803 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.778263245 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.782075861 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.777629815 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.777877125 seconds)
  done (took 44.399591421 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.782540923 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.780267592 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.780990854 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.782057266 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.779559899 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.782089695 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.782117239 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.778960242 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.783034112 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.782306036 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.778181727 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.778733769 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.782093973 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.779190185 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.781245874 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.778905792 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.781175045 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.779562179 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.781867599 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.779313557 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.782954419 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.779501676 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.779546379 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.782392439 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.779363113 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.778668661 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.781870379 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.780734434 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.781927181 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.780045572 seconds)
  done (took 55.133131108 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.787546883 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.792461483 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.782756293 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.782636969 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.783231034 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.782791553 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.782601402 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.783982918 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.78252705 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.78319393 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.782537511 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.782762409 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.783004402 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.783093875 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.783210728 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.783426802 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.783572993 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.782863711 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.783959584 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.782533843 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.782841442 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.783497731 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.784063963 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.784128602 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.784384649 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.784481659 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.784431476 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.783912825 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.784172523 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.784659102 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.784536259 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.785099412 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.78475616 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.785192004 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.785432084 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.785244983 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.790083447 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.792422309 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.784916786 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.785236012 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.785516552 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.785177878 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.784953955 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.785804193 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.785068882 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.785547043 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.784726603 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.786213183 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.785371001 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.78543231 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.785160178 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.785227728 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.785019374 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.78531085 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.786161465 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.784737514 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.785455476 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.785936735 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.785266985 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.784616037 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.785180535 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.784730336 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.784752995 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.786719613 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.787244922 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.78579162 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.785858565 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.786350181 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.787076454 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.786554309 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.786446012 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.787676243 seconds)
  done (took 130.234203058 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.786929194 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.784801024 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.784126468 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.783798085 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.783092172 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.785338819 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.784111624 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.787082786 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.78357302 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.786956819 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.786934125 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.785329846 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.784722336 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.786747879 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.787757029 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.784612226 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.78722933 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.78441485 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.787296936 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.788201813 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.787634575 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.785162979 seconds)
  done (took 41.00291223 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.787629087 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.787716468 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.785455781 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.787935425 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.784743246 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.786973394 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.787028548 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.787641774 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.787731356 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.784699329 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.785537823 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.78807069 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.785909773 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.7849026 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.785929686 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.785755439 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.787585716 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.786079045 seconds)
  done (took 33.875757353 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.785912321 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.785777799 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.788993232 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.786955755 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.78660071 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.789324998 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.787002513 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.788787664 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.789225052 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.785527616 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.789309832 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.788717068 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.789455037 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.786757377 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.78917861 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.787024751 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.789304428 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.786796253 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.789371659 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.787691712 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.78626433 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.789259919 seconds)
  done (took 41.051627936 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.790815814 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.790096701 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.786549567 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.787195264 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.787404348 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.790256399 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.788982613 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.787597092 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.789837569 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.78987009 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.787150394 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.789840346 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.78777186 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.787958648 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.787632362 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.786989442 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.790181826 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.789193956 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.789635009 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.787202876 seconds)
  done (took 37.492064135 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.792778398 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.791839951 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.79167505 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.792890796 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.79156547 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.79201541 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.791903376 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.792906833 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.792166708 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.792944817 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.79296709 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.792422289 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.792875237 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.792590069 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.793682139 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.792543822 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.792171628 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.793242806 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.793427025 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.792755069 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.793607663 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.792732794 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.79178914 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.793281594 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.794262049 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.793428895 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.792814565 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.794093466 seconds)
  done (took 51.918513248 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.792940163 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.792527155 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.788745788 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.788448871 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.790005705 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.789200249 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.790196845 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.790657897 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.792820114 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.790165342 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.792627618 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.793222848 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.792777565 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.793306399 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.793853456 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.793708859 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.793084445 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.791649779 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.791687701 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.791168361 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.794081582 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.793779586 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.793767924 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.792451723 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.791869597 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.794619736 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.790410837 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.790416714 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.793374406 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.791723503 seconds)
  done (took 55.482372686 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.810977622 seconds)
    (2/2) benchmarking "in"...
    done (took 1.811645313 seconds)
  done (took 5.345849528 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.790564113 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.793150702 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.792828303 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.791070062 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.791553559 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.794462416 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.793453729 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.79121159 seconds)
  done (took 16.061820888 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.793235325 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.794389479 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.794381514 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.794025086 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.796165142 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.793821348 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.799442231 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.795701325 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.794882262 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.795581048 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.802002538 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.803929496 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.79700229 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.795035898 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.794728652 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.796328682 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.795930594 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.796992715 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.795343448 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.795659877 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.796829028 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.797482525 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.797955607 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.792910333 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.797440653 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.806209328 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.797829642 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.796157926 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.795303694 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.799987078 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.795789034 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.793127255 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.796597244 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.796364869 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.79718119 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.798087304 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.803525374 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.796308836 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.801478614 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.797718942 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.796741662 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.793195261 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.797533359 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.796761084 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.797889172 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.797450417 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.797432648 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.793871303 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.797067786 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.800585355 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.802992776 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.795966707 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.794794264 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.8011419 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.800078077 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.802128377 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.798140905 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.800290219 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.808226199 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.806619222 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.810018036 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.806517615 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.79990065 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.798675762 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.807279465 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.821818159 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.803710815 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.795450647 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.795176883 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.798131928 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.803986687 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.811265019 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.807879447 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.798737875 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.799825009 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.797986379 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.79824388 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.798234927 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.805198809 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.801779553 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.799989001 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.799179711 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.808517273 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.823759593 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.79774921 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.800158478 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.800143694 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.800380978 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.800885944 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.809876686 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.800562986 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.799685542 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.798913162 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.800236118 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.801327746 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.800308117 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.798781902 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.799821521 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.796825278 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.799481094 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.801864481 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.802579389 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.809753679 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.801785726 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.801191374 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.805266765 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.799815867 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.798334814 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.806408214 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.799936536 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.800818492 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.800470594 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.80584304 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.797840977 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.803301767 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.80933666 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.80069975 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.801730466 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.801305357 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.801496033 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.8107603 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.82820256 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.801420529 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.80018402 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.805795222 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.815332742 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.801691483 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.80299547 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.801838528 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.798023481 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.798647385 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.802329793 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.802264722 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.802405977 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.803150584 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.803231004 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.799927153 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.801938839 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.802417179 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.802363332 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.802816943 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.802261345 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.803161376 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.804123207 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.80276287 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.80381151 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.808531362 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.801958362 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.803577268 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.804698762 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.799468888 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.802988503 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.803368881 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.803541178 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.802960716 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.803287812 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.802401144 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.804267206 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.803579535 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.803318252 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.802549908 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.802930483 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.807344458 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.804130513 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.806977495 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.802065805 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.800525781 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.804033654 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.803519751 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.803605991 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.804277852 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.802411785 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.806741254 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.813741789 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.80384546 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.804141891 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.806970503 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.805570099 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.805715997 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.805593723 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.807291006 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.812821939 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.805159066 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.809639667 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.80426712 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.804980668 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.804829189 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.80433811 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.803557864 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.805282956 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.807607978 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.813396374 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.818150652 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.81544873 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.805646234 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.809527597 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.806503402 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.810862867 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.808625992 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.806172594 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.806439234 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.805672174 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.805014295 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.80662847 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.806777292 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.806047709 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.805470127 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.805652083 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.804784509 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.806033091 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.805220905 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.806022765 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.806235831 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.802931673 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.805973881 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.806732062 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.805233501 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.802946251 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.804722695 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.806661176 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.806851823 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.806745306 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.812392123 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.802079743 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.807089378 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.807210988 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.806626114 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.806619974 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.806642244 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.807968628 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.806162923 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.811585617 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.807092457 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.807244321 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.812359992 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.807177167 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.806357544 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.808556696 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.80721334 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.80291872 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.80931746 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.816583403 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.806311484 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.808706275 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.80849224 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.807130477 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.808335611 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.811883608 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.805129862 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.80621692 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.808273996 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.809122709 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.805274029 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.808672359 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.809337283 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.80780918 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.810207131 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.808775777 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.808663468 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.808354036 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.809207931 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.809609838 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.809222381 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.811430361 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.81785724 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.813617366 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.808076061 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.809994044 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.810099038 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.812694198 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.809062433 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.810309079 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.808300657 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.82105342 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.820476619 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.815046984 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.809239622 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.809835867 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.814152918 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.81124603 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.813787407 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.808587229 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.809103385 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.809206356 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.809969593 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.806975495 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.809785017 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.810128622 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.810829508 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.81069077 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.814469929 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.809118499 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.808995193 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.811207897 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.8113451 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.810859539 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.810483877 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.809190745 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.811792677 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.812642656 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.809954138 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.809911196 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.815941631 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.810384717 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.81202365 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.809648701 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.809787655 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.810394207 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.81118737 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.811945837 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.814012351 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.820746493 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.814989549 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.821497193 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.8124833 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.820181716 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.812273557 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.814358887 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.821547114 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.808985163 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.809981647 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.811367909 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.812160965 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.818170309 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.812620265 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.812192616 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.817217228 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.812240345 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.812230294 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.812730333 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.813093225 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.813011988 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.812912275 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.820025691 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.813329842 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.814710766 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.814179959 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.809973745 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.812475441 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.8115789 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.811463934 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.814970258 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.814202174 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.814109331 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.811801135 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.812637657 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.812677988 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.813044472 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.812824482 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.808974012 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.812428704 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.818273598 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.813911217 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.818303448 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.813179395 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.819603435 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.814082716 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.820135566 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.814342947 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.814390406 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.815207749 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.813225464 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.815840051 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.813600503 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.814232254 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.813829713 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.815335884 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.817879051 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.814977656 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.815799147 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.816173371 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.815660794 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.814854571 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.823844418 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.841253835 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.815273909 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.819941121 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.810623826 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.816083447 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.820520727 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.815243903 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.814368117 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.817083092 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.826479476 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.823689602 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.814330599 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.815310953 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.81590413 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.815625181 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.815594037 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.814979948 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.81521079 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.815112186 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.815805095 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.815491599 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.818645147 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.815477659 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.814807953 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.816403979 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.815038242 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.82487125 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.816137137 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.81665629 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.816082932 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.817503003 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.816009727 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.815542716 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.816637973 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.815926122 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.816382119 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.816712795 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.824151925 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.824060082 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.818835178 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.816530999 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.817989481 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.816154113 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.817733624 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.817622195 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.818512235 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.81735067 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.817659119 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.817125153 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.816529014 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.815910036 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.817869421 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.817846567 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.816105662 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.818716705 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.825347731 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.817032605 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.814130342 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.817324061 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.816624026 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.816398039 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.817274993 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.823888528 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.821256033 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.828283478 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.826993764 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.821973762 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.817809276 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.820374032 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.827245155 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.817628443 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.817985189 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.818106363 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.81951849 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.818807886 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.82110903 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.82062379 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.825277434 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.818613679 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.817767478 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.825780153 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.81923536 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.819981966 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.82015139 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.822362919 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.818921884 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.815230005 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.819619042 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.818975336 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.825055735 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.819924886 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.820876626 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.821619508 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.817395632 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.821679556 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.825909822 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.819736238 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.821163753 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.817254202 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.81962393 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.820590998 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.821038856 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.816894502 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.819398658 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.819762495 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.822448065 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.82863659 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.818058233 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.821449464 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.820247529 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.821291031 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.821971189 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.82149172 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.816810987 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.817227614 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.819475722 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.821391477 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.820053699 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.822198599 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.821295974 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.822202874 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.821969992 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.820969684 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.823601016 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.832396023 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.831158723 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.818765606 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.820385484 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.8224813 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.823871582 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.821575529 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.822269831 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.822294523 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.822080878 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.821541332 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.822669974 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.821508186 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.825261746 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.837887232 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.820380488 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.821115706 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.82206554 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.825081606 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.822395001 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.81890548 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.821519551 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.823648826 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.824812023 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.832177264 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.823400196 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.827773607 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.822684542 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.823577791 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.8274604 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.825976684 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.831828299 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.824411933 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.823432308 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.824055529 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.827911089 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.841146511 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.822800895 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.832484715 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.853611433 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.823979299 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.824279347 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.824484516 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.822480539 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.822957657 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.825338645 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.824209222 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.823455257 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.823015674 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.823620145 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.823608696 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.828950947 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.825209651 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.824030689 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.82473511 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.822790089 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.823599791 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.821305276 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.826059315 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.823517215 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.824052694 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.825453475 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.825564743 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.824599522 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.836733046 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.834717839 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.825058233 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.825748739 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.821549114 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.827679272 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.827137422 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.836758279 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.833550821 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.826532112 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.826378128 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.825554496 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.826842515 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.821538071 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.82515652 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.824961089 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.823856796 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.821121059 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.837197804 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.835911704 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.829617992 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.825269554 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.825521958 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.826601886 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.826835156 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.826756671 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.826625478 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.827704035 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.826538531 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.832329141 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.825215934 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.825904287 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.829635902 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.835121924 seconds)
  done (took 1081.839375127 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.823621331 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.822984818 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.823385694 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.824288578 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.82363771 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.823891538 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.824568738 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.823673952 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.822665752 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.824983377 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.822872701 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.823398765 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.82327823 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.823959216 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.82448536 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.825026081 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.824362571 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.824684034 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.824325345 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.824124788 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.82483767 seconds)
  done (took 40.058522414 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.827900521 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.824606749 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.824450627 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.827159443 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.82449289 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.827992946 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.824304214 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.828920222 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.827098742 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.823907723 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.826618482 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.827836434 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.82432944 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.824858363 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.82680074 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.828422203 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.82842996 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.825569828 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.828611954 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.824941645 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.827927288 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.825331817 seconds)
  done (took 41.936998929 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.830449175 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.830422777 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.827262267 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.825430494 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.829667677 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.826151553 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.829786272 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.829370864 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.829378904 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.83061702 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.827506396 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.830650867 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.836304319 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.835333356 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.831485035 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.829369755 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.973022232 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.830254739 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.830562119 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.830610987 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.826743497 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.834409292 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.82659554 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.826449382 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.828453146 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.830682432 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.829235527 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.829090367 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.831142049 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.830258315 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.834000115 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.829888557 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.829062578 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.831772963 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.828570806 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.83017288 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.834291232 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.830974563 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.827725336 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.830503642 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.84039025 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.854371737 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.831755848 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.837424892 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.831050664 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.831209518 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.834666436 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.841687739 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.827765933 seconds)
  done (took 91.632192652 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.830724591 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.831326407 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.828419715 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.830584595 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.832391796 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.831970482 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.831375953 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.831676845 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.828638063 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.828607953 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.830234558 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.827926377 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.826949293 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.830863047 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.830593866 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.827032013 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.827373512 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.827466339 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.827872875 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.828369546 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.827571602 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.830585636 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.831440123 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.828355096 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.831595216 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.828021141 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.828720982 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.830789068 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.828109217 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.828874177 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.831768848 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.83090996 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.831016393 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.829128699 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.829039719 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.831148686 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.831905904 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.828740176 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.830218769 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.828725828 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.831922674 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.831507762 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.831332488 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.832389753 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.828671201 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.829237457 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.829386984 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.828944152 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.829557024 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.83246677 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.833336551 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.829640967 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.832834233 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.829359351 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.832594053 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.832971281 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.830171319 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.830385667 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.832827075 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.831035356 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.830390057 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.833063507 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.830138407 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.833161835 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.832859773 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.830966156 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.830513383 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.833703674 seconds)
  done (took 126.223588924 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.832950349 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.833921853 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.834454004 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.835135388 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.834490315 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.834834793 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.834107582 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.834561114 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.834211997 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.834032865 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.835233741 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.833743302 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.835552634 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.833886453 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.834917002 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.83496223 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.835105465 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.836189162 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.835746459 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.836183778 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.835537326 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.835528003 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.835387314 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.835470202 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.836046503 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.835548253 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.835267159 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.835463686 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.836319695 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.835650522 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.836090855 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.836294655 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.836148639 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.835915956 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.836411359 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.836574224 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.837018465 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.837269738 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.836124893 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.837225239 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.836899887 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.836556708 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.837143939 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.837513779 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.837599843 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.837834766 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.837607644 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.837235706 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.836444439 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.836783605 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.837270363 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.837734891 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.837368744 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.837822797 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.837491488 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.836815852 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.83739999 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.83767653 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.837362784 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.8379745 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.837968364 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.83734137 seconds)
  done (took 115.601562774 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.835958484 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.836215085 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.833546797 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.83406792 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.837487413 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.834657567 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.83690677 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.836634054 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.837037039 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.836777635 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.836688112 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.834569519 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.835793789 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.837470457 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.835117805 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.836327921 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.834798637 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.835018541 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.837864872 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.836202518 seconds)
  done (took 38.485026062 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.835427085 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.837694013 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.836005954 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.83503899 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.838103435 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.835082076 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.837116814 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.838190756 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.836202176 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.838152597 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.838965236 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.839250809 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.835504413 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.837703054 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.838864764 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.837237751 seconds)
  done (took 31.161187552 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.836651634 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.838304191 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.839815835 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.839805478 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.837117964 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.83679941 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.839815505 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.836661095 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.835916003 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.83965544 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.839392485 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.839743993 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.839361377 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.838505159 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.83712107 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.839388551 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.83648822 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.837085688 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.840455348 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.839492744 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.837970573 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.836908133 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.839718893 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.839471802 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.838095431 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.83753029 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.837718317 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.836968405 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.837373427 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.839925693 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.837547684 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.8380785 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.837571913 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.837140008 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.84130168 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.838680776 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.840092938 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.840909112 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.839760701 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.841703152 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.840550189 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.838464823 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.84178506 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.84054782 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.838899357 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.840742037 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.838242514 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.839491738 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.839155291 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.838818308 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.842819831 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.841896723 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.842314949 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.841879424 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.84105779 seconds)
  done (took 102.917588081 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.842579168 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.842794099 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.839449771 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.841408894 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.841774825 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.838150255 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.841018875 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.839530185 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.839386096 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.84097194 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.840265343 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.841906729 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.838663465 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.843539669 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.840826948 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.841379843 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.839964323 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.8398114 seconds)
  done (took 34.903879497 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.840191586 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.839218115 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.843038829 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.839888547 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.840226186 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.842516349 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.839406477 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.842545817 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.843225744 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.840378523 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.840120881 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.842841429 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.843750323 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.843386695 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.841379283 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.841347109 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.843727229 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.843078226 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.841219478 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.841290671 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.844243752 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.843700217 seconds)
  done (took 42.291881319 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.843070142 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.842190082 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.859371313 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.867354657 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.866789659 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.883294348 seconds)
  done (took 12.933735246 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.84135216 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.844126089 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.841206757 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.843922822 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.844659892 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.841911192 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.841950995 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.841009166 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.844854931 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.841591933 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.841326605 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.845675882 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.84350364 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.840859617 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.843714096 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.843852517 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.840572139 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.84399013 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.839931479 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.842517313 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.840897349 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.843322287 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.84485177 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.841659381 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.844602129 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.845635396 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.84573995 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.842980506 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.844806515 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.850242522 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.846177264 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.845597531 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.847615495 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.847381452 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.849962418 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.848068105 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.844789144 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.846805358 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.848172647 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.843882064 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.84680049 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.848887789 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.846596425 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.842360603 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.846103327 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.841223906 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.84097929 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.839782646 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.840464182 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.844109913 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.843818298 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.839948554 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.843648157 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.844060405 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.843100159 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.844913604 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.839881098 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.839695399 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.841962111 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.839765314 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.839258604 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.84241041 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.839993483 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.838809041 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.842031536 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.839633198 seconds)
  done (took 123.439682589 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.840476707 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.839901897 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.839977444 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.839710349 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.839735182 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.839104071 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.839459877 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.840146584 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.839466476 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.838590649 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.842070713 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.84049659 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.840515273 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.840448948 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.840712893 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.840922327 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.839822273 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.840086166 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.839606516 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.843839659 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.841618365 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.840381283 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.84026493 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.840716698 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.841329704 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.843685256 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.84083701 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.840199315 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.841371023 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.840168553 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.839914408 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.840889187 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.839982299 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.840803982 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.839841372 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.840198402 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.840752946 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.841280132 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.841259044 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.844273654 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.841572189 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.843361466 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.841801555 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.840594438 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.84223212 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.840448411 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.841215467 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.841932469 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.841267359 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.84233318 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.84186049 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.841333108 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.841304752 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.841650436 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.839879769 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.841597357 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.840572461 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.841182495 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.844060238 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.84330126 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.841888162 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.84028921 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.844042241 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.841047229 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.843259688 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.840561091 seconds)
  done (took 123.28499493 seconds)
done (took 2520.414537012 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.863095578 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.839957494 seconds)
  done (took 15.47742359 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.999634127 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.952043296 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.837006039 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.833839628 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.832050452 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.856127218 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.824553068 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.828450284 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.829214863 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.828351027 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.829013888 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.014605596 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.881633562 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.82885747 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.830934436 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.921306846 seconds)
  done (took 51.698669349 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.831783891 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.832851731 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.843856142 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.835767067 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.83196401 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.845094083 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.867995503 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.834864011 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.874642331 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.845348362 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.907367263 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.843847346 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.830163179 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.884623174 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.846225441 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.846568803 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.926140538 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.909138359 seconds)
  done (took 35.198356711 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.912194835 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.833977316 seconds)
  done (took 10.514099488 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.86077602 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.84671436 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.835336193 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.853983003 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.826821022 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.827960469 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.826771073 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.832192361 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.852542837 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.825133229 seconds)
  done (took 70.151656159 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.834014616 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.827990807 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.827332105 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.826073009 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.819833294 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.822697245 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.825286553 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.821102293 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.507424935 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.861579908 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.831233223 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.829001197 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.824193511 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.825875081 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.821124389 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.847704005 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.916309423 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.821342765 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.820952959 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.828887413 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.824492487 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.877469922 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.839138275 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.826089493 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.855802757 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.505324635 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.832551335 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.830170327 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.917987071 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.822432719 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.822881422 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.82438204 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.826843772 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.190770267 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.099938472 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.824640926 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.839673563 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.832637926 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.821557042 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.914961767 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.824281105 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.829768478 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.453956078 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.080187578 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.924143225 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.866299361 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.148997758 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.842788316 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.824754043 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.851033949 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.834937681 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.825089623 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.835754901 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.301954096 seconds)
  done (took 129.677958374 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.816665902 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.171681285 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.990989252 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.818202328 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.111729328 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.03033503 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.819715527 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.869389147 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.819075657 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.051363688 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.076170134 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.92975587 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.818200977 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.814976117 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.816895242 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.815231501 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.976490886 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.891991736 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.816623624 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.813780034 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.849559011 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.061923339 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.944837314 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.818226004 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.846119964 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.030215608 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.941996737 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.924859132 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.607188709 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.813317956 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.881941169 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.81687994 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.816764376 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.812662928 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.975983878 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.913937275 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.901497747 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.817429581 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.814320828 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.81122119 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.488536846 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.017467526 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.913731308 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.958557648 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.015128684 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.026216487 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.599116314 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.812366447 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.55867435 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.981461517 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.047819551 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.046772538 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.941109904 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.814993282 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.143158335 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.811847565 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.811833441 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.067506779 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.96278874 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.918781878 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.815459083 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.811039191 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.812817118 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.062942896 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.816253928 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.912984736 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.816780344 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.814279935 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.914693089 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.918940372 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.956552536 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.030509608 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.84679993 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.763271822 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.350418995 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.064008177 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.884949048 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.068734774 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.815624092 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.813532227 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.895788309 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.665117437 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.072069781 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.066208568 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.071382989 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.852970389 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.543712736 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.812598624 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.045135756 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.040041357 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.069519448 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.022029293 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.058212833 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.157664116 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.81287566 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.813231003 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.047361908 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.953139188 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.816431922 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.167434999 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.052683859 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.385432209 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.839176486 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.127190701 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.949995455 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.81721926 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.459702729 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.813913719 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.04126245 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.860560985 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.815405557 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.814454851 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.040885442 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.794258544 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.81503297 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.697849375 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.880698164 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.819479148 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.053462375 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.818634706 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.081768613 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.818216774 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.058474748 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.983457664 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.851332641 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.994114445 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.020411356 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.817969551 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.06541515 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.064553788 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.935182096 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.094540018 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.721000391 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.816073599 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.108344408 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.817890951 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.815085698 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.990092397 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.81628345 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.966606713 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.81998578 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.107954045 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.843921525 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.052434144 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.81989673 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.074635448 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.855227458 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.871538171 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.819926326 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.94652522 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.817538207 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.653956148 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.978620751 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.816769923 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.815452293 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.372229847 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.816125909 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.975405167 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.054082574 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.842215634 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.894189148 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.491371184 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.816223092 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.908065296 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.844370061 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.212865541 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.815844804 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.071474373 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.820433235 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.816646486 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.816673111 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.062743189 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.060432792 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.82006649 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.816829635 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.717315669 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.817344815 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.816444668 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.003287342 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.180901754 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.818179534 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.023776086 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.822213198 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.950996453 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.819320391 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.902415538 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.155464438 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.81905027 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.818568392 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.818818263 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.819825831 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.818638609 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.031698384 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.847923014 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.364037969 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.959382754 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.090319432 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.134474693 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.071477585 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.867600403 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.821283962 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.077996948 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.820290265 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.885087477 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.822370337 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.843526158 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.055502165 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.823841071 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.088231031 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.102832258 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.860099789 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.870009089 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.821592345 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.82045209 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.820489214 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.969367698 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.912443042 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.822516434 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.818275854 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.937321159 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.945781705 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.034697505 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.821645143 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.900798589 seconds)
  done (took 892.189533197 seconds)
done (took 1206.679343497 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.819534087 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.820830847 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.809032646 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.827462676 seconds)
  done (took 29.034557358 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.834045118 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.829552556 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.831483088 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.830668116 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.833616474 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.830696582 seconds)
  done (took 12.750847538 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.840991969 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.827090017 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.82678819 seconds)
  done (took 21.256750315 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.898028766 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.21776335 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.93818849 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.253218526 seconds)
  done (took 10.069028205 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.833020407 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.834753683 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.83256143 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.83418599 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.835245118 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.835131246 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.832507558 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.835042135 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.836145552 seconds)
  done (took 18.272109401 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.208445344 seconds)
done (took 97.347398138 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.916970323 seconds)
    (2/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.809850438 seconds)
    (3/309) benchmarking ("map", abs, Int8, true)...
    done (took 3.258521076 seconds)
    (4/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.449957655 seconds)
    (5/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.82894432 seconds)
    (6/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.924933311 seconds)
    (7/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.978080454 seconds)
    (8/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.11018788 seconds)
    (9/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.238377871 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.975821627 seconds)
    (11/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.916488958 seconds)
    (12/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.912119662 seconds)
    (13/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.898882238 seconds)
    (14/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.174660828 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.874679195 seconds)
    (16/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.794581508 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.855280807 seconds)
    (18/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.052933282 seconds)
    (19/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.073832061 seconds)
    (20/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.830110665 seconds)
    (21/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.161384351 seconds)
    (22/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.924134793 seconds)
    (23/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.158401558 seconds)
    (24/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.813237369 seconds)
    (25/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.314787748 seconds)
    (26/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.059820026 seconds)
    (27/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.956341181 seconds)
    (28/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.816872958 seconds)
    (29/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.434616003 seconds)
    (30/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.054038142 seconds)
    (31/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.828659049 seconds)
    (32/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 2.452081657 seconds)
    (33/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.842215955 seconds)
    (34/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.015832299 seconds)
    (35/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.845367274 seconds)
    (36/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.927507777 seconds)
    (37/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.444032196 seconds)
    (38/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.718108124 seconds)
    (39/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.831598617 seconds)
    (40/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.904197785 seconds)
    (41/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.401932791 seconds)
    (42/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.138744013 seconds)
    (43/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.962220557 seconds)
    (44/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.480317182 seconds)
    (45/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.939043189 seconds)
    (46/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.001657586 seconds)
    (47/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.972446522 seconds)
    (48/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.879522933 seconds)
    (49/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.214521897 seconds)
    (50/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.81489749 seconds)
    (51/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.010183962 seconds)
    (52/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.97781712 seconds)
    (53/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.970588532 seconds)
    (54/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.084922278 seconds)
    (55/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.390721461 seconds)
    (56/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.832884863 seconds)
    (57/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.042983094 seconds)
    (58/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.072140439 seconds)
    (59/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.284785461 seconds)
    (60/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.265554086 seconds)
    (61/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.818671598 seconds)
    (62/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.926719221 seconds)
    (63/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.889154786 seconds)
    (64/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.918213397 seconds)
    (65/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.162054872 seconds)
    (66/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.896752142 seconds)
    (67/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.50075817 seconds)
    (68/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.942129997 seconds)
    (69/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.924313762 seconds)
    (70/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.93460741 seconds)
    (71/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.972820318 seconds)
    (72/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.518484902 seconds)
    (73/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.913228014 seconds)
    (74/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.011966165 seconds)
    (75/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.834215187 seconds)
    (76/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.9091517 seconds)
    (77/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.828775648 seconds)
    (78/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 2.13729575 seconds)
    (79/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.830251673 seconds)
    (80/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 8.214343689 seconds)
    (81/309) benchmarking ("sort", Int64, false)...
    done (took 5.516738491 seconds)
    (82/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.851020251 seconds)
    (83/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.718230553 seconds)
    (84/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.888084168 seconds)
    (85/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.862501078 seconds)
    (86/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.213286832 seconds)
    (87/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.919057441 seconds)
    (88/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.83631929 seconds)
    (89/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.159004832 seconds)
    (90/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.011687846 seconds)
    (91/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.906523956 seconds)
    (92/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.814731391 seconds)
    (93/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 3.236526671 seconds)
    (94/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.870490297 seconds)
    (95/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.929338535 seconds)
    (96/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.833544906 seconds)
    (97/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.831885133 seconds)
    (98/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 3.462260959 seconds)
    (99/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.831613016 seconds)
    (100/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.892603181 seconds)
    (101/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.834980945 seconds)
    (102/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.016564241 seconds)
    (103/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.938144195 seconds)
    (104/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.859892201 seconds)
    (105/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.930037502 seconds)
    (106/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.989218275 seconds)
    (107/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.178371949 seconds)
    (108/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.037312069 seconds)
    (109/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.81678698 seconds)
    (110/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.319717104 seconds)
    (111/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.832510605 seconds)
    (112/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 2.030224479 seconds)
    (113/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.815611333 seconds)
    (114/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 8.056496678 seconds)
    (115/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.132201805 seconds)
    (116/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.851005855 seconds)
    (117/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.947343892 seconds)
    (118/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.998362929 seconds)
    (119/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.816108124 seconds)
    (120/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 2.02128107 seconds)
    (121/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.905596599 seconds)
    (122/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.339650745 seconds)
    (123/309) benchmarking ("sort", Bool, false)...
    done (took 2.058785651 seconds)
    (124/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.852566915 seconds)
    (125/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.233643144 seconds)
    (126/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.090153662 seconds)
    (127/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.832736169 seconds)
    (128/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.93243034 seconds)
    (129/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.814754794 seconds)
    (130/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.819622053 seconds)
    (131/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.668523918 seconds)
    (132/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.086179908 seconds)
    (133/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.25992843 seconds)
    (134/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.967580937 seconds)
    (135/309) benchmarking ("sort", BigInt, false)...
    done (took 6.834921474 seconds)
    (136/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.658320651 seconds)
    (137/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.84577653 seconds)
    (138/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.924977103 seconds)
    (139/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.322716458 seconds)
    (140/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.936165699 seconds)
    (141/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.153277338 seconds)
    (142/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.836933318 seconds)
    (143/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.295453735 seconds)
    (144/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.84537892 seconds)
    (145/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.832016216 seconds)
    (146/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.053852553 seconds)
    (147/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.861442281 seconds)
    (148/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.881755383 seconds)
    (149/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.848742531 seconds)
    (150/309) benchmarking ("sort", Float64, false)...
    done (took 5.587512404 seconds)
    (151/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.819876738 seconds)
    (152/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 2.064777467 seconds)
    (153/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.120438965 seconds)
    (154/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.821272275 seconds)
    (155/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.599575234 seconds)
    (156/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.904942786 seconds)
    (157/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.060178499 seconds)
    (158/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.857546773 seconds)
    (159/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.83287057 seconds)
    (160/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 7.349554583 seconds)
    (161/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.909024023 seconds)
    (162/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.861610652 seconds)
    (163/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.93070372 seconds)
    (164/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.835451987 seconds)
    (165/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.496985234 seconds)
    (166/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.011206706 seconds)
    (167/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.931311046 seconds)
    (168/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.857975458 seconds)
    (169/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.834317521 seconds)
    (170/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.103444333 seconds)
    (171/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.821934457 seconds)
    (172/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.088752414 seconds)
    (173/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.839451851 seconds)
    (174/309) benchmarking ("sort", Int8, false)...
    done (took 4.800714743 seconds)
    (175/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.015568986 seconds)
    (176/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.120905519 seconds)
    (177/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.013630675 seconds)
    (178/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.135945513 seconds)
    (179/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.961721331 seconds)
    (180/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.866269822 seconds)
    (181/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.077760753 seconds)
    (182/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.117245347 seconds)
    (183/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.819465875 seconds)
    (184/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.64292931 seconds)
    (185/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.876155624 seconds)
    (186/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.818231179 seconds)
    (187/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 2.643797768 seconds)
    (188/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.926854234 seconds)
    (189/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.215021585 seconds)
    (190/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.171251275 seconds)
    (191/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.517211362 seconds)
    (192/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.2997446 seconds)
    (193/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.866096826 seconds)
    (194/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.161640085 seconds)
    (195/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.062037471 seconds)
    (196/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.073884799 seconds)
    (197/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.838600963 seconds)
    (198/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 3.442386613 seconds)
    (199/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.880544303 seconds)
    (200/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.029637864 seconds)
    (201/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.767342626 seconds)
    (202/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.154580617 seconds)
    (203/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.076485858 seconds)
    (204/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.184308554 seconds)
    (205/309) benchmarking ("sort", Float32, false)...
    done (took 5.542620677 seconds)
    (206/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.961541064 seconds)
    (207/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.214579785 seconds)
    (208/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.041817956 seconds)
    (209/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.46861684 seconds)
    (210/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.933620161 seconds)
    (211/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.985363223 seconds)
    (212/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.957433334 seconds)
    (213/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.638140329 seconds)
    (214/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.272599324 seconds)
    (215/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.850291168 seconds)
    (216/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.99723738 seconds)
    (217/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.951362114 seconds)
    (218/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.978843621 seconds)
    (219/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.146201692 seconds)
    (220/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.839433433 seconds)
    (221/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.095736113 seconds)
    (222/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.806359768 seconds)
    (223/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.092659363 seconds)
    (224/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.860498057 seconds)
    (225/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.997470707 seconds)
    (226/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.640288983 seconds)
    (227/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.873909408 seconds)
    (228/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.882814474 seconds)
    (229/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.819874508 seconds)
    (230/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 3.491225263 seconds)
    (231/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.230837994 seconds)
    (232/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.841392122 seconds)
    (233/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.000550493 seconds)
    (234/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.766646477 seconds)
    (235/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.979917101 seconds)
    (236/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.071988473 seconds)
    (237/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.135087168 seconds)
    (238/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.022074051 seconds)
    (239/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.861412182 seconds)
    (240/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.758430408 seconds)
    (241/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.941259942 seconds)
    (242/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.925188062 seconds)
    (243/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.279379405 seconds)
    (244/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.840998257 seconds)
    (245/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 8.168727185 seconds)
    (246/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.207568216 seconds)
    (247/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 2.400607502 seconds)
    (248/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.186973396 seconds)
    (249/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.268643738 seconds)
    (250/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.906823108 seconds)
    (251/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.328285736 seconds)
    (252/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.926417795 seconds)
    (253/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.838224879 seconds)
    (254/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 2.024395963 seconds)
    (255/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.922157535 seconds)
    (256/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.138028644 seconds)
    (257/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.839601138 seconds)
    (258/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.993691278 seconds)
    (259/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.901552089 seconds)
    (260/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.301934903 seconds)
    (261/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.067908959 seconds)
    (262/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.191004597 seconds)
    (263/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.02353047 seconds)
    (264/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.827467917 seconds)
    (265/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.174277193 seconds)
    (266/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.869890262 seconds)
    (267/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.937435104 seconds)
    (268/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.840322981 seconds)
    (269/309) benchmarking ("map", abs, BigInt, false)...
    done (took 8.605431864 seconds)
    (270/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.494820082 seconds)
    (271/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.143713802 seconds)
    (272/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.859585662 seconds)
    (273/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.862118137 seconds)
    (274/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.671399451 seconds)
    (275/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.759196454 seconds)
    (276/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.841534753 seconds)
    (277/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 3.346165959 seconds)
    (278/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.954605989 seconds)
    (279/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.923987227 seconds)
    (280/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.144818157 seconds)
    (281/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.19455328 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.949170894 seconds)
    (283/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.932785092 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.166613183 seconds)
    (285/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.9267033 seconds)
    (286/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.840075849 seconds)
    (287/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.623939355 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.983629584 seconds)
    (289/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.027384027 seconds)
    (290/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.238763491 seconds)
    (291/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.1780825 seconds)
    (292/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.842478956 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.55256487 seconds)
    (294/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.907286251 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.875992489 seconds)
    (296/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.407978603 seconds)
    (297/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.838943982 seconds)
    (298/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.209955242 seconds)
    (299/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.943676663 seconds)
    (300/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.868510663 seconds)
    (301/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.173071815 seconds)
    (302/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.873994088 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.860599573 seconds)
    (304/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.841969445 seconds)
    (305/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.390558663 seconds)
    (306/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.829165375 seconds)
    (307/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.073383243 seconds)
    (308/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.822535153 seconds)
    (309/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.149326789 seconds)
  done (took 998.523927931 seconds)
done (took 1000.343862125 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.88235787 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.86793801 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.852041811 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.873646473 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.963574198 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.888278632 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.862280194 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.854794676 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.899761794 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.902485787 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.851512356 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.885450748 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.853230144 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.851934213 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.85183536 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.865793633 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.163320625 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.875691082 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.869191044 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.861342358 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.869006753 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.8530737 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.902825441 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.885838949 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.857344091 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.856153321 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.857156142 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.872318078 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.964268126 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.856103022 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.856065801 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.864147964 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.164111148 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.875583332 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.849612475 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.872000255 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.863863165 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.86510067 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.856672537 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.885140403 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.25037316 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.885013468 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.856829921 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.85463119 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.855383891 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.857925682 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.856100057 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.861820109 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.866729375 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.867957329 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.249961655 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.900212834 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.856582468 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.857203241 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.865663371 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.854116791 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.859028059 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.869929432 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.87453941 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.870301978 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.153416781 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.881790468 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.857881139 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.87251046 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.862103215 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.286712992 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.883393299 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.858548544 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.252586004 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.892227332 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.28786703 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.89489992 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.857340545 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.869506851 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.88717526 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.164247246 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.873217032 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.855429762 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.864030923 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.854553924 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.86671695 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.867602712 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.861086269 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.857090493 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.8699282 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.890892034 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.867511944 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.857133384 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.867218454 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.876015672 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.863413957 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.866689067 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.860145553 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.853296796 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.866770851 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.859978693 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.860368096 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.859605625 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.861908787 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.86800729 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.252283282 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.904622593 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.854812866 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.853959044 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.85811112 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.872184588 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.253244665 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.889586682 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.879414892 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.905141874 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.860379155 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.155594832 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.8831354 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.874186449 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.866306493 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.862913814 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.853735839 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.155270297 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.275042813 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.904762034 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.860389137 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.85678372 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.873381101 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.860311271 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.85509688 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.167789226 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.882848325 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.872132212 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.97992292 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.868871216 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.889260491 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.857562765 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.862131697 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.893471974 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.873899933 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.890131101 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.863690275 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.874454741 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.874558468 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.85618953 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.870008794 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.870682379 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.860781524 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.866095416 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.855117983 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.894319651 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.871629787 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.870944036 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.880069188 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.979435899 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.85793437 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.158334662 seconds)
done (took 291.73414544 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.925941303 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.849928419 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.956443743 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.856153723 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.936348099 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.939886609 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.853387699 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.853522233 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.853198702 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.22734229 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.853504267 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.855229382 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.854981465 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.853884937 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.937664446 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.856833494 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.853805414 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.191484789 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.858294066 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.928494928 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.854975486 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.854354018 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.858165737 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.229684608 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.857837687 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.849765377 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.927988788 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.859533507 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.196095881 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.850309124 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.857279096 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.195131188 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.949448545 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.875800342 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.868647567 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.863721403 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.93837889 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.860982803 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.937490477 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.937984743 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.956664587 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.898852523 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.858613266 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.851806957 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.860811916 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.860757978 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.854690118 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.88597237 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.853815743 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.855761397 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.193677238 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.868706663 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.866188179 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.855917633 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.855422276 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.881985938 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.855939653 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.861083241 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.950004556 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.860661462 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.920547706 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.234423688 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.229705371 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.860276799 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.854408708 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.857338191 seconds)
  done (took 183.451045755 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.924427892 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.932009739 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.925579173 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.862507897 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.906935479 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.92499101 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.861999223 seconds)
  done (took 15.126527184 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.86581995 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.860079283 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.911590686 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.912543653 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.860522806 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.007634884 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.860760254 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.871354869 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.857747024 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.914220666 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.862008722 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.860191369 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.866899221 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.851793633 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.910996797 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.871345219 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.977756679 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.862320586 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.861826365 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.012574643 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.867587861 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.867835681 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.914788916 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.874376858 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.862464211 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.867706393 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.443183879 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.862137652 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.862808624 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.861132825 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.858640366 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.903160355 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.862688657 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.856417923 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.859262056 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.977100895 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.862177021 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.858300392 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.861328648 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.860909011 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.862461432 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.862223914 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.862005965 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.860202526 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.862834953 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.886401179 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.862152941 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.861729312 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.861502397 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.864052489 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.911902158 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.862689093 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.859835271 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.85985972 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.918391984 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.869593412 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.864470111 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.859270775 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.863456014 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.860319201 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.015427278 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.912924581 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.862648257 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.913147557 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.863255338 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.864440011 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.862971136 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.862911494 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.961004937 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.862542696 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.916562318 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.861341661 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.022242666 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.887553666 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.864659306 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.869485341 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.866477308 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.86471301 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.858545992 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.870602616 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.860865029 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.865315393 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.870225484 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.862706209 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.862353404 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.976125475 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.971883544 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.862092662 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.877145803 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.873036381 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.86175325 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.917908016 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.864876553 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.861425523 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.922506421 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.983148612 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.919937679 seconds)
  done (took 205.14936795 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.868587641 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.87404239 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.865022119 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.88082621 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.864950105 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.864707733 seconds)
  done (took 13.011936553 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.86637193 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.865842885 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.864301293 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.864809221 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.865276202 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.867543813 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.866463936 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.865729472 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.869270252 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.865287909 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.867619976 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.86726186 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.867149173 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.866429819 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.866580367 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.865569425 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.869634737 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.863712659 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.865937116 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.866613938 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.024829946 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.868483178 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.866308934 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.866187164 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.870299561 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.868714308 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.87548255 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.865709639 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.866524282 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.875305258 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.870538756 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.870828303 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.867726498 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.871906801 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.871439824 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.867572328 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.869574026 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.870175493 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.864411629 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.868053801 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.869315556 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.867813091 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.866949348 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.868599357 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.869148674 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.871528215 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.872268299 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.876381403 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.868667157 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.869389922 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.868997749 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.867438142 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.868721003 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.87039283 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.868802608 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.871231191 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.872849137 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.869686187 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.868496338 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.868403469 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.867935077 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.868713255 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.869903031 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.8726805 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.866100095 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.869962336 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.868192425 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.872530542 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.869049199 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.869820911 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.869745735 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.865696007 seconds)
  done (took 137.489261777 seconds)
done (took 556.02431901 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.041438304 seconds)
  done (took 8.83812717 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.993339024 seconds)
  done (took 8.831087767 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.117416247 seconds)
  done (took 9.920542533 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.876967244 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.889008239 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.873278572 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.871042458 seconds)
  done (took 29.32461631 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.967863891 seconds)
  done (took 8.764532111 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.88278077 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.861912046 seconds)
  done (took 15.574376541 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.005379085 seconds)
  done (took 8.809846019 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.942581914 seconds)
  done (took 8.759732263 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.869188427 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.890701163 seconds)
  done (took 15.570037099 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.846629005 seconds)
  done (took 8.643878948 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.412542569 seconds)
  done (took 11.307805659 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.873200741 seconds)
  done (took 8.769350802 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.866090414 seconds)
  done (took 8.662094803 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.86065628 seconds)
  done (took 9.656753034 seconds)
done (took 163.228189426 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.874425401 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.862664354 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.862724141 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.86009772 seconds)
  done (took 29.255723458 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.900951007 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.90091978 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.902600657 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.911574104 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.905902162 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.902323549 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.894199424 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.894482046 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.9122234 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.905589395 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.903589483 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.903626092 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.902340547 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.893316358 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.905346667 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.905452175 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.912787939 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.903465851 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.895043662 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.906033837 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.871198766 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.913438938 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.905897209 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.870579289 seconds)
  done (took 47.4200603 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.06806206 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.942499248 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.022096469 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.921470669 seconds)
  done (took 9.751220131 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.921088205 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.922683524 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.934227432 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.973992607 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.005600859 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.932478718 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.894428345 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.891852034 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.877339302 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.923473853 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.999077062 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.918900837 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.008819993 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.869332544 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.058847297 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.869626021 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.87029228 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.92147981 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.973651955 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.985909296 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.87031517 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.921918622 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.925662592 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.917739196 seconds)
  done (took 48.187049523 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.86866107 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.87686219 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.875715022 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.869559786 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.868983211 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.869810182 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.875076966 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.870590604 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.890717428 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.870450558 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.868235194 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.87075622 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.870134164 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.870246118 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.869744155 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.882887692 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.883410678 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.871076533 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.873395379 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.876838187 seconds)
  done (took 39.27225183 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.86337207 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.718334058 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.215918546 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.1193629 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.864716315 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.867233635 seconds)
  done (took 31.449000108 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.883055086 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.87544518 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.870808408 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.926811325 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.00615199 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.876216884 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.872281122 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.880490531 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.915500337 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.933685884 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.891128832 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.897907241 seconds)
  done (took 24.62921263 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.865865046 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.888843136 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.866517364 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.905882339 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.881684061 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.877366906 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.879589417 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.865190682 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.883991477 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.887933587 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.87774125 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.882067378 seconds)
  done (took 44.365713697 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.954755557 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.755978713 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.914630001 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.583420256 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.402046816 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.077635976 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.383932193 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.204525995 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.869360994 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.139570571 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.809725536 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.106554448 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.12156597 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.883787853 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.867353055 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.312430694 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.164911539 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.10020693 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.896706827 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.54201944 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.254440856 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.881094323 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.566719125 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.006827617 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.093735498 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.012879837 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.141880014 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.838455982 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.014791072 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.918520841 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.89210252 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.881595565 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.154931175 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.255551771 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.997025162 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.891752928 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.536194808 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.599072124 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.868643546 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.662063856 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.716277386 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.011606424 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.891121173 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.88202854 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.816955642 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.484548745 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.228988701 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.887569138 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.583962689 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.882785741 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.894140877 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.973183651 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.887428151 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.698110858 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.834684926 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.163133608 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.87933117 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.888657132 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.45070277 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.936542991 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.588670528 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.818316548 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.976486052 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.539631858 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.344313334 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.031865553 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.885932684 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.8863685 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.817119411 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.613967231 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.003953744 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.029289118 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.902809301 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.534170076 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.202187076 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.893190008 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.964583991 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.173012821 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.761694839 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.817583093 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.116603276 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.842945956 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.820435439 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.733150993 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.820170719 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.155268808 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.922348634 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.505678883 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.92457808 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.22058928 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.896554671 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.909161654 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.892648513 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.108692128 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.768491757 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.88697767 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.59209036 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.168822152 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.907744237 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.226877162 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.820519766 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.889771055 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.141679971 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.097121154 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.081867408 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.435301454 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.043797639 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.886550099 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.972598709 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.785432193 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.012271742 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.157070656 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.945549542 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.943048604 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.015118223 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.84699286 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.201705433 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.914875111 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.058228246 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.855729898 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.150743075 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.200847536 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.141304505 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.970713501 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.892601462 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.887377505 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.57306199 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.511594781 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.112284379 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.888601776 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.340932169 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.013177227 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.888949758 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.824006188 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.7238236 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.853660547 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.99259792 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.112188751 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.805063307 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.278527047 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.824541848 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.035517717 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.005008997 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.111211014 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.528686545 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.96328731 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.150638346 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.350507109 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.205265386 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.014258981 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.908513005 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.9817881 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.910822124 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.293474597 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.259685043 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.893344585 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.892762119 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.610608835 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.94985963 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.898107155 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.895284902 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.716331834 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.16685822 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.912371709 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.897066912 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.779283953 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.903566519 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.957869776 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.895623727 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.900509197 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.417240784 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.643028226 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.902534451 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.629507466 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.140323629 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.900138307 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.630098139 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.078278582 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.972956778 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.159131474 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.948822507 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.82485808 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.593269145 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.594275043 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.890681523 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.828142585 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.890459954 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.900131955 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.902235825 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.08759006 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.166664069 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.932939944 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.611252929 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 2.002774976 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.902670922 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.896066939 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.891945078 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.391011683 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.948948345 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.476575579 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.015202262 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.029983383 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.906013566 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.827313291 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.895787288 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.896772219 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.891887946 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.859920738 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.946169562 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.539180793 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.341894741 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.154771014 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.542520374 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.90947972 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.633805631 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 2.017076912 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.916660656 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.597521729 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.941209532 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.99483321 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.966464067 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.903055361 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.614921674 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.658425686 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.539505757 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.201077521 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.195135627 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.325835911 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.33778965 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.231676417 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.232247172 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.129164853 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.423193515 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.954251884 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.238445736 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.841645985 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.977705859 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.535258176 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.257534672 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.91147807 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.123235914 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.277792447 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.657918874 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.051223479 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.105610378 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.928998865 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.776560474 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.936999009 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.098600165 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.047626812 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.613268434 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.117132311 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.228783358 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.607252391 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.001621021 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.89450091 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.587227577 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.977597211 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.606246236 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.256485986 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.51169485 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.833315362 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.388288529 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.90179556 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.345287058 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.256060207 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.311633295 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.980400885 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.831101064 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.907057226 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.905986466 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.895236389 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.888709802 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.853034282 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.186828436 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.90677666 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.131821402 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.121131646 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.283941889 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.798406612 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.901742052 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.896915143 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.202959529 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.641324709 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.142022132 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.303252421 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.514980909 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.918645816 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.83165954 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.830922762 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.599345547 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.899625676 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.872445742 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.122772815 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.006237997 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.851981461 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.342135418 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.222828932 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.153151916 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.911190022 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.167923713 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.172343104 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.635150321 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.926755327 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.997554337 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.628101054 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.598503322 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.120684051 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.134200086 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.706020546 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.130015013 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.945107743 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.862351522 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.897826678 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.11305756 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.121542605 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.830641126 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.144950806 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.622940069 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.906863455 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.277797159 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.955507178 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.85162084 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.109969116 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.993311291 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.909078166 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.980898257 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.908959525 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.91024366 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.910317713 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.945864815 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.856238567 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.029590234 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.912939354 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.990156866 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.961284767 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.519154859 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.921323166 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.172863017 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.257168183 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.221616849 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.957532821 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.900101996 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.90199894 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.835883398 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.039222596 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.348890899 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.173133683 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.030588093 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.042703811 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.929720871 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.626261364 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.260064656 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.224747852 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.176016745 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.79771002 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.901244619 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.015177219 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.125791473 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.912980428 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.111868395 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.127888315 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.223490959 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.373209421 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.104419622 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.357298724 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.177034752 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.271940913 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.90136596 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.493801319 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.912202736 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.661878893 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.942559301 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.844094331 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.185751435 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.912462761 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.278261531 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.923349616 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.101839813 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.419417793 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.627289531 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.263578302 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.901816814 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.961652989 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.17464535 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.283624008 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.213976985 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.970166282 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.913544041 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.60123667 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.040952873 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.880040142 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.174750915 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.903282957 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.11511708 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.616618098 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.912813604 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.178476962 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.211186297 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.901161318 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.916386247 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.961456789 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.915071242 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.127787721 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.184635996 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.155800009 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.914532414 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.905581001 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.719228588 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.178045283 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.959234999 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.838450435 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.907914117 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.001517335 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.151986051 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.923060868 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.421187441 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.608154581 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.203595609 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.822665052 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.928025034 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.377130751 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.356775165 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.228895077 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.445842902 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.140071803 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.463658514 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.816541922 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.292417946 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.910084624 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.521677353 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.295493369 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.909286794 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.471439392 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.029089738 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.174639578 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.226753848 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.9158073 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.612295702 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.947105213 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.129559895 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.499071447 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.847870575 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.912956664 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.96545837 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.905757159 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.038057236 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.917148763 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.908953801 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.850177095 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.754522658 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.398627628 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.912888484 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.893142356 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.649560099 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.525869233 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.02458326 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.062237662 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.908602077 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.619808895 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.199618164 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.161495549 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.482252432 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.985069938 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.911037515 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.907974901 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.835614152 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.106821292 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.104353305 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.20637933 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.322086236 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.028156514 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.910922009 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.122922459 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.118704224 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.853420561 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.063113282 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.361654987 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.029791326 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.825960525 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.621486571 seconds)
  done (took 1699.835499315 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.917517422 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.946987156 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.919878085 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.923159407 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.920160428 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.920509444 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.930444374 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.997344858 seconds)
  done (took 57.316663801 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.907144027 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.123147502 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.917685376 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.908578565 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.932469039 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.908516255 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.115098711 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.920319306 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.927966671 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.919841065 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.908989266 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.912223318 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.240710679 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.935477095 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.909288249 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 7.357804414 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.927393793 seconds)
  done (took 75.621942586 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.911624393 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.327116722 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.948114268 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.927922244 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.910071312 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.923894895 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.986081195 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.940446271 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.914137086 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.086241388 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.250594867 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.923000333 seconds)
  done (took 90.893368961 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.925992141 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.916710377 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.916455239 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.916471577 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.916265022 seconds)
  done (took 11.443846069 seconds)
done (took 2211.320762824 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.159522426 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.139495319 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.147132618 seconds)
  done (took 6.130288765 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.059593749 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.106760938 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.228095824 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.235444587 seconds)
  done (took 10.47619902 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.199622433 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.284369726 seconds)
  done (took 6.326321956 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.252018652 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.928972861 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.291917955 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.911421958 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.909825168 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.909386383 seconds)
  done (took 22.578124437 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.914928356 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.917520748 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.914147621 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.91872008 seconds)
  done (took 9.508037339 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.894818687 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.638433965 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.896182506 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.910400234 seconds)
  done (took 21.183714591 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.662424226 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.313592943 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.657858729 seconds)
  done (took 9.47770553 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.495185356 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.115292032 seconds)
  done (took 9.45416188 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.174435269 seconds)
  done (took 4.018234481 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.943202381 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.185287657 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.436130951 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.429989615 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.540140658 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.73360279 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.241361459 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.15169138 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.357944429 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.373693264 seconds)
  done (took 25.237650559 seconds)
done (took 139.864257804 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.33842961 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.940675701 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.112828847 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.276447933 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.154530637 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.11291663 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.131741458 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.26866728 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.801379443 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.792300532 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.276021788 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.152263306 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.080279673 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.930201285 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.081770597 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.934582196 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.146225434 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.360417159 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.996772858 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.181597583 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.135767534 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.922475759 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.118504175 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.937266919 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.150587055 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.070691057 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.467877286 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.939555079 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.135424598 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.47868571 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.07416863 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.342576963 seconds)
  done (took 169.689155839 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.91369969 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.914392569 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.915586383 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.913680776 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.204119349 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.915779562 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.913902273 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.914327115 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.965649583 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.952716542 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.916021927 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.192130874 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.917202863 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.914848479 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.913929883 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.913655789 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.114677985 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.914739514 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.914731495 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.913952356 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.915412078 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.061597711 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.915136582 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.072036494 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.076249183 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.915017327 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.914034202 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.914426799 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.916819205 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.914249544 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.914751962 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.915215354 seconds)
  done (took 208.444119198 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.913712754 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.917097474 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.917289458 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.915011659 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.916541102 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.915695149 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.915220657 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.915816119 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.373070156 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.378282176 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.916024641 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.917429936 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.918419031 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.915239753 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.915296877 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.915068951 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.915469325 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.915357931 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.916569907 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.917066881 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.915827294 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.536412176 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.916670516 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.545320533 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.917831403 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.916225818 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.915544956 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.915941645 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.916606323 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.917516802 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.921067954 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.916550309 seconds)
  done (took 221.33943268 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.106276891 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.922201598 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.923362782 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.915880843 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.923344887 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.922964754 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.930889619 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.105443024 seconds)
  done (took 19.609222122 seconds)
done (took 620.932379274 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.390828442 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.240350974 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.100313039 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.949656743 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.191067446 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.982758281 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.944820708 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.010450558 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.668329509 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.015423255 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.634456182 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.966330149 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.730248177 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.974118965 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.067457873 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.003418672 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.491358725 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.581898933 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.124293145 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.01274832 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.117890595 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.883296899 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.029527154 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.701450504 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.749072444 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.93702475 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.116005573 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.501470558 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.957982203 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.107638036 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.73770149 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.350415636 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.960766577 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.942622693 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.999838412 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.978323112 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.28781497 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.960206733 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.067529366 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.692894043 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.020071444 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.548535067 seconds)
  done (took 105.579363929 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.914688248 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.912041026 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.910736027 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.911940154 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.913623314 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.913494313 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.912446151 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.912133424 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.913157337 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.912648797 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.912220083 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.914506476 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.912152009 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.91322424 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.912104577 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.911627189 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.913405151 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.914302034 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.912034392 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.91177352 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.912706014 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.912812268 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.928648173 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.91311832 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.913571336 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.913357737 seconds)
  done (took 51.610360756 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.927448966 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.093145982 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.170343009 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.948240275 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.926513045 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.930555813 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.946160798 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.932872673 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.929369337 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.929986606 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.021736317 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.933938314 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.946722573 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.17017855 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.945590106 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.928489682 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.928313585 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.928164492 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.101602464 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.944953237 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.947940024 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.933163076 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.946853065 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.94121841 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.929556957 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.928959937 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.93198009 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.391442182 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.938029742 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.023346579 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.974742142 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.954123136 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.362909412 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.18155938 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.985870193 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.938883802 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.930158647 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.026770708 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.934510485 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.930090344 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.947686198 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.934220743 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.169065964 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.433959288 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.945942803 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.929833769 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.401678522 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.035436835 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.970524614 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.94219926 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.171997905 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.948815851 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.930176867 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.930249595 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.966676572 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.937558334 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.929693341 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.281322586 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.943464318 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.948856301 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.935935823 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.930174243 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.106948274 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.939594491 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.096566885 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.93942482 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.93741257 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.931192617 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.173817421 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.949582005 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.438583227 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.944236762 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.929999805 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.0241455 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.099071727 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.430333175 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.942376122 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.1061829 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.379806265 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.955325184 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.936997135 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.381076166 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.959189041 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.937580384 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.932321781 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.932299799 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.930936823 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.974317602 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.946150694 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.372501258 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.443069456 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.298581354 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.95835894 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.945144296 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.932034256 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.279836534 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.940697024 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.931298139 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.166134459 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.45084888 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.945981486 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.938600816 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.42740139 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.947933006 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.950548922 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.940260999 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.175449483 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.94848817 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.974593347 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.932197774 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.93754133 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.93362568 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.949543518 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.939046377 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.932047241 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.416194549 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.044868612 seconds)
  done (took 239.447802853 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.925775588 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.930174589 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.926021773 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.929744603 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.924140584 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.931164195 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.925771129 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.926385097 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.931167609 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.924776463 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.924097344 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.926819046 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.927965896 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.930950834 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.062857489 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.933589072 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.534919288 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.927986515 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.926024626 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.927470448 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.676933465 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.932708469 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.92810511 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.927113867 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.927379799 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.927291788 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.928041124 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.051754001 seconds)
  done (took 169.458293156 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.935030771 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.051501322 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.953376982 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.962271056 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.943254582 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.931546648 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.95754527 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.949896743 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.938430809 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.931838928 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.93181393 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.995378735 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.946842711 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.034409366 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.968019751 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.965119938 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.038993448 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.944310501 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.931972538 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.933966905 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.964129322 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.928113155 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.99676462 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.06393969 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.953643599 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.052026856 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.939069966 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.935543032 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.934558661 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.055039297 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.951427766 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.99696079 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.963885328 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.952450564 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.057064387 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.052421186 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.043339097 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.96711604 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.938165926 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.933658856 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.933145045 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.922029516 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.053178873 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.954173127 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.936099878 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.042110199 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.954996073 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.936947518 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.944528967 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.933619476 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.949057585 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.953919595 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.004005471 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.071802578 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.969815697 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.960765839 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.959589975 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.22879662 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.944652082 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.035601159 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.930395911 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.055698041 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.956747692 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.922824154 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.935666781 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.941477603 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.965155851 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.96695635 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.040865922 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.94541029 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.036856051 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.973573263 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.942109664 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.935404992 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.937638198 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.055867417 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.05522031 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.974638564 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.974278684 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.968004862 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.931939587 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.936870516 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.924604015 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.954840631 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.940189966 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.054273177 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.055880863 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.945988243 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.939005398 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.938771659 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.939120239 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.963099139 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.062724988 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.973668472 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.033058801 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.007169658 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.014244321 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.953445988 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.950460029 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.941194472 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.002252387 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.954753894 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.949480444 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.280081727 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.007940733 seconds)
  done (took 209.647500612 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.412683021 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.991983542 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.996298198 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.270699425 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.367006806 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.780537126 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.984441291 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.986721864 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.010417174 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.175146599 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.05731622 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.00525464 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.973200365 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.961231451 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.98627242 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.010124428 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.997923041 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.323693721 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.108916364 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.102073171 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.968507411 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.263295208 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.309753747 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.385252493 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.023198872 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.329990228 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.662371935 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.129297247 seconds)
  done (took 63.445945888 seconds)
done (took 841.035852944 seconds)
SAVING RESULT...
DONE!
