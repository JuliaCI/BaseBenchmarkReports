cset: moving following pidspec: 5241
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.546571092 seconds)
loading group "shootout"... done (took 1.175228974 seconds)
loading group "string"... done (took 0.398428497 seconds)
loading group "linalg"... done (took 7.533032464 seconds)
loading group "parallel"... done (took 0.143783698 seconds)
loading group "find"... done (took 1.253594642 seconds)
loading group "tuple"... done (took 1.812538782 seconds)
loading group "union"... done (took 11.882126708 seconds)
loading group "dates"... done (took 1.247136099 seconds)
loading group "micro"... done (took 0.190271012 seconds)
loading group "simd"... done (took 4.14773645 seconds)
loading group "io"... done (took 0.989713189 seconds)
loading group "random"... done (took 8.233623238 seconds)
loading group "problem"... done (took 1.564806568 seconds)
loading group "array"... done (took 18.428166538 seconds)
loading group "misc"... done (took 1.432376661 seconds)
loading group "scalar"... done (took 37.295082829 seconds)
loading group "sort"... done (took 2.817176206 seconds)
loading group "sparse"... done (took 11.215975027 seconds)
loading group "collection"... done (took 16.247417756 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.485012112 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.120564492 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.124098431 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.11293747 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.138282878 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.115756619 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.119436111 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.082240097 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.878473618 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.137568311 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.109886405 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.418208222 seconds)
done (took 5.16683146 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.161187721 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.085784075 seconds)
    (2/2) benchmarking "String"...
    done (took 0.076192722 seconds)
  done (took 1.286604543 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.06150237 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.128093373 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.061479406 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.063090198 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.062460826 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.061974808 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.061774754 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.061393182 seconds)
  done (took 1.62586682 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.069632761 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.064891167 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.062110048 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.064203508 seconds)
  done (took 1.388381342 seconds)
done (took 5.666667586 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.231018564 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.096675863 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.277404191 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.390551694 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.449081928 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.088007053 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.070760833 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.066705643 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.125139115 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.351896094 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.102221331 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.177774676 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.085257891 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.167676671 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.964964229 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.113265375 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.080647001 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.116833997 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088844534 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.126569323 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.397302791 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.072909393 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.069421417 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.06521583 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.06301237 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.644463442 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.660859018 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.12323588 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.07845623 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.097684407 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.111588725 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.636243378 seconds)
  done (took 10.349432074 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.090266681 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.087237483 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.063874427 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.119744538 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.08793955 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.064602183 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.069836201 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.062807382 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.086060492 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.118661326 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.084889551 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.095271055 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.06151711 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.06463626 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.072543173 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.193421937 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.07443836 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.075251254 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.063473634 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.075429273 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.101943905 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.073300078 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.074200288 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.074515661 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.123577334 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.163793965 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.091632343 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.093044947 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.061717387 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.075488361 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.110396538 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.120995337 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.06198803 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.061422756 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.115179851 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.090304556 seconds)
  done (took 4.383060559 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.913687741 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.08640768 seconds)
    (2/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.086352838 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.099138669 seconds)
    (4/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.596983886 seconds)
    (5/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.060919398 seconds)
    (6/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.144837418 seconds)
    (7/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.2316807 seconds)
    (8/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.067564191 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.356372853 seconds)
    (10/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.141851422 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.110980817 seconds)
    (12/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.137853875 seconds)
    (13/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.10864726 seconds)
    (14/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.06471316 seconds)
    (15/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 1.195356164 seconds)
    (16/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.109166015 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.345315538 seconds)
    (18/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.064391842 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.06363854 seconds)
    (20/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.062249304 seconds)
    (21/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.065140774 seconds)
    (22/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.064588359 seconds)
    (23/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.059869968 seconds)
    (24/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.066665519 seconds)
    (25/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.088777909 seconds)
    (26/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.083475966 seconds)
    (27/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 1.15859211 seconds)
    (28/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.734699415 seconds)
    (29/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.229716959 seconds)
    (30/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.06043686 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.15205764 seconds)
    (32/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.076749938 seconds)
    (33/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.349700953 seconds)
    (34/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.06239206 seconds)
    (35/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.074988317 seconds)
    (36/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.366407404 seconds)
    (37/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.114469945 seconds)
    (38/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.058510937 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.154668762 seconds)
    (40/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.10753213 seconds)
    (41/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.058333836 seconds)
    (42/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.10942011 seconds)
    (43/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.070274561 seconds)
    (44/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.061948419 seconds)
    (45/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.062105493 seconds)
    (46/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.061410183 seconds)
    (47/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.067066885 seconds)
    (48/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.070687415 seconds)
    (49/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.095384917 seconds)
    (50/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.060827162 seconds)
    (51/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.059195543 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.151980411 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.058932182 seconds)
    (54/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.059636162 seconds)
    (55/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.060707511 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.143511195 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.057845706 seconds)
    (58/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.077628468 seconds)
    (59/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.125445963 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.05792399 seconds)
    (61/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.060904917 seconds)
    (62/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.087870162 seconds)
    (63/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.061359479 seconds)
    (64/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.079291834 seconds)
    (65/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.088533566 seconds)
    (66/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.323749475 seconds)
    (67/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 1.02392843 seconds)
    (68/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.059971775 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.917970205 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.072150745 seconds)
    (71/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.059230565 seconds)
    (72/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.062753826 seconds)
    (73/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.058496664 seconds)
    (74/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.06015268 seconds)
    (75/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.058936509 seconds)
    (76/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.06451107 seconds)
    (77/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.061825886 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.059833524 seconds)
    (79/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.098450426 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.058585428 seconds)
    (81/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.060975283 seconds)
    (82/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.058828286 seconds)
    (83/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.062736214 seconds)
    (84/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.08919847 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.060028239 seconds)
    (86/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.424138769 seconds)
    (87/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.05723231 seconds)
    (88/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.089380192 seconds)
    (89/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.057927073 seconds)
    (90/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.067956497 seconds)
    (91/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.095854606 seconds)
    (92/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.058684337 seconds)
    (93/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.063092795 seconds)
    (94/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.059357284 seconds)
    (95/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.059656231 seconds)
    (96/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.057649705 seconds)
    (97/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.059086501 seconds)
    (98/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.060986191 seconds)
    (99/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.32183282 seconds)
    (100/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.066688644 seconds)
    (101/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.109437251 seconds)
    (102/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 1.028552464 seconds)
    (103/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.066713482 seconds)
    (104/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.064348678 seconds)
    (105/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.069487618 seconds)
    (106/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.067853365 seconds)
    (107/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.067050501 seconds)
    (108/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.061761948 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.063326166 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.066824778 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.064624569 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.062337929 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.107851156 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.064042307 seconds)
  done (took 20.463589576 seconds)
done (took 37.2344961 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.254917161 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.080998738 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.081650434 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.082201317 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.08155988 seconds)
  done (took 1.836803668 seconds)
done (took 3.091766612 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.106982337 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 0.061839347 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.098273635 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.098180577 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 0.065063672 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.061823861 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.096047032 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 0.061887726 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.095165336 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.095473776 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.097358239 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.096546895 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.060130067 seconds)
  done (took 2.345582219 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.068285824 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.078444777 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.08005288 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.059563664 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.069327611 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.078941501 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.05998957 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.078361827 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.08515301 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.079123806 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.07896137 seconds)
  done (took 2.050680919 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.067327812 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.079032984 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.081354154 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.063666155 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.071061291 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.079185688 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.05966657 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.078931102 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.082390144 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.079137203 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.079379732 seconds)
  done (took 2.048302667 seconds)
done (took 7.675595399 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.06687039 seconds)
  done (took 1.275853375 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.521958448 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.528258558 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.066779073 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.086027476 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.182234697 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.09678007 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.225777692 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.070915402 seconds)
  done (took 8.176852405 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.096874419 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.067187848 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.065785385 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.066692316 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.066584144 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.066539922 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.066111353 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.064345956 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.06533945 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.066591926 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.064943676 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.065851516 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.064161126 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.06490202 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.064764593 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.065536284 seconds)
  done (took 2.396848015 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.09445222 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.092579586 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.07058164 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.070716062 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.068584205 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.067992187 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.070742433 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.071400265 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.06805002 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.070174019 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.071821569 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.069704605 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.068865135 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.060239674 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.069919881 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.071878093 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.066776855 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.07018054 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.070532903 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.071475945 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.071056692 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.060111657 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.068627112 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.070358324 seconds)
  done (took 3.046566246 seconds)
done (took 16.124452479 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.112692411 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.074329513 seconds)
  done (took 1.410757321 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.069876845 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.069366486 seconds)
  done (took 1.374854375 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.076112537 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.059023885 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.080350917 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.069442216 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.058744558 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.058399611 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.078140457 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.058785862 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.058599292 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.058871997 seconds)
  done (took 1.890278783 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.062828784 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.069754436 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.066668708 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.067302385 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.065520425 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.059765966 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.063210783 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.060222683 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.068026549 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.059082448 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.064275613 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.079056924 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.063509783 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.080592245 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.063316352 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.064168176 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.066389658 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.063546 seconds)
  done (took 2.429644947 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.060454527 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.060497663 seconds)
  done (took 1.374140847 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.064496148 seconds)
    (2/7) benchmarking "second"...
    done (took 0.061213009 seconds)
    (3/7) benchmarking "month"...
    done (took 0.063698009 seconds)
    (4/7) benchmarking "year"...
    done (took 0.061912379 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.059707261 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.058599739 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.059706543 seconds)
  done (took 1.674716621 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.406902961 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.115789286 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.333941988 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.065739583 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.075636832 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.243540304 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.060714005 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.065273579 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.066910556 seconds)
  done (took 2.720977328 seconds)
done (took 14.126213203 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.07933924 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.080802127 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.085636338 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.416600871 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.088531414 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.063407197 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.110442886 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.176737427 seconds)
done (took 2.367700017 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.213198016 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.414103636 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.956750265 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.062583138 seconds)
  done (took 3.685739306 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.323945821 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.080503991 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.073103397 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.063517455 seconds)
  done (took 1.805327449 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.063360778 seconds)
    (2/2) benchmarking "read"...
    done (took 0.070089668 seconds)
  done (took 1.389900067 seconds)
done (took 8.358663118 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.062881984 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.087697931 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.061788343 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.061453512 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.061941473 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.061868631 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.06181493 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.061790649 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.061701481 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.061811304 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.061133422 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.061859751 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.061230508 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.059854109 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.060059953 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.060547 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.060013639 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.060455133 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.059874234 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.060363322 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.060266643 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.060262315 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.060361079 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.060823865 seconds)
  done (took 2.775624128 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.078770908 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.062022737 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.063943886 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.063717449 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.064830973 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.064591295 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.064133507 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.062264824 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.064197747 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.062214911 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064144997 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.064521043 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.062181391 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.064871186 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062075374 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.064839601 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.064100156 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062502018 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062423145 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.064298162 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.063800222 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062461974 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.064288001 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064034073 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.064204555 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064153579 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.063246046 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.063426578 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066048483 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.065990604 seconds)
  done (took 3.199709989 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.063110045 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.058226679 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.059112294 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.066992262 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.058258746 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.058931357 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.059538057 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.058103118 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.058349399 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.060004942 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.059134555 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.058285411 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.059611274 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.058192709 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.057829748 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.057518092 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.061261633 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.074397538 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.057298856 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.057021091 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.061199491 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.05705168 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.057666172 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.056814763 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.057663225 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.057058965 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.056823895 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.058088035 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.057151709 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.057835908 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.058046708 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.061655165 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.063529608 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.05866746 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.067436945 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.062391735 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.058238632 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.062616561 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.059863185 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.058293504 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.058151566 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.058226255 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.058596386 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.058516179 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.067662773 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.059054572 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.059247145 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.057739953 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.057670958 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.057100851 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.05704708 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.059562479 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.062060215 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.05895609 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.056887657 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.058566458 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.05753043 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.058105727 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.057177085 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.05695614 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.057110215 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.060474227 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.059031251 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.057890837 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.074207949 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.059016976 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.066061708 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.05693348 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.06144743 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.060249726 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.057928403 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.072453899 seconds)
  done (took 5.578498883 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.085211493 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.086435206 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.063157295 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.063050132 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.059201652 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.058902037 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.067541027 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.05919102 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063696074 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.078166935 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.059000914 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.06233076 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063132696 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.062271302 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.057730615 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.061909238 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.065955394 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.057775518 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.057842918 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.061923675 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.059500453 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.067064552 seconds)
  done (took 2.7069486 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.138451683 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.064408191 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.101239529 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.075550943 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067454191 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.075464115 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.063184698 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.06327596 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063501721 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063696998 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06385276 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063667429 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.065890129 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063528529 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063672283 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.064148631 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.063816169 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064022282 seconds)
  done (took 2.566615869 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.076522566 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.064229138 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.08470209 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.062428222 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.063062393 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.062453476 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066959144 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.06788994 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.062262726 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.06281236 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.067623622 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062329794 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.062487472 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062804136 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062217503 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.062880377 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.062355679 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062732705 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.067556451 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066708569 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.067100936 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067627983 seconds)
  done (took 2.721480518 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.074582643 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.062748335 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.076351907 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065164458 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.057913374 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.058893725 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.064495974 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.063350901 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.064189792 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.062782531 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063238175 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.058912405 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.065357726 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.0630556 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.064669753 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.061867061 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.061766118 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.062415973 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.061547035 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.057623152 seconds)
  done (took 2.545664765 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.08541278 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.060914883 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.060192598 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.078451983 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061008952 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.060261922 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078301089 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.0601817 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.060433695 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.081381034 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.060450861 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.060676235 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078770404 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.078710002 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.06067117 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078905056 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.078967599 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.078651817 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.060685621 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.060382878 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.082418256 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.060413078 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079916642 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.062298551 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061978812 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.06069327 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.060378163 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.078769063 seconds)
  done (took 3.206479476 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.072272589 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.060810308 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.061342509 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.060547414 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.060544141 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.060822317 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.06082663 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.06064804 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.06154759 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.061096775 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.060342779 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.060197623 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.060249522 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.06020354 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.060064371 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.0602283 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.060413521 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.060588985 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.060604933 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.060742817 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.060074889 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.060015296 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.059979652 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.060508767 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.060640337 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.060387249 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.060683339 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.061453159 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.061263946 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.061649968 seconds)
  done (took 3.113180037 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.072851933 seconds)
    (2/2) benchmarking "in"...
    done (took 0.07070473 seconds)
  done (took 1.426366043 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.061597288 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074503997 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.058422709 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.068148324 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.067936218 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.061860897 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.06856602 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06777993 seconds)
  done (took 1.804814803 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.067445504 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.08781171 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.0601872 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.060887603 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.064534332 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.116012808 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.073093465 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.068215436 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.073550879 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.060557594 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.059611203 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.070311839 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.058576467 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.06945493 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.060671301 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.066444345 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.064462799 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069270314 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.069582508 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.057448492 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068858096 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.059776616 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.057710682 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.060037271 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.059089143 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.064566981 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.072502479 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.069109021 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.066028162 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.057258059 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.076105767 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.058021334 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.058846588 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.066024933 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.062828564 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.058084456 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.09180985 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.058407661 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.064160351 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.057576815 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.068690912 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076526619 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.070485227 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.074049185 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.059962033 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.060390431 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.057544927 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.060148211 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.060689566 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.06628424 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.057914535 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.063830828 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.057705244 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.059919838 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.067449093 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.058043626 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.064118505 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.066003417 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06944273 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.066781331 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.065484366 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.071205326 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.066120425 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.067206342 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.059223255 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075419522 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.060316305 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.069094204 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.070845447 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.059636296 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070697829 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.057705802 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.056795684 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.057971397 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.087929434 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.059811279 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.059474636 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.058013449 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.05842175 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.05991836 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.066286268 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.064206761 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.063987647 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.062555195 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072024823 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.06584488 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.057856696 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.065868443 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.074243671 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.060273906 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.058069954 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.072895565 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.060208735 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.058092674 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.074768441 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.06594682 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.05991802 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.05880014 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.059796657 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.069930995 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.058965316 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.056359636 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.064220404 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.059159433 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.060604536 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.062608972 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.063636553 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.057329986 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.066188278 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.062837787 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.058820097 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.055745664 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.060248571 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.058181625 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.055558227 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.064742222 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.056688911 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.070304527 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.062124538 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.069439348 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.06940966 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.065777567 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070627538 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.056630392 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.05563384 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.072660803 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.19723156 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.060706255 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.075974925 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.058974108 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.067944395 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.058289155 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.061263866 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.066261313 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.057661341 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.060539859 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.058790907 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.064797474 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.059701485 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.060496141 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.061646167 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.065193363 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.069083692 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.059399954 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.065268468 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.058636269 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.071325362 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.066817925 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.062258259 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.062109323 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.059229115 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.069137686 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.063609213 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.065997101 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.058222605 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.058910269 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.058323311 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.067450321 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.066394605 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.060290202 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.066334314 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.061552088 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.059065587 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.058577682 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.059025894 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.060558436 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.062262122 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.059155534 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064053913 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.0654848 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.071280506 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069582016 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.065041807 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.057253084 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.057461531 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.059859084 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.057466644 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.06144605 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.065802469 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.071282769 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.0684286 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.07632847 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.058389758 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.066089008 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.05988615 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.073065358 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.069461107 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.059528677 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.063617285 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.056848613 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.060267978 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.065755919 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.068360163 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.070946279 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.071301122 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.061765445 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.06161963 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.057659101 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.071135865 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.058388857 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.065313879 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.066086346 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.063097359 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.05842019 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.05985082 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.065985319 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.061703415 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.058218835 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.071405528 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.065266452 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.057580979 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.070201203 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.058152864 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.067770707 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.057535741 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.060534912 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.062222252 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.059985879 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.065493924 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071518664 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.056890713 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.058416881 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071842441 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.060470798 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.059744887 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.064415968 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.071152623 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.061336213 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.064263517 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066851564 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.065774016 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.061100628 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.065573251 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.058400701 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.065361262 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.061152565 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.067693863 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.056960701 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.073015457 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.056320621 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.070668079 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.058281667 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.066411571 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.057151427 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.064784605 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.057785392 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.071956037 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.058870591 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.058417259 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.067583758 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.055760009 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.064473766 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.05638187 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.060002119 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.061601577 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.064162058 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.058586286 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.200090999 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.060673203 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.066125764 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.062108839 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.06669059 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.066520055 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.062398947 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.057615312 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.065090545 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068263671 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.065858657 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.059779653 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.059731587 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.059005945 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.067060919 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.059686933 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.059205443 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.064801094 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.061361098 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.062776901 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.060098311 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.060076497 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.060493768 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06531243 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.065768882 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.0738944 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.064526202 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.064097371 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.06576895 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.05729997 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071715336 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.057751072 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.063777397 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.056936773 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.065106047 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.06607175 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.058310254 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.075308316 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.05968899 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.064612916 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069952788 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.065168188 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.060901441 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.074345807 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.061819863 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.064638093 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.064424151 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.061389941 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.063309035 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.060033366 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.064778481 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.065978858 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.067252931 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.05899835 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.063886036 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065246074 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.060097988 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.067580717 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.059876853 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.06492182 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.059814511 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.056924 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.061492991 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.068573944 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.061659783 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.062353229 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.058404517 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.057031278 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.058395554 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.066674432 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.061501725 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.064941354 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.072176564 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.056938501 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.05892576 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.058184194 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.063064699 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.074129138 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.066477294 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.064234322 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.061898438 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.057482677 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.05977921 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.06045916 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.058521362 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.0622933 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.057350497 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.057909077 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067190043 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.060043225 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.061576514 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.058373489 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.059515138 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.066136933 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.063626193 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.058807596 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.063450398 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.058162406 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.061513492 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.057192293 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.059910095 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.061441956 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.057851559 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.060548348 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.066748113 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.072170718 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.063954534 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.06516926 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.059262571 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.064801899 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071105419 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.06632265 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.058462147 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.065159605 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.056568203 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.073881143 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.065233091 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.064646942 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.065349015 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.057649326 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.071612098 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.059974916 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.065272837 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.069975752 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.057768225 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.064520045 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.056460131 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.070354295 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.059932371 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.056546228 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.0636759 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.063075984 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.201000417 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.069795657 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.05941901 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.065676155 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06509522 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.061112219 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.059732085 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.060038826 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.065647147 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.072727805 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.05956245 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.062988405 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.064761446 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.064855327 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.061554967 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.069292419 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.064751509 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.060195054 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.060213208 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.060535533 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.058942425 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.068730602 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.058970556 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.061587592 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.061613034 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.057434572 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.063436812 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072051921 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.066484064 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.06607419 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.057550333 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.057407274 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.073276928 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.060851585 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.062156266 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.064796684 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.066622686 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.069391087 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.06613163 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.072778191 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.058882242 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.063234054 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.069089859 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.058802344 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.057644669 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.060082068 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.060401716 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.065919931 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.066331944 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.06397498 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.05974373 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.06346071 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.069473428 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.059345014 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.061659427 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.063980975 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.058716317 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.066746074 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.064643223 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.065136222 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.059307087 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.057496068 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.060399512 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.065198368 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.064204803 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.065590342 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.058846655 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.066304948 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.070882177 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.064546022 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.061882454 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.057813486 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.061893426 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.065249855 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.06368635 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.057738851 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.061639252 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.060839397 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.06669205 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.066278691 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.061172765 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.057713953 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.072894353 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.064888597 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.066138273 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.059891371 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.060439434 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.058427285 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.057509481 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.068107827 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.05744679 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.059698246 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.061609224 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.059806886 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.073520791 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.064957668 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.072478546 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.059008489 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.061819405 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.057476068 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.066115 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.06176162 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.058359883 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.067427138 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.05716379 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.071477197 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.068760935 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.067431754 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.058021081 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.062221395 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.0659464 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.072744474 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068262376 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.066581037 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.062199272 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.067029224 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.060789471 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.069087356 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.058209046 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.057005011 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.067125562 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.06366771 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.069617743 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.057390401 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.065248853 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.059629335 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.062926173 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.063398612 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.058706594 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.058268534 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.058203354 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.201602849 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.062733989 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.067084449 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.062110547 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.073370101 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.059317457 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.068033486 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.065763347 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.067472674 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06926598 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.06969989 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.064999199 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.058245758 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.064235066 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.065126823 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.059209354 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.061593794 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.062481899 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.078254651 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.059824045 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.059792641 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.07127041 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.065811552 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.057927275 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.065362104 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.061317017 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.067220393 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.058754446 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.066979128 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.062133113 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.058938119 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.062680334 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.063298483 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.058576908 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.058839455 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.059131031 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.067740805 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.062967657 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.05948538 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.077710676 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.060686069 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.064955588 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.067866676 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.063265898 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.059616506 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.056798509 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.059091057 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.068334521 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.071057255 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.060502291 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.064440913 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.059553763 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.065600514 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.056838168 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.064960896 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.064439361 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.064880546 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.057795964 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.058170117 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.070180407 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.071305123 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.062263088 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.066417562 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.065336852 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.059914068 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.078422845 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.065215703 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.059240855 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.067861981 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.060803616 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.057561283 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.057353959 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.060053009 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.068662183 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.058053813 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.063322219 seconds)
  done (took 39.742633693 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.099565284 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.060986273 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.058976179 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.058859647 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071726805 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.060740467 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.059000697 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.060455117 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.06023028 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.062498744 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.059556035 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.059214612 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071672067 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.074487307 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070849486 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.064226693 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.059311325 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.06014419 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.058998263 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.060063346 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.0707798 seconds)
  done (took 2.751638377 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.067228794 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.075153148 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.071495995 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.076959472 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067770674 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.064319809 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072069587 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064242411 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.071892376 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067892945 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.070576787 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063055733 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.067839099 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.067853098 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068028239 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063346149 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.070414523 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066272844 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.062831995 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.069833879 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063159059 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.070025853 seconds)
  done (took 2.866797202 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.061414631 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.059531295 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.065166307 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.057365252 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.057178838 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.06086722 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.056884777 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.060962858 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.060333273 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.060544766 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.064567018 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.057910729 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.0570422 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.061875272 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.056605066 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.058430495 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.09999289 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.058451414 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.058275135 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.056982384 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.063491178 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.065181043 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.056993022 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.057463255 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.060718795 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.061208462 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.057123235 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.060570877 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.058660467 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.061207655 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.058947795 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.058272877 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.066317704 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.06558773 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.061663088 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.061844198 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.060466628 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.059637837 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.05764538 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.057341194 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.064341444 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.059258792 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.057674159 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.058858617 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.06507526 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.057392871 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.057351886 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.065459765 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.057801284 seconds)
  done (took 4.353709667 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.072574044 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.106931127 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.063165727 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.086863439 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.071544617 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.065174413 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.062949053 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.087923194 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.059046437 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.059908316 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.072885442 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.073004282 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.061206939 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.06262643 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.064788516 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.060780177 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.061832677 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.060219374 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.064457713 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.060798283 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.064756177 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.064325638 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.0714456 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.072055613 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.062342178 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.06007486 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.060545665 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.062633373 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.071492355 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.06492612 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.063047482 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.063268475 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.072413754 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.065331379 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.060470839 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.060691193 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.073318176 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.061197014 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.060917906 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.058832438 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.060226503 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.062361801 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.064837535 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.073298531 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.061196951 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.06563504 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.061020395 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.058522383 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.072115527 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.060880715 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.065687909 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.073640956 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.06275653 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.06129977 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.062781176 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.072168892 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.061107854 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.059623033 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.061279665 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.071868552 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.058793846 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.062401949 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.072681589 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.060203729 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.065091438 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.073923494 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.065202641 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.062393333 seconds)
  done (took 5.993175012 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.070791424 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.090018407 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07115298 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.070847434 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.070253653 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.070637631 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.070061113 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.069968411 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.070238815 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071165683 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.070731252 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.108553006 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.064637973 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074400917 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.068800046 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.069334586 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.070231351 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.070424923 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.070352488 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07008272 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.070286273 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.070930205 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.070429086 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.070941043 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.073615394 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.065794747 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.069937002 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.070146732 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.069632154 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.069241268 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.072507781 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.068760667 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.068641201 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.069142896 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.071466268 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.068603826 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.058424267 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.068608098 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.068551312 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.068553825 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.06424662 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.069151039 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068292311 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.064022859 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.0687444 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.069077394 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.069452513 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.071996666 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077568442 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.069254245 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.068864466 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.069710208 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.06849061 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.068805243 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.069211399 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.077562515 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069944524 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.069782719 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.069034725 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.069470537 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.0691985 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.0772339 seconds)
  done (took 5.791154437 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.076579158 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.06695708 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.078000217 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.060461411 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.057308739 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067620176 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.057638106 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.057504537 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065793131 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.065913086 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068138484 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067221014 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069986692 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068253823 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.06787788 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07020694 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067428919 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067966036 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065742685 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067596467 seconds)
  done (took 2.73368137 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.071977122 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.076685833 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.064494723 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067707952 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.062844311 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067383429 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.061845062 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063229823 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063685368 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063300057 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068413138 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069692747 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063706168 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067628981 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068770965 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067178558 seconds)
  done (took 2.455050092 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.066186288 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.067787979 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.067723839 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.060574868 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.063458691 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.059323639 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.059982807 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.058903502 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.059139597 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.073457678 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.060298865 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.070233166 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.058924687 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.05795907 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.058334969 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.064493524 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.058373888 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.059007881 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.0589495 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.06472534 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.065661187 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.05984902 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.062539639 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.058992129 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.063774305 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.065917407 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.060801503 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.061946657 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.058617156 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.05931419 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.064024513 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.0653763 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.058759068 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.060449832 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.059260741 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.060067432 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.060153295 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.059162137 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.064461693 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.058870707 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.05705787 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.063558172 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.058831076 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.060196318 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.058160251 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.059361215 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.057823195 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.064744239 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.058968542 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.063892645 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.058617646 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.061213092 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.059467546 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.066256577 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.061772413 seconds)
  done (took 4.774002786 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.074631215 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.064304442 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.058668672 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.058310739 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.063463702 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.064202916 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.064465488 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.064236347 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064665585 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.058711506 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.064392024 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.063849982 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064364593 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.063978484 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.064391509 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064049556 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.057297298 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.062842237 seconds)
  done (took 2.543359338 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.070574222 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064364883 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.068305733 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.063743655 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.062924335 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.0617105 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.057612072 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.057850627 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.057699297 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.062561204 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062180274 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.06180096 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.057602383 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.061526789 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.062364191 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062352339 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.061625448 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.057817216 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.061814959 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.058557297 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.061706991 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.057650275 seconds)
  done (took 2.750287925 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.0862661 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.079208132 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.117584699 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.074376885 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.082252759 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.067056395 seconds)
  done (took 1.90092691 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088031174 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101224524 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06341776 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.063963739 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074807322 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067489872 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067649168 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067597823 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07468917 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072791616 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067791596 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07502537 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074715584 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069882564 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074736228 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077771202 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067967223 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06800483 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.064823544 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078184258 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068216041 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074918913 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067835385 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067412685 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06772436 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089715528 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078306049 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072653982 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070218192 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07502538 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076214962 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066148022 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073292323 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071189478 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06243228 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072893847 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066345913 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076197503 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073124828 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068282892 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06281434 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073644403 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072915606 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068332625 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.0763538 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066476358 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068464506 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066644866 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066918037 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079214045 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073926029 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06893216 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073380361 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076625423 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076330292 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078686422 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071187023 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06832703 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073287141 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070847634 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068421217 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073361665 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068366068 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070881111 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076233834 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068686449 seconds)
  done (took 6.161250691 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09775169 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064716701 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06747702 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072662705 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069833598 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066966312 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067271163 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066205662 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066032186 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.063096178 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.099955108 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066515354 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06863752 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068775358 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066555086 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066374607 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066078337 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068153893 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.063066569 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080210891 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067837808 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070371034 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070018622 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070280201 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072777762 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077895786 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066669301 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06599725 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.065868403 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066009673 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068111872 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066312384 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068161342 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.062695722 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067912447 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066012754 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065928808 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068114621 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066314214 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073156532 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068431278 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076140346 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066114016 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066139777 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070971463 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066122674 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066185432 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06293641 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067878061 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.064275007 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072810727 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072764872 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073008376 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070064065 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068346396 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.0682406 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067466686 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067344929 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068259704 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078329654 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070284013 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06682 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078847353 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066311722 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066665843 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068361633 seconds)
  done (took 6.006802921 seconds)
done (took 123.72722348 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.208004372 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.179717882 seconds)
  done (took 1.773859276 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.071765378 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.093789925 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.072754776 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.130955493 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066471022 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100681884 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099895049 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.070671913 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066383196 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.066156952 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.066346562 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068903091 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.132092347 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066719077 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.066246252 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068920946 seconds)
  done (took 2.716526102 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.102604094 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.181224776 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.106097556 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.065736807 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.102040955 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.073660763 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.066015464 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.076257118 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.067880964 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.067865344 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.071779477 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.070000537 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.067512215 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.070336253 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.068283727 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.071702058 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.067151852 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.071776381 seconds)
  done (took 2.881737064 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.0918842 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.084312054 seconds)
  done (took 1.591981119 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.156351891 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.101909805 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.140402665 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.314407 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.131992113 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.27401531 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.128505718 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.127920772 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.10914313 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.122594933 seconds)
  done (took 3.014413688 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.100143824 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.161406427 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.293303676 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.113414043 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.070529326 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.082234389 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.115108735 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.076833845 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.075857853 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.075794361 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.075173166 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.074889399 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.092498827 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.071775751 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.071667414 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.07218145 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.095579017 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.070985304 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.071043303 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.071233457 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.095379398 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065338766 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.071721561 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.070914318 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.073737235 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.072895765 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.066100286 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065199798 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.071265219 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.071249553 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.074155552 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.079376663 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.073509278 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.098684081 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.069249444 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.100035175 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.070166425 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.069526905 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.071043117 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.069279912 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.072968008 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.072602763 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.073445625 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.071924199 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.065811654 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.070286308 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.06650275 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065101329 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.075254967 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.066867358 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.074539393 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.073603967 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.098212755 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.065862197 seconds)
  done (took 5.879497463 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.107800677 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.10349417 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.065822597 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.109560405 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099215955 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.065501204 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.10022091 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.09410824 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.102158964 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.065164274 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.064580903 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.064781799 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.074032619 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.076092265 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.111658604 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.103390704 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.066866725 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.065029387 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.103011476 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.102989952 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.064426738 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.096555821 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.092361432 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.102157689 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.063535988 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.06545673 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.063639666 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.064197105 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.071022545 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.072392822 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.063943197 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.072802368 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.077829766 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.071947502 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.063098531 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.063927742 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.063854195 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.072449439 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.073476177 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.073325763 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.071583694 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.063444562 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.063853832 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.064279254 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.065154358 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.063004463 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.071730907 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.073048461 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.071735331 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.064176955 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.064249774 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.063425456 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.064212081 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.072213207 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.071212638 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.072781139 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.073260293 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.0634521 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.064092878 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.065912883 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.073948114 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.074071818 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.073183731 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.065296253 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.07364614 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.063752298 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.073926182 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.077808714 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.063615792 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.064153842 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.063732394 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.063787793 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.064346629 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.071148784 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.071184095 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.064489389 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.063747741 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.063471892 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.073677896 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.071317659 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.06350372 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.07077942 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.063463576 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.064337195 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.06480968 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.064474742 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.071521941 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.073108981 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.064684746 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.063706039 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.064018733 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.06419888 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.062769746 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.07084245 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.072757643 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.072132859 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.071295621 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.063959233 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.071363409 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.070583633 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.064035132 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.07051271 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.063029745 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.063641587 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.062998819 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.070193446 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.069439096 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.071861465 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.062563389 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.062152243 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.069751574 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.205520682 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.065282767 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.072056916 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.074324064 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.072244285 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.063452235 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.077357205 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.064497115 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.07394092 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.064325138 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.07395435 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.064436408 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.072055308 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.064497936 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.06357188 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.064466985 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.072530887 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.065488189 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.06494225 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.064592797 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.064067209 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.071936789 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.075395742 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.065114065 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.072054566 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.072004729 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.065596918 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.072172315 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.064049731 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.073386533 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.064415339 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.064426709 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.063286119 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.074310962 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.064105063 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.064094815 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.06410487 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.074083105 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.063884055 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.073620797 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.071025925 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.06377522 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.074936752 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.07393023 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.071319607 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.07406011 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.064780965 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.063867852 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.063935355 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.064046712 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.071095893 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.07259228 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.064695771 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.064407152 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.070978752 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.073903811 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.063477685 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.071686089 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.071541981 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.072049563 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.064343143 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.064533445 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.07477373 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.073807776 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.07178776 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.071878644 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.072382948 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.064487405 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.071741152 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.071757635 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.063945992 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.078577874 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.064420153 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.075921956 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.07218522 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.071165939 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.072126373 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.073318444 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.07402424 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.073949642 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.076312934 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.063538555 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.06372481 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.071859447 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.063896332 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.064024309 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.072000187 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.064783579 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.064515174 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.076872213 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.064391118 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.073819639 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.063463911 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.072546555 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.063487658 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.064770035 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.076843818 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06414171 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.064391561 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.071518702 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.06401445 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.071423605 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.073925552 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.070587359 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.062988691 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.063739797 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.071490632 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.070628376 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.062355587 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.06229739 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.063077087 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.069722524 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.069762695 seconds)
  done (took 17.354140235 seconds)
done (took 36.638328625 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.203477387 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.152695247 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.185353583 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.111001021 seconds)
  done (took 2.16920136 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.097253439 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.09347421 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.074711659 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.060723357 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.080721154 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.060586923 seconds)
  done (took 1.920694498 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.27618963 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.193189833 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.171171817 seconds)
  done (took 2.09145207 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.211626445 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.188793637 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.447303181 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.282960823 seconds)
  done (took 2.676069117 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.130870416 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.077922439 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.059909976 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.070570909 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.110155171 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.142405457 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.087218472 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.111568538 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.071981438 seconds)
  done (took 2.372974514 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.129668478 seconds)
done (took 12.842721302 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.097515265 seconds)
    (2/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.248742907 seconds)
    (3/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.080630164 seconds)
    (4/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.065877338 seconds)
    (5/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 0.083087191 seconds)
    (6/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 0.162306329 seconds)
    (7/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.067525781 seconds)
    (8/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.072278229 seconds)
    (9/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.117519377 seconds)
    (10/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.063649171 seconds)
    (11/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.242690416 seconds)
    (12/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.162952765 seconds)
    (13/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.06889771 seconds)
    (14/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.075793324 seconds)
    (15/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.071865435 seconds)
    (16/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.090845785 seconds)
    (17/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.233721254 seconds)
    (18/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.441145062 seconds)
    (19/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.169670646 seconds)
    (20/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.071065543 seconds)
    (21/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.113333471 seconds)
    (22/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.222883081 seconds)
    (23/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.098328796 seconds)
    (24/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.170897477 seconds)
    (25/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.092357272 seconds)
    (26/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.069583591 seconds)
    (27/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 0.073810875 seconds)
    (28/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.071968652 seconds)
    (29/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.069603742 seconds)
    (30/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.183130806 seconds)
    (31/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.159490575 seconds)
    (32/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.070185368 seconds)
    (33/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.062544439 seconds)
    (34/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.072538652 seconds)
    (35/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.067805211 seconds)
    (36/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.144753454 seconds)
    (37/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.067605414 seconds)
    (38/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.060489578 seconds)
    (39/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.068786624 seconds)
    (40/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.069140503 seconds)
    (41/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.124078288 seconds)
    (42/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.113877425 seconds)
    (43/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.166779363 seconds)
    (44/309) benchmarking ("sort", Float32, false)...
    done (took 0.128013276 seconds)
    (45/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.063300259 seconds)
    (46/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.211604192 seconds)
    (47/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.065144911 seconds)
    (48/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.060725969 seconds)
    (49/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.066397897 seconds)
    (50/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.069860196 seconds)
    (51/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.069319177 seconds)
    (52/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.072700809 seconds)
    (53/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.069746235 seconds)
    (54/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.060321792 seconds)
    (55/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.167200111 seconds)
    (56/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.188437107 seconds)
    (57/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.151207691 seconds)
    (58/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.163692056 seconds)
    (59/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.200110145 seconds)
    (60/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.072658772 seconds)
    (61/309) benchmarking ("sort", Bool, false)...
    done (took 0.146907762 seconds)
    (62/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 0.072406654 seconds)
    (63/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.133614887 seconds)
    (64/309) benchmarking ("sort", Float64, false)...
    done (took 0.126314745 seconds)
    (65/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.061719956 seconds)
    (66/309) benchmarking ("sort", Int64, false)...
    done (took 0.061842726 seconds)
    (67/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.074255799 seconds)
    (68/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.082873321 seconds)
    (69/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 0.170229401 seconds)
    (70/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.072795714 seconds)
    (71/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.164798565 seconds)
    (72/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 0.060268516 seconds)
    (73/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.196780433 seconds)
    (74/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.059893317 seconds)
    (75/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.069092908 seconds)
    (76/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.069729725 seconds)
    (77/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.079301033 seconds)
    (78/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.062284958 seconds)
    (79/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.059159498 seconds)
    (80/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.07904502 seconds)
    (81/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.145936786 seconds)
    (82/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.162856177 seconds)
    (83/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.195452418 seconds)
    (84/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.277250454 seconds)
    (85/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.121224655 seconds)
    (86/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.092996783 seconds)
    (87/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.073194068 seconds)
    (88/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.067310963 seconds)
    (89/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.078429059 seconds)
    (90/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.135620822 seconds)
    (91/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.150092056 seconds)
    (92/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.087818654 seconds)
    (93/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.07607339 seconds)
    (94/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.068392289 seconds)
    (95/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.08838738 seconds)
    (96/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 0.070064037 seconds)
    (97/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.061508793 seconds)
    (98/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 0.244857434 seconds)
    (99/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.135880303 seconds)
    (100/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.1620116 seconds)
    (101/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.08263007 seconds)
    (102/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.060396192 seconds)
    (103/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.134626403 seconds)
    (104/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.086680726 seconds)
    (105/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.063762203 seconds)
    (106/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.178740152 seconds)
    (107/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.060836883 seconds)
    (108/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.061564138 seconds)
    (109/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.067933996 seconds)
    (110/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 0.069076197 seconds)
    (111/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 0.069154483 seconds)
    (112/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.066723131 seconds)
    (113/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.11425544 seconds)
    (114/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.158262501 seconds)
    (115/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.133919479 seconds)
    (116/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 0.061749523 seconds)
    (117/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.177065352 seconds)
    (118/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.061685429 seconds)
    (119/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.061239537 seconds)
    (120/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 0.067856979 seconds)
    (121/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 0.061045312 seconds)
    (122/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.061975408 seconds)
    (123/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.132303566 seconds)
    (124/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.203108318 seconds)
    (125/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.072214422 seconds)
    (126/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.076215052 seconds)
    (127/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.133889195 seconds)
    (128/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.069766089 seconds)
    (129/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.070127727 seconds)
    (130/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.068036172 seconds)
    (131/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.060528566 seconds)
    (132/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.112427601 seconds)
    (133/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 0.092027599 seconds)
    (134/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.176726963 seconds)
    (135/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.079959718 seconds)
    (136/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.067830361 seconds)
    (137/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.0614158 seconds)
    (138/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.061603727 seconds)
    (139/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 0.062195831 seconds)
    (140/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.070774711 seconds)
    (141/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.132452667 seconds)
    (142/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.084237573 seconds)
    (143/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.071872353 seconds)
    (144/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.071943522 seconds)
    (145/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.123726839 seconds)
    (146/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.140395597 seconds)
    (147/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.153008417 seconds)
    (148/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.060006261 seconds)
    (149/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.060485806 seconds)
    (150/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.07128301 seconds)
    (151/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.0598224 seconds)
    (152/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.060474193 seconds)
    (153/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 0.153503523 seconds)
    (154/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.062364494 seconds)
    (155/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.071911718 seconds)
    (156/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.06991329 seconds)
    (157/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.072346729 seconds)
    (158/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.060689394 seconds)
    (159/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.060753553 seconds)
    (160/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.060751216 seconds)
    (161/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.062078119 seconds)
    (162/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.073169854 seconds)
    (163/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.062542509 seconds)
    (164/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.06157399 seconds)
    (165/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.06010266 seconds)
    (166/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.060349826 seconds)
    (167/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.152056605 seconds)
    (168/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.064612237 seconds)
    (169/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.194861909 seconds)
    (170/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.076734626 seconds)
    (171/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.061582351 seconds)
    (172/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.159021991 seconds)
    (173/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.06100412 seconds)
    (174/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.138238455 seconds)
    (175/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.060729523 seconds)
    (176/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.060605393 seconds)
    (177/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.114273289 seconds)
    (178/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.060507953 seconds)
    (179/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.063944079 seconds)
    (180/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.060783377 seconds)
    (181/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 0.060803228 seconds)
    (182/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.067357223 seconds)
    (183/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.066993445 seconds)
    (184/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.068917176 seconds)
    (185/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.059848604 seconds)
    (186/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 0.178484274 seconds)
    (187/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 0.060364872 seconds)
    (188/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.061177423 seconds)
    (189/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.061088763 seconds)
    (190/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.05978399 seconds)
    (191/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.060956895 seconds)
    (192/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.061092473 seconds)
    (193/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.085984974 seconds)
    (194/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.059848717 seconds)
    (195/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 0.126952499 seconds)
    (196/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.319806244 seconds)
    (197/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.062666365 seconds)
    (198/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.143442933 seconds)
    (199/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.070455488 seconds)
    (200/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.18451671 seconds)
    (201/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.198568714 seconds)
    (202/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 0.061456063 seconds)
    (203/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.062875408 seconds)
    (204/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.078621598 seconds)
    (205/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.131901164 seconds)
    (206/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.060781736 seconds)
    (207/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 0.142176689 seconds)
    (208/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.064920305 seconds)
    (209/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.062212279 seconds)
    (210/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.062682001 seconds)
    (211/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.081732628 seconds)
    (212/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.069176041 seconds)
    (213/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.06182019 seconds)
    (214/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.061665653 seconds)
    (215/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.07321827 seconds)
    (216/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.073199181 seconds)
    (217/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 0.061090475 seconds)
    (218/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.070948197 seconds)
    (219/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.062296712 seconds)
    (220/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.083799001 seconds)
    (221/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.068898542 seconds)
    (222/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.064175167 seconds)
    (223/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 0.07958207 seconds)
    (224/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.083813346 seconds)
    (225/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.072459116 seconds)
    (226/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.07252237 seconds)
    (227/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 0.132964775 seconds)
    (228/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.063305972 seconds)
    (229/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.134469482 seconds)
    (230/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.162373494 seconds)
    (231/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.064515297 seconds)
    (232/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.06133212 seconds)
    (233/309) benchmarking ("sort", BigInt, false)...
    done (took 0.234523134 seconds)
    (234/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 0.060966875 seconds)
    (235/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 0.060869879 seconds)
    (236/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.084796496 seconds)
    (237/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.069135811 seconds)
    (238/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.062286614 seconds)
    (239/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 0.089369968 seconds)
    (240/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.062014914 seconds)
    (241/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.062349234 seconds)
    (242/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.071436521 seconds)
    (243/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.083800817 seconds)
    (244/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.060463093 seconds)
    (245/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 0.065739255 seconds)
    (246/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.074505984 seconds)
    (247/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.069552918 seconds)
    (248/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.060520135 seconds)
    (249/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.060878853 seconds)
    (250/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.07044168 seconds)
    (251/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.087013659 seconds)
    (252/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 0.075512745 seconds)
    (253/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.062459911 seconds)
    (254/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.060894431 seconds)
    (255/309) benchmarking ("sort", Int8, false)...
    done (took 0.165749211 seconds)
    (256/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.134244239 seconds)
    (257/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.060322266 seconds)
    (258/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.06203755 seconds)
    (259/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.060789747 seconds)
    (260/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.060898671 seconds)
    (261/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.067943218 seconds)
    (262/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.060529928 seconds)
    (263/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.069923782 seconds)
    (264/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 0.069252652 seconds)
    (265/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.163026986 seconds)
    (266/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.061115957 seconds)
    (267/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.061932459 seconds)
    (268/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 0.065553038 seconds)
    (269/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 0.084944899 seconds)
    (270/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.063075258 seconds)
    (271/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.061757645 seconds)
    (272/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.127267347 seconds)
    (273/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.0851071 seconds)
    (274/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.06232588 seconds)
    (275/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.060438084 seconds)
    (276/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.197683514 seconds)
    (277/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.061879145 seconds)
    (278/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.067690996 seconds)
    (279/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 0.0626511 seconds)
    (280/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.121702719 seconds)
    (281/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.062088782 seconds)
    (282/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.060979783 seconds)
    (283/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.061551056 seconds)
    (284/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.116379115 seconds)
    (285/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.11308944 seconds)
    (286/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 0.061791112 seconds)
    (287/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.061588522 seconds)
    (288/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.060858071 seconds)
    (289/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.061177306 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.071883293 seconds)
    (291/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.133784941 seconds)
    (292/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.062059241 seconds)
    (293/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.1069573 seconds)
    (294/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.060901811 seconds)
    (295/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.061890566 seconds)
    (296/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.060236658 seconds)
    (297/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.061421458 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.06796655 seconds)
    (299/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.103569295 seconds)
    (300/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.06158985 seconds)
    (301/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.119050827 seconds)
    (302/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.062104371 seconds)
    (303/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.060718538 seconds)
    (304/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.063087108 seconds)
    (305/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.060908301 seconds)
    (306/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.16481483 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.060344388 seconds)
    (308/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.060182028 seconds)
    (309/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.066812198 seconds)
  done (took 31.171270182 seconds)
done (took 32.642038822 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.087075887 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.087650414 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.069105502 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.081668353 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.07656851 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.091674141 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.069851381 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.07403751 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.076628947 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.075747909 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.074631005 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.067709504 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.070925893 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.071011944 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.068297859 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.084142319 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.075073385 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.069593155 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.069740804 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.061460062 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.069953062 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.061698117 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.060845304 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.06716041 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.07284541 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.068408102 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.070857577 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.070949755 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.061379594 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.061470221 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.066578684 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.070344488 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.064106543 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.074535429 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.069982987 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.069423821 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.071188408 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.0735076 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.060885946 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.061813971 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.071060566 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.06168229 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.06936241 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.067902923 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.066118801 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.068244746 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.06974982 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.073358639 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.083783292 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.065319901 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.071447269 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.072147874 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.073088797 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.06691628 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.066757633 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.069524792 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.067058853 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.083497547 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.070024435 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.065093044 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.070989849 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.070290334 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.067293224 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.069251319 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.069654964 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.071873134 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.073891164 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.067895275 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.071473123 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.068682381 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.06131057 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.069190903 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.065669724 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.061031641 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.071937612 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.073897035 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.060242783 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.06536088 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.069265847 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.069323045 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.061218064 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.064737627 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.061062611 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.065777239 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.06488976 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.066875757 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.066242114 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.068619732 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.06114324 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.070063664 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.068652585 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.069223688 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.06157646 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.075632852 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.061198531 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.067078557 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.062479963 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.060933988 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.060861854 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.066146952 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.06089091 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.065104569 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.069948077 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.060518505 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.065846961 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.07400696 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.060983311 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.06826605 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.060714823 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.061570281 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.072289693 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.071461215 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.061231388 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.065096928 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.06056727 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.066736409 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.061102505 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.061110217 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.061152106 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.061008201 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.065612189 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.061400415 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.064886966 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.066495193 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.074378685 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.061034577 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.065694056 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.064897459 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.061229436 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.067377932 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.060899921 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.060354339 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.0605242 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.07487919 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.064129367 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.060426243 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.065901777 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.063810215 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.067921753 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.059240512 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.069156521 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.066119291 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.204471481 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.068622348 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.061156925 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.073673326 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.06570853 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.065037565 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.06093339 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.061976518 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.060193847 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.060790267 seconds)
done (took 12.037860962 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.064847298 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.104776517 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.069922442 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.078126921 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.073271206 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.061905613 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.066265609 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.079676512 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.064693477 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.080744357 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.082673629 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.081401865 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.088871291 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.061057375 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.061539379 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.062646623 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.060879653 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.068411959 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.07730535 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.08221742 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.090019429 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.061206826 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.070474078 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.07635599 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.072362989 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.08091527 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.062747883 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.063191495 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.064304988 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.077434428 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.0849106 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.06180854 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.062728335 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.076536559 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.075675987 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.070030553 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.062874832 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.066508652 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.062292379 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.061444815 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.06318642 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.07679067 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.065599102 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.070797066 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.062947096 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.062688857 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.062604697 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.065892853 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.07260709 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.06586754 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.069776708 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.074015758 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.064260676 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.062350601 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.060789586 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.066469559 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.061768218 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.062527078 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.062117749 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.061929519 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.062160493 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.063914565 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.063665931 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.064220572 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.065584853 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.065029087 seconds)
  done (took 6.092996805 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.082083246 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.092108373 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.080026233 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.079745671 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.061193131 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.062177933 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.061968885 seconds)
  done (took 2.084243379 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.06523714 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.077816935 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079641915 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.077658548 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.070864605 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.079556474 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.061991154 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.090876717 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.061220893 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.074269441 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.107560876 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.079312128 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.065291535 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.073371906 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.061939613 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.070211338 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.062022563 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.070127337 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.070892482 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.078547733 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.066243552 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.088459745 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.075134954 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.062741906 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.083050448 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.067823514 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.062487864 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.062374241 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.063741819 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.063321233 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.063177514 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.100585923 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.066982432 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.076066149 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.063750325 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.062033871 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.068479669 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065605986 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.065683295 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.068371542 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.067890534 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.063675495 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.061151013 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.063464284 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.065218809 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.06639085 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.061003841 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.063675881 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.063457854 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.073886198 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.061315354 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.067274915 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.065695001 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.067512331 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.067978625 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.066917173 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.070378907 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.063813116 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.074349619 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.070274876 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.063463297 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.071513002 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.070786707 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.067986241 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.070859124 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.066405724 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.066924911 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.068501058 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.063525489 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.064226034 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.063688565 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.070817127 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.062410531 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.064829276 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.066074625 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.064148146 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.066554948 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.078413094 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.078427506 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.074731665 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.064266607 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.063905957 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.066527186 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.078494641 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.066984516 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.063499582 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.066520116 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.061202305 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.066411181 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.063617289 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.068135623 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.063664758 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.070381672 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.064709011 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.065883113 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.071146331 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.061566077 seconds)
  done (took 8.24098139 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.067194478 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.063665895 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.064610815 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.063154116 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.062996532 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.062960877 seconds)
  done (took 1.98209822 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.088590765 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.064517014 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.076073594 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.063962642 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.0964934 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.070310559 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.071054635 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.071881721 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.075773035 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.075018967 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.070830216 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.073212793 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.06995507 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.065014608 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.070562562 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.064619497 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.070509817 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.066687139 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.074461838 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.064971671 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.076309585 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.064586611 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.066786904 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.077202743 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.067946722 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.065885193 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.064393281 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.074523448 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.074223183 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.074843777 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.064468776 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.066026357 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.070547312 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.071892786 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.070863806 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070624601 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.062965404 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.068782993 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.065243998 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.065936426 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.072877077 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.065140656 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.065574723 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.068637798 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.071572483 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.070639411 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.069190163 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.066982815 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.070121338 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.068776137 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.068895411 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.064138218 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.066285526 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.068612841 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.071133594 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071781801 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.068485188 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.070413648 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.064814424 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.070275091 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.063280325 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.066317676 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.071215953 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.066175162 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.068830163 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.068586595 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.070184629 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.064510913 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.065417921 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.063154768 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.068507595 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.063403728 seconds)
  done (took 6.56801038 seconds)
done (took 26.521913353 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.966095217 seconds)
  done (took 2.513816948 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.564453501 seconds)
  done (took 2.144093256 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.68574602 seconds)
  done (took 8.265073492 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.289019361 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.338910697 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.704105123 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.128689169 seconds)
  done (took 3.070283114 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.708474806 seconds)
  done (took 2.295893518 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.233005344 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.219585003 seconds)
  done (took 2.047502887 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.346734287 seconds)
  done (took 1.92686991 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.06856495 seconds)
  done (took 2.649215641 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.229677656 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.154204802 seconds)
  done (took 1.972920433 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.445344362 seconds)
  done (took 2.028108716 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.256754636 seconds)
  done (took 5.842794423 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.23551814 seconds)
  done (took 1.860800822 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.234457243 seconds)
  done (took 1.822569146 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.699330357 seconds)
  done (took 3.280450133 seconds)
done (took 43.312988803 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.081169702 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.080105889 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.080275691 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.076505953 seconds)
  done (took 1.874656906 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.072144908 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.068054787 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.071762348 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.071855342 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.069134428 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.069443577 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.068842898 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.065832425 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.067204469 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.066027911 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.064518416 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.065637742 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.068982165 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.065600523 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.068306066 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.069633599 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.065746116 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.065853877 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.06846628 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.065638356 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.068669335 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.065960916 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.0637272 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.066415236 seconds)
  done (took 3.206401182 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.075730411 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.070811362 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.073328618 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.068217272 seconds)
  done (took 1.880975804 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.074841416 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.083930926 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.08536598 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.089268633 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.07224047 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.072073488 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.080434389 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.08100444 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.061002953 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.084281796 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.064003295 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.062355277 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.062651474 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.082749524 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.080147094 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.059129373 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.060713133 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.072804127 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.071454678 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.074305153 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.063472002 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.061503821 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.072044518 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.071905113 seconds)
  done (took 3.335214601 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.078399244 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.063321535 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.07774838 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.088690807 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.089768121 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.061253643 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.076104027 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.089568154 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.135071525 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.061173099 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.067656963 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.061481593 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.101828149 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.061542848 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.077371955 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.106609652 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.109833897 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.065164022 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.094503447 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.061349317 seconds)
  done (took 3.232020687 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.074705069 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.067056448 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.066429675 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.061028541 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.07232393 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.06798309 seconds)
  done (took 2.01612511 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.066205649 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.065088936 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.065012339 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.064462935 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.069937419 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.064418318 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.063298308 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.064495857 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.064975692 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.063024054 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.062351569 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.06256044 seconds)
  done (took 2.372544259 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.159733059 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.065358601 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.065892896 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.064309243 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.067280823 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.062244533 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.077318483 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.064240047 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.080181187 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.06221949 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.062019719 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.064507004 seconds)
  done (took 2.49437426 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100911828 seconds)
    (2/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129373728 seconds)
    (3/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093679156 seconds)
    (4/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.069497145 seconds)
    (5/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166409797 seconds)
    (6/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091089031 seconds)
    (7/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.086669832 seconds)
    (8/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.118501548 seconds)
    (9/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.089988517 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.066007674 seconds)
    (11/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.089747123 seconds)
    (12/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131996868 seconds)
    (13/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.092166038 seconds)
    (14/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.095182251 seconds)
    (15/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078659387 seconds)
    (16/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121231512 seconds)
    (17/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.106023338 seconds)
    (18/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08436522 seconds)
    (19/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11034662 seconds)
    (20/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078470713 seconds)
    (21/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.067571636 seconds)
    (22/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129769166 seconds)
    (23/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.067193467 seconds)
    (24/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089685076 seconds)
    (25/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098156239 seconds)
    (26/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.094907833 seconds)
    (27/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106434288 seconds)
    (28/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128819254 seconds)
    (29/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080678873 seconds)
    (30/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.086270639 seconds)
    (31/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079966551 seconds)
    (32/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.070891728 seconds)
    (33/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.101557416 seconds)
    (34/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.081078399 seconds)
    (35/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.093893572 seconds)
    (36/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090332643 seconds)
    (37/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095119816 seconds)
    (38/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082245754 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.083477434 seconds)
    (40/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.119216612 seconds)
    (41/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15064518 seconds)
    (42/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097424774 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097621095 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130826526 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.075339194 seconds)
    (46/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.105060272 seconds)
    (47/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.077927038 seconds)
    (48/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096606683 seconds)
    (49/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101050324 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091240582 seconds)
    (51/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07234315 seconds)
    (52/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088422728 seconds)
    (53/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.104270466 seconds)
    (54/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099095492 seconds)
    (55/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.078675765 seconds)
    (56/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078778755 seconds)
    (57/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.113640098 seconds)
    (58/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.094584016 seconds)
    (59/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092233324 seconds)
    (60/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.076127835 seconds)
    (61/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102818043 seconds)
    (62/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.083785086 seconds)
    (63/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10297418 seconds)
    (64/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262744318 seconds)
    (65/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136615849 seconds)
    (66/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098601478 seconds)
    (67/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132795435 seconds)
    (68/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1194202 seconds)
    (69/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091932737 seconds)
    (70/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.085946317 seconds)
    (71/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.088682572 seconds)
    (72/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.072856338 seconds)
    (73/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107776589 seconds)
    (74/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094516155 seconds)
    (75/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132790871 seconds)
    (76/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10535292 seconds)
    (77/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096908515 seconds)
    (78/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.09315063 seconds)
    (79/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079927625 seconds)
    (80/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104369247 seconds)
    (81/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110825193 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.091218835 seconds)
    (83/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09119576 seconds)
    (84/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14144755 seconds)
    (85/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105755588 seconds)
    (86/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087305395 seconds)
    (87/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087513002 seconds)
    (88/481) benchmarking "5d"...
    done (took 0.142947627 seconds)
    (89/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.068825105 seconds)
    (90/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143824342 seconds)
    (91/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08579794 seconds)
    (92/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.117359776 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093934424 seconds)
    (94/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134854002 seconds)
    (95/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088292721 seconds)
    (96/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.080227331 seconds)
    (97/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102860397 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100764099 seconds)
    (99/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.086965897 seconds)
    (100/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09959029 seconds)
    (101/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081093787 seconds)
    (102/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110460477 seconds)
    (103/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089660636 seconds)
    (104/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097655126 seconds)
    (105/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.078636764 seconds)
    (106/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087368315 seconds)
    (107/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083764359 seconds)
    (108/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.093609758 seconds)
    (109/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.071803877 seconds)
    (110/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100600012 seconds)
    (111/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112422405 seconds)
    (112/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110692845 seconds)
    (113/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.071883794 seconds)
    (114/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105674889 seconds)
    (115/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083116865 seconds)
    (116/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.07378283 seconds)
    (117/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089394278 seconds)
    (118/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135555987 seconds)
    (119/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.079612363 seconds)
    (120/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.072124734 seconds)
    (121/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145507524 seconds)
    (122/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.089478325 seconds)
    (123/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.111993578 seconds)
    (124/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105186905 seconds)
    (125/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.079378658 seconds)
    (126/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.262408094 seconds)
    (127/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133496119 seconds)
    (128/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09046286 seconds)
    (129/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087510536 seconds)
    (130/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.074045308 seconds)
    (131/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150045417 seconds)
    (132/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.072247206 seconds)
    (133/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115263183 seconds)
    (134/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.078732916 seconds)
    (135/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098972696 seconds)
    (136/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10170967 seconds)
    (137/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128638317 seconds)
    (138/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134748317 seconds)
    (139/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092768401 seconds)
    (140/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075279579 seconds)
    (141/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087998471 seconds)
    (142/481) benchmarking "ind2sub"...
    done (took 0.1029074 seconds)
    (143/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083522057 seconds)
    (144/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082741306 seconds)
    (145/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.074208258 seconds)
    (146/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.105926039 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121626247 seconds)
    (148/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.096756714 seconds)
    (149/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078183785 seconds)
    (150/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.089923 seconds)
    (151/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.067043827 seconds)
    (152/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110677557 seconds)
    (153/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.073129687 seconds)
    (154/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081650194 seconds)
    (155/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093085856 seconds)
    (156/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.084956538 seconds)
    (157/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.086947128 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13981238 seconds)
    (159/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.081564339 seconds)
    (160/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105205977 seconds)
    (161/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.094961593 seconds)
    (162/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.064596495 seconds)
    (163/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089062206 seconds)
    (164/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149678179 seconds)
    (165/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.080324885 seconds)
    (166/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.107747368 seconds)
    (167/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113559663 seconds)
    (168/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081061791 seconds)
    (169/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.065453683 seconds)
    (170/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.093476149 seconds)
    (171/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.070272164 seconds)
    (172/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105825969 seconds)
    (173/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.089989945 seconds)
    (174/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103824439 seconds)
    (175/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.075835051 seconds)
    (176/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104206018 seconds)
    (177/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.065856803 seconds)
    (178/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.071449898 seconds)
    (179/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126442681 seconds)
    (180/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099427743 seconds)
    (181/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.086593229 seconds)
    (182/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.12857905 seconds)
    (183/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101698009 seconds)
    (184/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.085875932 seconds)
    (185/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.100523717 seconds)
    (186/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.094305049 seconds)
    (187/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.091549801 seconds)
    (188/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.098318904 seconds)
    (189/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.101923488 seconds)
    (190/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100843409 seconds)
    (191/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.07006856 seconds)
    (192/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122527421 seconds)
    (193/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.086479416 seconds)
    (194/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.072831452 seconds)
    (195/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.081859384 seconds)
    (196/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.074461754 seconds)
    (197/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.073316709 seconds)
    (198/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094273293 seconds)
    (199/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109419854 seconds)
    (200/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.083831476 seconds)
    (201/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095051996 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097219948 seconds)
    (203/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084899258 seconds)
    (204/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.104824643 seconds)
    (205/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.084037396 seconds)
    (206/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.073845999 seconds)
    (207/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.124917844 seconds)
    (208/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.072127626 seconds)
    (209/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.070186499 seconds)
    (210/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.082938905 seconds)
    (211/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.100543205 seconds)
    (212/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.083166264 seconds)
    (213/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.1268102 seconds)
    (214/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.07500291 seconds)
    (215/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128177936 seconds)
    (216/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086774673 seconds)
    (217/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.076508724 seconds)
    (218/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.108376478 seconds)
    (219/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.064498687 seconds)
    (220/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.065220958 seconds)
    (221/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.07586632 seconds)
    (222/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086362902 seconds)
    (223/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108905884 seconds)
    (224/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.074493099 seconds)
    (225/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073280822 seconds)
    (226/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110666499 seconds)
    (227/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.123811645 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091525949 seconds)
    (229/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096201924 seconds)
    (230/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.064087727 seconds)
    (231/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.084115856 seconds)
    (232/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.122223327 seconds)
    (233/481) benchmarking "4d"...
    done (took 0.107846104 seconds)
    (234/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.074317802 seconds)
    (235/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100297164 seconds)
    (236/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.077748924 seconds)
    (237/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118172222 seconds)
    (238/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087663307 seconds)
    (239/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.110188182 seconds)
    (240/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096781497 seconds)
    (241/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10132761 seconds)
    (242/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.084457616 seconds)
    (243/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.074663747 seconds)
    (244/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.067961041 seconds)
    (245/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081292619 seconds)
    (246/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101779345 seconds)
    (247/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080370036 seconds)
    (248/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.075595471 seconds)
    (249/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.063500983 seconds)
    (250/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.069657063 seconds)
    (251/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.085416797 seconds)
    (252/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082527475 seconds)
    (253/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102045043 seconds)
    (254/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.08112127 seconds)
    (255/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123189057 seconds)
    (256/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.068017446 seconds)
    (257/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092038566 seconds)
    (258/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.363192989 seconds)
    (259/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106696732 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089683315 seconds)
    (261/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096183066 seconds)
    (262/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.093326399 seconds)
    (263/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092095167 seconds)
    (264/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091402441 seconds)
    (265/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092064077 seconds)
    (266/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.072736543 seconds)
    (267/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125599805 seconds)
    (268/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102629334 seconds)
    (269/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.077441145 seconds)
    (270/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088094247 seconds)
    (271/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094111515 seconds)
    (272/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10556382 seconds)
    (273/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107531214 seconds)
    (274/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108488105 seconds)
    (275/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091992341 seconds)
    (276/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105778204 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.121692958 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097779798 seconds)
    (279/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080834989 seconds)
    (280/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083303799 seconds)
    (281/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.092599917 seconds)
    (282/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.083469357 seconds)
    (283/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079846912 seconds)
    (284/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.102791304 seconds)
    (285/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111076099 seconds)
    (286/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.09744263 seconds)
    (287/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107596467 seconds)
    (288/481) benchmarking "3d"...
    done (took 0.093282112 seconds)
    (289/481) benchmarking ("sum", "3darray")...
    done (took 0.091504077 seconds)
    (290/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105495165 seconds)
    (291/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090847239 seconds)
    (292/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.086999719 seconds)
    (293/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.116197748 seconds)
    (294/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151044745 seconds)
    (295/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.099761948 seconds)
    (296/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.102598837 seconds)
    (297/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083431651 seconds)
    (298/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105459587 seconds)
    (299/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104014898 seconds)
    (300/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110389744 seconds)
    (301/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.109107046 seconds)
    (302/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10706481 seconds)
    (303/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.068685819 seconds)
    (304/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.07355436 seconds)
    (305/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.068329093 seconds)
    (306/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104851982 seconds)
    (307/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076900603 seconds)
    (308/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115279761 seconds)
    (309/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.074461022 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10457975 seconds)
    (311/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094270235 seconds)
    (312/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.077332408 seconds)
    (313/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.064258181 seconds)
    (314/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098847571 seconds)
    (315/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091107693 seconds)
    (316/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.079992202 seconds)
    (317/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120443453 seconds)
    (318/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.110705107 seconds)
    (319/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.070927683 seconds)
    (320/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.088238312 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10365825 seconds)
    (322/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080542279 seconds)
    (323/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.121819246 seconds)
    (324/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.099200637 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.097807853 seconds)
    (326/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.069222019 seconds)
    (327/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.08813218 seconds)
    (328/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.071240922 seconds)
    (329/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105704929 seconds)
    (330/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.097271986 seconds)
    (331/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.073991123 seconds)
    (332/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.072982063 seconds)
    (333/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.067284211 seconds)
    (334/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103034815 seconds)
    (335/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.080545273 seconds)
    (336/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105098842 seconds)
    (337/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.085009274 seconds)
    (338/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096097937 seconds)
    (339/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.114569779 seconds)
    (340/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125778139 seconds)
    (341/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082412457 seconds)
    (342/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091421593 seconds)
    (343/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111475155 seconds)
    (344/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107892866 seconds)
    (345/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.077256216 seconds)
    (346/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.107768441 seconds)
    (347/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128778197 seconds)
    (348/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.113458586 seconds)
    (349/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.075979144 seconds)
    (350/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.079593699 seconds)
    (351/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100604526 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100749657 seconds)
    (353/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.096153875 seconds)
    (354/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.072046967 seconds)
    (355/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.074770195 seconds)
    (356/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103722829 seconds)
    (357/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.107866646 seconds)
    (358/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.064220548 seconds)
    (359/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080156789 seconds)
    (360/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.066710518 seconds)
    (361/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.079756096 seconds)
    (362/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106684074 seconds)
    (363/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090213085 seconds)
    (364/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.077588326 seconds)
    (365/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110980972 seconds)
    (366/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.070845625 seconds)
    (367/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101567406 seconds)
    (368/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089822305 seconds)
    (369/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115405735 seconds)
    (370/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11565284 seconds)
    (371/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136347065 seconds)
    (372/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.092489787 seconds)
    (373/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.0801689 seconds)
    (374/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.072614193 seconds)
    (375/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117406428 seconds)
    (376/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.067103899 seconds)
    (377/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110765979 seconds)
    (378/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.106146834 seconds)
    (379/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.083087788 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.064759936 seconds)
    (381/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079610708 seconds)
    (382/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.090694472 seconds)
    (383/481) benchmarking "sub2ind"...
    done (took 0.621801608 seconds)
    (384/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103167681 seconds)
    (385/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.07198064 seconds)
    (386/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127553851 seconds)
    (387/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082159618 seconds)
    (388/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109229448 seconds)
    (389/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079867884 seconds)
    (390/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.111432222 seconds)
    (391/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.084435177 seconds)
    (392/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097117762 seconds)
    (393/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.087167601 seconds)
    (394/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.395876746 seconds)
    (395/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.082772247 seconds)
    (396/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110467037 seconds)
    (397/481) benchmarking "6d"...
    done (took 0.176136259 seconds)
    (398/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.111029717 seconds)
    (399/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.107927541 seconds)
    (400/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.073573037 seconds)
    (401/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.086313694 seconds)
    (402/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.072866525 seconds)
    (403/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.078536431 seconds)
    (404/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.081110219 seconds)
    (405/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086873355 seconds)
    (406/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108207798 seconds)
    (407/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.084730626 seconds)
    (408/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105586627 seconds)
    (409/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.078896329 seconds)
    (410/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.106244632 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089659042 seconds)
    (412/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088606971 seconds)
    (413/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.097825526 seconds)
    (414/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079822517 seconds)
    (415/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138173425 seconds)
    (416/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.086248058 seconds)
    (417/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122292974 seconds)
    (418/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105781403 seconds)
    (419/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.076979386 seconds)
    (420/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.073077456 seconds)
    (421/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.085023485 seconds)
    (422/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.09928482 seconds)
    (423/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080476336 seconds)
    (424/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092788128 seconds)
    (425/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.077041046 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.073947259 seconds)
    (427/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149740163 seconds)
    (428/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099769456 seconds)
    (429/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083035722 seconds)
    (430/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100852286 seconds)
    (431/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.089400108 seconds)
    (432/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.084841215 seconds)
    (433/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.090030935 seconds)
    (434/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115226733 seconds)
    (435/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108405126 seconds)
    (436/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.071182006 seconds)
    (437/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.086000573 seconds)
    (438/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101925423 seconds)
    (439/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077123091 seconds)
    (440/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.073318555 seconds)
    (441/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.095043137 seconds)
    (442/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.06750656 seconds)
    (443/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.087289236 seconds)
    (444/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097024575 seconds)
    (445/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094363362 seconds)
    (446/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088585775 seconds)
    (447/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.1017997 seconds)
    (448/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.076523268 seconds)
    (449/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.084915208 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107810106 seconds)
    (451/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083906941 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.075027525 seconds)
    (453/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.074682655 seconds)
    (454/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.074522613 seconds)
    (455/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.074523539 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101727886 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105940041 seconds)
    (458/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112032539 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107025103 seconds)
    (460/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089298144 seconds)
    (461/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092313949 seconds)
    (462/481) benchmarking "2d"...
    done (took 0.076701898 seconds)
    (463/481) benchmarking "7d"...
    done (took 0.379913804 seconds)
    (464/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079391676 seconds)
    (465/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.096372622 seconds)
    (466/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.10224232 seconds)
    (467/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.073577361 seconds)
    (468/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.127619068 seconds)
    (469/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.086334965 seconds)
    (470/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.086692584 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09421057 seconds)
    (472/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09809716 seconds)
    (473/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14972399 seconds)
    (474/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.07215248 seconds)
    (475/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10662746 seconds)
    (476/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092038292 seconds)
    (477/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106855125 seconds)
    (478/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.084595523 seconds)
    (479/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104106842 seconds)
    (480/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093518868 seconds)
    (481/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.089937154 seconds)
  done (took 48.870299288 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.092667537 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.147082662 seconds)
    (3/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.153663435 seconds)
    (4/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.076978539 seconds)
    (5/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.091484317 seconds)
    (6/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.115722913 seconds)
    (7/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.205518193 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.188564816 seconds)
  done (took 2.860020231 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.066375128 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.077185155 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.099301543 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.078818475 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.062187231 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.0632644 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.199966166 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.077599327 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.062073402 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.098994342 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.072584471 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.064171828 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.41022578 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.06171802 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.062850035 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.070940528 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.062617849 seconds)
  done (took 3.455076057 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.366357043 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.602128274 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.338616043 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.071054574 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 5.00548067 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.084886611 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.337005705 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.132663079 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.076014038 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.557186462 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.366248834 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.126822801 seconds)
  done (took 18.84535618 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.075455133 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.073473687 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.077914697 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.077327303 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.072614448 seconds)
  done (took 2.224472878 seconds)
done (took 98.290913371 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.079953824 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.168287539 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.066744963 seconds)
  done (took 2.045577696 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.082959713 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.080211851 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.078837062 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.075482203 seconds)
  done (took 2.101280051 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.074081606 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.07509976 seconds)
  done (took 1.924070002 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.246060204 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.161640263 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.089416235 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.082688418 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079410001 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.07785711 seconds)
  done (took 2.028773255 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.071473698 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.070750003 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.069581073 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.069078778 seconds)
  done (took 2.055602359 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.066999907 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.065037095 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.067454178 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.06907858 seconds)
  done (took 2.045305908 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.083018181 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.082993123 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.076907684 seconds)
  done (took 2.019532934 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.094991015 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.095863928 seconds)
  done (took 1.967440778 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.079421544 seconds)
  done (took 1.856322813 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.088627526 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.097456261 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.150136496 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.109306152 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.148506766 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.132503042 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.074797945 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.076110405 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.071100045 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.069257978 seconds)
  done (took 2.795878731 seconds)
done (took 23.188139 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.077868426 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.372121498 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.356100079 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.082755837 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.667190519 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.353447156 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.983543558 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.087864415 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.095636975 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.064537211 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.081039979 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.644478358 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.977834363 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.326559886 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.962416829 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.325064212 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.646447814 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.064393685 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.063859862 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.064667753 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.969358675 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.063892017 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.064951716 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.064702366 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.644741044 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.406976383 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.065317996 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.323881053 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.063806382 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.066620859 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.35471476 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067080361 seconds)
  done (took 16.20595541 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.069414253 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.120511142 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.071228116 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.082329786 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.068731361 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.067031134 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.067265701 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.065037043 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.105209488 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.064940366 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.081401134 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.06449825 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.069675444 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.06657547 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.084617203 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.065397262 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.066115852 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.066407469 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.065387829 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068942969 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.083077103 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.064762479 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.065979473 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.06535884 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.065413757 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.07840626 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.066378712 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.064941195 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.065598382 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.068314415 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.068448257 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067163054 seconds)
  done (took 4.101020802 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.120823685 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.126693655 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.069383361 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.103479792 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.115915687 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.066211187 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.145681935 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.088282388 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.110275765 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067645415 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083450672 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067608299 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.10167718 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.067128527 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.085699509 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.065687731 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.066894501 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.065609653 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.065224233 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.066085087 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.083927973 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.065608327 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.065795112 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.065937922 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.066168273 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.079981466 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.066891657 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.065210581 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.065130491 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.067957872 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.06934958 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067106855 seconds)
  done (took 4.378956757 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.068821442 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.070795893 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.078839963 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.079715906 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.065365123 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.065790673 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.067340516 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.063493815 seconds)
  done (took 2.363348021 seconds)
done (took 28.843554565 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.077801362 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.065858482 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.067473183 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.084083077 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.069856292 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.067572887 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.061618557 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.070566765 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.068557228 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.068395368 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.069344832 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.063508685 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.067160434 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.062200366 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.069125407 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.064715464 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.071379282 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.068647873 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.068727392 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.070595155 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.068405676 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.071608949 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.073342634 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.070756057 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.070759683 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.070969636 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.074755941 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.071017975 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.06618502 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.068487759 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.067751368 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.076882359 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.072148412 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.072792817 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.065415728 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.065591948 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.069120355 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.065698523 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.06973826 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.072988384 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.065232023 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.072748036 seconds)
  done (took 4.688227707 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.083872869 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.088044276 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.081392768 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.080224743 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.098258144 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.080776047 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.085615175 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.077072808 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.075471893 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.084299005 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.070652301 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.078313589 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.074296402 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.068527279 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.073054736 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.070772207 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.075631138 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.070268054 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.073722848 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.073988614 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.08311349 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.068415567 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.075954371 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.075421693 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.07038129 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.076314963 seconds)
  done (took 3.822173527 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.071964225 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.083543277 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.090676282 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.147332989 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.111438744 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.07835453 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.07939251 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.092928413 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.096677002 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.066659381 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.070328924 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.091979601 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.091291615 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.073265223 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.106079989 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.081112875 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.080288879 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.066460263 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.071125477 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.093559871 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.084756399 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.081756766 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.090925629 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.080891518 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.063421983 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.066647026 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.070509615 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.077976181 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.071223491 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.075860955 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.068922189 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.067319659 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.064835952 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.075290303 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.068265291 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.06367241 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.087949609 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.075921295 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.077360241 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.106671029 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.072867881 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.065520971 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.092000344 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.125708698 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.063468807 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.067481726 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.067405918 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.075683008 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.065197166 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.092426341 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078012308 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.06381795 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.064886456 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.065508934 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.06506175 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079140836 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.06559046 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.066112259 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.074794822 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.07018513 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.085884968 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.069208206 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.083088461 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.064218011 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.074309478 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.064958377 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.065609198 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.062836831 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.094795131 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.070330744 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.111446603 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.064485181 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.062764193 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.07519176 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.074171076 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.070122673 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.063893224 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081401073 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.074814863 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.067043833 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.074989925 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.066800787 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.066689089 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.09515294 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.063936972 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.063331354 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.062686313 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.067024687 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.066915649 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.064372884 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.077636727 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.063132181 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.067190089 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.078710449 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.06384229 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.064365118 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.066966495 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.065891145 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.063490311 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.076211625 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.067820869 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.065259123 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.075229374 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.064651369 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.067066569 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.077311127 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.07118076 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.063553834 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.065648721 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.067014243 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.065185724 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.067786385 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.066781425 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.065965988 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.070520443 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.070912234 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.069095441 seconds)
  done (took 10.577218002 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.163253125 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.148563643 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.066325625 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.142186579 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.072021049 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.06965836 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.14383602 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.083653706 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.064544674 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.065338207 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.064021301 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.092855663 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.089133865 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.099622635 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.068929554 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.064856259 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.087820763 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.096481638 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.145794786 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.140458029 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.087850467 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.071312935 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.067561227 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.065918133 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.066065984 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.072410918 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.080042576 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.072578294 seconds)
  done (took 4.400886927 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.076831717 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.090429143 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.067871188 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.075809904 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.083689978 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.064828848 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.066315578 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.066348511 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.078802553 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.073601566 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.064850274 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.069573245 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.068716611 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.06732892 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.065355071 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.070724754 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.070736665 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.064091855 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.068702009 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.06938274 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.074557134 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.089321622 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.068511426 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.06439191 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.066616896 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.064057546 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.073225037 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.076479775 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.064870072 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.079882151 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.06224027 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.06869089 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.078353336 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.064914815 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.064118461 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.064746677 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.06451865 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.064547695 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.064895286 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.063172868 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.063201961 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.068983133 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.063690609 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.072698835 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.0784792 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.071058435 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.066552142 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.067014209 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.06761612 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.06222814 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.067366707 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.067399082 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.066719073 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.071740208 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.06788943 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.067280401 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.067895474 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.08931141 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.070368004 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.063940341 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.063826512 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.062990994 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.066743361 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.074100412 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.080603174 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.066916657 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.063196509 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.064624831 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069841026 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.078001104 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.063583554 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.068896272 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.062321954 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.065140307 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.06682389 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.067083506 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.06557699 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.063149021 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.064199022 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.064568168 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.065210674 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.064076695 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.064236653 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.066706761 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.062633432 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.063493152 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.064551191 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.066118135 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.072954927 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.063968652 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.067964986 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.06526341 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.063337155 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.066958423 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.069746522 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.066719562 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.077287568 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.075551446 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.06501324 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.063012129 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.077407317 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.066910818 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.063797514 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.0700065 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.068491852 seconds)
  done (took 9.055412034 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.090351747 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.06588383 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.080385419 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.087487505 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.074323407 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.069740303 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.074703215 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.065910006 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.080566465 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.063564839 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.072616934 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.063085709 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.075656476 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.074628377 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.065992814 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.075282603 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.06667287 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.081409279 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.079252269 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.063661601 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.073410231 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.076273392 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.076680187 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.078677427 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.077885663 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.079286952 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.076380098 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.067316723 seconds)
  done (took 3.930826753 seconds)
done (took 38.269552807 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.881912246 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.054640167 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.870137412 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.076231778 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.920213465 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 7.042470942 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.976215094 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.868342936 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.027194307 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.912731398 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.162836563 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.390963691 seconds)
done (took 67.045829581 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.914410247 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 2.03369204 seconds)
    (2/2) benchmarking "String"...
    done (took 2.131438458 seconds)
  done (took 5.968612942 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.113233359 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.702559302 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.12983058 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.868040929 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.867929853 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.31071523 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.659485334 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.312142862 seconds)
  done (took 31.655020676 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.999805869 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.094650224 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.535195283 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.573023099 seconds)
  done (took 16.047743911 seconds)
done (took 65.586220802 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.902703541 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.865765169 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.930003265 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.894147355 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.872896371 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.870113684 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.869147701 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.869597582 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.898777759 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.93661376 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.867623375 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.871022708 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.868385604 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.915347264 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.609366872 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.927552636 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.88452043 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.88435341 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.882921254 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.929459476 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.866884105 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.869701823 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 5.351442186 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 2.056152519 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 2.483369176 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 7.072589489 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.26132747 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.281031748 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.87215495 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.865241871 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.945327999 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 7.111537668 seconds)
  done (took 207.388215499 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.871471388 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.89770771 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.935927792 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.873612392 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.480567213 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 3.042768956 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.967623737 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.507682215 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.869792574 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.885757801 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.963847897 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.868052344 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.982615087 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.813501123 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.907602625 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.903783143 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.055259986 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.995450048 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.906726234 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 3.035075433 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.872377569 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.806266043 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.772577875 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.949162062 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.907920969 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.902700638 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.89437494 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.879802571 seconds)
    (29/36) benchmarking "asum"...
    done (took 3.05557066 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.022534956 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.898935251 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.888818459 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.02940325 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.736827739 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.883746244 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.885797334 seconds)
  done (took 172.956106772 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.052304711 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.874861533 seconds)
    (2/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.878131886 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.871407466 seconds)
    (4/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.929581037 seconds)
    (5/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.994115295 seconds)
    (6/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.873554712 seconds)
    (7/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.527981766 seconds)
    (8/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.878355538 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.449620848 seconds)
    (10/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.876161762 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.871128264 seconds)
    (12/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.87174901 seconds)
    (13/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.873044962 seconds)
    (14/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.88441513 seconds)
    (15/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.948966356 seconds)
    (16/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.87370833 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.887453557 seconds)
    (18/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.874052577 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.897257706 seconds)
    (20/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.874034122 seconds)
    (21/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.872110544 seconds)
    (22/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.873417547 seconds)
    (23/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.872900216 seconds)
    (24/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.873325221 seconds)
    (25/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.872944726 seconds)
    (26/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.872672318 seconds)
    (27/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 22.2395392 seconds)
    (28/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.111730563 seconds)
    (29/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.870858068 seconds)
    (30/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.873240035 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.375518523 seconds)
    (32/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.88306366 seconds)
    (33/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 22.111672392 seconds)
    (34/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.876332259 seconds)
    (35/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.965865101 seconds)
    (36/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.925690099 seconds)
    (37/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.989641648 seconds)
    (38/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.869834276 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.092232307 seconds)
    (40/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.946986167 seconds)
    (41/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.871543974 seconds)
    (42/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.873626584 seconds)
    (43/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.936659299 seconds)
    (44/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.883400448 seconds)
    (45/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.876224252 seconds)
    (46/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.878186062 seconds)
    (47/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.879897013 seconds)
    (48/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.940330473 seconds)
    (49/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.11178125 seconds)
    (50/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.872521937 seconds)
    (51/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.994461049 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.351171588 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.869227493 seconds)
    (54/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.874162528 seconds)
    (55/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.874906551 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.456101956 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.8705112 seconds)
    (58/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.874904331 seconds)
    (59/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.876630601 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.881580844 seconds)
    (61/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.879300918 seconds)
    (62/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.875627016 seconds)
    (63/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.87968191 seconds)
    (64/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 2.265391185 seconds)
    (65/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.940575863 seconds)
    (66/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 22.108898804 seconds)
    (67/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 22.092359437 seconds)
    (68/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.87253624 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.087233956 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.012929151 seconds)
    (71/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.874099226 seconds)
    (72/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.87521288 seconds)
    (73/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.876802829 seconds)
    (74/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.875999717 seconds)
    (75/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.874297768 seconds)
    (76/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.87959817 seconds)
    (77/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.995436746 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.882529277 seconds)
    (79/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.986077182 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.955772117 seconds)
    (81/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.993320895 seconds)
    (82/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.875007701 seconds)
    (83/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.885929645 seconds)
    (84/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.692482895 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.945187602 seconds)
    (86/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.909586615 seconds)
    (87/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.877287231 seconds)
    (88/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.693867548 seconds)
    (89/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.876048008 seconds)
    (90/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 2.250723156 seconds)
    (91/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.635909842 seconds)
    (92/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.872827082 seconds)
    (93/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.876144163 seconds)
    (94/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.889245674 seconds)
    (95/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.873904452 seconds)
    (96/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.87681265 seconds)
    (97/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.875833786 seconds)
    (98/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.959292823 seconds)
    (99/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.872056646 seconds)
    (100/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.998408923 seconds)
    (101/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.584575932 seconds)
    (102/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 22.057795562 seconds)
    (103/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 2.049128276 seconds)
    (104/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.877496215 seconds)
    (105/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.883730112 seconds)
    (106/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.972227348 seconds)
    (107/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 2.035974548 seconds)
    (108/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.874228528 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.877098795 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.940881756 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.880275918 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.877523557 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 4.024134693 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.875840873 seconds)
  done (took 411.88442726 seconds)
done (took 796.143118385 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.463968278 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.434401678 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.545562385 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.451070411 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.429902407 seconds)
  done (took 14.134475549 seconds)
done (took 15.944717829 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 1.889915232 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 1.882722462 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.94299632 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.964217286 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 1.891106724 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.896873512 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.962346689 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 1.895243699 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.927816028 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.9323029 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.964704633 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.964877647 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.90079579 seconds)
  done (took 26.825963405 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.886381395 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 2.0306266 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.112415415 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.914428141 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.887126778 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.117440295 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.940657296 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 2.03125499 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 2.02314083 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.116294745 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.11969421 seconds)
  done (took 23.995257668 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.887059804 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 2.03349439 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.124785938 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.919456623 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.886551742 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.122875848 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.948598737 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 2.028642385 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 2.030156093 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.109721014 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.126077072 seconds)
  done (took 24.03915255 seconds)
done (took 76.673571182 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.882485378 seconds)
  done (took 3.693291728 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.915057575 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 2.050121899 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.881520547 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.880423194 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.884266638 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.882166907 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.883247675 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.882011726 seconds)
  done (took 17.070764816 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.87976654 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.882161155 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.882040321 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.883787576 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.882548223 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.883812539 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.881417534 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.88169261 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.882471212 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.883837024 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.882960466 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.882158134 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.882364134 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.881969069 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.88394826 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.882824124 seconds)
  done (took 31.933713812 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.885360748 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.884814752 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.886491251 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.884057561 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.88221995 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.886379809 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.887038307 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.884525922 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.885353353 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.887715228 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.885384354 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.884568406 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.884723112 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.885205153 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.887808053 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.885805593 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.885478649 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.884018105 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.886720718 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.886398757 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.883688858 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.883272506 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.886237963 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.886899735 seconds)
  done (took 47.067030227 seconds)
done (took 101.588169546 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.638062503 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.651590678 seconds)
  done (took 10.105851827 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.885476474 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.883795283 seconds)
  done (took 5.591788749 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.886878138 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.884741102 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.885013155 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.883152269 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.885426729 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.884573988 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.88638464 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.884364502 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.88537014 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.88611352 seconds)
  done (took 20.667807545 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.887770228 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.885934828 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.884536246 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.884916378 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.886405122 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.886980361 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.886534298 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.886340632 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.886529372 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.889384507 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.888849232 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.886029523 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.888207194 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.887005666 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.887226143 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.887162927 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.887139567 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.886607167 seconds)
  done (took 35.780539737 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.886908811 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.887573757 seconds)
  done (took 5.59015154 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.886154199 seconds)
    (2/7) benchmarking "second"...
    done (took 1.887731566 seconds)
    (3/7) benchmarking "month"...
    done (took 1.888865086 seconds)
    (4/7) benchmarking "year"...
    done (took 1.889076594 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.888539014 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.887101698 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.88749886 seconds)
  done (took 15.031896977 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.886543831 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 2.040984236 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.100182769 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.770358835 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.888108527 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.891358639 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 3.22970959 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.892309393 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.891116927 seconds)
  done (took 21.407614179 seconds)
done (took 115.990419485 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.754150152 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.886021681 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.137587109 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.946326008 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.903495698 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.225503021 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.895613822 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.160339015 seconds)
done (took 43.725978666 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.914491574 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.886096441 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 6.914748835 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.914871426 seconds)
  done (took 22.53564395 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.88904952 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.232389381 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.909563676 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.771692783 seconds)
  done (took 22.639376495 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.269761045 seconds)
    (2/2) benchmarking "read"...
    done (took 2.230700195 seconds)
  done (took 6.324202453 seconds)
done (took 60.235847153 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.889488481 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.88935235 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.88918092 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.887861035 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.887921627 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.889695592 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.888212797 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.890187396 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.8903971 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.888105194 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.889289541 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.888658813 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.888403057 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.888978683 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.888083411 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.888944617 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.890003538 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.887724622 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.889985866 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.889174247 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.88953482 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.88891298 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.890188779 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.893289017 seconds)
  done (took 47.160759973 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.890457427 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.889632089 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.889680998 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.891345364 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.890043584 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.890120341 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.889705306 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.889193535 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.890824687 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.891348895 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.89011971 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.891580351 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.888848154 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.891192633 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.890316372 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.891347842 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.890542475 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.891984357 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.891293417 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.890979254 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.892768148 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.891374468 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.892406389 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.892385864 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.893473425 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.8914599 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.889026328 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.893593427 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.892616485 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.892195243 seconds)
  done (took 58.554465741 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.891961155 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.892123723 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.89102001 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.893385597 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.893428491 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.890860349 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.892872557 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.892779992 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.893547349 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.892836465 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.891656945 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.893026981 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.89437559 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.892834183 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.894320246 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.894372859 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.893607318 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.893933708 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.894703307 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.893427142 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.894043892 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.893659432 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.893700527 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.893134146 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.895265454 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.895221457 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.895064523 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.893789176 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.895324663 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.892664415 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.895633516 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.896071835 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.892292413 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.89496945 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.893499588 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.893677365 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.894247357 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 1.894475194 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 1.896199069 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.89464662 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.894014419 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.895763988 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.894135293 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.894112743 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.894794587 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.894669812 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.895659884 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.897294275 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.893202529 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.896238039 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.894207641 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.894059461 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.895423751 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.895621464 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.894912257 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.892802434 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.893010502 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.895638563 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.895014238 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.895580577 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.89605905 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.894846582 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.894056275 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.895325347 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.89591626 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.894933513 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.895391287 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.896186753 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.897741597 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.895894795 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.897786528 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.894581285 seconds)
  done (took 138.220641797 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.893859714 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.897405322 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.895119936 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.895417473 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.895625825 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.896533145 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.897067603 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.895636257 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.895410376 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.897228382 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.897257647 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.896423012 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.895164283 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.894945275 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.895842028 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.89510854 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.89634241 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.896942272 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.896269532 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.89540422 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.896853256 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.896755222 seconds)
  done (took 43.539215813 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.896537645 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.897504345 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.896579523 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.896325337 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.89640859 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.897472464 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.898748411 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.896908607 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.897681596 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.897190853 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.897437419 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.896200564 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.897816657 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.89765935 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.898829894 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.899645882 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.89829512 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.898788724 seconds)
  done (took 35.985329434 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.897036663 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.898973185 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.898935979 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.897698362 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.898554112 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.899131727 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.899210577 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.900575111 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.898116235 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.899469173 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.899333243 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.90072733 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.898432559 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.900560251 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.89894312 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.897306245 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.897490653 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.897229316 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.896529515 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.897909722 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.899272546 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.899339694 seconds)
  done (took 43.598770916 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.898578616 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.898707171 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.90075798 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.900056196 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.900359562 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.901049877 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.899743388 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.899581293 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.898576077 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.898290178 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.900083025 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.899311698 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.898437498 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.899496551 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.900258467 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.899613126 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.899762602 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.899007089 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.901757742 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.901014634 seconds)
  done (took 39.825617295 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.901713454 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.901743915 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.900601789 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.899579814 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.899227098 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.900550268 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.901296197 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.901403622 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.901295109 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.900235554 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.902225807 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.904131044 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.902026322 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.900661368 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.901689939 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.904658817 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.903354091 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.902076192 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.902442464 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.902451344 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.901205757 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.901774345 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.903883366 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.902897993 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.901532743 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.901918024 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.902148866 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.903116361 seconds)
  done (took 55.084440684 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.903009187 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.900822096 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.905223954 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.903375608 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.902459684 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.900882158 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.902424176 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.902392295 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.901898326 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.901114085 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.902389968 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.902351264 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.901978627 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.901652107 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.902574512 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.902901845 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.902598184 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.902283076 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.902516055 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.903138861 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.903354035 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.902441738 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.901894902 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.901792059 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.902720218 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.903039592 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.900377944 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.903537331 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.901866814 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.902130873 seconds)
  done (took 58.905350463 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.923788462 seconds)
    (2/2) benchmarking "in"...
    done (took 1.923199871 seconds)
  done (took 5.681534382 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.903610774 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.902910357 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.905285128 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.905448239 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.902707842 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.901218794 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.904122318 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.903165298 seconds)
  done (took 17.065605097 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.904932919 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 1.907697744 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.902666353 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.903238594 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.905299353 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.910789994 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.907051866 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.904345693 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.906550409 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.905035041 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 1.908337122 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.907790278 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 1.912463755 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.909187139 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.905055647 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.904069961 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.90520464 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.908557632 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.906424976 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.903874837 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.908024106 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.9049487 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.906742634 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.904873455 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.905241195 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.907171896 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.917363914 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.906427902 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.906560087 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.904353715 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 1.914695424 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.906071403 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.906123123 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.907855169 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.90603418 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.90557789 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.911849085 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.905793143 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.908503447 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.906122978 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.908280346 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.909693208 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.90959452 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 1.911731844 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.907690964 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.906094585 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.905840058 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.906047489 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.908696507 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.913449028 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.916192978 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.908817053 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.90694496 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.907944968 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.91109904 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.907384638 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.907669229 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.910209705 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.916952581 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.91480939 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.91059501 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.927799025 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.918259933 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.906450229 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.908532708 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.918579491 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 1.933589354 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.909018799 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.909047516 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.90965709 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.916674245 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.906783436 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.909724483 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.908882238 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.918725456 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.91805932 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.908696587 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.909267731 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.90849196 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.909429435 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.910874317 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.911331639 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.909726733 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.909733086 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.91885062 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.938652431 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.909977143 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.911416678 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 1.911128511 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.910799624 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.913763334 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 1.912065784 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.910194156 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.906635166 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.912556746 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.911458653 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.909630684 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.910052231 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.909742194 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 1.9195756 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.910446483 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.910780294 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.913930059 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 1.918476479 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.910525341 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.912265669 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.912817907 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.91119512 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.919518698 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.911215723 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.913485733 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.912191832 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.91087045 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 1.916713201 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.911761355 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.916720158 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 1.922947124 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.919179512 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.912503973 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 1.914414712 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.915939906 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 1.91553055 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.922335773 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 1.937980784 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.909423488 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 1.915310554 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.917273964 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 1.927195201 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.915877723 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.913731803 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.915571916 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.912846101 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.912654849 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 1.91418838 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.913594505 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.911960772 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.912100329 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.91205744 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.912688003 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.912367816 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.91565141 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.915755994 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.914844059 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.911962456 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.916994547 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.912499928 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.916435662 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.921692986 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.915447215 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.912896687 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.913529804 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.917384016 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.915750473 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.915970621 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.913835877 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.914867396 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.913150842 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.913353302 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.916537493 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.914489618 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.913662309 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.914479893 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 1.917947884 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.91587277 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.915367576 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.914595721 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.913936158 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.914356106 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.915790343 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.916299856 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 1.917339249 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.915574781 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.917854028 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.915974961 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.913887317 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.913678375 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.914588632 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.913812736 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.9183727 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 1.927976141 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.917250782 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.924331211 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.914061086 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.923662328 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.914870921 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.917360667 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.915517944 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.915800675 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.916268505 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.915441825 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.916777031 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.920150824 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.935404495 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 1.92962403 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.917765798 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.916832681 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.921808742 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.919503011 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.921434329 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.916986196 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.91743339 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 1.919372877 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.91722892 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.914189287 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.915984876 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.919790386 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.917655672 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.915446967 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 1.920929289 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.917108423 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.915857041 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.917525685 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.917499021 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 1.918368239 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.915656292 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.916458217 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.918067161 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.919054493 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.926742867 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.920965793 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.91713833 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.918503225 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.919689256 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.918267896 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.918679808 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.920395111 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 1.925289263 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.916990875 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.920080412 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.926722655 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.91910586 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.918930913 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.92029343 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.917036017 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 1.921459737 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.918432331 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.921545019 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 1.927606279 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 1.923408286 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.917533424 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 1.925889305 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.916865427 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 1.922174768 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.917341673 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.920538724 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.919118927 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 1.920474117 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.918393525 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.917602398 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.927202859 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.919756752 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.919517102 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.917949129 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.920872822 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.919686245 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 1.921407815 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.9196767 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.922990452 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.928077054 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.924815412 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.920190934 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.920804991 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 1.923391378 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.920963016 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.925119996 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.921643095 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.931490519 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.932766489 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.920250121 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.92099729 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.920160755 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.92211333 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.919470409 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.921599829 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.92763734 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.920194771 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.920355854 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 1.926279191 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.919958292 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.920743425 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.927326144 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.921793717 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 1.924401588 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.921288836 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.921729048 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.920899795 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.920128871 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.923941302 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.922107234 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.922885947 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.925552531 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.921287897 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.921898517 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.921506913 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 1.929344775 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.920917371 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.921187615 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.92917874 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.921622732 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.921281692 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.923169756 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.921835251 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.922902702 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.922587711 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.922518208 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.922080255 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.922211166 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.926655459 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.934609901 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.925983758 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.931273793 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.92684195 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.932732674 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.922369736 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.924060991 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.923780873 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.928690705 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.930866604 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.923112638 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.923824097 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.934853605 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.924272646 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.9241104 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.928315398 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.92248904 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.921659762 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.923521932 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.92509523 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.92971975 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 1.928407548 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.922963092 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.923671651 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.921169417 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.923330471 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 1.927062992 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.927143317 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.925176107 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.923970932 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.924127012 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.924413728 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.923553708 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.923793126 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.925303795 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.923512727 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.923359935 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.930082316 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.924759222 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.925446703 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.930669563 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.924954662 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.934069967 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.92541397 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.925415851 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.923364023 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.924117483 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.927130244 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.924326418 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.925758038 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.926807941 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.925772795 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.925291032 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 1.938449624 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 1.934633634 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.928413848 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.926961759 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.926881399 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.928191908 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.935713903 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 1.952085575 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.926136697 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.929652156 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.930697611 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 1.934372669 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.928820051 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.931542449 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.9306573 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.936034005 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.928128823 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.926356075 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.930726991 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.940154447 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.925407114 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.927104439 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.927153049 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.932512837 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.926017429 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.927421439 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.926712691 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.927740513 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.92755299 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.940461636 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.926803425 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.928677711 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.927853779 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.924602878 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.926512599 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.927100877 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.928178772 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.930707895 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.927468907 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.925368223 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.9284878 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.934095935 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.925953976 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.930797105 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.940081153 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.929440496 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.928600498 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.927654276 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.928727131 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.92900777 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.928713802 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.927375884 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.930123206 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.928294337 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.928404852 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.932533853 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.938691219 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.930152926 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.929289957 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.927688801 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 1.931873402 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.926682692 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.926605451 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.929977531 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.936484421 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.934660407 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.941220004 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.93911324 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.933109554 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.929726527 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.938048657 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 1.93799834 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.928161867 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.928555569 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.930785203 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.931601798 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.930563266 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.930142102 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.930576204 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.930529274 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.934781669 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.928481298 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.930569698 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.930429426 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.93043884 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.932855815 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.932011811 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.936558067 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.929336509 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.929600145 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.929546797 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.931499853 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.931467293 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.93052869 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.931344309 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.929103061 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 1.931139331 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.93195426 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 1.935124206 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.931128265 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.931112899 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.931925117 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.930995677 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.929012572 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.931119725 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.931528099 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.930485376 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.933743789 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.939843041 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.930602474 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.934289504 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.931505131 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 1.935263589 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.931807717 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.932585438 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.932659964 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.930890385 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.940098112 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.931261495 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.93140395 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.93176555 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.931780206 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 1.936098298 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.931687808 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.93702298 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.933262607 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.931931826 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.932009112 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.936530138 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.942483683 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 1.943171942 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.934829205 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.941134098 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.937786339 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 1.934671243 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 1.931569206 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.931009428 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.931203108 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.933479849 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.937744719 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.93458115 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.935766483 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 1.93309173 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.933099775 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 1.932243792 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 1.935165995 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.935917839 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.932562791 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.934735281 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.943697559 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 1.942249405 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.934110029 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 1.935354314 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 1.933011147 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.936912781 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.946262995 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.933791669 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.933956626 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.935000498 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.935229753 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.933998661 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.943240319 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.945855683 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.937378342 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 1.935327296 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.941370875 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.954226473 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 1.938231132 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.944204804 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.96759087 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.936725126 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.934317748 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.935111498 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.936296339 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.934351199 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.935975649 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 1.935497289 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 1.944888181 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.936406101 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.934268767 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.943384141 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 1.935665387 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.933909331 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.935889059 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.93601206 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 1.941173843 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 1.935886142 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 1.943102523 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 1.934865721 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.936182642 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.936945458 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.936087337 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.936501401 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.934837293 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.934398456 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.936980449 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.936502883 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.936591602 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 1.946218012 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 1.936458064 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.937966017 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.948330372 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.948347563 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 1.935569005 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.934970834 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.938721485 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.94216467 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 1.940279071 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.9366824 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.942444343 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.940360084 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.935499529 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.942135658 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.934117874 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.933568792 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.933202735 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.931596154 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.930956007 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.94471135 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 1.946933734 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.933824195 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.933395897 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.940721422 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.935613786 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 1.941386017 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.941365341 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.932699634 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 1.93257065 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.931504736 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.932569054 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.932628093 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.931475077 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.935889843 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.938488234 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 1.932947684 seconds)
  done (took 1148.550683725 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.932167514 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.93169125 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.933250535 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.931352965 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.933982483 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.928511529 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.931037546 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.929570341 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.931100686 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.929460537 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.932301321 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.930757689 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.927987187 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.929213171 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.931157953 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.931432805 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.92808491 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.930001192 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.931881215 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.928294795 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.933888438 seconds)
  done (took 42.408907405 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.924748562 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.925782359 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.923628184 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.925972689 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.920049779 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.922231278 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.922053819 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.922652363 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.925264159 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.922760023 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.921452642 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.923129141 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.923496916 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.922066855 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.92354675 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.921974834 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.921743924 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.921092824 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.921949261 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.922773615 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.920402099 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.919342866 seconds)
  done (took 44.153249971 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.920881866 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.921606558 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.921132063 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.919996344 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 1.92118866 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.922413599 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.922460409 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 1.922094528 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 1.920053585 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 1.921802176 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.929225091 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 1.931205987 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 1.9199508 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 1.923956848 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 1.92001277 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 1.922388255 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.068057543 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.923268623 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.9208672 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 1.919634633 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 1.921311047 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.927233705 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.921508583 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.919825775 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.919777651 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.918903591 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 1.919676751 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 1.920958604 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 1.917889898 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.917936248 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.922268448 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.918415952 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.922831204 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.920513997 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.918498909 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.917294476 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 1.923530644 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.919718641 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.91706639 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.917977695 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.928310625 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 1.946454159 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 1.918022448 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.916985036 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.925688451 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 1.918949825 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.919110667 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.922628644 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.927915246 seconds)
  done (took 96.170330129 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.918875554 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.918686977 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.918350586 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.920592453 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.917669903 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.917942673 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.917645871 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.918988258 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.91709642 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.917579538 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.918162333 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.918369481 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.917966456 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.919040474 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.918519039 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.918976676 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.920165472 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.918644003 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.920505554 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.921582602 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.917670761 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.916933002 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.918271167 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.917887434 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.922524537 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.918459788 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.918324131 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.918966468 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.91867431 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.920905539 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.919189673 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.918105252 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.917019398 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.920298113 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.920118129 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.91875625 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.918592344 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.918613302 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.920590206 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.918840142 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.920629211 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.919932711 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.91876541 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.919231484 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.920471146 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.920701888 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.919805377 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.917731756 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.919873446 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.921133202 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.922429721 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.918404021 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.919085474 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.918425781 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.919698162 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.922059166 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.919625566 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.920506905 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.918114915 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.918349867 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.920386478 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.912206551 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.912456889 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.911513133 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.913379545 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.911517818 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.912321877 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.911151734 seconds)
  done (took 132.303329363 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.912523018 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.911707146 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.912096777 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.910916226 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.909242863 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.909527461 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.9113696 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.91078791 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.90778431 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.909036351 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.908564576 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.910667213 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.911917854 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.907879081 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.908664973 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.907518593 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.906480291 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.910942028 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.907419821 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.906608117 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.906843391 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.906451696 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.90684299 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.908096128 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.907161002 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.906657742 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.905174927 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.904210584 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.908275146 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.904011404 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.90317644 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.904156369 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.905642693 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.906176671 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.903822884 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.904796035 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.903480613 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.904801356 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.903792958 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.904949717 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.903118253 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.903152087 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.904531747 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.904561025 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.905863604 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.904046152 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.904482493 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.906596714 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.904991191 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.905721323 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.903353594 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.903718835 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.903891033 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.903912545 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.90446154 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.900640407 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.901850505 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.901925541 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.904728216 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.902479631 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.903322543 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.902999403 seconds)
  done (took 120.027364997 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.904079919 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.900479473 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.901666643 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.901758759 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.903249982 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.900234158 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.900210631 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.900831638 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.900563217 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.899740589 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.899273836 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.901999373 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.904557053 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.900053098 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.899664925 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.903209616 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.899429425 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.900041809 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.903493919 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.901399105 seconds)
  done (took 39.858976797 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.901463681 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.90120048 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.906056266 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.899978442 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.899303889 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.900897961 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.904490385 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.904053047 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.899690184 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.901719958 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.900578043 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.902214963 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.901266742 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.899532455 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.898546423 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.900775092 seconds)
  done (took 32.253622984 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.899758202 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.901359222 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.899530038 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.898119569 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.897704223 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.902166591 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.901156804 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.899112731 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.900952358 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.89743625 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.900237972 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.901457152 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.898655964 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.900811563 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.898857141 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.898687832 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.8974759 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.8996163 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.899088453 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.89720689 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.89874231 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.899263621 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.900137948 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.898525191 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.899301589 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.899889632 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.899380488 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.899672585 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.898486092 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.89824772 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.897640351 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.900036166 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.89978531 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.898789657 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.898819458 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.898151368 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.898083195 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.897907363 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.897978738 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.89685683 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.898482217 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.896444119 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.899703152 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.899831374 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.897780597 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.898725142 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.897735087 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.898867444 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.900631791 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.89756355 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.897658203 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.897987753 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.898905078 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.902538117 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.896724097 seconds)
  done (took 106.278317163 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.89764094 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.898289445 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.899006666 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.901054021 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.897263356 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.89738295 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.89724556 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.895435875 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.895985954 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.896020864 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.897058137 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.897293157 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.898363873 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.897620522 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.8982942 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.897550849 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.898407706 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.898665484 seconds)
  done (took 35.988429045 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.898817186 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.898278838 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.896619596 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.897659566 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.897922826 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.897993548 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.897263159 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.897950124 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.897994463 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.899366339 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.898030294 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.897375448 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.8980157 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.898085964 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.897634417 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.898052291 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.897552243 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.89631665 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.897543265 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.898703792 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.900767718 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.900308032 seconds)
  done (took 43.588990959 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.899232452 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.899706703 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.913120827 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.919996422 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.916455645 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.930014189 seconds)
  done (took 13.307310121 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.897515956 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.900313435 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.898511379 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.899029823 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.896404267 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.89638305 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.896911995 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.895885743 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.895295501 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.894978594 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.895670775 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.897372017 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.896082334 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.896761609 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.896029257 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.896158579 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.895623976 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.895430249 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.896249893 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.896285097 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.895277393 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.896901242 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.898098385 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.897253296 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.895134248 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.897195562 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.897407243 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.900076177 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.898326817 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.898077591 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.896655506 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.896878058 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.896238314 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.896720975 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.898308356 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.897242493 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.898683826 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.897997974 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.898162476 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.896604065 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.898058917 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.898896168 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.899466248 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.898365015 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.897164539 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.898034537 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.897624155 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.898259097 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.897608947 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.899857502 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.897692592 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.89636601 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.896782444 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.897668246 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.899271703 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.89645393 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.89848305 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.897599716 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.899545369 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.899847176 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.895739833 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.898927816 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.897698034 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.898859485 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.899080836 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.89784862 seconds)
  done (took 127.062160574 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.896385595 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.898162783 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.898381857 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.898634832 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.897111715 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.89888214 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.898488096 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.899769221 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.898142476 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.897244195 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.899393691 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.898359752 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.900119398 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.899138822 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.897531337 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.898600278 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.897361863 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.899091708 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.898020283 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.89973218 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.899082861 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.897881407 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.898269802 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.900954129 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.900261578 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.89706387 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.899370857 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.897013633 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.898685868 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.900470022 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.896567607 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.899107342 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.900806316 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.899336149 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.89936235 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.898537966 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.900998888 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.898133834 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.899766792 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.899161694 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.899323645 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.899578138 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.899790814 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.900293666 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.898590313 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.901566454 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.899818631 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.900328514 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.900881621 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.899256833 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.901367768 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.903426799 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.899365404 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.901216989 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.900841914 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.903535819 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.900848446 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.900437318 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.899678021 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.900047499 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.901899776 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.901966475 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.89891485 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.89961184 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.901888277 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.900557634 seconds)
  done (took 127.196483057 seconds)
done (took 2654.594011954 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.909047144 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 7.015471723 seconds)
  done (took 15.756021486 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.065893262 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.019403392 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.905785226 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.9582419 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.903201665 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.930444825 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.9244327 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.9034578 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.905626219 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.905108702 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.904864421 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.089579639 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.903303344 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.902279273 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.906385453 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.99760784 seconds)
  done (took 52.96281266 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.909799521 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.906489839 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.918571755 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.908114704 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.911235463 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.921114097 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.936103608 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.913251627 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.943397712 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.919238781 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.976826313 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.917765414 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.909645698 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.961710127 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.922318285 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.923172019 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 2.003320289 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.983298254 seconds)
  done (took 36.619179407 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.986677938 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.915143478 seconds)
  done (took 10.743477572 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.926554257 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.912695606 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.906560649 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.929805454 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.908705916 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.900011683 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.91420028 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.901969935 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.911462914 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.936154534 seconds)
  done (took 70.983985387 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.912398164 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.909672955 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.909757976 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.90384519 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.903247149 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.906122202 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.907218981 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.907932333 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.587938237 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.942813276 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.916219926 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.916619784 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.908669514 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.908357076 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.904809167 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.932757172 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 2.01635717 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.906683443 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.904315367 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.912491447 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.90772113 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.958829238 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.920432335 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.908978307 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.940102594 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.582700154 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.917863264 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.913980129 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 2.020575143 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.903937511 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.908712708 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.116295818 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.914521438 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.375457053 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.194054313 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.910361287 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.915872604 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.913899958 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.905115562 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.026215362 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.907719851 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.914973884 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.890409545 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.165976841 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 2.002356555 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.95201604 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.257451779 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.912157843 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.909010185 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.942516402 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.908730496 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.908109842 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.928963961 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.427948931 seconds)
  done (took 135.037533761 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.906248641 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.251295391 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.073261759 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.908344545 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.188191044 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.108058983 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.906929656 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.950010829 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.905397357 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.130542639 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.156263602 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.012962928 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.904751067 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.905175138 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.901144362 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.90342435 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.06065601 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.976534642 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.906845742 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.903572724 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.93248742 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.145995612 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.02602284 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.90833983 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.934254295 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.113310998 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.024620067 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.010499594 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.705767587 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.905781044 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.968089392 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.905984362 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.908981663 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.903159609 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.06237059 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.01309818 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.985344983 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.908920283 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.904948193 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.905514695 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.562566646 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.106414849 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.998135883 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.036691633 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.158028404 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.112099049 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.687910114 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.907681272 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.650074792 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.067875393 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.134915762 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.135409219 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.029314558 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.910478888 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.430808245 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.908431872 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.905731016 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.155526465 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.124871256 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.00608213 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.90634283 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.907235231 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.910926586 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.147127087 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.909559141 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.000800243 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.909600654 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.907463899 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.003771743 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.006883761 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.138637886 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.11631819 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.941806233 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.248396311 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.405519807 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.154356175 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.96971232 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.157938476 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.910115885 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.906671417 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.989330975 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.741978879 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.162424166 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.149326267 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.1560614 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.941265939 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.623639207 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.908161836 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.134875733 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.127778292 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.168516517 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.157972565 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.141426535 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.233596019 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.91042721 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.909259311 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.132484829 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.031541336 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.914352652 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.259168893 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.142143226 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.477558053 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.937586512 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.212301953 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.045523521 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.912050897 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.536550207 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.912055488 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.137693733 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.948341555 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.910847245 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.913673213 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.125620333 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.897070395 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.91147028 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.778038092 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.968912547 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.914949652 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.141354495 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.913444797 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.179432415 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.915375124 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.140657601 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.442901157 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.940515215 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.143153772 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.157499187 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.911997569 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.155875063 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.154423897 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.025685369 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.18104159 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.787361817 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.913449553 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.198872517 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.912197472 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.912092614 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.07955772 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.911938408 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.053512655 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.915382209 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.202802878 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.931814948 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.140883095 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.915295395 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.163592175 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.942385599 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.958589384 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.916396187 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.03152033 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.911512617 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.757815436 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.071893714 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.914877069 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.91277531 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.810470568 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.913735373 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.065570329 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.13660607 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.932587599 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.984030209 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.568610329 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.914121294 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.002041025 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.934795967 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.300103305 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.915688677 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.164501038 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.917346906 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.912785104 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.91533465 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.149716015 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.148977727 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.915911916 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.91467119 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.820953572 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.918784759 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.915511653 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.094097831 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.27137146 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.913680216 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.116912703 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.91789486 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.04123462 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.918556745 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.985180179 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.253198481 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.914023806 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.916197603 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.916393281 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.917941113 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.918709112 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.180157159 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.947803271 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.44622725 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.052025008 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.188869177 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.221453515 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.156005971 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.955124469 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.917772953 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.165681111 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.918011609 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.977846865 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.917866847 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.93416281 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.145419158 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.917602236 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.202398366 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.186634372 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.953316129 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.964657491 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.91699126 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.918384192 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.917011053 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.062505043 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.000791684 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.918707769 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.91506229 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.028940654 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.034076061 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.125980162 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.917388117 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.97711289 seconds)
  done (took 914.256116496 seconds)
done (took 1238.193524749 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.914459866 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.91651866 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.917306629 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.916025564 seconds)
  done (took 29.515952911 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.920017811 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.918135736 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.920662287 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.920394725 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.921948723 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.9194934 seconds)
  done (took 13.370664212 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.026677786 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.920007148 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.918123105 seconds)
  done (took 21.714450408 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.994950549 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.32189779 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.059403563 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.35275383 seconds)
  done (took 10.578775539 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.918093688 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.919778903 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.919873547 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.921961488 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.921379902 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.921905151 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.921698068 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.92572042 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.921856415 seconds)
  done (took 19.144338064 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.694308334 seconds)
done (took 100.868867141 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.321512771 seconds)
    (2/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 7.006057865 seconds)
    (3/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.285292631 seconds)
    (4/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.983926705 seconds)
    (5/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 2.618265728 seconds)
    (6/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 3.841032959 seconds)
    (7/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.980738709 seconds)
    (8/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.940244194 seconds)
    (9/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.52682389 seconds)
    (10/309) benchmarking ("perf_sum", Bool, true)...
    done (took 2.059110478 seconds)
    (11/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.136305844 seconds)
    (12/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.022679864 seconds)
    (13/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 2.005185445 seconds)
    (14/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.072350391 seconds)
    (15/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.934803589 seconds)
    (16/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.859147773 seconds)
    (17/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.240210342 seconds)
    (18/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.646378393 seconds)
    (19/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.098156833 seconds)
    (20/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.923086152 seconds)
    (21/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.932393532 seconds)
    (22/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.312291898 seconds)
    (23/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.569504735 seconds)
    (24/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 7.009663751 seconds)
    (25/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.922628841 seconds)
    (26/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.117729282 seconds)
    (27/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 2.093162047 seconds)
    (28/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.922850888 seconds)
    (29/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.965504631 seconds)
    (30/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.921544094 seconds)
    (31/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.929576381 seconds)
    (32/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.054691584 seconds)
    (33/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.922098175 seconds)
    (34/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.144376447 seconds)
    (35/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.941375157 seconds)
    (36/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.04555628 seconds)
    (37/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 2.005685835 seconds)
    (38/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.171290801 seconds)
    (39/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 2.347135098 seconds)
    (40/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 2.00070592 seconds)
    (41/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.02239652 seconds)
    (42/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.052714006 seconds)
    (43/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.071257561 seconds)
    (44/309) benchmarking ("sort", Float32, false)...
    done (took 5.639241483 seconds)
    (45/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.922588607 seconds)
    (46/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 7.743044737 seconds)
    (47/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 2.063141458 seconds)
    (48/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.031962933 seconds)
    (49/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.021138807 seconds)
    (50/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.945036828 seconds)
    (51/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.094567198 seconds)
    (52/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.160933317 seconds)
    (53/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.945067537 seconds)
    (54/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 2.02612823 seconds)
    (55/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.062110142 seconds)
    (56/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.301689075 seconds)
    (57/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.17058459 seconds)
    (58/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.922193007 seconds)
    (59/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.291683939 seconds)
    (60/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 2.341443769 seconds)
    (61/309) benchmarking ("sort", Bool, false)...
    done (took 2.139223361 seconds)
    (62/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 2.055613589 seconds)
    (63/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.192519495 seconds)
    (64/309) benchmarking ("sort", Float64, false)...
    done (took 5.647810268 seconds)
    (65/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.99949543 seconds)
    (66/309) benchmarking ("sort", Int64, false)...
    done (took 5.645495374 seconds)
    (67/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.922473544 seconds)
    (68/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.00965833 seconds)
    (69/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 2.373884452 seconds)
    (70/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.173659571 seconds)
    (71/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.924088532 seconds)
    (72/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 2.545612878 seconds)
    (73/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.305945078 seconds)
    (74/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.077161885 seconds)
    (75/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.94059615 seconds)
    (76/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.946968681 seconds)
    (77/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.920980898 seconds)
    (78/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.720082252 seconds)
    (79/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 2.093341968 seconds)
    (80/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.309918164 seconds)
    (81/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.016080421 seconds)
    (82/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.999637723 seconds)
    (83/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.251979324 seconds)
    (84/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.950047805 seconds)
    (85/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.923634734 seconds)
    (86/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.947999787 seconds)
    (87/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.939417443 seconds)
    (88/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.936983023 seconds)
    (89/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.717759425 seconds)
    (90/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.208178388 seconds)
    (91/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.035287198 seconds)
    (92/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.432727815 seconds)
    (93/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.566936251 seconds)
    (94/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.112462712 seconds)
    (95/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.537299318 seconds)
    (96/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 1.952545123 seconds)
    (97/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.273958247 seconds)
    (98/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 2.720570566 seconds)
    (99/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.127375408 seconds)
    (100/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.028242419 seconds)
    (101/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.810565508 seconds)
    (102/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.078144353 seconds)
    (103/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.197395878 seconds)
    (104/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.681719235 seconds)
    (105/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.928997485 seconds)
    (106/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 3.77518904 seconds)
    (107/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.030638138 seconds)
    (108/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.925727822 seconds)
    (109/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 2.00560108 seconds)
    (110/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 2.052912962 seconds)
    (111/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 2.01214596 seconds)
    (112/309) benchmarking ("perf_sum", Float32, false)...
    done (took 2.004042986 seconds)
    (113/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.510695193 seconds)
    (114/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 7.022656388 seconds)
    (115/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.120699868 seconds)
    (116/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 2.059563455 seconds)
    (117/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.137086073 seconds)
    (118/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.928267055 seconds)
    (119/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.266006935 seconds)
    (120/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 2.315770047 seconds)
    (121/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 2.609981809 seconds)
    (122/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.198141677 seconds)
    (123/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.22047149 seconds)
    (124/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.242974069 seconds)
    (125/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.225702545 seconds)
    (126/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.225451461 seconds)
    (127/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.178634503 seconds)
    (128/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.947483115 seconds)
    (129/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.450659427 seconds)
    (130/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 2.110139048 seconds)
    (131/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.107971286 seconds)
    (132/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.933475745 seconds)
    (133/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 1.968524033 seconds)
    (134/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.231969629 seconds)
    (135/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.325358134 seconds)
    (136/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.24686839 seconds)
    (137/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.925613293 seconds)
    (138/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.435814274 seconds)
    (139/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 2.357919089 seconds)
    (140/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.955884693 seconds)
    (141/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.113526604 seconds)
    (142/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 2.038816395 seconds)
    (143/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.191082249 seconds)
    (144/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.927489498 seconds)
    (145/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.989437733 seconds)
    (146/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.926060034 seconds)
    (147/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.008184316 seconds)
    (148/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.399111423 seconds)
    (149/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.310654949 seconds)
    (150/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.177890577 seconds)
    (151/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.059968357 seconds)
    (152/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.036224317 seconds)
    (153/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 3.832017454 seconds)
    (154/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.39980298 seconds)
    (155/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.929316309 seconds)
    (156/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.978654349 seconds)
    (157/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.931569768 seconds)
    (158/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.109536794 seconds)
    (159/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.114350449 seconds)
    (160/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.195012153 seconds)
    (161/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.926962309 seconds)
    (162/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.415714228 seconds)
    (163/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.267952148 seconds)
    (164/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.074939182 seconds)
    (165/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.9504291 seconds)
    (166/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 2.006936857 seconds)
    (167/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.189716813 seconds)
    (168/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.989131696 seconds)
    (169/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.227097461 seconds)
    (170/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.731546421 seconds)
    (171/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.933315067 seconds)
    (172/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.941106878 seconds)
    (173/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.257307558 seconds)
    (174/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.931156566 seconds)
    (175/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 2.01671585 seconds)
    (176/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.080715628 seconds)
    (177/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.551772716 seconds)
    (178/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.325428236 seconds)
    (179/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.174990446 seconds)
    (180/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.932011472 seconds)
    (181/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 2.078735325 seconds)
    (182/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.1614372 seconds)
    (183/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.934048811 seconds)
    (184/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.485960316 seconds)
    (185/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.139077472 seconds)
    (186/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 2.681640313 seconds)
    (187/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 2.31795384 seconds)
    (188/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.0287459 seconds)
    (189/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.012091983 seconds)
    (190/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.188370331 seconds)
    (191/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.050854987 seconds)
    (192/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.426576562 seconds)
    (193/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.689661915 seconds)
    (194/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.343052205 seconds)
    (195/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 2.057936197 seconds)
    (196/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.092564117 seconds)
    (197/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.11720988 seconds)
    (198/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.933569234 seconds)
    (199/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.955331848 seconds)
    (200/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.24067588 seconds)
    (201/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.112320948 seconds)
    (202/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 3.91675567 seconds)
    (203/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.929570799 seconds)
    (204/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 8.436850479 seconds)
    (205/309) benchmarking ("map", abs, Bool, true)...
    done (took 3.614397315 seconds)
    (206/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.244675455 seconds)
    (207/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 2.45145608 seconds)
    (208/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.991144085 seconds)
    (209/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.931480384 seconds)
    (210/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 8.517471077 seconds)
    (211/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.909868475 seconds)
    (212/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 2.004225903 seconds)
    (213/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.26852581 seconds)
    (214/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.330558459 seconds)
    (215/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.431665338 seconds)
    (216/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.614481408 seconds)
    (217/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 2.136773267 seconds)
    (218/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.942162901 seconds)
    (219/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.035209333 seconds)
    (220/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.074300755 seconds)
    (221/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.159208267 seconds)
    (222/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.068453836 seconds)
    (223/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 2.822050551 seconds)
    (224/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.877632584 seconds)
    (225/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.600974209 seconds)
    (226/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.233798897 seconds)
    (227/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 2.06937084 seconds)
    (228/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.932534695 seconds)
    (229/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.944094855 seconds)
    (230/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.147166868 seconds)
    (231/309) benchmarking ("perf_sum", Float64, false)...
    done (took 2.011637415 seconds)
    (232/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.324976454 seconds)
    (233/309) benchmarking ("sort", BigInt, false)...
    done (took 6.934269727 seconds)
    (234/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 2.300380434 seconds)
    (235/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 2.681360178 seconds)
    (236/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.074885114 seconds)
    (237/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.955132065 seconds)
    (238/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.833323661 seconds)
    (239/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 2.986064883 seconds)
    (240/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.177018617 seconds)
    (241/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.201191486 seconds)
    (242/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.538694708 seconds)
    (243/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.421251874 seconds)
    (244/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.518631746 seconds)
    (245/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 2.097552802 seconds)
    (246/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.278033745 seconds)
    (247/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.971520878 seconds)
    (248/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.083915375 seconds)
    (249/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.949627353 seconds)
    (250/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.949177311 seconds)
    (251/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.743763345 seconds)
    (252/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 3.898715593 seconds)
    (253/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.283154109 seconds)
    (254/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.239344172 seconds)
    (255/309) benchmarking ("sort", Int8, false)...
    done (took 4.819140993 seconds)
    (256/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.137860977 seconds)
    (257/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.107742686 seconds)
    (258/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.363810645 seconds)
    (259/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.356688267 seconds)
    (260/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.162117298 seconds)
    (261/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.963247451 seconds)
    (262/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.046728069 seconds)
    (263/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.968961414 seconds)
    (264/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 1.970088373 seconds)
    (265/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.947269087 seconds)
    (266/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.187589175 seconds)
    (267/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.279345425 seconds)
    (268/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 2.043188679 seconds)
    (269/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 3.38424321 seconds)
    (270/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.949390925 seconds)
    (271/309) benchmarking ("map", abs, Bool, false)...
    done (took 4.078488992 seconds)
    (272/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.947787739 seconds)
    (273/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.868605104 seconds)
    (274/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.953846915 seconds)
    (275/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 3.800315733 seconds)
    (276/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.95156599 seconds)
    (277/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.101189546 seconds)
    (278/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.972426578 seconds)
    (279/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 2.779865452 seconds)
    (280/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.049584091 seconds)
    (281/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.190898398 seconds)
    (282/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.259023329 seconds)
    (283/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.611840316 seconds)
    (284/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.180548201 seconds)
    (285/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.952653997 seconds)
    (286/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 2.180017627 seconds)
    (287/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.949955167 seconds)
    (288/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 8.750230894 seconds)
    (289/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.239905304 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.794540406 seconds)
    (291/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.947629587 seconds)
    (292/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.270051658 seconds)
    (293/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.083874165 seconds)
    (294/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.261304359 seconds)
    (295/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.376648987 seconds)
    (296/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 2.036218639 seconds)
    (297/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.238744601 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.984749725 seconds)
    (299/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.064874431 seconds)
    (300/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.057687702 seconds)
    (301/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.082806614 seconds)
    (302/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.435033915 seconds)
    (303/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.086115673 seconds)
    (304/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.544910054 seconds)
    (305/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 7.100782632 seconds)
    (306/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.968887986 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.16134904 seconds)
    (308/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.274924047 seconds)
    (309/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.966807622 seconds)
  done (took 1031.037631944 seconds)
done (took 1032.96884515 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.977582045 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.971224917 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.953733665 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.975766702 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.068312063 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.999613581 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.968275338 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.958566268 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 2.004574964 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 2.003875752 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.953139619 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.997299312 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.956664516 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.957653028 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.954205516 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.970492457 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.270586148 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.989359072 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.975186637 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.967237483 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.975020984 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.953016959 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 2.005997338 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.997680868 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.960787409 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.959501362 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.95925827 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.974692996 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.069121381 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.960064378 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.961088751 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.968884788 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.267850981 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.986423963 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.953176078 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.976308323 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.970095132 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.970186158 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.96186264 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.989027835 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.42369784 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.96233538 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.958399202 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.958224157 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.956972498 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.962804228 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.957941701 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.96558294 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.972059614 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.971226572 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.413373029 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.978452624 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.960925719 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.958384595 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.969876924 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.959242769 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.962554511 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.974313164 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.97841558 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.972783573 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.255868972 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.996104328 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.962703982 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.979614916 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.967831415 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.446768392 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.961514493 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.965051207 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.416724002 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.970636189 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.444022381 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.973583526 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.95991163 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.973098119 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.992672489 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.26721185 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.990175413 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.959492667 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.969650864 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.959511278 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.971066686 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.975268214 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.964603405 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.95984528 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.978103542 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 2.004159001 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.972485957 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.961221256 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.971754885 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.979192908 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.968839624 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.971960092 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.964812085 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.957947202 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.971986324 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.964694622 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.963866365 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.962857555 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.964972535 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.973201111 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.418061891 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.98179137 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.957371893 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.957726936 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.958995212 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.974755902 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.416264905 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.965118038 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.983931533 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 2.010946163 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.963546473 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.257702654 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.997542815 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.976749797 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.972008107 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.965229136 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.959018879 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.258630583 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.441711057 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.981553663 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.962398397 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.961593305 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.978482668 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.963593111 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.959648264 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.272083185 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.995521689 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.979275409 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.084123871 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.975878545 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.997117104 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.960689819 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.966343816 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 2.009755088 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.978182907 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.995332884 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.964556867 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.979308867 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.979331168 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.96142561 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.975854966 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.977052912 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.962788849 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.968507708 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.959381851 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 2.008492443 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.978436962 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.977118866 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.982778191 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.085896243 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.960242561 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.259267498 seconds)
done (took 308.031430498 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 2.040548266 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.958610649 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.077414476 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.960510546 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 2.047045075 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 2.032372546 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.959171579 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.959849441 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.960407888 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.457352986 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.959463122 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.965234069 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.960617598 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.961954969 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 2.028379298 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.962650697 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.961504012 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.404612948 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.962132962 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 2.039863673 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.959637779 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.962320201 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.961890641 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.479993102 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.958990711 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.959531432 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 2.040508468 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.961764939 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.411080531 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.962382067 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.961464147 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.424886211 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 2.040817006 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.989131022 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.968632281 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.969131619 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 2.04863225 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.972984418 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 2.027967151 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 2.027920741 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.080842672 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.994448286 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.962780269 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.961186785 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.965836167 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.963276572 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.962481916 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.993531862 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.96295482 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.97046048 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.405307684 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.969332623 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.968977369 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.963602614 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.964112747 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.991751869 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.963909571 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.964053853 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 2.042835028 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.963971507 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 2.031188811 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.465432973 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.461217762 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.964290062 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.964470054 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.965454023 seconds)
  done (took 191.507389038 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 2.03096585 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 2.039338038 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 2.029969692 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.970592339 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 2.013724835 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 2.03204806 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.970784343 seconds)
  done (took 15.975421512 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.969964192 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.965326317 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 2.020487678 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 2.013292702 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.963580759 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.14141466 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.975645135 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.970250017 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.992706041 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.96584543 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 2.600398527 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 2.013018986 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.973294091 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.961361271 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.978062055 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 2.022558677 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.966605011 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.964763811 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.080621228 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.11317044 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.969601401 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.97240028 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.991793533 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.977772076 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 1.965000519 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.966238978 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 1.964516757 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.973031492 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.965245117 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.967423026 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.965068366 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 2.017176665 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.965720992 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.964874465 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.967361968 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 1.96604975 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.965055802 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.966871562 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.965023558 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.963466787 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.966834742 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.965853002 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.966670911 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.965592154 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.966040037 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.989240189 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.966745524 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.967582846 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.967445059 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.966645421 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.992164201 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.96741612 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.967396418 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.9710444 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 2.013018103 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.975715095 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.968195496 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.967412976 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.96634097 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 1.969475928 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.967338498 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.11765114 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 2.018919486 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.968272911 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 2.018810243 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 2.120642964 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.967600065 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.970528493 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.966842783 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 2.057286897 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.967652051 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 2.018786552 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 1.966305107 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 2.082869334 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.967165558 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.14804317 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.9900168 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.972889381 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.971274682 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.969252514 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.975643444 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.970036137 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.972484262 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.977429997 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.972564685 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.967234015 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.968912027 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.970158958 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.977451925 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.970182604 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 2.01909663 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.969021775 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 1.970532864 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 2.111054608 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.968617005 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.085610848 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.996367742 seconds)
  done (took 215.483071386 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.97638089 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.976142401 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.971989256 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.985965554 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.971464848 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.97201717 seconds)
  done (took 13.751164132 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.97293971 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.975573843 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.969920666 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.972223274 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.969519574 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.970838955 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.971166206 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.97424081 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.974994928 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.970459914 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.970752158 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.971899827 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.972923358 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.970263876 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.972245514 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.970769686 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.973038971 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.972460934 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.971761431 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.970879763 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.178358714 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.972210162 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.97185065 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.97506619 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.976927023 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.971038922 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.983463161 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.971856038 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.97015754 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.981353073 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.977410354 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.972499912 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.976912596 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.979467494 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.978840038 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.97653575 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.979913291 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.974533343 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.972720937 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.972676809 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.972421504 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.972330499 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.971104431 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.973916883 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.975800408 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.983676444 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.979403595 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.986844591 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.972738243 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.974315071 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.974910982 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.972196403 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.973782105 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.975307845 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.980345345 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.982175018 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.978822266 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.973686216 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.973378913 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.978187732 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.977538639 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.974064384 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.976179861 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.979130206 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.981924348 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.975793114 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.978007687 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.9785907 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.974222055 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.973391542 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.977177526 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.975007473 seconds)
  done (took 145.297467153 seconds)
done (took 583.920949068 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.091878393 seconds)
  done (took 8.992850473 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.974648328 seconds)
  done (took 8.961523265 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.856878424 seconds)
  done (took 10.760044711 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.997992579 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 7.060427611 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.978115827 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.974670644 seconds)
  done (took 29.927593686 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.280116412 seconds)
  done (took 9.18214169 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.989585963 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.986321542 seconds)
  done (took 15.945798022 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.033574937 seconds)
  done (took 8.935583118 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.368426771 seconds)
  done (took 9.28578331 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.998154959 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.995003151 seconds)
  done (took 15.916099391 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.978824029 seconds)
  done (took 8.882073765 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 8.187452138 seconds)
  done (took 10.172170575 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.994952245 seconds)
  done (took 8.939797207 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.974286138 seconds)
  done (took 8.876204085 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.061933628 seconds)
  done (took 8.964978529 seconds)
done (took 165.64136665 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.983224897 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.972367331 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.975306858 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.975882812 seconds)
  done (took 29.808414062 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 2.008872191 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 2.011723814 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 2.020237474 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 2.009531107 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 2.002290959 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 2.002121724 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 2.011175511 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 2.010629741 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 2.014706514 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 2.010595783 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 2.011919355 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 2.00608885 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 2.010831937 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 2.01956321 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 2.018906719 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 2.008661713 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 2.010684533 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 2.012403644 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 2.001701699 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 2.018639315 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 2.008374047 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 2.010279067 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 1.977202452 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.981192683 seconds)
  done (took 50.102010284 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.166900384 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 2.046308047 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.129485619 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 2.028811517 seconds)
  done (took 10.274884534 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 1.976749928 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 2.041653241 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 2.029096459 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 2.024758794 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 2.028235355 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 2.079776698 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 2.031880366 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 2.114661836 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 2.105143487 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 2.105672415 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 1.985333322 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 1.999190203 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 2.004087403 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 2.026010817 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 2.083427148 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.981575782 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.978975575 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 2.095518451 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 2.041003159 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 2.159623248 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.978014722 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 2.030823368 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 2.027276462 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 2.031340933 seconds)
  done (took 50.864500558 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.977474654 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.986636831 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.984761705 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.98066516 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.97903388 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.979389747 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.985672021 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.980855653 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.999685584 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.982734389 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.978144888 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.979843704 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.986267549 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.979370339 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.979491216 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.992493502 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.993014949 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.979857915 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.982575508 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.986741644 seconds)
  done (took 41.578784914 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.977170765 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.823012364 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.321887403 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.230271234 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.978328744 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.977351826 seconds)
  done (took 32.213470476 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.993152716 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.98538138 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.980278845 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.039299834 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.119281409 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.987263494 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.980461709 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.991316215 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.025576563 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.046139788 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 2.00086663 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 2.007994888 seconds)
  done (took 26.065000136 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.984626097 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.978448742 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.977814423 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.989600477 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.990295686 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.987964141 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.985744883 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.978614786 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.991551774 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.999402737 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.988921509 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.991375472 seconds)
  done (took 45.754817627 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.686894951 seconds)
    (2/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.052793975 seconds)
    (3/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.977451551 seconds)
    (4/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.855331936 seconds)
    (5/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.445562341 seconds)
    (6/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.525809985 seconds)
    (7/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 4.884534739 seconds)
    (8/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 3.715099311 seconds)
    (9/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.444838886 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 3.906454814 seconds)
    (11/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.18272557 seconds)
    (12/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.979959806 seconds)
    (13/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.062489582 seconds)
    (14/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.981624685 seconds)
    (15/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.250331736 seconds)
    (16/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.290934218 seconds)
    (17/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.169532612 seconds)
    (18/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.222323276 seconds)
    (19/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.938264669 seconds)
    (20/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.020601951 seconds)
    (21/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 2.182526524 seconds)
    (22/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.191138128 seconds)
    (23/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.263309133 seconds)
    (24/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.978163439 seconds)
    (25/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.98231137 seconds)
    (26/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 7.017289891 seconds)
    (27/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.625947484 seconds)
    (28/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.770602964 seconds)
    (29/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.013854232 seconds)
    (30/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 5.53194889 seconds)
    (31/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.233992163 seconds)
    (32/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.928063779 seconds)
    (33/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.035171805 seconds)
    (34/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 6.985246026 seconds)
    (35/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 1.997644322 seconds)
    (36/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.982392054 seconds)
    (37/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.984233536 seconds)
    (38/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.250847807 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 7.019962348 seconds)
    (40/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.113099626 seconds)
    (41/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.055983453 seconds)
    (42/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.22868308 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.987174274 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.401190198 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.69185577 seconds)
    (46/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 4.234482657 seconds)
    (47/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.090722845 seconds)
    (48/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.980831173 seconds)
    (49/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.983879442 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.983374805 seconds)
    (51/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.906471811 seconds)
    (52/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.064357735 seconds)
    (53/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.984161488 seconds)
    (54/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.988034403 seconds)
    (55/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.681687464 seconds)
    (56/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.981907776 seconds)
    (57/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.05717336 seconds)
    (58/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.982753638 seconds)
    (59/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.186319044 seconds)
    (60/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.789688857 seconds)
    (61/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.672633547 seconds)
    (62/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.983120012 seconds)
    (63/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.983620111 seconds)
    (64/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.53164958 seconds)
    (65/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.050140233 seconds)
    (66/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.096352081 seconds)
    (67/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.791113087 seconds)
    (68/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.359144489 seconds)
    (69/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.396976872 seconds)
    (70/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.077977928 seconds)
    (71/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.982512515 seconds)
    (72/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.98318266 seconds)
    (73/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.348716801 seconds)
    (74/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.956029071 seconds)
    (75/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.664119853 seconds)
    (76/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.020347877 seconds)
    (77/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.121284713 seconds)
    (78/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.995414084 seconds)
    (79/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.623765354 seconds)
    (80/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.292134756 seconds)
    (81/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.363044254 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.539040231 seconds)
    (83/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.903268737 seconds)
    (84/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.256803205 seconds)
    (85/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.911570584 seconds)
    (86/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.986089251 seconds)
    (87/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.200735084 seconds)
    (88/481) benchmarking "5d"...
    done (took 3.83272933 seconds)
    (89/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.90821017 seconds)
    (90/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.191695784 seconds)
    (91/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.012053333 seconds)
    (92/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.986295142 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.24907584 seconds)
    (94/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.71903748 seconds)
    (95/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.093387933 seconds)
    (96/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 1.996428766 seconds)
    (97/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.421057248 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.002004574 seconds)
    (99/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.989613187 seconds)
    (100/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.986463046 seconds)
    (101/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.198534997 seconds)
    (102/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.606287026 seconds)
    (103/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.023886711 seconds)
    (104/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.104899747 seconds)
    (105/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.998781479 seconds)
    (106/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.067120033 seconds)
    (107/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.911810176 seconds)
    (108/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 1.998101695 seconds)
    (109/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.987378935 seconds)
    (110/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.891297469 seconds)
    (111/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.989956357 seconds)
    (112/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.986202059 seconds)
    (113/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 2.019204223 seconds)
    (114/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.881227854 seconds)
    (115/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.03633927 seconds)
    (116/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 4.928134323 seconds)
    (117/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.990828482 seconds)
    (118/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.083806924 seconds)
    (119/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.026269335 seconds)
    (120/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.938037873 seconds)
    (121/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.233364281 seconds)
    (122/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 2.276389212 seconds)
    (123/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 3.646738753 seconds)
    (124/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.00992157 seconds)
    (125/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.106793678 seconds)
    (126/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.319990944 seconds)
    (127/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.212569627 seconds)
    (128/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.990827383 seconds)
    (129/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.201132121 seconds)
    (130/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.523911967 seconds)
    (131/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.370343864 seconds)
    (132/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.025642033 seconds)
    (133/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.273255122 seconds)
    (134/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 7.043784167 seconds)
    (135/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.277232968 seconds)
    (136/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.413787158 seconds)
    (137/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.062939433 seconds)
    (138/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.741719839 seconds)
    (139/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.790587701 seconds)
    (140/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.20441514 seconds)
    (141/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.003341131 seconds)
    (142/481) benchmarking "ind2sub"...
    done (took 6.989584955 seconds)
    (143/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.989790264 seconds)
    (144/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.993442116 seconds)
    (145/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.923944579 seconds)
    (146/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.636329362 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.318095778 seconds)
    (148/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 2.150363592 seconds)
    (149/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.202887288 seconds)
    (150/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 5.548551954 seconds)
    (151/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 4.979417512 seconds)
    (152/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.9869144 seconds)
    (153/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.283157704 seconds)
    (154/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.124948499 seconds)
    (155/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.971810061 seconds)
    (156/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.630180004 seconds)
    (157/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 5.620708357 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.782103803 seconds)
    (159/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.011468942 seconds)
    (160/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.347393863 seconds)
    (161/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.404325423 seconds)
    (162/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 3.958916602 seconds)
    (163/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.001381683 seconds)
    (164/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.065301507 seconds)
    (165/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.005619348 seconds)
    (166/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 7.123366315 seconds)
    (167/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.252945474 seconds)
    (168/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.345503369 seconds)
    (169/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.990184556 seconds)
    (170/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.989729238 seconds)
    (171/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.939164909 seconds)
    (172/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.996390323 seconds)
    (173/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.991880098 seconds)
    (174/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.523813226 seconds)
    (175/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.953554009 seconds)
    (176/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.993722577 seconds)
    (177/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 2.000136833 seconds)
    (178/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.863059302 seconds)
    (179/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.062361686 seconds)
    (180/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.991546125 seconds)
    (181/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.990837783 seconds)
    (182/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.532592354 seconds)
    (183/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.490545546 seconds)
    (184/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.993312542 seconds)
    (185/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.659610447 seconds)
    (186/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 7.030034635 seconds)
    (187/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.064521014 seconds)
    (188/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.259967954 seconds)
    (189/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 4.304320316 seconds)
    (190/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.117040987 seconds)
    (191/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.691924678 seconds)
    (192/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.386678917 seconds)
    (193/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.099540728 seconds)
    (194/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.694173432 seconds)
    (195/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.920165678 seconds)
    (196/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.990043453 seconds)
    (197/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 4.932638009 seconds)
    (198/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.993959083 seconds)
    (199/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.99507636 seconds)
    (200/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.996016761 seconds)
    (201/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.178543848 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.2535225 seconds)
    (203/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.291663182 seconds)
    (204/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 2.456484042 seconds)
    (205/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.051218 seconds)
    (206/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.194031174 seconds)
    (207/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.678894021 seconds)
    (208/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.947749959 seconds)
    (209/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.994640205 seconds)
    (210/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.997455298 seconds)
    (211/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.993402577 seconds)
    (212/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.992150976 seconds)
    (213/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.510555893 seconds)
    (214/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 5.289986925 seconds)
    (215/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.049605366 seconds)
    (216/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.023134085 seconds)
    (217/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.998084534 seconds)
    (218/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.120039489 seconds)
    (219/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 2.003698204 seconds)
    (220/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.918780073 seconds)
    (221/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.993613075 seconds)
    (222/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.995368035 seconds)
    (223/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.629230606 seconds)
    (224/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.025994078 seconds)
    (225/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.940529295 seconds)
    (226/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.252188754 seconds)
    (227/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.844446558 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.123317743 seconds)
    (229/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.039848526 seconds)
    (230/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 2.004852674 seconds)
    (231/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.00096098 seconds)
    (232/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.675718261 seconds)
    (233/481) benchmarking "4d"...
    done (took 3.034040813 seconds)
    (234/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.920842138 seconds)
    (235/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.628711035 seconds)
    (236/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.039302155 seconds)
    (237/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.72645219 seconds)
    (238/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.484329293 seconds)
    (239/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.550837279 seconds)
    (240/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.30911684 seconds)
    (241/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.307571246 seconds)
    (242/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 2.318384672 seconds)
    (243/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 2.065621321 seconds)
    (244/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.208032118 seconds)
    (245/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.079485768 seconds)
    (246/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.05154641 seconds)
    (247/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.082093967 seconds)
    (248/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.932723896 seconds)
    (249/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 3.919031089 seconds)
    (250/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.638655227 seconds)
    (251/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.323367936 seconds)
    (252/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.264036283 seconds)
    (253/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.004620542 seconds)
    (254/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.213486312 seconds)
    (255/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.682115408 seconds)
    (256/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.224594336 seconds)
    (257/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.024900964 seconds)
    (258/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.891653363 seconds)
    (259/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.304916468 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.967829801 seconds)
    (261/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.011392893 seconds)
    (262/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 5.560165554 seconds)
    (263/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.112663026 seconds)
    (264/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.076374941 seconds)
    (265/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.999875703 seconds)
    (266/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.944588642 seconds)
    (267/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.32876138 seconds)
    (268/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.030862505 seconds)
    (269/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.69784607 seconds)
    (270/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.010198281 seconds)
    (271/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.349167424 seconds)
    (272/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.633395775 seconds)
    (273/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.073534663 seconds)
    (274/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.3156442 seconds)
    (275/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.205903663 seconds)
    (276/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 7.001553427 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.341023804 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.417450562 seconds)
    (279/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.044252503 seconds)
    (280/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.998831084 seconds)
    (281/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.990831377 seconds)
    (282/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 2.212387119 seconds)
    (283/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.575998348 seconds)
    (284/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.849006076 seconds)
    (285/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.002724832 seconds)
    (286/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.373914549 seconds)
    (287/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.291828679 seconds)
    (288/481) benchmarking "3d"...
    done (took 2.898733153 seconds)
    (289/481) benchmarking ("sum", "3darray")...
    done (took 1.997456699 seconds)
    (290/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.364596157 seconds)
    (291/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.262458546 seconds)
    (292/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.995142955 seconds)
    (293/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 4.31080856 seconds)
    (294/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.348188893 seconds)
    (295/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 3.096039844 seconds)
    (296/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.058923092 seconds)
    (297/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.22311229 seconds)
    (298/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.885883022 seconds)
    (299/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.302397804 seconds)
    (300/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.547324273 seconds)
    (301/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.482873605 seconds)
    (302/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.005788251 seconds)
    (303/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.920582462 seconds)
    (304/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.693868199 seconds)
    (305/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 2.198034618 seconds)
    (306/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.997325617 seconds)
    (307/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.960715305 seconds)
    (308/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.201693401 seconds)
    (309/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.227134587 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.677878964 seconds)
    (311/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.215655486 seconds)
    (312/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.238414819 seconds)
    (313/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 2.00733231 seconds)
    (314/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.263200732 seconds)
    (315/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.066875453 seconds)
    (316/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.092749042 seconds)
    (317/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.26066569 seconds)
    (318/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 2.416494366 seconds)
    (319/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.23971767 seconds)
    (320/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.224751379 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.539621685 seconds)
    (322/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.212429277 seconds)
    (323/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.462102129 seconds)
    (324/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 3.161022705 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 7.000186781 seconds)
    (326/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.204302881 seconds)
    (327/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.214863393 seconds)
    (328/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.213375155 seconds)
    (329/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.339212008 seconds)
    (330/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.164736582 seconds)
    (331/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.709069389 seconds)
    (332/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 2.004711235 seconds)
    (333/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 2.207216984 seconds)
    (334/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.317553746 seconds)
    (335/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.057200869 seconds)
    (336/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.346854472 seconds)
    (337/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.17207827 seconds)
    (338/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.083830004 seconds)
    (339/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.005289232 seconds)
    (340/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.062434401 seconds)
    (341/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.002202895 seconds)
    (342/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.010174516 seconds)
    (343/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.346687349 seconds)
    (344/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.528529882 seconds)
    (345/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 2.01662956 seconds)
    (346/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.078090877 seconds)
    (347/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.082684893 seconds)
    (348/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.511078684 seconds)
    (349/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.004496432 seconds)
    (350/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 2.005542212 seconds)
    (351/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.269346073 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.364767863 seconds)
    (353/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.325517298 seconds)
    (354/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.980651594 seconds)
    (355/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.997969506 seconds)
    (356/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.00587709 seconds)
    (357/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.129437355 seconds)
    (358/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 3.926632143 seconds)
    (359/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.00669612 seconds)
    (360/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.273229267 seconds)
    (361/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 2.003287531 seconds)
    (362/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.615881834 seconds)
    (363/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.159473958 seconds)
    (364/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.015398273 seconds)
    (365/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.29326572 seconds)
    (366/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.386208721 seconds)
    (367/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.883968266 seconds)
    (368/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.96963905 seconds)
    (369/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.005436304 seconds)
    (370/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.218382646 seconds)
    (371/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.295916992 seconds)
    (372/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.395388519 seconds)
    (373/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.120566162 seconds)
    (374/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.270817549 seconds)
    (375/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.334898401 seconds)
    (376/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 2.024506045 seconds)
    (377/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.3423376 seconds)
    (378/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.246042457 seconds)
    (379/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.005046393 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 2.874216316 seconds)
    (381/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.003829531 seconds)
    (382/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.130058939 seconds)
    (383/481) benchmarking "sub2ind"...
    done (took 7.198882399 seconds)
    (384/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.271172353 seconds)
    (385/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.50356528 seconds)
    (386/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.750959624 seconds)
    (387/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.264224425 seconds)
    (388/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.848490828 seconds)
    (389/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.003240729 seconds)
    (390/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 3.704527906 seconds)
    (391/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.271365262 seconds)
    (392/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.277108425 seconds)
    (393/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.046437439 seconds)
    (394/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.063185209 seconds)
    (395/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.004808486 seconds)
    (396/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.642541341 seconds)
    (397/481) benchmarking "6d"...
    done (took 3.752742515 seconds)
    (398/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.129539421 seconds)
    (399/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.927338099 seconds)
    (400/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.917080807 seconds)
    (401/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 6.99470885 seconds)
    (402/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.326116181 seconds)
    (403/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 2.239374801 seconds)
    (404/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.706536462 seconds)
    (405/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.00021932 seconds)
    (406/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.268166734 seconds)
    (407/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.298716207 seconds)
    (408/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.264714755 seconds)
    (409/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 7.045155111 seconds)
    (410/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.902411044 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.209687326 seconds)
    (412/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.996625008 seconds)
    (413/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 7.006759163 seconds)
    (414/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.277113362 seconds)
    (415/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.216438471 seconds)
    (416/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.240518094 seconds)
    (417/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.001161565 seconds)
    (418/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.00357618 seconds)
    (419/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.803866156 seconds)
    (420/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.924882113 seconds)
    (421/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.998270067 seconds)
    (422/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.051793098 seconds)
    (423/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.225252326 seconds)
    (424/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.017677631 seconds)
    (425/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.515302313 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.697708899 seconds)
    (427/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.277367479 seconds)
    (428/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.043322345 seconds)
    (429/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.001803087 seconds)
    (430/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.268784964 seconds)
    (431/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 2.511731207 seconds)
    (432/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.552632239 seconds)
    (433/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.006961276 seconds)
    (434/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.216402479 seconds)
    (435/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 7.022750707 seconds)
    (436/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.282961374 seconds)
    (437/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 2.001964274 seconds)
    (438/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.636995944 seconds)
    (439/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.313454604 seconds)
    (440/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.999940294 seconds)
    (441/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.738181153 seconds)
    (442/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 5.257578639 seconds)
    (443/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.266075454 seconds)
    (444/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.929905171 seconds)
    (445/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.004822387 seconds)
    (446/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.213476594 seconds)
    (447/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.927158835 seconds)
    (448/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.994883458 seconds)
    (449/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.979496069 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.650564773 seconds)
    (451/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.235483008 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.731020444 seconds)
    (453/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.552533001 seconds)
    (454/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.995462447 seconds)
    (455/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 1.999476441 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.633506993 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.034080252 seconds)
    (458/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.640431387 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.031756835 seconds)
    (460/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.014902612 seconds)
    (461/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.513951876 seconds)
    (462/481) benchmarking "2d"...
    done (took 2.708991458 seconds)
    (463/481) benchmarking "7d"...
    done (took 2.282706112 seconds)
    (464/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.240554649 seconds)
    (465/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.729252069 seconds)
    (466/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 6.625534423 seconds)
    (467/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 2.001031114 seconds)
    (468/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 6.992981569 seconds)
    (469/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.996771497 seconds)
    (470/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.911480383 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.174745183 seconds)
    (472/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.177891731 seconds)
    (473/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.274183508 seconds)
    (474/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.019701056 seconds)
    (475/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.677340608 seconds)
    (476/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.031671882 seconds)
    (477/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.331718504 seconds)
    (478/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.11231281 seconds)
    (479/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.379755666 seconds)
    (480/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.045614855 seconds)
    (481/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.519846991 seconds)
  done (took 1724.099335207 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.002457401 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 7.037979757 seconds)
    (3/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 7.008428758 seconds)
    (4/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 7.036131285 seconds)
    (5/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 7.010361672 seconds)
    (6/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.013852634 seconds)
    (7/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.090700533 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.014171514 seconds)
  done (took 58.139954039 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.998346579 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.010031493 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 2.000787985 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.998834044 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 2.007171591 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.99734881 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.158303448 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 7.003564064 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.997591319 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 2.001034351 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.995098222 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.994261967 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.272823179 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 2.010764165 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.994830047 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.991621265 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.991513268 seconds)
  done (took 76.353916396 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.993325433 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.243989268 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 7.043558696 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.989412921 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.922439073 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.994417633 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.958295074 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 7.041345757 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.988111323 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.206673281 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.27576388 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 7.01343246 seconds)
  done (took 91.587043583 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.987857485 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.981693962 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.980450316 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.981492958 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.981452594 seconds)
  done (took 11.824289568 seconds)
done (took 2250.637201814 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.208562922 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.037774905 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.080135725 seconds)
  done (took 6.022692645 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 2.127242492 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.172795417 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.285071567 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 2.047705425 seconds)
  done (took 10.547945678 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.286799193 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.358041394 seconds)
  done (took 6.550196362 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.345020691 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.98551339 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.39166718 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.978579285 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.978470032 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.978434039 seconds)
  done (took 22.846424784 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.975776004 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.973614545 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.975289045 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.975535933 seconds)
  done (took 9.800949536 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.97493888 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.682463172 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.975260895 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.982893962 seconds)
  done (took 21.514524083 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.121210749 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.091155215 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.120540028 seconds)
  done (took 8.232864221 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.189661953 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.07937872 seconds)
  done (took 7.168855049 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.120345352 seconds)
  done (took 4.019418252 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.002830337 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.244536027 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.469794585 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.501886687 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.622787029 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.787665989 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.294499098 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.221260349 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.385229364 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.41270672 seconds)
  done (took 25.845576877 seconds)
done (took 138.38763454 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.324909484 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.982502691 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.195709191 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.335580414 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.196890234 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.257529307 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.187944582 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.328300828 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 3.002961099 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.992450792 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.328430419 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.194643363 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.137129325 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.989112334 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.144691974 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.992122889 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.196885104 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.332147518 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.013064736 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.246581399 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.19401192 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.983459394 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.178428302 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.990757152 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.194443546 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.167935541 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.525035139 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.991303043 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.161175812 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.531972469 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.235961435 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.3920855 seconds)
  done (took 171.826837255 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.978327974 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.972662844 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.973676571 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.972884243 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.427983568 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.97442213 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.975722245 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.975053032 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.394802461 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.395345702 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.974235463 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.419476332 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.973793631 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.974063678 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.976336064 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.975394422 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.545150213 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.973109585 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.976451139 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.973657806 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.977966106 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.257389236 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.976126656 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.262287302 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.546947437 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.97713199 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.975467325 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.976946833 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.976324071 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.974750471 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.97524187 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.975665565 seconds)
  done (took 212.559941212 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.978148925 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.976676658 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.975820977 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.975814863 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.976464324 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.976744683 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.977273166 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.97788892 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.663947404 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.655377464 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.975887415 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.976302997 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.979540201 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.976774187 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.978210978 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.976275899 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.977055151 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.976992811 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.975178558 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.975628679 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.976751761 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.815868714 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.977523895 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.826871826 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.975252978 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.975913457 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.97483766 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.975239104 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.977873688 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.977843174 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.977576758 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.973753316 seconds)
  done (took 224.213437192 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.217578692 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.976677282 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.97667925 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.886745803 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.979968466 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.975766591 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.955878796 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.227361171 seconds)
  done (took 20.099823264 seconds)
done (took 630.616771612 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.373533823 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.202217054 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.152818689 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.994531645 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.273305608 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.040946601 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.994637175 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.055610727 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.839623843 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.067204594 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.641360064 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.013350405 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.741175437 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.018965207 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.114697402 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.044707529 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.561486469 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.661076554 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.135049812 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.088207702 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.176130691 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.912885491 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.073076299 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.868535204 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.66273758 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.962592236 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.035937735 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.569122341 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 2.0003388 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.153553781 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.74168077 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.311191858 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 2.006111175 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.988972279 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.04163586 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.0249384 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.230834006 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.00182983 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.112473542 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.698217575 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.077674893 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.736466136 seconds)
  done (took 107.302316812 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.985704547 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.976978558 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.976307073 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.977427334 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.986393619 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.978088185 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.976125537 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.976399504 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.97715982 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.976676077 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.977444922 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.985597743 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.977005314 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.985432139 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.977023289 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.976973599 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.97660844 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.985782681 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.977873936 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.978062337 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.976583448 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.977105051 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.972596493 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.978716059 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.978650804 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.97683372 seconds)
  done (took 53.359016512 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.971159471 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.125288094 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.220165239 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.989710113 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.971856286 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.97525826 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.990244734 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.974573842 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.975876177 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.97329456 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.075721183 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.975004906 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.990514708 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.225585151 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.985382629 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.972796086 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.971726095 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.973439666 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.141385338 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.98375756 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.991402206 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.975245221 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.990051318 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.983982865 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.971441513 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.970661715 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.973815534 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.407012619 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.979933055 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.076175358 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.008676841 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.987240743 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.342895883 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.228402784 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.019304647 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.970232834 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.967248198 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.077077308 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.973140594 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.966873362 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.983439023 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.967130293 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.219941148 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.49188245 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.976608568 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.964844579 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.41841625 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.081655137 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.004313798 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.975096969 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.222668192 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.980190875 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.966221627 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.967529322 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.003100834 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.975847592 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.966558956 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.276743966 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.977951852 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.985024723 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.968028936 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.968147492 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.134976558 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.972197825 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.129317831 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.974206604 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.974054271 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.969817784 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.221982399 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.982139915 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.506457704 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.978754352 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.971233228 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.072205206 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.124176818 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.435760205 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.97715624 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.136388805 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.359718739 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.987772996 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.972955422 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.388855585 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.991685008 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.973008623 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.969127925 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.970570113 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.968181675 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.012977931 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.98373044 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.409539829 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.499931459 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.29364386 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.991309591 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.97575691 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.969945084 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.278665134 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.97240626 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.968200934 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.213925077 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.513530848 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.980315279 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.975785599 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.487680975 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.981386447 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.987801074 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.975339066 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.229241452 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.982302931 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.014725865 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.968620785 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.976396279 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.972218036 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.988147045 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.972584816 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.968497083 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.474953433 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.088672217 seconds)
  done (took 243.815672077 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.970447736 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.966751182 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.968564066 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.964992397 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.967425741 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.969274569 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.967826552 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.967425491 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.969571904 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.968736477 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.968323091 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.968228833 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.969470599 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.970570777 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.022267163 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.971956661 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.575035687 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.971936595 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.968638576 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.968019184 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.61196584 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.973326358 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.968579117 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.971630947 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.97188566 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.970753257 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.976256592 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.01161378 seconds)
  done (took 170.388812384 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.970122028 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.082629527 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.983906524 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.999852394 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.975164168 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.972005419 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.068126539 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.98980201 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.974900854 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.971107579 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.970578894 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.031891394 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.978503015 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.069001406 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.001063214 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.07624486 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.072210876 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.97857161 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.97167065 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.971105623 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.001579306 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.977743511 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.035212503 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.091175067 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.987904386 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.084358287 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.987403432 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.971963108 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.972333284 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.083343676 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.985057609 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.03330719 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.997880316 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.984975797 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.088194152 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.083985284 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.074300142 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.076046434 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.97836505 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.971544377 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.972414251 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.972841646 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.083400631 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.988027195 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.974911303 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.089028972 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.986388258 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.973081927 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.972458678 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.973108783 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.986605865 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.988878679 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.037921736 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.098624884 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.005627449 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.993300839 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.071425461 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.102956117 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.974646281 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.071011233 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.980724671 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.086653426 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.990217343 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.975196484 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.976913247 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.978881971 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.00392485 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.076920647 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.073902557 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.97870956 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.072416827 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.009018425 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.979422582 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.974177633 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.974461871 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.086973073 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.085686527 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.007029855 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.008631535 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.001397549 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.982687055 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.973461977 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.977303802 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.99156922 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.976372238 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.087587237 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.086988014 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.979972189 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.974322619 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.975481088 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.975666594 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.99798373 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.095120596 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.00799875 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.075704118 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.040327653 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.045069567 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.986210827 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.98851513 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.979364879 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.037811154 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.985510364 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.986580586 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.281815646 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.034309807 seconds)
  done (took 213.635219525 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.368889233 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.022106094 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.032545044 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.303774784 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.335230706 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 3.962307074 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.019784609 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.025359294 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.056631653 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.244464379 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.092457231 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.041859335 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.007232442 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.996762714 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.022875314 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.056497278 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.0273289 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.378135589 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.224931467 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.515799158 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.013831955 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.282609683 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.342003698 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.599533822 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.070406795 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.475298611 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.632848515 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.190562144 seconds)
  done (took 66.25025543 seconds)
done (took 856.649623666 seconds)
SAVING RESULT...
DONE!
