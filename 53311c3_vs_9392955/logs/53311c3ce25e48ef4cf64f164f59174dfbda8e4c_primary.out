cset: moving following pidspec: 2191
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.306820089 seconds)
loading group "string"... done (took 0.596089797 seconds)
loading group "linalg"... done (took 7.099804417 seconds)
loading group "parallel"... done (took 0.158431136 seconds)
loading group "find"... done (took 1.117058283 seconds)
loading group "tuple"... done (took 1.751742307 seconds)
loading group "dates"... done (took 1.254334572 seconds)
loading group "micro"... done (took 0.223814862 seconds)
loading group "io"... done (took 0.919823817 seconds)
loading group "scalar"... done (took 36.361972702 seconds)
loading group "sparse"... done (took 10.971335419 seconds)
loading group "broadcast"... done (took 0.918753706 seconds)
loading group "union"... done (took 11.921190184 seconds)
loading group "simd"... done (took 4.160866152 seconds)
loading group "random"... done (took 8.559721748 seconds)
loading group "problem"... done (took 1.869834519 seconds)
loading group "array"... done (took 19.914512178 seconds)
loading group "misc"... done (took 1.681229016 seconds)
loading group "sort"... done (took 3.154705388 seconds)
loading group "collection"... done (took 16.683806762 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.486390351 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.124222808 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.116298437 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.120082788 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.142291351 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.115231739 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.124182509 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.084410914 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.790725873 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.145304558 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.120482764 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.419970594 seconds)
done (took 4.972914487 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.174194351 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.083899792 seconds)
    (2/2) benchmarking "String"...
    done (took 0.082012136 seconds)
  done (took 1.306547038 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.066382781 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.122384021 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.066999164 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066795186 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.06802178 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.066114501 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.066586647 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.06606787 seconds)
  done (took 1.664944736 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073915809 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.07026461 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.069139793 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.069092058 seconds)
  done (took 1.424925179 seconds)
done (took 5.788109803 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.770711031 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.202450417 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.183823902 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.405075628 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.129969029 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.15582342 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.645798454 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.31987836 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.18587524 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.08187397 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.104233448 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.319439801 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.107913776 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.6414762 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.077588064 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.091491482 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.139851155 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.40997561 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.067647932 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.082868726 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.089625397 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.127968434 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.087080992 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.07572337 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.144259475 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.069238641 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.131856051 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.080660442 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.067459281 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.210187757 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.17348585 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.660995611 seconds)
  done (took 10.22256098 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.097401273 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.098628666 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.069195825 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.137869264 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.097147823 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.070365466 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.071214427 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.067565176 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.087096139 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.128755926 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.089382204 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.102306573 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065781988 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.069011274 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.085107127 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.204938226 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.081206264 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.081618061 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.070559796 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.075899213 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.116902395 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.078908426 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.07883601 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.078233779 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.129228385 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.180549247 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.097544894 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.097549121 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.067534748 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.081497745 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.115785375 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.126602794 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.066044692 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.066747894 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.125247685 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.094796247 seconds)
  done (took 4.629145621 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.938408322 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.1418697 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.091666868 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.132618974 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.065020164 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.107824109 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.066134681 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.081335057 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.201672023 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.305750996 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.577973105 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111489854 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.101420912 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067911922 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.069100629 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.067420385 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.362927353 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.122973362 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.104116807 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.080988717 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069746305 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.068870811 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.342621323 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068467228 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.064663586 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.06803325 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.057935069 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.123918302 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068345601 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.937207196 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.126352289 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067312163 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101615392 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.165986588 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.088321195 seconds)
    (35/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.083262669 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.199280434 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.137722893 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.065010878 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.151587137 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.071577855 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.067105461 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.084414974 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.104167291 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.114260964 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.066356166 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067467427 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.162850821 seconds)
    (48/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.065287761 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.065321693 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.082246009 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.994291891 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.152350941 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.077015226 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.066013439 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.248604191 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.086538054 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.070668292 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.065550494 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.180680687 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.134707877 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.067734621 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.067090397 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.06822019 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.069696571 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.350349309 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.06634506 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.721268962 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.069002452 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.077735035 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069722831 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069708397 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.073145734 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072615434 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.085839383 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.06628006 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.075698625 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.066131899 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.066251026 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.067421857 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.084365821 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.362260712 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.066883279 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068438814 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.065193074 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.086498011 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097038263 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.066953062 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.065380578 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100607422 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068613024 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.066509955 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.206400575 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.071794455 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.084836363 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.070081707 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.114023446 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.067172495 seconds)
    (98/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.0914374 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.097509557 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.066508141 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.097262022 seconds)
    (102/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.064692423 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.069425959 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099187777 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.082272333 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068145256 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.402631999 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065261218 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.066066032 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068955376 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.06928674 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.067707099 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.067461262 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.080857556 seconds)
  done (took 20.969058275 seconds)
done (took 37.901038353 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.274152062 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.076264074 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.076085511 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.076180144 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.075960593 seconds)
  done (took 1.810250343 seconds)
done (took 3.024150853 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.12070259 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.099336918 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064156574 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.09568678 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064496967 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.101005604 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.099551829 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.081508614 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.099994963 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064989481 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.096574619 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.064799467 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06489984 seconds)
  done (took 2.351224694 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083627262 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084379361 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.07066429 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083372484 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064265161 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082783791 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081015308 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.088966963 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.08098757 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072590792 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064223618 seconds)
  done (took 2.06591126 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082220587 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084529675 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069804824 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082044358 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063996509 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082118332 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.08151135 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.085635522 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081381321 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073623002 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06406924 seconds)
  done (took 2.053686248 seconds)
done (took 7.674308707 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.077593916 seconds)
  done (took 1.271731311 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.594247114 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.104037241 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.082350064 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.113700243 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.185000896 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.121406829 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.284077933 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.087850878 seconds)
  done (took 8.949450933 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.102789757 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.073082671 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.069204279 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.072741035 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.070472554 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.072050095 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.072263433 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.070406993 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.071731706 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.071301735 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.069103808 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.071296323 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.069603565 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.068787927 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.069713407 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.069248586 seconds)
  done (took 2.431619316 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.092954728 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.091059859 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.074493664 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.075251802 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.07283213 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.072204605 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.074671446 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.073973973 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.07118459 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.072738777 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.076002197 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.074316378 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.072092178 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.06560599 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.07508739 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.076445116 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.071601135 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.074624102 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.075417109 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.07548725 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.07514924 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064918887 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.071868159 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.074639912 seconds)
  done (took 3.09759273 seconds)
done (took 16.953497477 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.114127779 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.072269854 seconds)
  done (took 1.389328601 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.08176584 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.083573421 seconds)
  done (took 1.375881844 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.084500563 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.066416193 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.091950168 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.078687119 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.06685009 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.066092827 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.088781803 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066500434 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.06606051 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.066969879 seconds)
  done (took 1.954052921 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.068859219 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.07971043 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.071955617 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.081282683 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.074295127 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.064529667 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.072898388 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.067954585 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.078487416 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.063548074 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.07158811 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.083442879 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.071424121 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.08454401 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.072923005 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.068567208 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.071153914 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.067872618 seconds)
  done (took 2.529467422 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.066158251 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.06739976 seconds)
  done (took 1.349120627 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.067468211 seconds)
    (2/7) benchmarking "second"...
    done (took 0.065014866 seconds)
    (3/7) benchmarking "month"...
    done (took 0.067855224 seconds)
    (4/7) benchmarking "year"...
    done (took 0.067028556 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063879583 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.063361642 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.06374174 seconds)
  done (took 1.670688842 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.387548843 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.110516229 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.295680472 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.070872506 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.082045959 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.250828371 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.065328114 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070750148 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.07070856 seconds)
  done (took 2.659405806 seconds)
done (took 14.145438009 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.079279364 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.085918739 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.094724873 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.367339104 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.092457969 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.066105909 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.114321031 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.191294711 seconds)
done (took 2.318381142 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.210929737 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.606444178 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.382123161 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.195288032 seconds)
  done (took 2.402682975 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.326557652 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.087143977 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.059598463 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.06681963 seconds)
  done (took 1.769015176 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.066086935 seconds)
    (2/2) benchmarking "read"...
    done (took 0.069191789 seconds)
  done (took 1.360161123 seconds)
done (took 6.968265776 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066836186 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.06680763 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.083598355 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.063312359 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.066147681 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.0637325 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063765719 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.06583548 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.066158777 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.065809723 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.068298897 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065534569 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063735325 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063615811 seconds)
    (15/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.063545433 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066699044 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.063381867 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063576452 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.067584031 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063277608 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.066080369 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068697131 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063897104 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063752239 seconds)
  done (took 2.843661874 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.084310688 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.067046718 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.071514729 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.071909192 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.070216632 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.071449888 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.071375705 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.066355573 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.07190508 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.068344074 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070181392 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069877887 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.068193371 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.070296924 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067919535 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.070069819 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.071710001 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066475466 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068811476 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.070247693 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.071458924 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066907103 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.070166297 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071612311 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.069714843 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070093174 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.069725809 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.066998837 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071513781 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.069629503 seconds)
  done (took 3.34002656 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.070232816 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063759431 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.06461602 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070772151 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.06430316 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.064944093 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.063193528 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.064318984 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.064649509 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063684653 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.065115481 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.063254538 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.0641495 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.064538738 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.064649934 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.067451467 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.078777071 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.064365703 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063949035 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.064391055 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.067312771 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.063371633 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063571748 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.063420807 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.063528465 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.063536817 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063968366 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.063473281 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.064442603 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.063711467 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.06715669 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.067202064 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.063584712 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.070093439 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.066888558 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.063366227 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067218022 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.063403467 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.064556307 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.063492693 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.063365742 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.06363885 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.063872524 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.070052876 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063978937 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.065481087 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.176985574 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064790205 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063866323 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.066574886 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.063330956 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.06363487 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.065267216 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.064555635 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.067225001 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.063035159 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.064303586 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062823449 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.064464152 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.063586673 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.06305324 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.063082612 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.06559798 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.064517937 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.078268393 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.070297897 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.06325595 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.065094333 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.065298493 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.066216874 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.065279054 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076294671 seconds)
  done (took 6.060552806 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.092601914 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.08814285 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065717932 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065551095 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061961867 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.064084867 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.067851824 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.0640828 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065728769 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.069602268 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06470485 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065308945 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065336262 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.07674956 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064178133 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.06549319 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.070037649 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061901277 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.064258679 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067032392 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064090953 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.067650507 seconds)
  done (took 2.74903372 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.155758854 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070482496 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.106759549 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.073415511 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067827532 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.073167786 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069642337 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070190007 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070662746 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06903783 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068433893 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070116831 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067988445 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06840052 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068215779 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.06799577 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070260389 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068812158 seconds)
  done (took 2.617720706 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.077816045 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065870286 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.086599967 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065924466 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.066441685 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068232675 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071184106 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074645311 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.068514808 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.066125998 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.07431944 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068402654 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.068821728 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066258328 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068577855 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065854954 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.067928051 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065924531 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074192511 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071152685 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070666347 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074416782 seconds)
  done (took 2.790285763 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079583534 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068504042 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.083275733 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.06921866 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062354218 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064524736 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.070672653 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.06636422 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.070536118 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067986414 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066376411 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064571176 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.069713159 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.06578634 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.069576219 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06621089 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067935368 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066133221 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067711569 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.0625435 seconds)
  done (took 2.612945894 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.087218929 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.068397339 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.068884925 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076389006 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067470376 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.067465364 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075631361 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.067500329 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.067860555 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.087286495 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067622305 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067768276 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075632869 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072605443 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.067770205 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075495321 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075311813 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.075510245 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.06740371 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.067270117 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.087620804 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.067699012 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.075611498 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067240825 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.067374901 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.067350802 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067668307 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072783321 seconds)
  done (took 3.263959114 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.06648986 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066168344 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.064101687 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063702992 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.06418056 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.063815627 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063410685 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063539299 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065708762 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063349605 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065784855 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.065949825 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066102248 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.065863782 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066301717 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.066121677 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.0663181 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.064031288 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063340456 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063665104 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065805563 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065606672 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065844124 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063476738 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063572641 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065624142 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063456781 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.06358628 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065788823 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063478569 seconds)
  done (took 3.191595497 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.076756518 seconds)
    (2/2) benchmarking "in"...
    done (took 0.073452439 seconds)
  done (took 1.398771937 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063245667 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.08044058 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.064031919 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.06978529 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.07059688 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066389007 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073667282 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070122826 seconds)
  done (took 1.803889876 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.082203049 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.077916517 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.068365272 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.081375932 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.077036523 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.083046336 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.132432782 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.067149872 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.072976202 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.064612969 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.079916697 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065634645 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.072707261 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066383039 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.07174192 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072653024 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.06411586 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.0728687 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.069103136 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064936104 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067635744 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075209957 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069242185 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.062063366 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.068262784 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.088229294 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.077142878 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.066566646 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.06945552 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.073435474 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.072195697 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.060663463 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.06620342 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.067223834 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.064542326 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.076184494 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081993119 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069749144 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.075437932 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067749283 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.077817537 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.061931967 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.071595415 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.072882262 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076242625 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.066764587 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.067074997 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.061403956 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.064600632 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.068450716 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061578993 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066476176 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.061414416 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075849047 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.069776052 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076875064 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.065161547 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.067818451 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.069301689 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.069562097 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.073143178 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.068397447 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069067787 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.065905442 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072908164 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.070580872 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075387519 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.06140651 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.060614403 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.064583956 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.076137189 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088580999 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.07262963 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.067057253 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067540571 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.064452245 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070134444 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067617964 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072652982 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.073003821 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.067142557 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.072173029 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073943209 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066902966 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.069268112 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.075121617 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.064875799 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.069272641 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.064339912 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082892939 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.065366016 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.06481064 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.064495974 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.077132886 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.069599898 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.066060524 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.064247198 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073290783 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.06064533 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.067155459 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067145206 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067151809 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.076284484 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070111706 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070302585 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.074114447 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.073102889 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065610583 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.068362572 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.062404884 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.0664901 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.064818408 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.072756334 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.060501233 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068637424 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.066790559 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.066396587 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.074055993 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.06400698 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.065643836 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072909403 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.071056548 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.064354074 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.062799431 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.068503058 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.065601293 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069018653 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.073517481 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.064380286 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.060999574 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061027236 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.068935053 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.065491888 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.069383206 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070077559 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.068501326 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.060281837 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.064224552 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.070516373 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.074319222 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.065992992 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.066445585 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.071413265 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.067025081 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.0648092 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.072236777 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.068089446 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065098273 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.07089739 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.066328009 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061066039 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068358706 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.06809328 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.064066392 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.068921321 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.06823318 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.067743408 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.065732717 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063841761 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.072229652 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066152613 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.064540697 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065322644 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.064017694 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.075742866 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.067217669 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.06075126 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.061569287 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.072585836 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.062998672 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.064241499 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.06404559 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.066618431 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.064979088 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.062616037 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.064340099 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.066875606 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.074323628 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068132275 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.065482898 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.069136939 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.076319143 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.064191428 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.067310429 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.064431516 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.06539021 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.065298236 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.072811548 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.070113286 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069112506 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.067380657 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.061468883 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.069819422 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072507393 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.063396618 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.062416302 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.063294378 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.068148696 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.070048213 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.06858476 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.065452381 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.062474973 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.064916327 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067019149 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.067260559 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.063960056 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.063984821 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.069985693 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.062524683 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.070824521 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066057804 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.074479334 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.068557049 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.060443449 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067337635 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.062975374 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.070302723 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.060452871 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.062184812 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.06345384 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.065257983 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.063121364 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.067330481 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.058779953 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071293347 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071570683 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.06441734 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.064364094 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.064278713 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.071243046 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.066212046 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067809075 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.067535867 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.069812827 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074507753 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.063474571 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.067258007 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.074427636 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.064109351 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.297330722 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.07437816 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.067828833 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.06731247 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.068197579 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.067221085 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07254644 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.079374599 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.0761308 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.063138634 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.07110197 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.06721281 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.068312467 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.064798434 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.073707511 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.071500338 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.069888032 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075718976 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069335491 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.069526133 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07209611 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.068024456 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.06948955 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.069267496 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070928599 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.068483623 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.069847899 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.067381181 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.070941594 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.066762676 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.065560674 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.069983668 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.068211715 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.068159652 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074429547 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.067302443 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068498307 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.070441483 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.068741257 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068953076 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.068707723 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.06754065 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071153481 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068581404 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.068870524 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.069894507 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.0632629 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075624133 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.067519925 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075927247 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.068623913 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.065326339 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.075435649 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.070616405 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.073818747 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.068130138 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.068749565 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.06913538 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.067348449 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.070412596 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074802656 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.065455999 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.078707419 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075613701 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068150279 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.070593584 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.068077263 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068769561 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.066637508 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.068086179 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.06883748 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.067670558 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.067040454 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.072308243 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.069725592 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.068211508 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06955377 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.068696278 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.068395146 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.068703176 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.061780247 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.066541132 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.066322794 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.066806861 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077752055 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.068119162 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.067018906 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.066139755 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068834841 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.06645606 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.064149286 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.075508763 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.076874385 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.067796236 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074082919 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.066337286 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.068339938 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077534109 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.061359246 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.065093319 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.064996367 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.064950909 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.075014621 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.067515516 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.075979681 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.067290158 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.066494734 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.064222723 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.068029801 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.065794387 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.061501642 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.065031936 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070467255 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.065651436 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06534942 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.066243758 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.068323793 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067081083 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076059224 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.065658294 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.06727472 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.066904715 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.063731141 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.066074321 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.199850392 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.070790721 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.06823729 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.065333332 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.063810306 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.067264771 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.068697801 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.068448584 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.067040992 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.068989238 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076835435 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067701398 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.070604257 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071049206 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.061463968 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.070413405 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.066726541 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.067331127 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.066396111 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.071351304 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070655687 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068235017 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.076041444 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.067281893 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068738939 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067382336 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.065336487 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.067632255 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.066870493 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.067343971 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.066285336 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.069204682 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075597096 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.065254176 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.070567417 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067141846 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.067902034 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.073904695 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.068445633 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069631657 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.074360053 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.067661742 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068706768 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.074968935 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.071531561 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070718615 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068506772 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.069217993 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073049537 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.066330533 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.074213884 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.068056046 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.068423079 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.069257922 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.065878675 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066884603 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.067297811 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066776555 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.073652828 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.068165315 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.066511973 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.066414873 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.064956631 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.067648363 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070509361 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074535554 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.069238387 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070133649 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.062072608 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.064193954 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.06817581 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064939934 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.068792281 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.069906393 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072893358 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.069350274 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.06754598 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.065783797 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.076328079 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072871614 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.070980432 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.06506833 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.070582945 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.067545046 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.068973971 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.068252151 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.067405987 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068066861 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.070913889 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.068408385 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.0664128 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073860614 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.069969308 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067636438 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.068319535 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.06761061 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.067416531 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.061842474 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.067526984 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.069364237 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07233963 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.069121124 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067129515 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.077549399 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.06433565 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.067288259 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070134152 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065910023 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.071533298 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.062305765 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.068148595 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068132193 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067889403 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.061563309 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.065473518 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.064207044 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.068046128 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.065054779 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.061490771 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076390363 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.075089465 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.068817393 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065000437 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065418997 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.061872205 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.196652642 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.066830879 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068454758 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.069191643 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.077552005 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.066195152 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.066136069 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.062549862 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067248108 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070569709 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.070502514 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.064642902 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.062616839 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.06658367 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.070716366 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.072479759 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065659626 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.067130546 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070494739 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.069961348 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.064910439 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071041903 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.064091081 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.070753342 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079572873 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.067865488 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068071646 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.073532982 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075084232 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.068765483 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.062504544 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.068095387 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069847511 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.067798292 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.068418318 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.068181089 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081919075 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07069162 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066688365 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.06650217 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.070085685 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.06673059 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.075375174 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068490468 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.068040864 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.071758951 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.068838554 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.07719972 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070605199 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075208373 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.070711544 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.070306616 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.066519851 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067659152 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.065562982 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.066930044 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.068597794 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.067788478 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.072994416 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.075514148 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.066256147 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077779039 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.075799686 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.069060213 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.063765014 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.066341185 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.066459578 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.062576972 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.06799426 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.065306329 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.065039909 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.064871772 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.065901402 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.068051741 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072681225 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067520393 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.067341817 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.066215397 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060870747 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.068674125 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.069187398 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067534235 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.063356102 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.066974566 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.066866659 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.070789275 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070215359 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.064036873 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.068047325 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.068107425 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067373569 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.062075295 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.073124999 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065678742 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.068139116 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065525396 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066806848 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.067150041 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.070190044 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.07175664 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067831073 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.068956485 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.07075796 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069458019 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.064461108 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.064233236 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.072374594 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.065044346 seconds)
  done (took 42.706952884 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.102412745 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.06425925 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063341077 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.063356916 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075040999 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06410815 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.063072184 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063767559 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.063974328 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066091344 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.062870467 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06277413 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072193059 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.079096794 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075221131 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067438307 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062703706 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063984168 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.0630342 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063775789 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072127026 seconds)
  done (took 2.821942128 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.075869603 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.071984946 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.073871933 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.07700374 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068736902 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.071695351 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.073650318 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07217837 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.077130845 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067924094 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.077115831 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071561479 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.067939599 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.068311784 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068381452 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07190877 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.077500626 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068467229 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.071464018 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.074024058 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.080775115 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.073363399 seconds)
  done (took 2.955146441 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.068253249 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.066974947 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.06926106 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.063066652 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.067011235 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.062125086 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.070853364 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.064747781 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.069849079 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.065944332 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.066003621 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.065985742 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.068574617 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.062492392 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.066356687 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.064884101 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.11002156 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.070285236 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.066870877 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.067782437 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.062361625 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.068916231 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.062317174 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.062728734 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.06556717 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.070390889 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.067660031 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.064814819 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.066483522 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.066072219 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.066621152 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.064432509 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.068441809 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.067539888 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.066231636 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.065738843 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.066392841 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.066261899 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.062097573 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.064695754 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.067142917 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.062319467 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.066509539 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.068223559 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.06484346 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.064594017 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.06805636 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.066082097 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.061496026 seconds)
  done (took 4.640496749 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.081022713 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.111062031 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.068601406 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.089037005 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.081357176 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.076784347 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.0702862 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.090449129 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.064417413 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.064937742 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.082760008 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.081012422 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066567472 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.07141472 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.070224613 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066978035 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067910939 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.06566762 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.070677041 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066202814 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.071016746 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.073449803 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.081395038 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.080222757 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070616824 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065516237 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065735934 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.070835925 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.078953181 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.071420213 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.070707512 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.072057966 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.082224466 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.068195894 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065873763 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.068628077 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.082616424 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.066822296 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.068806854 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.064331914 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.068542285 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.070343052 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.072561263 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.08270741 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066852658 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.070935883 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065882716 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.063091125 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.078842392 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.068470563 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.073825884 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.080622397 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070051042 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.066354939 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070685407 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.081041714 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.066001756 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.064408408 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.068792422 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.078686326 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.063843268 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069425058 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.080007647 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.068137806 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.073099262 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.080215616 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.071287739 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.070341803 seconds)
  done (took 6.446970255 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.076056798 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.074175897 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081893036 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081452236 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072935465 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.073196509 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.073067276 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.073023753 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.072565989 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.077712667 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.073057571 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.094444818 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.068019354 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075906382 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.073073157 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.073257802 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.073596321 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.073094373 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.073217087 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.072997591 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.073036086 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.080963798 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.073029394 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.081416056 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.099616337 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.068329669 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.072970862 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.07303918 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.08119441 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.073244847 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.08032884 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.073081848 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.073253256 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.081179247 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.0802532 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.072710861 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065712933 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073076212 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.072719607 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.072800211 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.06771724 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.081088844 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.072643289 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.068071022 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.072797542 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.072325544 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.080832326 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.079714531 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075622617 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.077192387 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.072481714 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.081595232 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072586119 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.073203959 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.080747231 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.10579396 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.08080399 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.081007505 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072953645 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.080840692 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.080631941 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.0867541 seconds)
  done (took 6.126164659 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084019631 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.076279771 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.078405657 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061946552 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.06467561 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071023891 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064791683 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.064740897 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.075068411 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.074866244 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077732469 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070711157 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073455495 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077844206 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070484969 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073626875 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070651872 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070382522 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074859684 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070538127 seconds)
  done (took 2.827091102 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.075378158 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.083571604 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.067566677 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072501382 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.069157256 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071985798 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.06866067 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069608627 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067386221 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069593466 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.07717093 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.076608173 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067573838 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072569906 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.076927683 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.072093467 seconds)
  done (took 2.530547643 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.075032338 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.073204247 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.080264639 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.066674677 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.064784498 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.063371365 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.066243687 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061799902 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062803003 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.078047297 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.066287315 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.068892876 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.066353699 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.065108058 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.063837518 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.069312679 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062905039 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.064016181 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.066389065 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.078771891 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.077156742 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.065014212 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.066806408 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.06643323 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.066745689 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.071626516 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.065919123 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.064007185 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.063686281 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.066327028 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.06682484 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.069897302 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.063681465 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.064289358 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064996721 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.06409985 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.066058536 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.066390861 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.069185055 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.066416867 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.06404828 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.06597496 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.065945388 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.067323406 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.062551383 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.066737601 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.062388662 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.068106114 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.064067178 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.066510717 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.066066566 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.068366173 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.066831199 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.072696455 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.069360676 seconds)
  done (took 5.070570612 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079721357 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069980324 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061932679 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064608194 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.069888146 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.068181207 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069833663 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.068458803 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068240867 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064173465 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068035621 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.069346851 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068036094 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069592699 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067896578 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069955067 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062202717 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.068281623 seconds)
  done (took 2.614112535 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.07157393 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066160229 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.073229117 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.06658313 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.066744964 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068585023 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062473077 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.064676218 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065156636 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.066892466 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066159464 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068311389 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065015759 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.068432367 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.066076122 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066187996 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068707146 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.065066697 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066168378 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062336625 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068481646 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064956316 seconds)
  done (took 2.847329744 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.072919065 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.092225666 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.138904427 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.084649656 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.081531495 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.079053223 seconds)
  done (took 1.929435726 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090380286 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079834278 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067651585 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088454739 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073988627 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068124071 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067789146 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068344276 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077267533 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076841046 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067981694 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076737246 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076268691 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076159293 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073457682 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.0738414 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068157648 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068623243 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066673485 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085273864 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068023492 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076366879 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068006031 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067751386 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067898285 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075909014 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076758244 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076964102 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067634191 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076687937 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073622992 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067980946 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076930017 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076867865 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069862126 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077083224 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068159152 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085693929 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074171241 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07644732 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069866782 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074432193 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077505117 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073423415 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076935712 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068948837 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072921597 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068118178 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068402591 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086889932 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073854564 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076157338 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074315779 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076951304 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076934254 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087128981 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077290203 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07614374 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074259048 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079179775 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076106995 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074001924 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076100964 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077220863 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074494052 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075917882 seconds)
  done (took 6.308051898 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08300842 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.087011862 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06878588 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076903517 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076295296 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067957065 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068394441 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068176174 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067995015 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067555645 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109238795 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068617042 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076433751 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076440163 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068376689 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068511932 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068347022 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076059253 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067764193 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087129859 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068332456 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076190337 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076486106 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076274532 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077303182 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074048476 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068795209 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068627218 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068449847 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068331705 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073288928 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068467227 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076432374 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067700168 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076236715 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06873403 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067836268 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073297915 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068465522 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073990798 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076478156 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085213474 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068012133 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068045919 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076966606 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068182956 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068616602 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067955551 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.0687927 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068175186 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077291689 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076708187 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077481987 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076074119 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068472517 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068421407 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068108132 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068288278 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068737826 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074187962 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076084087 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067831353 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08697983 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068356876 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068143037 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076072995 seconds)
  done (took 6.219859468 seconds)
done (took 129.940772907 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.18535977 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.169989278 seconds)
  done (took 1.732804494 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.069035134 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.097488931 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.077680689 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.129652071 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.067263597 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100176971 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099197786 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.078829392 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.067041371 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.066587318 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.066738676 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068523608 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.13115706 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066885227 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.066888912 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.069021594 seconds)
  done (took 2.712842448 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.097462939 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.158248489 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.100725336 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.065966693 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.097752578 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.073853242 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.065275083 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.07574753 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.071966657 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.065727413 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.073566608 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.071409544 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.065608281 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.07160883 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.07185279 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.073941441 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.065876262 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.073786519 seconds)
  done (took 2.834610722 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.101286874 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.091381288 seconds)
  done (took 1.590621685 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.163894589 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.107397281 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.152494283 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.349097563 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.169243496 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.231509906 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.130389266 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.131521177 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.120920594 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.125897559 seconds)
  done (took 3.076438257 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.099335617 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.152909338 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.257822939 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.116146986 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.073019488 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.095592518 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.117268525 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.078369829 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.08188256 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.081354164 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.081690255 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.077484147 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.100082281 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.074613293 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.074478183 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.076503908 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.103550571 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.073088169 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.07421349 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.077721919 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.100565142 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.066362332 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.07426271 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.073342522 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.078036351 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.07858318 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065767137 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.066086312 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.077471588 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.074025534 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.077216831 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.093817695 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.078124719 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.108277239 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.070282145 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.10957747 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.076958295 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.074458199 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.074023726 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.074952258 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.079568008 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.079636426 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.072707034 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.07647479 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.06554391 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.076848737 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.066120886 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.066046378 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.078714948 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.067114381 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.078553263 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.077623749 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.108485783 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.068798054 seconds)
  done (took 6.044072542 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.101510152 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.106079819 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072242845 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.109254642 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098160165 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072374793 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.101581361 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.091128851 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.102862568 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.093222449 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.089025214 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.071475527 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082897814 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.084076378 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.109683391 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.102452738 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.096053302 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071224583 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.102036208 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.10284359 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069029225 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095727346 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.091952807 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.101973134 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067914564 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071433106 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.06891345 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071365733 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077762168 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.07867648 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.07072494 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.102135023 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.084849972 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078598295 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067988827 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068842805 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069036831 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.079918246 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.097473429 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079267364 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.077804105 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068085529 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068626771 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070287268 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.091321671 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068587105 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.079230218 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.080496603 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.079117892 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.07013375 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071039819 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.068738502 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070565076 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080586089 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.078234701 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.081742444 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080396626 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068847838 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068943247 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072713886 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080982052 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079611801 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079526376 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.092677965 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079599761 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069004279 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080603938 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.085241461 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069124351 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070790158 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069315553 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.07078373 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.07053355 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078542213 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.078685264 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070836644 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070548717 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068810874 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.079979549 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078755487 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068676053 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077644109 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068002315 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069346807 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070782539 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070920943 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.078230074 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.080732723 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.071705944 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068987725 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.07078769 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069335329 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.067750696 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.077831776 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.080879972 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.0797564 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.079363624 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069980755 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.079524504 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.079158622 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070629564 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.079527532 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.199167987 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072616532 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071909579 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079644972 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.07883141 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.081037128 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070555942 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069760467 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.079846668 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08151511 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.070635187 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.080064767 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.082058806 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.080367456 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.069158127 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081469791 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069689301 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080240218 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070806607 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081600318 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070532492 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.080615056 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070116578 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068784957 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.070112673 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.079744058 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071650079 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069743478 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070977294 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071379015 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.08029266 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.083779795 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072603037 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081950164 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.079584823 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.072335984 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079697197 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070069336 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080625431 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071060838 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071412217 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068269099 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082739847 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069261019 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.06992409 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.07089933 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.082450912 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070046244 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081312089 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.079340515 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068494961 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082848043 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080612367 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.078826243 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.081649153 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071120246 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069763033 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069070047 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070711088 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.079713511 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080467901 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072479698 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069476187 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.079271341 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.080074267 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067877486 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.078959486 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078626488 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.078851085 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069434177 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070588035 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080611144 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.081640311 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.079020906 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.078579306 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079026676 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069364326 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078022321 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078577065 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069292404 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084790125 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068959617 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.083264499 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.079730796 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077168182 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079361694 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.081030181 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.081003517 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.08042975 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.083711181 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068674346 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069162547 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.080319167 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068998648 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.07064068 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.078485375 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.071054909 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.071144149 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.08422958 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069044976 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.079373987 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.067597998 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.078705703 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067445303 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070320244 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083034242 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068516037 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.203140597 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.081385396 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.072058765 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.079008713 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082303697 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.080108849 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069640051 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071494966 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.081873931 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.080111258 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.070143451 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069673424 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071795493 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.079356326 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.078175795 seconds)
  done (took 19.00438689 seconds)
done (took 38.39779986 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.213562152 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.151984424 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.206440517 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.119321837 seconds)
  done (took 2.184972274 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.123985677 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.103060154 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.095442361 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.065531515 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.103014134 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.06553359 seconds)
  done (took 1.987943211 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.316737674 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.213814982 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.184844439 seconds)
  done (took 2.142271123 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.200807262 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.189434784 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.397500724 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.255036513 seconds)
  done (took 2.578817847 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.144748509 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.090548556 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.067280492 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.083950617 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.136425483 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.163550359 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.102544156 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.127687733 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.079061799 seconds)
  done (took 2.479732181 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.146837899 seconds)
done (took 12.949294881 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.095135599 seconds)
    (2/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.119685139 seconds)
    (3/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.101888135 seconds)
    (4/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.133824033 seconds)
    (5/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.235986049 seconds)
    (6/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.07627565 seconds)
    (7/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.086789923 seconds)
    (8/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.110366781 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.082105955 seconds)
    (10/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.076859528 seconds)
    (11/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.078262939 seconds)
    (12/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.074159502 seconds)
    (13/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.103478974 seconds)
    (14/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.221110874 seconds)
    (15/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.13779497 seconds)
    (16/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.220264042 seconds)
    (17/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.208802997 seconds)
    (18/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.075426069 seconds)
    (19/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.238959547 seconds)
    (20/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.195088751 seconds)
    (21/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.186155465 seconds)
    (22/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.087286678 seconds)
    (23/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.189876911 seconds)
    (24/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.078083667 seconds)
    (25/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.095962542 seconds)
    (26/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.151547013 seconds)
    (27/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.171717372 seconds)
    (28/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.072502169 seconds)
    (29/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.076843698 seconds)
    (30/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.103119782 seconds)
    (31/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.076293392 seconds)
    (32/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.072218527 seconds)
    (33/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.076101216 seconds)
    (34/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.072868658 seconds)
    (35/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.073682012 seconds)
    (36/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.074108356 seconds)
    (37/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.073621109 seconds)
    (38/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.126296713 seconds)
    (39/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.066231458 seconds)
    (40/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.121138423 seconds)
    (41/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.161437321 seconds)
    (42/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.098763391 seconds)
    (43/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.191107221 seconds)
    (44/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.071554572 seconds)
    (45/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.065797599 seconds)
    (46/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.0899904 seconds)
    (47/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.180875552 seconds)
    (48/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.072805567 seconds)
    (49/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.072553917 seconds)
    (50/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.071900109 seconds)
    (51/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.052800688 seconds)
    (52/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.145718751 seconds)
    (53/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.089508395 seconds)
    (54/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.151605205 seconds)
    (55/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.210582468 seconds)
    (56/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.067518276 seconds)
    (57/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.098567654 seconds)
    (58/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.051345601 seconds)
    (59/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.095083766 seconds)
    (60/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.077848968 seconds)
    (61/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.201011912 seconds)
    (62/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.139273349 seconds)
    (63/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.140633769 seconds)
    (64/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.072616405 seconds)
    (65/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.140046754 seconds)
    (66/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.065405095 seconds)
    (67/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.075654092 seconds)
    (68/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.145575938 seconds)
    (69/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.152351822 seconds)
    (70/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.075438571 seconds)
    (71/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.155501311 seconds)
    (72/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.103860539 seconds)
    (73/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.091828335 seconds)
    (74/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.092271592 seconds)
    (75/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.111519767 seconds)
    (76/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.088702037 seconds)
    (77/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.051458073 seconds)
    (78/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.092648744 seconds)
    (79/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.15028364 seconds)
    (80/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.069870889 seconds)
    (81/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.208480509 seconds)
    (82/309) benchmarking ("sort", BigInt, false)...
    done (took 0.333199617 seconds)
    (83/309) benchmarking ("sort", Int64, false)...
    done (took 0.067545111 seconds)
    (84/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.071070103 seconds)
    (85/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.052758055 seconds)
    (86/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.151244081 seconds)
    (87/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.158794512 seconds)
    (88/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.054818428 seconds)
    (89/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.091492866 seconds)
    (90/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.177505999 seconds)
    (91/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.109178113 seconds)
    (92/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.073949873 seconds)
    (93/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.101986696 seconds)
    (94/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.078004999 seconds)
    (95/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.053513071 seconds)
    (96/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.063332249 seconds)
    (97/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.098206385 seconds)
    (98/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.150448658 seconds)
    (99/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.114993181 seconds)
    (100/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.113747342 seconds)
    (101/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.068153139 seconds)
    (102/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.052110533 seconds)
    (103/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.063536259 seconds)
    (104/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.09588446 seconds)
    (105/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.089301399 seconds)
    (106/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.063280437 seconds)
    (107/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.110465538 seconds)
    (108/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.053459523 seconds)
    (109/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.069872947 seconds)
    (110/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.066695782 seconds)
    (111/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.092823 seconds)
    (112/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.188688956 seconds)
    (113/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.052668835 seconds)
    (114/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.313832147 seconds)
    (115/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.09289388 seconds)
    (116/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.073685856 seconds)
    (117/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.168388125 seconds)
    (118/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.137332278 seconds)
    (119/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.076173233 seconds)
    (120/309) benchmarking ("sort", Float64, false)...
    done (took 0.126832002 seconds)
    (121/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.053241437 seconds)
    (122/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.078166365 seconds)
    (123/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.073968559 seconds)
    (124/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.076421923 seconds)
    (125/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.127288967 seconds)
    (126/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.140495986 seconds)
    (127/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.099726153 seconds)
    (128/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.05254506 seconds)
    (129/309) benchmarking ("sort", Bool, false)...
    done (took 0.134201476 seconds)
    (130/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.07404761 seconds)
    (131/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.120808615 seconds)
    (132/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.185629152 seconds)
    (133/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.079222177 seconds)
    (134/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.072597234 seconds)
    (135/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.067584907 seconds)
    (136/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.051511252 seconds)
    (137/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.051404269 seconds)
    (138/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.071235581 seconds)
    (139/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.131519008 seconds)
    (140/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.071928727 seconds)
    (141/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.108116334 seconds)
    (142/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.074183057 seconds)
    (143/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.072329885 seconds)
    (144/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.18227831 seconds)
    (145/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.071299615 seconds)
    (146/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.113475019 seconds)
    (147/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.087123914 seconds)
    (148/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.148897492 seconds)
    (149/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.09331559 seconds)
    (150/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.072243094 seconds)
    (151/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.068580295 seconds)
    (152/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.079779379 seconds)
    (153/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.065107194 seconds)
    (154/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.061641045 seconds)
    (155/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.05204422 seconds)
    (156/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.068907927 seconds)
    (157/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.076673964 seconds)
    (158/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.065668801 seconds)
    (159/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.072757102 seconds)
    (160/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.061010244 seconds)
    (161/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.065438808 seconds)
    (162/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.067826915 seconds)
    (163/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.052270715 seconds)
    (164/309) benchmarking ("sort", Float32, false)...
    done (took 0.127356487 seconds)
    (165/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.171926125 seconds)
    (166/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.074425836 seconds)
    (167/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.053240462 seconds)
    (168/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.089130161 seconds)
    (169/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.098484828 seconds)
    (170/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.187912436 seconds)
    (171/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.066495758 seconds)
    (172/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.052559038 seconds)
    (173/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.06767982 seconds)
    (174/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.111350535 seconds)
    (175/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.067132107 seconds)
    (176/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.068131319 seconds)
    (177/309) benchmarking ("sort", Int8, false)...
    done (took 0.141172606 seconds)
    (178/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.065637816 seconds)
    (179/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.134361814 seconds)
    (180/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.062139983 seconds)
    (181/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.150781813 seconds)
    (182/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.065646 seconds)
    (183/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.051441769 seconds)
    (184/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.052756584 seconds)
    (185/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.052314948 seconds)
    (186/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.072068045 seconds)
    (187/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.06430172 seconds)
    (188/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.065669702 seconds)
    (189/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.072477647 seconds)
    (190/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.148645525 seconds)
    (191/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.108424439 seconds)
    (192/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.050840492 seconds)
    (193/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.051560696 seconds)
    (194/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.174722686 seconds)
    (195/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.052188161 seconds)
    (196/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.066072293 seconds)
    (197/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.052253042 seconds)
    (198/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.065485413 seconds)
    (199/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.051313862 seconds)
    (200/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.066515815 seconds)
    (201/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.071605413 seconds)
    (202/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.137091461 seconds)
    (203/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.065573036 seconds)
    (204/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.116313089 seconds)
    (205/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.166550781 seconds)
    (206/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.050814572 seconds)
    (207/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.072556349 seconds)
    (208/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.137656297 seconds)
    (209/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.067384008 seconds)
    (210/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.078464434 seconds)
    (211/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.080028848 seconds)
    (212/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.070959859 seconds)
    (213/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.053457822 seconds)
    (214/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.068564039 seconds)
    (215/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.063767457 seconds)
    (216/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.106697122 seconds)
    (217/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.064842521 seconds)
    (218/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.165130979 seconds)
    (219/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.051216308 seconds)
    (220/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.052606626 seconds)
    (221/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.065332738 seconds)
    (222/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.104729374 seconds)
    (223/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.064666769 seconds)
    (224/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.070338081 seconds)
    (225/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.069901008 seconds)
    (226/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.073503407 seconds)
    (227/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.062313894 seconds)
    (228/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.07180297 seconds)
    (229/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.086186866 seconds)
    (230/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.065358787 seconds)
    (231/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.127275737 seconds)
    (232/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.066828257 seconds)
    (233/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.06467628 seconds)
    (234/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.086378939 seconds)
    (235/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.07036836 seconds)
    (236/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.185841022 seconds)
    (237/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.066113118 seconds)
    (238/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.148658768 seconds)
    (239/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.05145116 seconds)
    (240/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.051032949 seconds)
    (241/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.070598177 seconds)
    (242/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.063397204 seconds)
    (243/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.065140004 seconds)
    (244/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.051680307 seconds)
    (245/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.065363975 seconds)
    (246/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.064119763 seconds)
    (247/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.066007867 seconds)
    (248/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.063750483 seconds)
    (249/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.069034284 seconds)
    (250/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.065967868 seconds)
    (251/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.051929124 seconds)
    (252/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.052122143 seconds)
    (253/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.132096502 seconds)
    (254/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.051058618 seconds)
    (255/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.09456583 seconds)
    (256/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.051539067 seconds)
    (257/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.07158108 seconds)
    (258/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.086829696 seconds)
    (259/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.051260183 seconds)
    (260/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.053353114 seconds)
    (261/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.067091962 seconds)
    (262/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.072297672 seconds)
    (263/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.068033201 seconds)
    (264/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.051048348 seconds)
    (265/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.051313289 seconds)
    (266/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.072756293 seconds)
    (267/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.090267707 seconds)
    (268/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.080460702 seconds)
    (269/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.064653557 seconds)
    (270/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.064764598 seconds)
    (271/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.0534635 seconds)
    (272/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.106546468 seconds)
    (273/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.173498167 seconds)
    (274/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.071245197 seconds)
    (275/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.052237297 seconds)
    (276/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.051169427 seconds)
    (277/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.078007512 seconds)
    (278/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.051991599 seconds)
    (279/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.052975473 seconds)
    (280/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.072143989 seconds)
    (281/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.07104531 seconds)
    (282/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.083941771 seconds)
    (283/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.064941447 seconds)
    (284/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.077162669 seconds)
    (285/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.052039981 seconds)
    (286/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.091563407 seconds)
    (287/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.064437189 seconds)
    (288/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.064668966 seconds)
    (289/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.064922058 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.071971158 seconds)
    (291/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.063398945 seconds)
    (292/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.051984234 seconds)
    (293/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.063368085 seconds)
    (294/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.070843465 seconds)
    (295/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.07174519 seconds)
    (296/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.104356556 seconds)
    (297/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.050745901 seconds)
    (298/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.050939501 seconds)
    (299/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.070928469 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.069816912 seconds)
    (301/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.053966867 seconds)
    (302/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.051420856 seconds)
    (303/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.106135078 seconds)
    (304/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.050728232 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.070013296 seconds)
    (306/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.130399774 seconds)
    (307/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.050682522 seconds)
    (308/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.050637361 seconds)
    (309/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.084699062 seconds)
  done (took 30.424442298 seconds)
done (took 31.866816551 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.092516827 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094878386 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.076315196 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.095365519 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.083597142 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.079038376 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.074541741 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.081099654 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.082386176 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.084433617 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.081032659 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.056679454 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.07653905 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.076217288 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.076657199 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093721326 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.080461953 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.074733833 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.075107789 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.066271968 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.074655523 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.067798558 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.069004567 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.05619406 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.079219759 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.073462259 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.073963209 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.07605216 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.067242891 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.067401354 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.070257414 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.074683066 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.067160617 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.079541552 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.073300274 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.074700325 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.075842129 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.077485158 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.068451035 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.066984335 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.075398196 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.067083559 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.073663125 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.074808017 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.072614448 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.072332244 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.074707757 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.079249735 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092700116 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069574697 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.075348567 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.076706379 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.077364799 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.073429152 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.07037409 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.074063923 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.071141331 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092318582 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.073912152 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068740406 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.074546319 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.074304275 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.071780825 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.07361345 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.073402839 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.075741737 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.075941924 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.071776284 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.075701948 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.071855181 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.066235282 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.073729748 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.069532087 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.066512648 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.076383666 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.077602595 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.065374689 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.072023966 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.073449609 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.072145072 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.065679455 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.068304782 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.067801932 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.072236428 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068311279 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.055490481 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.070095693 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.072554888 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.065663614 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.073926869 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.072827493 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.073054925 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.067832839 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.076359852 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.065489266 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.071484046 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.066752545 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.066617792 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.067475741 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.069947024 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.066148894 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068795496 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.07548084 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.067324443 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.071859015 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.079746744 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.0664259 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.07232832 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.065186825 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.065446736 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.08059176 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.075797087 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.066785056 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069043343 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.065358703 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.073742813 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.065439926 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.066127446 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.066097117 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.066250757 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.072158173 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.066634268 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068663068 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.073350369 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.07830539 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.066058938 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.068875412 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067987973 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.0658627 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.071431863 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.06594703 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.066170994 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.202015957 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.062627512 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068816483 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.066178939 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.073981935 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068643328 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.073624026 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.067146772 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.073989735 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070882017 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071269904 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.071416712 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.065414444 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.059249336 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.06863544 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069281267 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.068787779 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.067073386 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.068104735 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065887193 seconds)
done (took 12.826940382 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.067546386 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.144208345 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.100141028 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.095697835 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.086717417 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066908887 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.076652702 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.10241333 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.068712522 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.103386206 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.087529589 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.08512962 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.113279976 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.065415004 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.06605298 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.070062124 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.067844398 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.082442515 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.101346405 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086697236 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.109849408 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.066212249 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.09624353 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.090618886 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.087715627 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.102329132 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.066856902 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.070332481 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069628797 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.091835403 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.086964266 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.070036111 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.067337292 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.101435432 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.092974471 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.084077871 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.066548719 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.083050277 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.067567351 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.066557041 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.082182362 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.099170519 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.080662396 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.081529562 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.070288112 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.069757412 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.067960481 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.084301815 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.089478971 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.079713078 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.087792148 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.104383304 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.069166264 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.066522747 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.065296981 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.086334227 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.066022935 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.069292483 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066577928 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.069022 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.066860951 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.070230098 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.081660235 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.088397514 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.070356587 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.081037559 seconds)
  done (took 6.935606551 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.083904108 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.091515398 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.083135118 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083687423 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.066872389 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066942748 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.067037397 seconds)
  done (took 2.122306037 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.066933004 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.089427242 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.090247654 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.089464682 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.085222552 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.087531275 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.07634735 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.067055243 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.081143298 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067870822 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087973197 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.102495947 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.067939263 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.073760469 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.091110224 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.067091651 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.091318865 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.067521372 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069909236 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.090864714 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069311621 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.083369839 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.070575161 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.067636743 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.081041809 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.067404049 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.113787463 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071188817 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068614411 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.070008171 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065232952 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.107535863 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.080715522 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.075947245 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067147619 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.081283763 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.081795328 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065489727 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.083189068 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.072212768 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.081037019 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.067474621 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.067938995 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.065595146 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.071482144 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.077713159 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.068505143 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.067592997 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.069551774 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086963832 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.067798761 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.08063144 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.071824398 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.069687603 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.068829866 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070825776 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.076762606 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.067787528 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086427338 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068163186 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.083581964 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.083008906 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.080654516 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.083397532 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069364381 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.080548847 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.080836027 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.069338883 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068488763 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069972683 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.083326503 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.065165501 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.068629841 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.077639228 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.068460056 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.09005582 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.089575897 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068313937 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.075997478 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.067742979 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.067183906 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.06724467 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.090462272 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069169563 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067086351 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.07130889 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070235319 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.065600619 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.066125455 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.070072215 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.065517246 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.068306634 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.069822278 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.070165852 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069715295 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.083014277 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.06904341 seconds)
  done (took 8.901233987 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.069579032 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068979797 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069933784 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067881855 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068087656 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.068756841 seconds)
  done (took 2.015611976 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.095223436 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.070325757 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.081141975 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.072933234 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.105475812 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.087132341 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.087705191 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.079487319 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.084300422 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.079254071 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.087109732 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.089295313 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.093314659 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.072900408 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.087185438 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.07223053 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.087637094 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076354321 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.07916425 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073905061 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.087423924 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.073172068 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07418805 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.08212131 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.076292673 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.072464147 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.067930117 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.079603991 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.079248942 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.079771939 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.073693647 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.076310999 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.071223823 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.079204219 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.087568267 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.071721862 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072838124 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.077788497 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.073472668 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.076440817 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.088587145 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073585915 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.075719312 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.077564418 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.079184067 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.071310324 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.077912844 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076820785 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.087240838 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.078110788 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.07724336 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.07198752 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.075982063 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.077096789 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.07096812 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078728964 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.077473886 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.087140344 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.0727141 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.070981321 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.069739202 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.076076463 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.078409302 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.076007509 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.079444192 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.077754292 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.070862542 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.073021156 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073584361 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.072369072 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.077442912 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.069788056 seconds)
  done (took 7.216094116 seconds)
done (took 28.7565682 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.546241985 seconds)
  done (took 2.115261291 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.606239097 seconds)
  done (took 2.199296661 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.729788714 seconds)
  done (took 8.323805966 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.397964532 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.47887462 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.699273455 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.1320935 seconds)
  done (took 3.347620198 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.663136901 seconds)
  done (took 2.263445243 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.210520333 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.199145001 seconds)
  done (took 2.018348366 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.379444247 seconds)
  done (took 1.975318157 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.117466248 seconds)
  done (took 2.715806379 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.265415359 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.164954264 seconds)
  done (took 2.036518862 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.465851803 seconds)
  done (took 2.071179615 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.889082717 seconds)
  done (took 6.496497561 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.215686794 seconds)
  done (took 1.859558566 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.242566634 seconds)
  done (took 1.843554014 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.734336812 seconds)
  done (took 3.334235946 seconds)
done (took 44.198720043 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.079697083 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.081551174 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.080922018 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.077995458 seconds)
  done (took 1.906845982 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.077049501 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.07359729 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.07759126 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.073403256 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.076611935 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.072933273 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.074519252 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076829093 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072079911 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.072651794 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.072908469 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.072870601 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.075098637 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.07461182 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.071780907 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.075099497 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.07597266 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.072275074 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.07562899 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.072532616 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070948561 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.075280225 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074855714 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071904663 seconds)
  done (took 3.382522928 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.078241529 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072897307 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.075195738 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072714183 seconds)
  done (took 1.908998372 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.077366931 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.092408923 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.089339198 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.07821956 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.09233932 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.08664209 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069542713 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068843939 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.073167154 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.077589876 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067685691 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.096127675 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.087737607 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.076634391 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.07936108 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.066149561 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068296682 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.087233697 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.076928528 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.077151729 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.070488797 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.076967319 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.068346373 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.088526231 seconds)
  done (took 3.499242822 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.078045052 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.103801945 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.077793749 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.088035152 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.089379183 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065436802 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.074560083 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.089149509 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.122690809 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065316831 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.07009525 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065600742 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.072632053 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.065386596 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.076258466 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.104890113 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.107863188 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068574289 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.095743413 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.06542368 seconds)
  done (took 3.263106237 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.072655603 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.070161923 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.065560079 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068993936 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077469624 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072363096 seconds)
  done (took 2.043612929 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.067987546 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067281831 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.0673555 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.06788959 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.071938879 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.067597838 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.065889693 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067287929 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.067017671 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.067125043 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066571802 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.066111932 seconds)
  done (took 2.421957644 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.413614758 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.068652753 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.069877465 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.06627135 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070839366 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.066619162 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.079987604 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067979642 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.091241754 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066396895 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066771561 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068542099 seconds)
  done (took 2.81156673 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208626879 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076557708 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238520471 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137853191 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111978006 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115729206 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104467432 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114100703 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.144626891 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102435226 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169285914 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16759752 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107269509 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13828013 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089399378 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.098283328 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157198955 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16343248 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103931023 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166698263 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14543721 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124985308 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1474203 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101642974 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106342538 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122562804 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.071106926 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080071287 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171990651 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13203566 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147559779 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111781502 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09433341 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177696425 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171743357 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144021066 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135370263 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084321201 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.103131801 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.13506563 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201519791 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.089310603 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165785167 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.247568422 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081083334 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134967236 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122318984 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.120339015 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.108761189 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090009224 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148235234 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185407726 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.140641369 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087779393 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112616729 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116767315 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.117855318 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104394222 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183583521 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162606965 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129446036 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.071221613 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10011256 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154957113 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13323932 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.110088 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.12815433 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094530273 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13537101 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154824549 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119547474 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144814476 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.129281444 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088885289 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119594259 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140367271 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128911804 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17140431 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125653278 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.072679186 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125530077 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103689335 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081529709 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.142816774 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075354476 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176555737 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099523445 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.107173467 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.114467349 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109073474 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10982054 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163179796 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145154625 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.244784097 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.065887981 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105905468 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.120768875 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149808678 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08792806 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109690734 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117736264 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.078653345 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140581623 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.075385472 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124552482 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.076115018 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127250032 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134613107 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.075669768 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123205346 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101693472 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.101038789 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134259515 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161349649 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089837143 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082538849 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16883588 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124005483 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.105166451 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145285639 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157849563 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.099094684 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103368684 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15080478 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181987645 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089855067 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16439088 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108078642 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083903898 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.088140225 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12443218 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112930959 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.122841377 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082709573 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.119602516 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169812392 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.075417865 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095503626 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135100179 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079196591 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081131031 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104404225 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101494193 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.095411679 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.100985595 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.1050586 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139003103 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124180419 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104977713 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.270915922 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09971246 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171298381 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090450325 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.10105007 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104851954 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.070416307 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.139970759 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158732704 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080639936 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168204142 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.125395661 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106301217 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121291296 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083382206 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141486805 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079102667 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.071188046 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14551341 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111035214 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112000975 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.151537231 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105090471 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.13019282 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.121013484 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135330175 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134194373 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.13012876 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106231301 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.08886402 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112189528 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126802203 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.074301878 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.092225632 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.080856515 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104582677 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.0959433 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083479435 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144219706 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125965009 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100603809 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112378205 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097296242 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147739763 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.076781441 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130005862 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.120111233 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094474154 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.153464339 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15342617 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132191407 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099923904 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146635126 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.07060947 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073929944 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.233351599 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125315496 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083959395 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083626922 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118426627 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147857991 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131182128 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13899077 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112602908 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122768822 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155768536 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.06953672 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.116092081 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14933123 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123236591 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.10402504 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090011298 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.099529622 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143348735 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109394913 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185233998 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115058871 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128026592 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154926796 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.099486955 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080679318 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10412947 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137335195 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106414268 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145794207 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105934586 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088656298 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110765891 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.074429351 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100863701 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128253389 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120522673 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136770612 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.115500538 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134091324 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077604694 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117912193 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121447044 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123722581 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.064285637 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121553727 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164110943 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095101495 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119239851 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153893504 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079289147 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.125398111 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.324437607 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148891502 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085237989 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111143232 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119582185 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12933366 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122152103 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140788028 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109178686 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136296502 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10965614 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.085725341 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088653539 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09856878 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10587708 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.095214659 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.108937164 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.115103541 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.095713643 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134414033 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104809029 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110273356 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119747715 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.096385285 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.090318012 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097585178 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175754709 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120269559 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174788366 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.099220971 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.146826612 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165860392 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075044595 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079379818 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.078301877 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140040045 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084314645 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131740011 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.098231418 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106582302 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125017842 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143369209 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095293888 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.068959052 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10886823 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135183726 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112521844 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098578291 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.10505811 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16487975 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.100618903 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079212931 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114190525 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104976627 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10259967 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.320356207 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.062438869 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100233277 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076416194 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081572669 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129594464 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155234153 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.081380299 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.102803698 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120232074 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112457946 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129362323 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102713867 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100213818 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.116070699 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152139184 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130319637 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.089821878 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113275008 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131332775 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159026669 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106991395 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.096150298 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173331676 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153765001 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.161941108 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.089177028 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117663551 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115693626 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108824491 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156987188 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083154844 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165442491 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082253148 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137479637 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104560646 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090717435 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130904993 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.099080398 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088411791 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148405607 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118490179 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082597451 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078323622 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118550804 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121067009 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107498395 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.07542313 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141905102 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.073247172 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13378291 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169625678 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081622621 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104500085 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.242969686 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081661162 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109511991 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103925723 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089678642 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.098614955 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175074098 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.089111683 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152339277 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143437001 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114567429 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138862791 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100371413 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.636565673 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.078194896 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15304926 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118781026 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17502776 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097693322 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118894779 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109221965 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125773429 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146325763 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10579069 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.176425528 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134465984 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.11657673 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079964778 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103346043 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103442007 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.089842054 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105638974 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114110991 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116737232 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.094042088 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.116357058 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124262029 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.082220199 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.095247014 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15669308 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117734994 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145783011 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141223378 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084765222 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118594703 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140573162 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080336388 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.123384867 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15337149 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106040824 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097635116 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.080677399 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.248247568 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173255184 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.072932403 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165721523 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120660345 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111159263 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114059576 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.116620717 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133296618 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109112639 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122276055 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09432388 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.111651297 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113120253 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082400753 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.077846816 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106381404 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114078462 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.097591402 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099889093 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.097620942 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152718003 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.071419005 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096678348 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103888725 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148032527 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1762421 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.088599893 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08323411 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121201065 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11420313 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.114360618 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121904376 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.079309171 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082579181 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.082451428 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.077691499 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.108500987 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112940566 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104811335 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112601772 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165084876 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.082592486 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.226274649 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09531384 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105010015 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069692723 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.079022275 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096766824 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097804273 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108924653 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101100402 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172009495 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.095639745 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.09061517 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093248981 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.073192996 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08298217 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.274160286 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11285733 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120933138 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097842408 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.062945542 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111176537 seconds)
  done (took 59.439449327 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.109768785 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.082995224 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.097076412 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.15014676 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.123917788 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.212618649 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.156985929 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.199896684 seconds)
  done (took 2.860762434 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.067904964 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.094386147 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.100545469 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.08356758 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.066059182 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.068798675 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.226280288 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.080629197 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.06671466 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.088997874 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.079288383 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.068923154 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.425239496 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.066542374 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.068038989 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.063086108 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067289652 seconds)
  done (took 3.501603899 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.36888848 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.367978274 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.374590084 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.073224989 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 2.824442879 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.08889019 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 2.083945209 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.096782323 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.072182998 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.283842974 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.694964198 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.092386335 seconds)
  done (took 14.152337432 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.076099476 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.070222805 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.084553236 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.083999915 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.073014775 seconds)
  done (took 2.111110548 seconds)
done (took 104.944665383 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.080052108 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.394684387 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053746616 seconds)
  done (took 2.198489693 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.08285668 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.085271221 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.085118819 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.083451737 seconds)
  done (took 2.064047738 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.074901278 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.076726136 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.08496058 seconds)
  done (took 1.95596983 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.22624559 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.140165131 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.08681017 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.082202945 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078101869 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.079407089 seconds)
  done (took 1.967115717 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.072453133 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.075652163 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.072651404 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076373607 seconds)
  done (took 2.020758752 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.076309479 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.052594453 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.055973288 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.056287629 seconds)
  done (took 1.965599127 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.086072537 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.078972849 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.079086975 seconds)
  done (took 1.968504108 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.107203227 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.085397998 seconds)
  done (took 1.9167869 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.08175317 seconds)
  done (took 1.80683848 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.098548795 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.113710583 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.129670775 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.109800238 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.137486141 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.109358046 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.086366115 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.087531718 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.077698595 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.087513916 seconds)
  done (took 2.76201115 seconds)
done (took 22.881022373 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.078825589 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.363616927 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.36118011 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.091713405 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.667379547 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356598973 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.985615009 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09258711 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.113812251 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067760373 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084242494 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.648642961 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.972153575 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.320409012 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.961057199 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.324423646 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.651498441 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068388137 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068022581 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068484099 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.968623129 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067816807 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068108367 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068569574 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.648128686 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.371090439 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068278222 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.324310346 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068132524 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070095235 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.355400489 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068620075 seconds)
  done (took 16.205259648 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.070507546 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.118953064 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074216504 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083728726 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.071044628 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069807296 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.07153818 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069228609 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.120074649 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068268086 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085098396 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068210922 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.072061789 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.06900607 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087102724 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068453616 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.06900719 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068730609 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068406368 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.06864638 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.08625801 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067821201 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068480211 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068977877 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068136445 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.079527401 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068186587 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068655236 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068489933 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069931906 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071369819 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.06890248 seconds)
  done (took 4.134851424 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.114729923 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.125827259 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075132926 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.103118774 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.112916661 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070876374 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.14390696 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092865346 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.128527076 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068647424 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08462366 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068295428 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.101966862 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069557621 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087944404 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.069098037 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069345614 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068923822 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068691209 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068615984 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087201609 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068099558 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068642088 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068680747 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068831734 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081420756 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068938814 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069098079 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068674225 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070586926 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.072080102 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068656801 seconds)
  done (took 4.392584014 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.07221148 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.075848258 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.083408767 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.08346011 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.070201295 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.072399115 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072653758 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.069796957 seconds)
  done (took 2.343309698 seconds)
done (took 28.807348652 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.078458891 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.068747181 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.072916499 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.08163957 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.073148323 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.078962581 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067090099 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.075223246 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.072351589 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.073066211 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.075107408 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067871726 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.071000934 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067582491 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073650768 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.068179062 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.079452818 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.072125265 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.07961678 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079389288 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.069695874 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.073303308 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.074011468 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.079029458 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.079500506 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.079340906 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077557479 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.07332606 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.06989148 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.070450043 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.076797162 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.083941805 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068729279 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.079693534 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.06831509 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.068135865 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071747871 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.06812927 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.079437931 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.076999409 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069694577 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.076240541 seconds)
  done (took 4.832422919 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.088545332 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.09098709 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.085025658 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.062171498 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.067268588 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.06501489 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.088478069 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.059808071 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059631502 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.088064442 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.05658407 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.059684511 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.0626264 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.054423994 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.059400787 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.05730057 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.061797494 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.055820762 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.05912126 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059830262 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.058082364 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.054562841 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.060256702 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.065669876 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.05665714 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.062202462 seconds)
  done (took 3.448160317 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.074723492 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.084815031 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.08843804 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.127128503 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.104293338 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.076943817 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.078176767 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.092490301 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.085799982 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067299058 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071248464 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093883568 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.088226999 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.073918819 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.06823061 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.084808373 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.081920416 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069375244 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.073577103 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.090930975 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.084376772 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.083955269 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.093336766 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.080790968 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.067259265 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.069991839 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071536566 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.081658511 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072363116 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076892908 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.07211356 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.071757949 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.06981367 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.079305911 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.07176885 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.069431351 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.09029548 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077242105 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.077827441 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.068272339 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.071114615 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068587342 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.089177703 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.122447918 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.067286239 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.074308116 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.075373061 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.076622556 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067574814 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.085937856 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078477756 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067488747 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.070517673 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.06710287 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.067932654 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.08022824 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.069382638 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.070601341 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076678048 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.071071374 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.085533676 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071683658 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.083480446 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067449752 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.075318875 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.067013814 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068721898 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.066917923 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.092513017 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.069085662 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.108341947 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068755865 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.068474155 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.07651121 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.075459644 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073807764 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.068175677 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082395541 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077819235 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.071047013 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.075825406 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.071191653 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.070699417 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.087600615 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.0699099 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.069321212 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068454985 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.074100409 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070699234 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.069156473 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080984077 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067604215 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070634041 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.084653065 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067418505 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.06895856 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.073882611 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.072648723 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067353671 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078796397 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072622153 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068514275 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.076925985 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067802761 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070497503 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.077542312 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073970589 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.067108611 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.072595582 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.074234063 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068446895 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069499872 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.071252138 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069904596 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.076990066 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074331457 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.072285025 seconds)
  done (took 10.679189821 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.161847865 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.155297706 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070971294 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.147328072 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076383894 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.079566925 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.159387294 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.094284735 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.067958268 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.06887556 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069282085 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.110644987 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.105985602 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.115663206 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.079099149 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067765941 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.083111876 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.11410565 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.149348095 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.143426182 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.084018094 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076615657 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.069940041 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.069130898 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070544139 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.078813921 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.085730605 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.077628776 seconds)
  done (took 4.516068021 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.082067235 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.101578418 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.074206426 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.089895621 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.091117419 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067626005 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.070399067 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.06950279 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.080859416 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.079836976 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.068009098 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073789643 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.075298855 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.071959043 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.069498928 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.07512432 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.075700647 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069797576 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.071608709 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.073768992 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.078493414 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.081612451 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071814642 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.067543228 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.074338002 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.067729089 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.064880209 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.085331139 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068410929 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.090232907 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.066129882 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.07528184 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.081430732 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.06879746 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.068270089 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.067903891 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.067889324 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.068099075 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069751802 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066461017 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.06674945 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057737291 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066928855 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.080694992 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.073790605 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.056820481 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.072787361 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072873639 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.073209329 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065445146 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.070783676 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070615584 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070989279 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.07505887 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.073207688 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.07369327 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.069368733 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.066133859 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.075809817 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.068237557 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064960106 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.066380962 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.072512973 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.066784965 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.075876921 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072585024 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.066435805 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.067380317 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069597546 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.07365713 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.067648903 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070974318 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.065545727 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.069805228 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.072952102 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.069221824 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.068916111 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.066699385 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067472107 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067975831 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.055662085 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067665614 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053827108 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.070964053 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.066255861 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066512721 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.067778415 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.07240166 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.080732074 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.069074912 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073718781 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.068991728 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.067013476 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.070875307 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.061034863 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070332219 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.083467677 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.083806054 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067849266 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.066012114 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.081805326 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072271837 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066985027 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.056377177 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.075209869 seconds)
  done (took 9.282504163 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.094001105 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.089063817 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.070519219 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.083397113 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.09138168 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.086771955 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.075131144 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.077287533 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069819571 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.083193659 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.073602017 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.076329389 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068515449 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.077066531 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.093316859 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.076948138 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.070351824 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.077011302 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072269609 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.100934549 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.082798664 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.082086229 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.074986298 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068429488 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.07632659 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.080610252 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.089411602 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.080340941 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.078321915 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.075826562 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.080283176 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.089209299 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.074511682 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.072386126 seconds)
  done (took 4.505553976 seconds)
done (took 39.000748632 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.82925221 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.001348558 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.824235397 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.198522097 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 7.048433324 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.927007733 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.943091838 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.821347624 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.035242918 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.867177748 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.08182407 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.867881524 seconds)
done (took 66.207186745 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.857324119 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.973779739 seconds)
    (2/2) benchmarking "String"...
    done (took 2.096835149 seconds)
  done (took 5.83791412 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.136052417 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.391208049 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.071042863 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.822787131 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.829877584 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.132891829 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.623732798 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.358706237 seconds)
  done (took 30.998329246 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 5.069149757 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.025397896 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.516972626 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.550527242 seconds)
  done (took 15.978712689 seconds)
done (took 64.659141038 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.838343008 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.848403977 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.835641321 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.808339966 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.88413967 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.834853438 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.306998231 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.86983458 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.824009205 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.814685802 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.827449842 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.272744265 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.837474305 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.326931324 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.84158464 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.832193058 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.828793704 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.51162217 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.981215131 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.839490424 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.835536613 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.874237415 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.82406461 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.83341974 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.851666748 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.828113981 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.2761192 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.826838727 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.447724739 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.830076374 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.85587655 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.855383148 seconds)
  done (took 205.870857282 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.825234722 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.928870273 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.988693174 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.855623613 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.384790338 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 3.026141843 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.949298733 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.432610094 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.829201883 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.829026586 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.121151854 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.828277809 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.15222621 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.850785 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.83725724 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.93451694 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.98641556 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.155159966 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.830988483 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 3.077634442 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.852171097 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.999821491 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.985891817 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.105680166 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.847915841 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.939273369 seconds)
    (27/36) benchmarking "syrk"...
    done (took 7.006081292 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.845123613 seconds)
    (29/36) benchmarking "asum"...
    done (took 3.022255552 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.975172664 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.859872659 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.869491249 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.053742244 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.702404585 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.829009975 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.833782251 seconds)
  done (took 173.322730272 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.969970474 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.826096863 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.827134196 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.827618509 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.841002153 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.827654682 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.949277517 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.954942467 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.286775032 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.332297129 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.879975748 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.650274114 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.827018051 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.89554579 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.840892832 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.828840021 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.842607265 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.853062814 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.830472719 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.830652862 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.954296097 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.840309732 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 22.104756428 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.837889865 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.829576396 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.836163228 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.202606831 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.826976231 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.834080393 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.091558257 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.829333699 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.829551275 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.724318191 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.78822267 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.920715435 seconds)
    (35/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.829858274 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.834277816 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.831396348 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.828526877 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.049959496 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.830458785 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.830125193 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.833415548 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.002112399 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.829530128 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.954947432 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.83062753 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.330954322 seconds)
    (48/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.829084253 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.82947366 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.830751568 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.87121539 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.509428855 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.829577265 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.829317454 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.832133446 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.829298884 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.829371486 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.836732879 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.67308731 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.902922445 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.832498975 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.83381276 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.835243566 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.83202078 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.902645955 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.829761464 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.037131388 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.887610524 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.954329656 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.953011697 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.832240165 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.899926488 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.924871837 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.831074246 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.831399483 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.831069935 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.832923027 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.913279544 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.832917279 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.957145767 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.839145527 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.832065045 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.88219609 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.901017749 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.831568444 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.738696777 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.833137225 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.831248081 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.144595062 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.8989408 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.832622333 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.83184812 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.830798646 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.960935047 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.955900495 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.614578706 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.833366109 seconds)
    (98/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.832831704 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.796149711 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.833953107 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.974422711 seconds)
    (102/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.834454794 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.833308937 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.022762396 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.834291258 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.914568945 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.837085058 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.834980089 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.83275996 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.864774733 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.832770128 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.892425356 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.833748845 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.204347388 seconds)
  done (took 408.620034971 seconds)
done (took 791.604192077 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.512520549 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.474965856 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.598984793 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.504273254 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.478426479 seconds)
  done (took 14.345001473 seconds)
done (took 16.118211477 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.919306117 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.925628298 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.858011105 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.923509155 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.853928827 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.922969451 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.903925027 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.859863021 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.889010954 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.858809077 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.891890314 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.859883691 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.846484432 seconds)
  done (took 26.291328926 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.090438702 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.077383585 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.904058338 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.075515506 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.88272234 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.067364814 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.998089056 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.003278233 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.989515884 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.852033202 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.848552489 seconds)
  done (took 23.566223522 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.072829656 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.103046757 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.908740317 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.071969121 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.884124056 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.074215723 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 2.00056976 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.987170977 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.989559553 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.851456289 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.848882442 seconds)
  done (took 23.571514171 seconds)
done (took 75.203925727 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.844073072 seconds)
  done (took 3.622953409 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.866328135 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 2.003697258 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.850380334 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.847081131 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.842961871 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.847197697 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.848761189 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.843222475 seconds)
  done (took 16.729282285 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.844137609 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.843724689 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.841996904 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.844135935 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.84183733 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.84445953 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.843450469 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.843279622 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.844933254 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.845564655 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.843432212 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.844840881 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.842725833 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.841160143 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.841011999 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.843405211 seconds)
  done (took 31.273036491 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.842182607 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.838871116 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.840719622 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.841459577 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.841363366 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.83998759 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.841116806 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.839810986 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.840065957 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.841047035 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.840687382 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.83996131 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.841663868 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.839291811 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.841475959 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.842243393 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.840494837 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.840807051 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.844922574 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.84076862 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.842376253 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.840302586 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.842235343 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.84234505 seconds)
  done (took 45.968727185 seconds)
done (took 99.370391013 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.522323256 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.278923408 seconds)
  done (took 8.579877538 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.84443631 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.842240538 seconds)
  done (took 5.498771152 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.8432846 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.842963058 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.84307022 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.843486217 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.842410592 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.844118534 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.843060517 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.842957457 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.844527865 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.841687706 seconds)
  done (took 20.210047375 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.842127763 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.841604837 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.839411234 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.842884743 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.840752336 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.838045798 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.839810263 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.840452677 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.841296838 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.836516748 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.838785857 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.837026029 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.840147187 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.837524761 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.841916392 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.835997419 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.837489313 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.837575597 seconds)
  done (took 34.88687285 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.849433295 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.837412501 seconds)
  done (took 5.459104514 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.835815164 seconds)
    (2/7) benchmarking "second"...
    done (took 1.837404443 seconds)
    (3/7) benchmarking "month"...
    done (took 1.836341933 seconds)
    (4/7) benchmarking "year"...
    done (took 1.835962592 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.835197613 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.834620784 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.834953722 seconds)
  done (took 14.623395483 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.838928377 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.994288784 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.063900087 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.504427322 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.839020977 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.842149691 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.762747118 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.841059354 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.842077854 seconds)
  done (took 20.300250718 seconds)
done (took 111.33447778 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.655460828 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.833059305 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.229710441 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.885433353 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.886477881 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.130831325 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.833523833 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.052766887 seconds)
done (took 43.277023903 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.92591285 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.302158382 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.31399898 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 5.418589698 seconds)
  done (took 11.808250584 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.816173742 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.354830833 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.869597127 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.425256387 seconds)
  done (took 20.246975883 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.202193252 seconds)
    (2/2) benchmarking "read"...
    done (took 2.190650919 seconds)
  done (took 6.16973552 seconds)
done (took 46.921735192 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.838788385 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.837834389 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.836396578 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.836563981 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.838761932 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.836332732 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.836520263 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.839253925 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.838543091 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.839520344 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.838391207 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.839555363 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.83642405 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.837139803 seconds)
    (15/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.83654507 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.839596972 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.836432254 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.837282675 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.839979174 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.837212144 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.840018846 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.840164833 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.836982184 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.837315888 seconds)
  done (took 45.884833916 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.839655837 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.838835209 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.840142954 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.840169215 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.837915102 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.84086154 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.84039684 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.839100409 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.840200613 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.840878927 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.837847114 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.837769359 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.841034774 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.838376975 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.840958657 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.838740978 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.840424128 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.838521483 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.841386208 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.840026838 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.841730027 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.838160376 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.838420801 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.840326211 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.839330546 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.839374745 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.842659586 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.840561889 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.84074424 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.83948556 seconds)
  done (took 56.967277946 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.845780784 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.849581347 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.841025023 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.841960401 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.841366768 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.841268236 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.841456891 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.842227045 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.840621991 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.841371041 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.842240282 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.842090617 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.841841914 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.842326195 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.841462177 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.842394324 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.841858992 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.84213277 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.842396045 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.841954982 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.842589834 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.843334374 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.84266482 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.842419218 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.84236675 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.842002362 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.842474104 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.842663372 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.841641527 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.842920194 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.842615304 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.843702614 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.844461045 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.84408416 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.843720418 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.84320431 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.848138212 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.85175621 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.845036835 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.843473777 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.843769482 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.843212648 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.843744983 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.84385065 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.844250731 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.845428332 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.84485788 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.843912949 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.844099794 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.844420899 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.843980261 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.844967801 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.844579891 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.844368416 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.843623103 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.844724275 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.84419427 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.844144403 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.845224181 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.844018415 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.844617879 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.844975197 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.845605593 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.844511881 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.844811523 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.84552917 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.845517634 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.844423012 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.844945555 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.845629418 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.845462572 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.844490871 seconds)
  done (took 134.525663022 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.845504883 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.844070173 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.84229297 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.842248131 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.841707273 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.846085198 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.843528111 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.846468317 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.842759006 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.845854753 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.845762373 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.844472235 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.841847816 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.84513727 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.84530102 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.844020078 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.846899708 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.843940931 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.847105562 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.84704067 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.846221953 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.844174064 seconds)
  done (took 42.361333954 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.847046191 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.847183031 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.843492069 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.847399128 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.844352202 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.846667236 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.847227551 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.847398784 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.848586369 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.844334239 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.844524274 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.847665554 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.844367372 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.844502304 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.844663653 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.845112335 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.847242205 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.844957135 seconds)
  done (took 35.006576065 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.845319642 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.845428106 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.846477524 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.845183378 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.845287901 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.848906415 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.845107701 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.847961748 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.847672733 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.846204282 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.849140009 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.84844232 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.848666886 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.846705473 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.848115853 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.846231096 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.848858432 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.845860157 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.849520871 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.845988524 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.846240547 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.849287455 seconds)
  done (took 42.418173819 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.848716147 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.848803582 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.846278818 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.846989062 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.846272559 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.849305934 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.849955764 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.846680466 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.849803517 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.84825208 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.84594954 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.849386083 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.846899824 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.848148709 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.84643242 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.84687083 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.849693731 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.847107723 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.849291301 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.846853527 seconds)
  done (took 38.739817733 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.849430389 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.850162961 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.848637623 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.849002691 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.848757199 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.848396118 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.849608075 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.849158644 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.849421044 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.84998017 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.849826362 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.848743651 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.84998917 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.849057982 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.849720303 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.849447056 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.849893653 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.850441401 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.849986529 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.849654441 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.851112497 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.849704804 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.850327456 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.849827254 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.849642489 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.850274524 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.849748263 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.850531623 seconds)
  done (took 53.574250885 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.851283761 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.851143904 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.848223633 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.848679591 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.848763637 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.848744723 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.849508202 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.849283341 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.851149296 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.8498414 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.852486016 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.851911862 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.852945931 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.852276868 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.852172979 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.851833303 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.851258859 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.849892834 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.849917463 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.849318845 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.852644123 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.852604124 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.852320725 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.850386875 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.849877908 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.852965586 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.849981125 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.850712634 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.852405489 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.849421863 seconds)
  done (took 57.309597157 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.869625647 seconds)
    (2/2) benchmarking "in"...
    done (took 1.870305356 seconds)
  done (took 5.52523678 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.849803435 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.85335748 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.850844357 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.8502233 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.850473255 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.853540009 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.852819718 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.849623444 seconds)
  done (took 16.596455094 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.852463236 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.853273681 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.85324622 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.853752239 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.851964319 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.852324004 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.858517029 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.854404445 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.852867671 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.854416042 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.859990085 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.860450282 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.855790323 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.85335287 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.852697899 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.854852567 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.852366304 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.85322557 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.85360553 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.853166702 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.853437651 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.855498904 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.855787693 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.852260442 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.856001218 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.863003368 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.859965209 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.855054562 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.853927534 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.857574473 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.854618693 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.85209931 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.855553319 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.854599571 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.854293371 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.854717631 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.860278764 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.854564191 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.858535277 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.854902301 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.854665832 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.853083931 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.855700369 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.856063441 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.856084207 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.855878467 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.854916204 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.853131369 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.854790949 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.858195526 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.861459826 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.85477299 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.852346732 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.858288178 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.856971335 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.860502481 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.85533833 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.85789829 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.865259334 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.864908092 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.867510455 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.864224372 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.857440065 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.854830304 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.865319222 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.880366782 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.861309292 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.852978316 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.85372303 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.855408661 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.861721157 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.868526628 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.864890827 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.856820016 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.857007537 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.856991301 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.856907601 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.858098709 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.861626843 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.859525321 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.856317673 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.85698917 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.86677847 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.880272472 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.857011731 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.857559412 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.856884138 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.857790894 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.859478932 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.867048319 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.857921431 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.858033649 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.85696174 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.857997431 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.859230419 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.857201199 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.855982812 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.858306436 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.856030026 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.857912809 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.858400204 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.860716505 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.866631703 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.858061503 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.857848654 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.862656831 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.858963823 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.857735157 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.863954989 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.85813445 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.858234508 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.858898296 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.864004701 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.856067801 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.861996623 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.867332272 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.858913327 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.860632546 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.858637785 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.859893533 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.869071812 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.886478328 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.859376156 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.859377126 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.863762318 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.870800777 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.859277313 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.860808677 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.859037124 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.857745517 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.858075653 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.859316279 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.861143092 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.860714438 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.859560839 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.860585682 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.857766838 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.859737755 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.859481708 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.86125395 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.862234205 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.860771776 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.861710682 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.862420995 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.860692734 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.859841123 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.866034453 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.860329144 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.862095465 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.861017263 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.85870214 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.86114382 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.861895502 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.860319243 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.861631158 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.860213828 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.85976921 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.860810737 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.862274677 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.860100669 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.861620742 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.862066709 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.865113134 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.860705476 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.864788226 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.861194701 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.859426824 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.861351176 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.862461935 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.862283346 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.862660777 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.860295657 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.865721704 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.869825953 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.862330724 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.861718634 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.8648779 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.862541806 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.861126479 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.86202495 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.864668624 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.870202618 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.86205296 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.86727378 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.862806771 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.863353615 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.863319963 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.862766178 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.861023524 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.861535179 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.866395302 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.871281679 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.874998115 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.871840111 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.864071213 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.867548754 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.864925161 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.866415405 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.866579287 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.863226138 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.864318125 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.864014515 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.862601301 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.86478214 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.864019279 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.862356402 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.863357692 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.864802169 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.864354782 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.862876652 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.864206561 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.864165823 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.863925016 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.861725012 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.864467403 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.863148226 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.86359018 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.861428606 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.862754954 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.864334574 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.865203359 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.864138241 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.870994213 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.862166138 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.86490915 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.865126717 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.863913594 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.864383885 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.865011221 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.866652096 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.864032159 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.870154473 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.864826497 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.865653462 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.869332349 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.865060298 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.864219279 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.866944768 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.864381019 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.863317182 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.868598953 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.874433937 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.865940798 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.865894558 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.865656415 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.86503461 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.865966427 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.872482436 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.864418538 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.865216316 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.868090592 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.867690618 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.863771958 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.866634074 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.867387149 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.867356981 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.868746481 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.867294076 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.866904049 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.866555688 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.866686718 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.865986008 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.866312345 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.869725625 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.874273566 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.871092149 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.866676618 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.868314186 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.866159126 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.871197963 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.865923296 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.866323254 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.867570846 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.879237232 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.874328196 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.872849869 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.868308821 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.867569051 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.870325386 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.868382181 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.87135668 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.866875082 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.867705571 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.86752114 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.867202154 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.865715591 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.867899193 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.868382425 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.86922703 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.869528381 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.872372436 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.868406442 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.866946014 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.86768631 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.86740365 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.868774552 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.868082494 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.87004433 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.871104736 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.870548798 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.867816741 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.867626002 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.873934692 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.868135889 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.869792342 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.868793557 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.869556902 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.868275263 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.869767163 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.868709718 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.873476389 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.876954232 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.872622336 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.877956502 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.87060089 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.878779901 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.869200043 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.873949078 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.877852286 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.867012313 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.868962382 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.869849415 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.869427947 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.875195665 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.869069754 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.870500621 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.874029812 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.869322888 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.869707839 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.871161107 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.869758427 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.870496407 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.869620399 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.876307276 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.872140695 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.874614 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.872158675 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.868278753 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.869801334 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.870709515 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.871122121 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.87617222 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.871240589 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.87021459 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.871190082 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.871416835 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.872310615 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.871805103 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.872281342 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.869414462 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.871232744 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.876447784 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.872584028 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.875838647 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.873167913 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.878427608 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.872340075 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.876903664 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.87164841 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.872271728 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.872118929 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.871668661 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.872889555 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.871568834 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.872385283 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.871724321 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.872847461 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.877463106 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.87158715 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.874309752 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.873465872 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.872746874 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.872695736 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.882021949 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.896380211 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.873373405 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.877468466 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.870402578 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.874024568 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.87682187 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.872702268 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.871889354 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.876676011 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.884313 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.881591389 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.873943419 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.873147248 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.874241257 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.874499329 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.873603107 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.873286502 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.873185931 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.872972535 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.873995881 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.873304344 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.876929192 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.874184962 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.873546636 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.875460278 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.874854691 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.883442513 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.873605738 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.875606133 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.874745351 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.875049634 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.875589484 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.874712426 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.875375372 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.875365697 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.875979184 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.876906229 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.882725248 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.880951177 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.877700739 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.873857344 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.875136583 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.874163427 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.875711613 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.875646747 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.874388753 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.875557942 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.875404831 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.875969738 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.87640524 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.874977111 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.875789647 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.875839448 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.877279123 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.878397685 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.883232959 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.876000766 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.873610507 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.876218015 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.876525394 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.874609054 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.876328882 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.882643094 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.879306023 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.886539795 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.885465062 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.879891308 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.876685649 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.879135594 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.885799879 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.875023956 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.877112528 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.876943236 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.878243764 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.877404401 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.879645297 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.877714954 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.8825056 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.877153067 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.877072004 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.884028864 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.877953211 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.875845549 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.879131977 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.881623719 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.877003387 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.875549178 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.879125019 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.876970608 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.882510655 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.878808729 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.877887869 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.880058164 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.876794594 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.879037018 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.881776882 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.879501408 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.879304079 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.876186214 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.877821452 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.877828625 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.879365923 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.87647268 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.878051457 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.877615598 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.882270975 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.885731744 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.876306983 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.879779571 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.879199049 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.878528345 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.878797694 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.879414811 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.8760789 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.876282027 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.878433277 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.876979987 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.878946476 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.880922044 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.878318126 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.879318511 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.88222067 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.879838402 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.881990764 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.890244197 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.887769813 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.878289494 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.878521317 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.880133616 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.882475896 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.87886218 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.880252474 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.879422801 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.88088037 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.882075291 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.880387288 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.879702846 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.883478673 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.893000101 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.880834261 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.880076788 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.880398954 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.882856458 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.881069747 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.878112466 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.880734465 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.883105683 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.883175945 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.888177034 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.881707289 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.885257128 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.880237078 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.881833526 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.884243737 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.884299203 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.889913496 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.884138998 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.881157012 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.881335019 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.885886416 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.896591563 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.882175315 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.890887453 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.909930975 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.881383727 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.881877879 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.881021441 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.880477349 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.881304814 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.883545682 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.882273637 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.881888869 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.882186586 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.881945093 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.882954936 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.887551283 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.882858863 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.882325845 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.882368506 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.88283188 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.88404607 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.880142243 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.8811725 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.882231704 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.882084907 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.882213822 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.882354247 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.883043363 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.894620409 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.893687368 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.882764424 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.882925736 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.880921269 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.88666208 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.886093202 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.894522594 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.89187713 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.883378937 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.883220752 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.884116712 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.883000068 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.881074943 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.883776893 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.884452703 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.883760041 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.881843016 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.8966038 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.892407189 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.88843052 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.884537514 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.883850198 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.885183198 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.885024607 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.883837945 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.882866428 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.886101062 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.884342553 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.887900874 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.884422777 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.884608309 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.887494258 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.891607348 seconds)
  done (took 1116.519497874 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.88253135 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.881909678 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.882616964 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.881650143 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.881042762 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.882452596 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.882512396 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.882452051 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.882556397 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.88247055 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.883635728 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.88312559 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.884142734 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.883593735 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.883318805 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.883118025 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.883665863 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.882814193 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.883660663 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.883514289 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.884012005 seconds)
  done (took 41.358657499 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.885593484 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.883800633 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.884377772 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.885423916 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.883444628 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.888167377 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.883374222 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.885333794 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.885977379 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.885328902 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.887983299 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.887895246 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.883750487 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.883940833 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.884289115 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.885699865 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.88746952 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.883547006 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.886956619 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.884777712 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.887150649 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.88458104 seconds)
  done (took 43.298015982 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.884998297 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.887007126 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.886258194 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.884571828 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.887126412 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.884791041 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.887527921 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.88728883 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.88709006 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.888474471 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.886492483 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.887955725 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.895447831 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.892817546 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.88967303 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.888152466 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.031629302 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.888001394 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.887522135 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.88772893 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.885782557 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.891150495 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.886827341 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.88666796 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.886712244 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.887601025 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.887611047 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.888204512 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.888210801 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.889054121 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.892791696 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.887208356 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.888902689 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.890568353 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.888184223 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.889490585 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.893448273 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.888531867 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.886743014 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.888941049 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.899397522 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.911253403 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.889196193 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.893683185 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.888449626 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.890030606 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.891896695 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.896714263 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.888089466 seconds)
  done (took 94.542988141 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.889434354 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.890758741 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.886917141 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.889621471 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.890085595 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.889065787 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.889852535 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.890644328 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.887822889 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.887929174 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.891673045 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.885319889 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.884892613 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.887091097 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.888595578 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.885148804 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.886212691 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.88516255 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.885932189 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.886302154 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.885907181 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.888888079 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.888220625 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.885304098 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.889036922 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.886290441 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.886551849 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.888583745 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.887191724 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.885952543 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.888451243 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.889698011 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.889412744 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.886396251 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.886363727 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.88910636 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.88961719 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.887162686 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.889632052 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.886992922 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.890446479 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.890386598 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.89013703 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.889911287 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.887591783 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.887655839 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.887933264 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.886854478 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.888141001 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.890444155 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.890881982 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.8879755 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.890303405 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.887563071 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.890220715 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.890732284 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.888535356 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.887907723 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.891962377 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.888812273 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.887767549 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.89094346 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.887761034 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.891431857 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.891993544 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.88963596 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.887707393 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.890880021 seconds)
  done (took 130.240552308 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.889599119 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.890299274 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.890561996 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.890856863 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.89039189 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.890507256 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.890669296 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.89084227 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.89095814 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.891011793 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.890417866 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.89404037 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.894298515 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.894227903 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.893303033 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.893408419 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.8940326 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.894049796 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.894105402 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.893547951 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.894633532 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.893903842 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.89474149 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.892608526 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.894874148 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.894270866 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.894527896 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.894007769 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.894414686 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.894939567 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.895273238 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.895514598 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.894689481 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.893419584 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.89477218 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.894654528 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.894766348 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.895153828 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.894984249 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.89599871 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.895880219 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.894752876 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.894640188 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.895065066 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.895068972 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.895097298 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.895965367 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.894662211 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.896541707 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.895164283 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.895095777 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.896324904 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.895895536 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.896096213 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.894626933 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.895074639 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.895113515 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.895693532 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.895991111 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.895637459 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.89539793 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.897152645 seconds)
  done (took 119.259882012 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.896961619 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.896570445 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.894178774 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.894574865 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.895850235 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.894747178 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.896504209 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.897518986 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.89584565 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.896812581 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.897350359 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.894654174 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.895138619 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.897921272 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.894883164 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.895951117 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.895432255 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.895943424 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.898485853 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.896313233 seconds)
  done (took 39.750589495 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.89592025 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.898701722 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.895560585 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.895184115 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.897969309 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.895964399 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.897471158 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.899071999 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.895139222 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.899605603 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.89893541 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.899563322 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.89520327 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.89693278 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.899491668 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.896693196 seconds)
  done (took 32.187889932 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.896441806 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.899109303 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.898449302 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.897871022 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.89618805 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.896008418 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.900399326 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.896741048 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.896598362 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.90011426 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.899110456 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.899621562 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.899619862 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.897509821 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.896553226 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.899457818 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.897233469 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.896330894 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.899569048 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.900279937 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.898411176 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.897963305 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.900207263 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.901127605 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.897921799 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.89912232 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.897933101 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.897986848 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.898613888 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.900579947 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.898029041 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.89872692 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.89838888 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.898520576 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.900064766 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.898191813 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.900521759 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.90145143 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.899829084 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.901149226 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.901278575 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.898303705 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.901339436 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.901741119 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.897956497 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.901771626 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.898822083 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.898536532 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.89932593 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.899482694 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.90156258 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.900681343 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.901052012 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.901670046 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.900010727 seconds)
  done (took 106.28368479 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.900524577 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.902198139 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.899328179 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.901423976 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.902581453 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.900323451 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.902477414 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.898868553 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.899968223 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.901549712 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.902005873 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.902298723 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.900006249 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.903502747 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.901323747 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.902381495 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.900672992 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.900787155 seconds)
  done (took 36.055435757 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.900539941 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.900885219 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.904390491 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.900558173 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.900406456 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.90480049 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.902641224 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.903705751 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.903056101 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.901338613 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.901789181 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.903101934 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.904409295 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.903960319 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.901355183 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.902114507 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.904464164 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.903268805 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.901159115 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.900974671 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.904321626 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.902141519 seconds)
  done (took 43.691045739 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.902516352 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.902980386 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.919307413 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.946363667 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.937522278 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.902967186 seconds)
  done (took 13.34614281 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.902586064 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.904081416 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.900551531 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.904105426 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.904781356 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.901541199 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.901020628 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.901141713 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.904335286 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.903786704 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.901295673 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.905033731 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.903841783 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.902012562 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.905551737 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.904273417 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.90364986 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.903486702 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.904202046 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.907284613 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.903538086 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.905365258 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.903475195 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.902999346 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.903215861 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.903733784 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.905603006 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.904240309 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.903271525 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.905359824 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.906331262 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.902169085 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.905875774 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.905177122 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.907067824 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.907074719 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.903195546 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.906292196 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.906479819 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.903420547 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.907478715 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.906271502 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.906822924 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.903563532 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.907156093 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.904444634 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.903932092 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.904527949 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.904212846 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.907228766 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.905423051 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.905447395 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.907737091 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.906526322 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.906709674 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.907618459 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.906394435 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.905421503 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.908346131 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.906506266 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.905421053 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.907989726 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.904756885 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.905685332 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.908584939 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.905710409 seconds)
  done (took 127.561373606 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.905167443 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.905533723 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.904979237 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.907633763 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.906135665 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.907541804 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.90515028 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.904981125 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.90626636 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.905806226 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.907939768 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.904867715 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.906163354 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.907074941 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.906080442 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.906532597 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.906932054 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.906434187 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.906955307 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.909128873 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.906490164 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.905547296 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.906426389 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.908938215 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.907009948 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.908791629 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.907470213 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.905932597 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.907077425 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.906692308 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.906323754 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.908205904 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.907291447 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.907256409 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.90753217 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.907583616 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.908777474 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.907400834 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.907396807 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.90966135 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.906339872 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.910335123 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.907989552 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.907255865 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.908032852 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.906914837 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.907760317 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.908007144 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.907711015 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.909348374 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.908397432 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.907577852 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.908837682 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.90774445 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.907885461 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.907475478 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.90984339 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.908599245 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.909204808 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.911786067 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.909740655 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.908000744 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.912667997 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.908799788 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.908334443 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.90947736 seconds)
  done (took 127.741571268 seconds)
done (took 2602.517727472 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.99697806 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.912588544 seconds)
  done (took 15.752977919 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.073682226 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.025544827 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.909720544 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.914381191 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.910843828 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.933593503 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.927825157 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.910961542 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.909849762 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.910380014 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.910652829 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.093265545 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.910328483 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.910076885 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.911228169 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 2.003355316 seconds)
  done (took 53.01580478 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.914122008 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.914757566 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.925683693 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.917426054 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.914260866 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.925098981 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.9475298 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.918040799 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.948034339 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.928010676 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.983665265 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.926738839 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.914085468 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.963848483 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.927990591 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.929872554 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 2.00167583 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.991738026 seconds)
  done (took 36.736533683 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.994193642 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.917085712 seconds)
  done (took 10.766248387 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.928221909 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.927953107 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.920302316 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.924654243 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.94002373 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.945750906 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.918042062 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.914025452 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.923433033 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.938257745 seconds)
  done (took 71.139775963 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.919904736 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.916506182 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.916468453 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.915457879 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.908351316 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.912590427 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.914935512 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.908346563 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.609102137 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.951775689 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.922404306 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.920421446 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.9156042 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.916702881 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.914381247 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.937476895 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 2.047557308 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.914408701 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.913920665 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.925902108 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.915965364 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.979357145 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.929663512 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.917630747 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.945828884 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.61143817 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.924729887 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.922640571 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 2.04233662 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.914539289 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.916570974 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.91669354 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.918259525 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.296027004 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.19947657 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.916467769 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.925012206 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.92386665 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.915074903 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.035601721 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.916727404 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.923113434 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.910483653 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.194182648 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 2.01930647 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.959579729 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.277020922 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.921841001 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.918996895 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.946149894 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.920280808 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.918459309 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.930574252 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.433961245 seconds)
  done (took 135.31086894 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.911827799 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.491413884 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.076463958 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.912555361 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.195019381 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.156383571 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.912790231 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.962875888 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.913642929 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.163321672 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.140703811 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.033157458 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.914034512 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.911807699 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.912949102 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.911363184 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.063817501 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.98569614 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.915014686 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.911525111 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.948529344 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.180595963 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.041510993 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.915326663 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.936387451 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.143486794 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.042080373 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.033675094 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.204242364 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.911836989 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.981279858 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.914788857 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.911436753 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.912055099 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.080343124 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.024545536 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.014295059 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.914653563 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.912760514 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.913339099 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.579222911 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.138093337 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.027446492 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.052871959 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.168190966 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.146207372 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.562731833 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.91319612 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.553584049 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.112772329 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.123604984 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.17079528 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.044828668 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.916692686 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.246969128 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.913579827 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.912728228 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.179806366 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.149851999 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.031828621 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.916084847 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.9134359 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.91458075 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.231419038 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.918202122 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.027075222 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.917764177 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.915163634 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.028876522 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.034010772 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.149025156 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.161781707 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.947560014 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.639261422 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.122984097 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.20167657 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.990177677 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.180452621 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.9172335 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.915081213 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.011384342 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.674968115 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.128000985 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.232964856 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.182210276 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.959775844 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.52092259 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.915050974 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.164362481 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.166173552 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.144993874 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.162557515 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.084847569 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.113980837 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.916129263 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.916164774 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.114499565 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.050100671 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.920299041 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.280479386 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.167408041 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.646369818 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.94726328 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.22398778 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.056910988 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.920559478 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.543833796 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.916239822 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.118096051 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.960885169 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.918130548 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.916062154 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.165287216 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.780766147 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.916828579 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.741686193 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.984537533 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.921882063 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.185178142 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.919292433 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.162323291 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.921536117 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.22952164 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.479052243 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.962594823 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.114811536 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.164220375 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.737271078 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.220506376 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.234682849 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.044880353 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.181382054 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.817708828 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.918973366 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.203077993 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.919685838 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.91821821 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.086423381 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.920086973 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.074740553 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.920551703 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.181228566 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.945146082 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.090834183 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.921868976 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.197035298 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.966225817 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.973252246 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.921609536 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.052185163 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.920016819 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.951677708 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.103686152 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.922073969 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.917962225 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.518531971 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.919557485 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.06853247 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.220390402 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.945677041 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.991741975 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.448883882 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.919342633 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.016983289 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.949984764 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.518501791 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.918942393 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.145820482 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.922500567 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.863591177 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.918580066 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.231309337 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.148241115 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.924524564 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.920364553 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.715135951 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.667272321 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.920344963 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.096698796 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.636405785 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.57633727 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.142765142 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.923009918 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.054379831 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.924157898 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 4.000336961 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.275257101 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.91852906 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.921600364 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.92131553 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.92089963 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.920833874 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.151896238 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.951773627 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.610556387 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.059716352 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.168212608 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.235685917 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.186111544 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.972328533 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.923936691 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.190219729 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.923457377 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.989322561 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.923837611 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.946661396 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.173412485 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.926626319 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.154615762 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.221798383 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.995031886 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.974482154 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.925017292 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.922770587 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.921835204 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.064968448 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.023808192 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.92593269 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.921525098 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.041996096 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.052492503 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.114109311 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.539512987 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.989616934 seconds)
  done (took 915.261373017 seconds)
done (took 1239.826552081 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.923106694 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.924577739 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.908307755 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.924919644 seconds)
  done (took 29.542526506 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.931620948 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.928596812 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.929467476 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.929042228 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.930493647 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.928734684 seconds)
  done (took 13.440777145 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.029080701 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.925251413 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.923909223 seconds)
  done (took 21.739711004 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 2.000448721 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.343670915 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.036676816 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.380268814 seconds)
  done (took 10.624702856 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.931289785 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.929845068 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.931257225 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.933886419 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.934107254 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.934465166 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.93185627 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.932082696 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.934231136 seconds)
  done (took 19.256093206 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.129716811 seconds)
done (took 100.593462273 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 2.019030186 seconds)
    (2/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.037354898 seconds)
    (3/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.756574695 seconds)
    (4/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.008007735 seconds)
    (5/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.226233648 seconds)
    (6/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.034452553 seconds)
    (7/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.930084677 seconds)
    (8/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.99880552 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.087632347 seconds)
    (10/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.928734372 seconds)
    (11/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 2.006628917 seconds)
    (12/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.952817565 seconds)
    (13/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.342998569 seconds)
    (14/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.912774085 seconds)
    (15/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 3.484118021 seconds)
    (16/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.527983053 seconds)
    (17/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.224399012 seconds)
    (18/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 8.01309284 seconds)
    (19/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.358126321 seconds)
    (20/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.107333536 seconds)
    (21/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.895269439 seconds)
    (22/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.02946806 seconds)
    (23/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.236097964 seconds)
    (24/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.950763167 seconds)
    (25/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.29694698 seconds)
    (26/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.135458257 seconds)
    (27/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.929238644 seconds)
    (28/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.030215853 seconds)
    (29/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 2.029702788 seconds)
    (30/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.566209328 seconds)
    (31/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 2.036536484 seconds)
    (32/309) benchmarking ("perf_sum", Bool, true)...
    done (took 2.022414855 seconds)
    (33/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.92920225 seconds)
    (34/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.947047052 seconds)
    (35/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.019046406 seconds)
    (36/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.946098673 seconds)
    (37/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.945072599 seconds)
    (38/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.014691615 seconds)
    (39/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.920105548 seconds)
    (40/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 2.001276181 seconds)
    (41/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.976143805 seconds)
    (42/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.822078098 seconds)
    (43/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.110355475 seconds)
    (44/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 2.010646929 seconds)
    (45/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.425127345 seconds)
    (46/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.179523413 seconds)
    (47/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.12022855 seconds)
    (48/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.029128052 seconds)
    (49/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.180211931 seconds)
    (50/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.132182313 seconds)
    (51/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.313962407 seconds)
    (52/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 2.021700604 seconds)
    (53/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.16688268 seconds)
    (54/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.206979769 seconds)
    (55/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.810260441 seconds)
    (56/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.975546714 seconds)
    (57/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.917028647 seconds)
    (58/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 3.312349962 seconds)
    (59/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.212311599 seconds)
    (60/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 2.008832265 seconds)
    (61/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.900972882 seconds)
    (62/309) benchmarking ("map", abs, Float32, false)...
    done (took 3.614414369 seconds)
    (63/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.918876837 seconds)
    (64/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.190996824 seconds)
    (65/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.295069616 seconds)
    (66/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.140081242 seconds)
    (67/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.199862768 seconds)
    (68/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.172403024 seconds)
    (69/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.934281106 seconds)
    (70/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 8.017074266 seconds)
    (71/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.623295391 seconds)
    (72/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.946514353 seconds)
    (73/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.717091683 seconds)
    (74/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.97125419 seconds)
    (75/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.202057067 seconds)
    (76/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.923803846 seconds)
    (77/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.315924611 seconds)
    (78/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.610531812 seconds)
    (79/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.230904801 seconds)
    (80/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.034909823 seconds)
    (81/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.899487023 seconds)
    (82/309) benchmarking ("sort", BigInt, false)...
    done (took 6.926280282 seconds)
    (83/309) benchmarking ("sort", Int64, false)...
    done (took 5.627476827 seconds)
    (84/309) benchmarking ("perf_sum", Float32, false)...
    done (took 2.002768895 seconds)
    (85/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.291010464 seconds)
    (86/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.326094939 seconds)
    (87/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.177731896 seconds)
    (88/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.732433813 seconds)
    (89/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.518144065 seconds)
    (90/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.29686671 seconds)
    (91/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.20320625 seconds)
    (92/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.942188427 seconds)
    (93/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.913287585 seconds)
    (94/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.927562625 seconds)
    (95/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.492836937 seconds)
    (96/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.131479844 seconds)
    (97/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.298915742 seconds)
    (98/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.901763625 seconds)
    (99/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.199507663 seconds)
    (100/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.082297131 seconds)
    (101/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.962196448 seconds)
    (102/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.011416531 seconds)
    (103/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.971027992 seconds)
    (104/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.90159175 seconds)
    (105/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.568869355 seconds)
    (106/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.107756235 seconds)
    (107/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.126733697 seconds)
    (108/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.462367873 seconds)
    (109/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.432425573 seconds)
    (110/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.29415055 seconds)
    (111/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.115124254 seconds)
    (112/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.897808655 seconds)
    (113/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.096109816 seconds)
    (114/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.84347448 seconds)
    (115/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.720779016 seconds)
    (116/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.949190347 seconds)
    (117/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.809125577 seconds)
    (118/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.913574965 seconds)
    (119/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.040536597 seconds)
    (120/309) benchmarking ("sort", Float64, false)...
    done (took 5.712542584 seconds)
    (121/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.988676776 seconds)
    (122/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 7.010993425 seconds)
    (123/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 8.092197191 seconds)
    (124/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.994340471 seconds)
    (125/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.067502135 seconds)
    (126/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.933282131 seconds)
    (127/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.059587682 seconds)
    (128/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.899472125 seconds)
    (129/309) benchmarking ("sort", Bool, false)...
    done (took 2.367911467 seconds)
    (130/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.93763294 seconds)
    (131/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.590332475 seconds)
    (132/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.995154187 seconds)
    (133/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 3.507953918 seconds)
    (134/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.179028443 seconds)
    (135/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.909261354 seconds)
    (136/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 3.197540802 seconds)
    (137/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.084836896 seconds)
    (138/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.130990091 seconds)
    (139/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.914956563 seconds)
    (140/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.175092552 seconds)
    (141/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.414374071 seconds)
    (142/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.034038296 seconds)
    (143/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.937847955 seconds)
    (144/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.254779151 seconds)
    (145/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.062801854 seconds)
    (146/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.458178902 seconds)
    (147/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.931453756 seconds)
    (148/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.895296467 seconds)
    (149/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.965673272 seconds)
    (150/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.014864086 seconds)
    (151/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.74843208 seconds)
    (152/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.720856022 seconds)
    (153/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.2733044 seconds)
    (154/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.209772575 seconds)
    (155/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.085748041 seconds)
    (156/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.981401815 seconds)
    (157/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.249136316 seconds)
    (158/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.155837648 seconds)
    (159/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.941337615 seconds)
    (160/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.090909909 seconds)
    (161/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.195028056 seconds)
    (162/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.065147778 seconds)
    (163/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.21211337 seconds)
    (164/309) benchmarking ("sort", Float32, false)...
    done (took 5.69524759 seconds)
    (165/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.916453798 seconds)
    (166/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.937094465 seconds)
    (167/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.263701089 seconds)
    (168/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.188527205 seconds)
    (169/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.585837803 seconds)
    (170/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.2007543 seconds)
    (171/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.240756748 seconds)
    (172/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.208076887 seconds)
    (173/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.982919497 seconds)
    (174/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.429089541 seconds)
    (175/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.998415676 seconds)
    (176/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.999013552 seconds)
    (177/309) benchmarking ("sort", Int8, false)...
    done (took 4.869488008 seconds)
    (178/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.162681649 seconds)
    (179/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.916071599 seconds)
    (180/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.133034332 seconds)
    (181/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.075310955 seconds)
    (182/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.247538306 seconds)
    (183/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.019227026 seconds)
    (184/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.81289216 seconds)
    (185/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.234717664 seconds)
    (186/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.943746765 seconds)
    (187/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.030302592 seconds)
    (188/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.509123183 seconds)
    (189/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.262300048 seconds)
    (190/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.101363465 seconds)
    (191/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.998932922 seconds)
    (192/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.143427917 seconds)
    (193/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.809373401 seconds)
    (194/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.914511485 seconds)
    (195/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.064905071 seconds)
    (196/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.919259226 seconds)
    (197/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.275457196 seconds)
    (198/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.591756774 seconds)
    (199/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.092773145 seconds)
    (200/309) benchmarking ("perf_sum", Float64, false)...
    done (took 2.000776106 seconds)
    (201/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.940830684 seconds)
    (202/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.914347251 seconds)
    (203/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.919409866 seconds)
    (204/309) benchmarking ("sort", BigFloat, false)...
    done (took 8.279141599 seconds)
    (205/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.915663024 seconds)
    (206/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.52489079 seconds)
    (207/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.958348214 seconds)
    (208/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.327333684 seconds)
    (209/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.984399204 seconds)
    (210/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.421942221 seconds)
    (211/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.848258195 seconds)
    (212/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.937619314 seconds)
    (213/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.898603028 seconds)
    (214/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 2.054288962 seconds)
    (215/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.972390972 seconds)
    (216/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.092249892 seconds)
    (217/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.160162152 seconds)
    (218/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.916993078 seconds)
    (219/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.214649306 seconds)
    (220/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.311274021 seconds)
    (221/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 7.0133458 seconds)
    (222/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.132181376 seconds)
    (223/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.220901174 seconds)
    (224/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.947136053 seconds)
    (225/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.055080812 seconds)
    (226/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.837396125 seconds)
    (227/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.044326759 seconds)
    (228/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.159719385 seconds)
    (229/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.820267291 seconds)
    (230/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.248865524 seconds)
    (231/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.025844993 seconds)
    (232/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 2.024818499 seconds)
    (233/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.073067494 seconds)
    (234/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 8.251329456 seconds)
    (235/309) benchmarking ("perf_sum", Int64, false)...
    done (took 2.027530719 seconds)
    (236/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.516716526 seconds)
    (237/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.918959242 seconds)
    (238/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.078544241 seconds)
    (239/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.138851397 seconds)
    (240/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 4.005325573 seconds)
    (241/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 2.006203194 seconds)
    (242/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.957185598 seconds)
    (243/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.206593663 seconds)
    (244/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.069423325 seconds)
    (245/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.556252912 seconds)
    (246/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.956390481 seconds)
    (247/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.917188975 seconds)
    (248/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 2.082954209 seconds)
    (249/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.523360559 seconds)
    (250/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.917430255 seconds)
    (251/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.128062933 seconds)
    (252/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.155070455 seconds)
    (253/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.817145757 seconds)
    (254/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.238953457 seconds)
    (255/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 8.276900398 seconds)
    (256/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.364532674 seconds)
    (257/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.947005855 seconds)
    (258/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 2.001974543 seconds)
    (259/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.366116404 seconds)
    (260/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.902785663 seconds)
    (261/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 3.449992715 seconds)
    (262/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.93757491 seconds)
    (263/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.936109892 seconds)
    (264/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.295363466 seconds)
    (265/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.274207032 seconds)
    (266/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.932245009 seconds)
    (267/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.918248843 seconds)
    (268/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.803181469 seconds)
    (269/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 2.026392519 seconds)
    (270/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 2.018587508 seconds)
    (271/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 7.014337689 seconds)
    (272/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.117170265 seconds)
    (273/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.92281339 seconds)
    (274/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.94685447 seconds)
    (275/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.311079439 seconds)
    (276/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.936478405 seconds)
    (277/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.488896955 seconds)
    (278/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.555796238 seconds)
    (279/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.904216894 seconds)
    (280/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 3.818432004 seconds)
    (281/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.328516675 seconds)
    (282/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.935394352 seconds)
    (283/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.306729586 seconds)
    (284/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.609377321 seconds)
    (285/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.790450533 seconds)
    (286/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.969409137 seconds)
    (287/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.322633179 seconds)
    (288/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.182224591 seconds)
    (289/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.591739657 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 2.011757494 seconds)
    (291/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 2.001811045 seconds)
    (292/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.429168576 seconds)
    (293/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.047899605 seconds)
    (294/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.946704883 seconds)
    (295/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.71031336 seconds)
    (296/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.906528467 seconds)
    (297/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.009572204 seconds)
    (298/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.22789851 seconds)
    (299/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.952441469 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.961564057 seconds)
    (301/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.906195914 seconds)
    (302/309) benchmarking ("map", abs, Int8, false)...
    done (took 3.219330223 seconds)
    (303/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.909583608 seconds)
    (304/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.094074989 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.952228829 seconds)
    (306/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.920078249 seconds)
    (307/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.03871263 seconds)
    (308/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.116326749 seconds)
    (309/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.931737694 seconds)
  done (took 1031.624569807 seconds)
done (took 1033.703446068 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.958973377 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.948579587 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.933401152 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.952591679 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.043646722 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.964213285 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.942199899 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.935508852 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.979509299 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.981511398 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.931308846 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.964736635 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.935728798 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.933437937 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.932120941 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.947176925 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.243330959 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.961216034 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.94992286 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.942809027 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.949842727 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.933370363 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.983369339 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.966245074 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.936567121 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.936806208 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.937944541 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.955347758 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.045389317 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.937837917 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.936436197 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.94558172 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.242114955 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.957716033 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.928338626 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.953159975 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.946855717 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.94344368 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.936507309 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.967071853 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.379906803 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.940310506 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.936715435 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.934571363 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.934340639 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.939312273 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.935899365 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.942026183 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.947796027 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.948537565 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.377840994 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.954773723 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.938575647 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.93399856 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.945329973 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.934795216 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.937738544 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.951643367 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.954544809 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.950726764 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.233130959 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.964859125 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.937683445 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.952016315 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.944622731 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.415945548 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.936899004 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.942110934 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.38074793 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.947159513 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.415270909 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.950005298 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.938896058 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.949980609 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.967812062 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.243651826 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.956752635 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.939588679 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.944335037 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.935913129 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.946360931 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.950357717 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.945641741 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.937537154 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.951226377 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.969471537 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.947136007 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.939473771 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.9452416 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.95724653 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.944614052 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.949610392 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.940341798 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.932385822 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.947022501 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.940827034 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.941047356 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.940332231 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.941789954 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.947606342 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.379410455 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.959473233 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.933627855 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.933792837 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.937966708 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.952015554 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.38062108 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.945085879 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.959816071 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.98516977 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.939245476 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.234218694 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.96771927 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.954881119 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.947537517 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.941264284 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.933705328 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.234674771 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.404984282 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.960448505 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.940472044 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.938307907 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.955160563 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.940004875 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.935522753 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.248419578 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.965612844 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.953016395 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.060707664 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.949135686 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.970441083 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.937803139 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.942516532 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.96727787 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.955722565 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.971837449 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.941742663 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.956139576 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.956239839 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.936302518 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.95079615 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.950450108 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.940660032 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.945966162 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.934296237 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.969307296 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.953079028 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.953858239 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.961025582 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.061689901 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.937715561 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.237731474 seconds)
done (took 304.230700497 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 2.007768939 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.932017987 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.04203037 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.937569306 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 2.019360559 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 2.021357696 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.936191306 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.933684959 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.933770013 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.327666589 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.933994735 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.937134229 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.927665442 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.933534777 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 2.021524958 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.937576974 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.93494075 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.303309275 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.937541437 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 2.011724999 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.931580436 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.938173066 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.938053623 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.319964927 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.93071931 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.937796517 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 2.009608564 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.93889653 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.323652694 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.93863908 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.930584227 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.286912813 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 2.029942445 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.967167549 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.940090451 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.947174568 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 2.022733476 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.951979885 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 2.021688624 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 2.021206175 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.042559635 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.968857659 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.934982437 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.931112663 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.942454349 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.94104874 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.937706703 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.976963665 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.934110218 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.937521411 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.281309969 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.950211898 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.938985861 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.938908803 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.938061804 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.969462968 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.938078982 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.940164516 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 2.030776114 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.940553381 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 2.003876976 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.321658641 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.378185516 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.941468344 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.940778128 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.938068084 seconds)
  done (took 189.104566899 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 2.007770552 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 2.012239354 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 2.008153982 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.943760895 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.991885975 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 2.011006548 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.9440087 seconds)
  done (took 15.789982129 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.946252908 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.941453772 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.990436619 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.990697389 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.939750312 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.090999543 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.942136181 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.952261902 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.938852261 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.994158553 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.94170417 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.942840223 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.948939524 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.943074285 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.988958811 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.953330721 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.056868283 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.943015534 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.941962627 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.093441708 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.940163066 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.949160089 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.995868576 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.954487214 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.942386 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.947816158 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.526894842 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.94162922 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.940590232 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.943002878 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.939609216 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.981332854 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.942942595 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.938642688 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.939774051 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.057839032 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.941739418 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.940357904 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.943558597 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.942391597 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.943144457 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.943147637 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.943347605 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.940206825 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.94349779 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.966009281 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.942565154 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.942794721 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.94386099 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.944711547 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.994437073 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.944032524 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.940715141 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.942015871 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.998672325 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.951011466 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.943680378 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.941906451 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.943943546 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.942004299 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.094839891 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.992091017 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.944677896 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.992219455 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.945137794 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.945512331 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.945262888 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.944421189 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.998128486 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.944517356 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.991618481 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.942417149 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.103678052 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.968090906 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.946154249 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.946717601 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.946866092 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.944708879 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.940355582 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.951081734 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.94265663 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.945758379 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.951071189 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.942170157 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.942606912 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.05281363 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.054126268 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.943048616 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.957232839 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.952064136 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.943057254 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.997612874 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.945691065 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.94285661 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.417492935 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.060012757 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 2.000349421 seconds)
  done (took 213.421264365 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.949386269 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.953190443 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.946001488 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.961460264 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.94550603 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.946345289 seconds)
  done (took 13.578622912 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.948199646 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.947508963 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.946796246 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.949939658 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.945608654 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.94638756 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.946027108 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.948097563 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.949819213 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.947236417 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.947507044 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.947097602 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.947571894 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.948141602 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.950714851 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.949293856 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.946788522 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.94539679 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.948178322 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.946562641 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.09944576 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.946178266 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.946462877 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.947504082 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.950026714 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.94786336 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.954926091 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.948525496 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.94787552 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.955304305 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.949780708 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.947046987 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.948107354 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.952319293 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.949760569 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.948904122 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.950920616 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.948710073 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.946031789 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.947505293 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.948595165 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.947862035 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.948686458 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.948939181 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.94882429 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.951619718 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.952336703 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.956346556 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.949022792 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.94974024 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.950510798 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.949206033 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.950070666 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.949359119 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.94999101 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.95324632 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.953367016 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.949231983 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.948933946 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.950601673 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.950313629 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.949323396 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.950437666 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.95256538 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.947563794 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.950635091 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.950507303 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.951560934 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.949247994 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.950921554 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.951189073 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.947415015 seconds)
  done (took 143.373095114 seconds)
done (took 577.148421986 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.217965925 seconds)
  done (took 9.097918089 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.023991254 seconds)
  done (took 9.000604697 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.632348276 seconds)
  done (took 10.512461906 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.950627495 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.974380472 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.953097171 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.949350767 seconds)
  done (took 29.71732062 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.170671535 seconds)
  done (took 9.049434523 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.952599982 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.942232647 seconds)
  done (took 15.832109118 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.016910423 seconds)
  done (took 8.895917718 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.005853246 seconds)
  done (took 8.886322329 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.962078299 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.956898423 seconds)
  done (took 15.808301582 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.927077634 seconds)
  done (took 8.805624292 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.653603202 seconds)
  done (took 11.54000027 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.948657336 seconds)
  done (took 8.837783798 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.949974096 seconds)
  done (took 8.828566396 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.018404102 seconds)
  done (took 9.897961622 seconds)
done (took 166.588784726 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.944193346 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.943625893 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.943821543 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.944127598 seconds)
  done (took 29.654809329 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.983136678 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.982442114 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.984270719 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.994113223 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.986648382 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.983764115 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.975282147 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.975435114 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.994000713 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.986571445 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.984894215 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.986171702 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.98461942 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.976420344 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.986350642 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.985551567 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.994530553 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.984934818 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.976564947 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.986642973 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.950864054 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.9948915 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.986502265 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.951199917 seconds)
  done (took 49.455489441 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.151273468 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 2.022977517 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.105183791 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 2.004181081 seconds)
  done (took 10.164177369 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 2.002575832 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 2.004502004 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 2.017475097 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 2.056081692 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.082389294 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 2.01390665 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.976093019 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.973360472 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.959308105 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 2.005878287 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.079795538 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 2.021148474 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.096234121 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.952062842 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.15516044 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.951506458 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.951133867 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 2.003281989 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 2.054683741 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.087869739 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.953359687 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 2.004247426 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 2.008741989 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 2.02042913 seconds)
  done (took 50.313050564 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.950280833 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.95921776 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.957347881 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.951686282 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.951355017 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.951809137 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.957619898 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.952597369 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.972873972 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.953765155 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.950694983 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.951421842 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.950806927 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.95164512 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.950985142 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.964027187 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.9654794 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.952445734 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.955681655 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.958981091 seconds)
  done (took 40.99310014 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.945013251 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.801562322 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.298131787 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.202765553 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.947414121 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.946624854 seconds)
  done (took 32.024362663 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.964136515 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 2.016078936 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.959010605 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.009383869 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.088671559 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.959694571 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.952763436 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 2.020420124 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.061304201 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.023202493 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.970114324 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.979046115 seconds)
  done (took 25.888034794 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.946632463 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.948421351 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.948823624 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.964692364 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.964346555 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.959212776 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.959926553 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.945729349 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.965198925 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.970368558 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.95972936 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.964398825 seconds)
  done (took 45.384041241 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.036718046 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.992681358 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.94092671 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.628689331 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.337005201 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.161246934 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.561346156 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.279198439 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.952999718 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.223124312 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.871828453 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.051077298 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.207789838 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.465065945 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.980566623 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.405970852 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.231361341 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.145500985 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.969072534 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.569740543 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.00534168 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.129371105 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.645454786 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.998245026 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.164111049 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.086556256 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.211164104 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.949854363 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.080622629 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.979933664 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.961605325 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.949962186 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.225167205 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.315692468 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.050595131 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.961830708 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.723886537 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.664837746 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 7.049157627 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.576171511 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.566100205 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.055542582 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.960830476 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.950544779 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.885479139 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.09298151 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.325519781 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.956178891 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.662186013 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.950458779 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.96246947 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.045834178 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.955466546 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.766690961 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.9006918 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.952784458 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.94950802 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.957735962 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.582565063 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.003299663 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.143019676 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.92599941 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.10091043 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.638577865 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.315708362 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.086994438 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.955864283 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.956407663 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.886761055 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.645438868 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.99969509 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.283144118 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.973247103 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.603693583 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.240571393 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.901055389 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.894714011 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.211121903 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.489385022 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.924788104 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.180739907 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.952745866 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.890790802 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.898511252 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.88806835 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.202237052 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.981088995 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.720351466 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.983127374 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.280672446 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.964684333 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.971669597 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.977362833 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.177217431 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.837207943 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.954213546 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.6608877 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.095517502 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.975609419 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.284375501 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.88872398 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.95814056 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.212054724 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.165756351 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.02342134 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.440612589 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.097875362 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.521291324 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 2.005170772 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.111456313 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.000453437 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.213605385 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.999349531 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.021580057 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.999455224 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.954139102 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.231052407 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.535037822 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.091164316 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.886055087 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.078606293 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.270788129 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.975866931 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.039348802 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.964721714 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.955551515 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.676246078 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.505027253 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.955550225 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.956704624 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.023375482 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.001409733 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.954239094 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.916382499 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.58820333 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.867345125 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.968467305 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.179704412 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.535001259 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.266846962 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.890682405 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.287043362 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.049921352 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.180536628 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.621879462 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.017124685 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.21910572 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.030149855 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.079173025 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.002399912 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.975623835 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.055182174 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.979894902 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.115722111 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.249852224 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.961253432 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.961237587 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.68122051 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.984785567 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.966494623 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.962669276 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.755128322 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.217121058 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.969773273 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.963836825 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.845983708 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.971849269 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.021866383 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.963138955 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.968059551 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.51252414 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.669631812 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.965048734 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.554189136 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.183590299 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.968630903 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.57880351 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.067349344 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.040713186 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.218152622 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.004685106 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.893991589 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.669944177 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.655870101 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.959318054 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.895925405 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.958254612 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.96893552 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.971042193 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.155302817 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.225998257 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.991760933 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.584544628 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.993320603 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.970202878 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.963739446 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.959031912 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.487018931 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.014269829 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.142900583 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.00541275 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.104298389 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.973767996 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.895054199 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.96329576 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.964958674 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.961252342 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.960484038 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.993203627 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.595328771 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.335396252 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.224027092 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.698220531 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.974104298 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.60726569 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 2.009362689 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.966779437 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.673968601 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.126995833 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.991429391 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.981487993 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.971294144 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.660622293 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.663292995 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.53252287 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.281128587 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.24025729 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.379250178 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.152407709 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.988640782 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.29728243 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.897765904 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.517789605 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.018754634 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.300221745 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.918204668 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.045746595 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.595971856 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.288419681 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.976919402 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.190975125 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.334461484 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.580448425 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.08450237 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.173679215 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.996602782 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.106175623 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.922836783 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.248409182 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.10388724 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.561044157 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.150120418 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.292558249 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.531288046 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.068207108 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.960403442 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.605052839 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.038189473 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.676353637 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.141918998 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.152228161 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.798901478 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.411227452 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.96974713 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.193327041 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.296649494 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.112588845 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.085598245 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.902331782 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.97475754 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.974607698 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.96478874 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.963830549 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.845141967 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.220216226 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.976510583 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.89862765 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.085289175 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.238433777 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.859915786 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.969146636 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.963889267 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.244690575 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.515262087 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.126220052 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.067590404 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.482621179 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.973606994 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.899808917 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.899036439 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.659073358 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.973493403 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.941489772 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.162714451 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.056172479 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.878514149 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.045733876 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.212582609 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.224062316 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.979913741 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.222418583 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.22762645 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.663842771 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.990235147 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.065203091 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.551407652 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 7.055154332 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.965599819 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.201215339 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.760893891 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.192069067 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.970717486 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.907383252 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.964900351 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.180325675 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.966948992 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.785237602 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.173314796 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.685524995 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.972739473 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.280715136 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.027273487 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.825561964 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.992234894 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.115101953 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.976140488 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.046217714 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.977011332 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.978135778 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.978402452 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.014517065 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.838097562 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.070103616 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.980584639 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.061197797 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.026045742 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.483148305 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.972296429 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.228069358 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.300480953 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.269946656 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.015274795 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.968755852 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.971821109 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.903088232 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.117367177 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.198357268 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.242143034 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.099676447 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.083785664 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.992318509 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.552297949 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.164904523 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.208271852 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.243336309 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.868856966 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.490788862 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.008779143 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.968174566 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.979423524 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.180027248 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.166234931 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.245869998 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.098771521 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.036378352 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.327600475 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.242537325 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.969398332 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.96962342 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.558508217 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.979113339 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.63094335 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 2.0012523 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.794377232 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.225340841 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.979532278 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.336484317 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.987898328 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.125839578 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.743195788 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.691352497 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.253584373 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.94575036 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.015128736 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.229456952 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.323081881 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.274018465 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.038623459 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.981345207 seconds)
    (390/481) benchmarking "6d"...
    done (took 4.086226799 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.11699171 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.848136068 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.97183674 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.971605137 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.019265098 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.681125284 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.981047249 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.241223623 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.272012811 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.96976389 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.890699404 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.994293712 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.980977717 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.194742406 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.214562803 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.214833748 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.981022696 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.979913883 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.787167742 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.236605931 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.017369984 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.905115725 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.975544518 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.066206426 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.214642282 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.991128566 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.424721192 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.682834929 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.227615824 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.964039863 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.993792362 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.122110709 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.32251241 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.270639727 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.494379589 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.168060408 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.550752374 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.547985759 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.272162059 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.977568442 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.123902174 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.275190351 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.976094282 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.06921124 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.010887666 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.227960424 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.271874577 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.980455278 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.610243543 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.935318348 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.314463229 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.531075077 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.91035285 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.98226854 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.032630697 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.974112438 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.101884955 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.985338988 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.910412353 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.125227664 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.749193238 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.249945739 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.977198916 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.961878622 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.627062181 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.237080458 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.00469451 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.117053293 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.981661304 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.646215414 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.324740419 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.23258307 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.05364011 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.979657201 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.977800308 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.975118385 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.971766626 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.182671978 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.166613351 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.233483631 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.060355249 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.009320176 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.978150117 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.19048922 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.18486203 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.821996594 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.092424283 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.061430321 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.015819867 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.879459249 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.478093449 seconds)
  done (took 1715.063838986 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.984845288 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 7.018953799 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 7.059327235 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 7.027142903 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.014649086 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.107005261 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.98594535 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.995058354 seconds)
  done (took 58.101839088 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.973686033 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.199507435 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.984553216 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.977480939 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.984608281 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.974227842 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.142702643 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.984227259 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.984761338 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.983152339 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.976897016 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.977482086 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.285173445 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.997451397 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.975544846 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.960745583 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.983290225 seconds)
  done (took 76.266551644 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.974563763 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.057160179 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 7.004013857 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.988453505 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.072143447 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.989456569 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.853695365 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.999636354 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.978088401 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.135183426 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.60271732 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.983223579 seconds)
  done (took 88.5518596 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.98535708 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.982846968 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.984110816 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.983459297 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.983185557 seconds)
  done (took 11.833763712 seconds)
done (took 2235.594385534 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.330865226 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.188289343 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.189551582 seconds)
  done (took 6.288365078 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.11762109 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.167280154 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.334817193 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.305339373 seconds)
  done (took 10.834020106 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.258977312 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.355618448 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.177655641 seconds)
  done (took 8.697563882 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.372396015 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.984814578 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.078357541 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.971701613 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.973309898 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.970445345 seconds)
  done (took 22.82166207 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.97508091 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.978455731 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.976179841 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.977839575 seconds)
  done (took 9.814077774 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.95594483 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.695699094 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.956049145 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.970607832 seconds)
  done (took 21.485105125 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.723820685 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.735988538 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.720295334 seconds)
  done (took 10.08647089 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.633713754 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.885865856 seconds)
  done (took 9.426426977 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.232948273 seconds)
  done (took 4.140034665 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.108036102 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.239326196 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.431386354 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.447449649 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.509315364 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.834321749 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.278076936 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.217922553 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.359523677 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.397778485 seconds)
  done (took 25.731063196 seconds)
done (took 145.00315598 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.354132068 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.981095532 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.175912676 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.315985079 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.199715407 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.175417961 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.286036253 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.300656641 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.827354125 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.820369269 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.317662897 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.203720068 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.24394541 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.993124616 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.244285348 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.993873104 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.200416567 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.372882692 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.015225086 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.214297847 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.293070375 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.954025618 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.159654682 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.969908209 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.203320927 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.130016488 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.546865364 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.997470491 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.168612312 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.556119012 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.132371 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.369192299 seconds)
  done (took 171.625949433 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.749623117 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.974356931 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.974132818 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.97373287 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.567481434 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.976038104 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.975689775 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.974313533 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.141784935 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.122694533 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.975495898 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.557988647 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.974299254 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.974281972 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.974647387 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.974537909 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.280776927 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.80074771 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.984111208 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.987146448 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.989730899 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.52723949 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.993802423 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.58439176 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.312434376 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.994406745 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.97574316 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.995052504 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.982070481 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.979885908 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.987713515 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.975159997 seconds)
  done (took 212.122145744 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.976470266 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.97755649 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.976865635 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.976770095 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.97605078 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.979701844 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.978004444 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.976431732 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.754439969 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.769656691 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.011639014 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.98640977 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.990050394 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.977379225 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.992011474 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.977129981 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.993805483 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.995089329 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.989396872 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.992763383 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.000379569 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.826466993 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.012593163 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.829440526 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.012796889 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.992304519 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.977467211 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.991150701 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.995225887 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.996482709 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.994065054 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.978469191 seconds)
  done (took 224.783199233 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.1748572 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.984310423 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.984764488 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.91860602 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.986823838 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.985041144 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.982522494 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.178055831 seconds)
  done (took 20.132253808 seconds)
done (took 630.581723181 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.413469102 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.267014548 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.162726174 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 2.009093295 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.232247383 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.045353871 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 2.006005159 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.068373718 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.727797553 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.072685603 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.681368274 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.020032801 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.775293096 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.026481226 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.132822394 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.061993353 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.533044275 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.624874441 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.185363828 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.06211336 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.175940012 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.935376183 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.079036177 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.76309246 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.795864709 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.976920153 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.185617951 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.544545535 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 2.014718494 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.173046068 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.728066532 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.393374754 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 2.015700182 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 2.001847857 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.055622049 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.037903083 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.356718133 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.0136579 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.127141052 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.742340408 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.053435359 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.614563137 seconds)
  done (took 107.807819508 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.976470756 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.974408699 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.973651431 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.975843779 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.977109238 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.975522926 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.974860021 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.974429565 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.97628722 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.975355317 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.974527817 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.976585164 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.974911863 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.976664047 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.975263778 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.975582069 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.975629141 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.977626193 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.974608154 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.975915885 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.976232528 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.97492056 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.976230088 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.975027272 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.976054505 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.976266672 seconds)
  done (took 53.294585791 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.990127812 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.137800773 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.206755694 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.006251125 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.988166618 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.99193429 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.007879511 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.994715159 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.991305746 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.991529889 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.084136438 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.995596707 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 2.009737577 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.211099215 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 2.004063211 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.992136216 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.991776151 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.990329497 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.147152568 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.005665178 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.009823523 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.994542729 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.008533971 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 2.004185454 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.992290941 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.991788665 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.993498668 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.459238021 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.996812747 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.086226854 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.033220273 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.012557021 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.433530137 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.217400628 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.04316877 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.997891088 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.993839907 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.091264093 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.996283929 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.99055412 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.009373396 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.9952307 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.209967313 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.484649274 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 2.001873132 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.991708602 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.470943654 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.09594073 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.031996449 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 2.001416867 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.213305402 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 2.005583051 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.992453669 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.991758428 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.028932872 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.001692243 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.991764689 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.347092929 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 2.001100809 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.009409695 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.996487085 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.991957933 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.144078985 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.999537107 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.135377078 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.999713659 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 2.000104882 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.992278222 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.211172973 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 2.005450434 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.492219771 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 2.004153927 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.992592666 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.087742683 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.137938669 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.495798853 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 2.004442297 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.148705548 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.446496983 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.015509755 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.999306457 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.450689562 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.020223675 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.998998348 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.995906055 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.9957384 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.99479637 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.037920608 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.009547636 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.426710915 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.495319702 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.360908697 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.01840106 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 2.008364579 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.993947336 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.349587 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 2.001293345 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.994861079 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.20742546 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.506697072 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 2.004980581 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 2.001923514 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.479040077 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 2.007210024 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.012975323 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 2.002057406 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.213597838 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 2.008591822 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.039100075 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.994450427 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 2.001078608 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.996497605 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.013491156 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 2.000525277 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.995765404 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.46657715 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.1059208 seconds)
  done (took 246.395698978 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.989056445 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.99034582 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.989353851 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.989554951 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.988468298 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.993987636 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.997690454 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.987755295 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.993717605 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.988548574 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.988692876 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.988803413 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.991308787 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.99444452 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.035131116 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.996887478 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.600378296 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.989973184 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.989442423 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.989471567 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.644558398 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.994958601 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.990093604 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.990644273 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.99143467 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.99674461 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.997845537 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.027325422 seconds)
  done (took 171.03293992 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.997843653 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.111533563 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 2.00991635 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.023833226 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 2.004468022 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.995372024 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.019524457 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 2.010568135 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 2.000922362 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.99510547 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.995351307 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.055905443 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 2.006404949 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.097497589 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.025387297 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.026467722 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.100337375 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 2.003953775 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.996751315 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.995863663 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.025826662 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.99056136 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.05557007 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.12144638 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 2.012234114 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.11162362 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.998331698 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.998997104 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.997486987 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.112850941 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 2.010309271 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.055976029 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.022518785 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 2.014637913 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.116877089 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.110985899 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.102809501 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.025802698 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.999959236 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.996553441 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.997599603 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.986673287 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.112042052 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 2.013189625 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.998205275 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.104863977 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 2.013450383 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.999972521 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 2.007339206 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.99631156 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 2.011025813 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 2.013593004 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.061791659 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.126321736 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.027697339 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.023119247 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.022203689 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.281415666 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 2.007997602 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.097941438 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.990215814 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.114427896 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.016516713 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.986990121 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.999405618 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 2.003532362 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.027511457 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.02924285 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.102853943 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 2.006290199 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.09991411 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.032553584 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 2.004775437 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.999797115 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 2.001701835 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.117971201 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.112097422 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.03229335 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.034557016 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.028160122 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.993024905 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.999981731 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.988648142 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.016771389 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 2.003368529 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.11590401 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.114166114 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 2.005917944 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 2.002479531 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 2.002184693 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 2.002386379 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.024111384 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.119768777 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.030564402 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.096400618 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.064849505 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.068937806 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 2.011697724 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 2.013644072 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 2.002654491 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.060786881 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 2.012822371 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 2.011459255 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.330725364 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.071868017 seconds)
  done (took 216.091833758 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 2.091379877 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.478756279 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 2.053435772 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 2.054535189 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.273635529 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.419228798 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.787225435 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 2.047380713 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.048763153 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 2.073325737 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.208799816 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.10552365 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.061322479 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.034490283 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.44517637 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.035875797 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.047790907 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 2.068506434 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 2.052387828 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.590947167 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.363938739 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.163304499 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.043900013 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.184474424 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 2.024024128 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.348008782 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.369481194 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.418669227 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 2.081045998 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.390959776 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.371184841 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.732738733 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.250474396 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.291877425 seconds)
  done (took 78.948117134 seconds)
done (took 875.482751028 seconds)
SAVING RESULT...
DONE!
