cset: moving following pidspec: 6383
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.25477825 seconds)
loading group "string"... done (took 0.589472691 seconds)
loading group "linalg"... done (took 7.249739193 seconds)
loading group "parallel"... done (took 0.168968987 seconds)
loading group "find"... done (took 1.143334799 seconds)
loading group "tuple"... done (took 1.990501468 seconds)
loading group "dates"... done (took 1.272251605 seconds)
loading group "micro"... done (took 0.237690083 seconds)
loading group "io"... done (took 0.958664497 seconds)
loading group "scalar"... done (took 38.336748636 seconds)
loading group "sparse"... done (took 12.366993148 seconds)
loading group "broadcast"... done (took 0.968310789 seconds)
loading group "union"... done (took 13.287449762 seconds)
loading group "simd"... done (took 4.455008824 seconds)
loading group "random"... done (took 8.971485639 seconds)
loading group "problem"... done (took 1.951574081 seconds)
loading group "array"... done (took 21.213368246 seconds)
loading group "misc"... done (took 1.919303964 seconds)
loading group "sort"... done (took 3.211140732 seconds)
loading group "collection"... done (took 18.003722224 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.534140104 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.139917559 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.11774797 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.13826766 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.183140346 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.134402623 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.144764804 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.086570571 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.021906438 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.16686559 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.138336734 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.484348327 seconds)
done (took 5.048483703 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.201525158 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.086592878 seconds)
    (2/2) benchmarking "String"...
    done (took 0.095559689 seconds)
  done (took 0.883558022 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065547118 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.126087534 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.079970919 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.067732066 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066222001 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.079838619 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.06686765 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065857251 seconds)
  done (took 1.262122254 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.074291959 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068441075 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.083715047 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.067448097 seconds)
  done (took 1.002186264 seconds)
done (took 4.134436845 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.903892887 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.238302639 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.188635276 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.452595817 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.147725927 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.188363533 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.667696044 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.345360064 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.215091911 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.101185126 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.107391528 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.385587874 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.110287218 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.670682674 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.077685135 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.108758974 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.160358567 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.464839877 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.083399912 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.084046952 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.106343371 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.147154012 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.103407023 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.080390229 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.170697014 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.069010801 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.147139392 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.095707585 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.068228357 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.245110112 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.189475614 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.682055461 seconds)
  done (took 10.550109869 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.097234229 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.115364223 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068764291 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.139193957 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.101993808 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.085690112 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.071234654 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.08272939 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.090685746 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.158140179 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.113895013 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.105863659 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.081827968 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.070043837 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.100162927 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.211003355 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.105394149 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.084317397 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.085921373 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.076562209 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.121294881 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.081995854 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.093705105 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.077450127 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.151424445 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.196545293 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.113943895 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.112859032 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.068761679 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.080367612 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.1308813 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.141221553 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.066574294 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.081109177 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.139052272 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.110052021 seconds)
  done (took 4.534656705 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.030606102 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.159007488 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090756886 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.151934611 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.084455364 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.10936447 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.082084933 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.098819352 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.245169059 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.081553341 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.46529342 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127763306 seconds)
    (12/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.086460036 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.099799497 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069069431 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.06822914 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.083743875 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.513820467 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.112776484 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.140443452 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.085467271 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.091777691 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.084069967 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.34564135 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.082346082 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.065864634 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084235119 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.059765287 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.144754924 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068161806 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.214993128 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.089391926 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.086320938 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101622597 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.194134079 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097772858 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.124265426 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.066353831 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.081549572 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.168629204 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.073818279 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.066152874 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.105098535 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.118052689 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.106477172 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.084158945 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067535998 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.180145842 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.066354047 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.09941357 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.895795928 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.169261092 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.081493523 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.066419742 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.284254851 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.083298121 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.083994987 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.063565875 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.278636819 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.152363639 seconds)
    (60/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.063713873 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.083794703 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.067102657 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.065242849 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.084103788 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.399004357 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.067646979 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.020048996 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.0688582 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.076118184 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.085021411 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.06671002 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.088354508 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071670351 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.100672049 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.066303165 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.067540008 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.082572101 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065707218 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.083306313 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.08452936 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.204238413 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.082744007 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067431379 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064477826 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.103163161 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.109846293 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.069773499 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.065133184 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.115939814 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068091544 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.083161556 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.101477052 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.084329625 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.102788234 seconds)
    (95/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.09231553 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.083713707 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.113870363 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.081438897 seconds)
    (99/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.064382179 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.142959853 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.080265625 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.098233166 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.087114711 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113144328 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.077671678 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082818019 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.152251223 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.066130495 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.064247499 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.083426282 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.064437158 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.082612503 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.068663272 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.095278213 seconds)
  done (took 21.190544632 seconds)
done (took 38.014451515 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.292481028 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.091017415 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.090197719 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.077042868 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.091077891 seconds)
  done (took 1.425803568 seconds)
done (took 2.186378166 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.119456857 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.115853337 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.063304564 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.113004795 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063349491 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.116017916 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.114243237 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.080849128 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.115123371 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064687576 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.111372641 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.064220084 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063799406 seconds)
  done (took 1.991962699 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082457758 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083860242 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084616631 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082463889 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077747449 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082189504 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.079696263 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.103985385 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080120676 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087141302 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064508381 seconds)
  done (took 1.664943775 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082276354 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083284673 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084865905 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081142505 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078164052 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081328845 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080674367 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.10190651 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080278597 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.08851098 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064260392 seconds)
  done (took 1.664829298 seconds)
done (took 6.072855001 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.078714699 seconds)
  done (took 0.829724884 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.700699071 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.517432974 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.083186197 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.133208651 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.221230152 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.152941616 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.438287193 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.109244586 seconds)
  done (took 10.281134361 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.089413431 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.085475562 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.068970597 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.085299019 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.068565812 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.098795817 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.070177372 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.070115866 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.085289773 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.072101082 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.086096664 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.068764184 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.087132992 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.070381432 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.070891818 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.086355261 seconds)
  done (took 2.08534326 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.093609519 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.091997614 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.090215115 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.075679216 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.088573133 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.073180973 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.090880808 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.074039244 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.086043977 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.07257249 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.090324453 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.074344497 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.087327944 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.065937018 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.090507041 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.076386155 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.086471466 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.075674177 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.091132349 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.075658272 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.090136854 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.065717061 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.08706459 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.074960451 seconds)
  done (took 2.831873032 seconds)
done (took 16.787112786 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.130250291 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.076366491 seconds)
  done (took 0.967382963 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.081406137 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.096725186 seconds)
  done (took 0.944814445 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.083270595 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.080478155 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.090199197 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.093156273 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.080740876 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065704169 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.101899363 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.06648266 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.080345659 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.067081716 seconds)
  done (took 1.575318522 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.068784881 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.092953733 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.07068132 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.096582692 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.074242159 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.079947834 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.073464154 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.083365679 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.077774032 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.078333366 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.071466687 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.098300358 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.07133996 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.099154507 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.072764329 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.083198608 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.086603432 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.068280421 seconds)
  done (took 2.215540083 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.065536759 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.067900753 seconds)
  done (took 0.899839445 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.067663097 seconds)
    (2/7) benchmarking "second"...
    done (took 0.06394579 seconds)
    (3/7) benchmarking "month"...
    done (took 0.081820254 seconds)
    (4/7) benchmarking "year"...
    done (took 0.067347773 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.078251672 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062812063 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.079062647 seconds)
  done (took 1.266914169 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.400679882 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.109083482 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.258023142 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.071810618 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.103360017 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.262562873 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.082232492 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070623622 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.087878448 seconds)
  done (took 2.249783321 seconds)
done (took 10.887314212 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080102002 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.086321879 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.109192993 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.418927315 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.104849436 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.066223466 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.131933352 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.221348512 seconds)
done (took 1.988602257 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.124692005 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.608657615 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.398309765 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.211469769 seconds)
  done (took 1.992346277 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.37187167 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.091402235 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.176733797 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.065020703 seconds)
  done (took 1.482185989 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.064315567 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068401603 seconds)
  done (took 0.820772879 seconds)
done (took 5.194145032 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065300465 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065056838 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.077093371 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.064463238 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.062631285 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.077080729 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.065341049 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.065094567 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 0.079069321 seconds)
    (10/24) benchmarking ("one", "Float32")...
    done (took 0.065175449 seconds)
    (11/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064834824 seconds)
    (12/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.084286513 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.077422001 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062586741 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06570633 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.077605551 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.061947478 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.062265552 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.080233286 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062886375 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064971263 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.076650176 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.062695862 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.064678639 seconds)
  done (took 2.39033697 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.084015547 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.079969 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.071155658 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.085336103 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.068937719 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.084909356 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.07041816 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.065600459 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.084761331 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.067254559 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.082792189 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.071192726 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.082947407 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.07011043 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081102928 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.06957892 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.084451493 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065389287 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067392907 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.083076913 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.069952518 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079815671 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.068772447 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.084553407 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.068805385 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.08268907 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.067412709 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.080059417 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06966775 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.082888034 seconds)
  done (took 2.965498623 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.068491538 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.062741549 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.077327398 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.068693565 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.062075485 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.078452644 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.063065436 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.077742492 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.063312861 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.062247903 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.078285102 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.061998849 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.062711391 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.078536623 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.063146509 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.065908516 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.093837105 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063038911 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.076838802 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.063400044 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.064939582 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.076860672 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.062209026 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.07696049 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.062451999 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.063392576 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.078062378 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.062298312 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.06268481 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.076401932 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.065626981 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.065552317 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.076865235 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.069834758 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.080614242 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.063097178 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067014551 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.077033576 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063388045 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062332727 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.076887358 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.062330543 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.062988264 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.083775573 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.06327847 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.078116858 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063079817 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064067192 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.077933548 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.06534278 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062481182 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.077546322 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.064481947 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.078753522 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.066581302 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062084879 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.078124314 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062899233 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.077608344 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.062322988 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062377072 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.07676062 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.064869296 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.062868325 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.092575975 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.068957215 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.06255259 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.078937523 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.063298828 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.079520949 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064502001 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076617582 seconds)
  done (took 5.705848432 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.112055675 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.088104971 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.079878177 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064054478 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.077128968 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.062429721 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.065856997 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077140262 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064797425 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.083005103 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063541435 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.063701208 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079422753 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076408525 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07794913 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064894977 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.082509875 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.060584918 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.062757598 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.080627839 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.062922482 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.0806108 seconds)
  done (took 2.327589382 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.179809102 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.084917831 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.106387273 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.086882959 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.081605573 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072201978 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.067649648 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.083432391 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069002209 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08124026 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067651579 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083270006 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067135126 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081490445 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067370613 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.081930946 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069273826 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.082038255 seconds)
  done (took 2.207018207 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.075016166 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.064372061 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.101953579 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064939299 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.079972089 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.06786582 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.084827609 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073192233 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.082903542 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065663546 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.088059469 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067211403 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.081945807 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065509595 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068557648 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.080246988 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.067288978 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079866479 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073633393 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.084784569 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.07062215 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.087964809 seconds)
  done (took 2.371744186 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079096365 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.066992917 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.097375012 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.082842659 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.060883653 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063338932 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.085886141 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.0644576 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.085590603 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.068047235 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065279425 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.078100356 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.069941159 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.079359105 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.070187604 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080439558 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.066951828 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.064951454 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081660062 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.06154525 seconds)
  done (took 2.169117136 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.08468392 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080886226 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.164743983 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.088647095 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066345731 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.080809956 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074371167 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.081465057 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.066361426 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.105095946 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067142077 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.081091259 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073760874 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.085273693 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.067459592 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.089945407 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.073315082 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.089082413 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066715634 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.0813093 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.105544729 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.066652064 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.089127447 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066932028 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.080870321 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.066679361 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066206626 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.08491974 seconds)
  done (took 2.996776381 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.064889003 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065433839 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.077591287 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.062407101 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.062608456 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.077075541 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063132765 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.062913226 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.080334567 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063140297 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065000745 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.079621815 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065240419 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.079887295 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065683427 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.064723929 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079806651 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063829709 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06310092 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077443546 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065427736 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064866244 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.07969002 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063077261 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077224657 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065342334 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063352233 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.077430941 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064933226 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063278705 seconds)
  done (took 2.768122919 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.074822391 seconds)
    (2/2) benchmarking "in"...
    done (took 0.087509462 seconds)
  done (took 0.864905503 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.062804323 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078249386 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.077956553 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.068916399 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.084712027 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066100192 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.087942386 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068648055 seconds)
  done (took 1.295881824 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.08025512 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.075390591 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.08157191 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.07560975 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.090511038 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.082426319 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.145775214 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.081557895 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.071757452 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.078893247 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.07849388 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.064391129 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.086667636 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066030505 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.085848077 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071450862 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063642328 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.085068169 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.068148428 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.079508361 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067205706 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.088715622 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06762468 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.062128591 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.08237295 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.074128729 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.091079854 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.0662283 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.083340866 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.072423361 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.070945162 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.074776908 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065029554 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.081344146 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.063493763 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.089814889 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079349989 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.082784132 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.073457936 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.065947141 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.089991487 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.060573331 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.084576118 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.072256442 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.089881707 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.065387392 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.066187793 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.075716291 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063579344 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.082681907 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.060656408 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066253614 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.075313815 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072569999 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.0854607 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.0760151 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.064396634 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.081200477 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.067721086 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.08418765 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.07206723 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.082098141 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067721666 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.064681856 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.089501677 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.069914354 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.089444499 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.060647872 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.059574407 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.07855584 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.074771664 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.102304654 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.072002399 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.08102706 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066882014 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.078631164 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.068539345 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067238865 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.086141449 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.071958953 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.080263848 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.07163607 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.087525176 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065492557 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068646576 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.087822934 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.063766941 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.081970501 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.063566467 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.096174293 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064753658 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.063931221 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.07899704 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.075312885 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.083740272 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.06531043 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.077689994 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072425764 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.060089755 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.080888141 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066402755 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.081839584 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.076074655 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.085486441 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070685145 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.0884068 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.072921497 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065655811 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.083784205 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.062889551 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.081573839 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.064447755 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.072357662 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.075007087 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069003013 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.081347317 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.066183829 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.073350801 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.07926957 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.065506779 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.08740607 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.070907778 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.079288382 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.061898228 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.068417365 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.08066919 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.06842957 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.088269695 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.064375085 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061172428 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.075604959 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.069019213 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.080247069 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.068897425 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.084176395 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.068280926 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.06109154 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.07833249 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.069387137 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.088716365 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.065983365 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.065736815 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.086249745 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.066665633 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.07998658 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.072649909 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.082297061 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.064359727 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.070409019 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.080991731 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.06136651 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.083920981 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.067331596 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.06371006 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.083483591 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069280727 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.082988644 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.066130385 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064049159 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.085660429 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.065667015 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.080226453 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066539435 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.078406288 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.075460721 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.066616275 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.075441455 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063413934 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.086432133 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.063863158 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.064400278 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.079705583 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.067485112 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.081542974 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.06381449 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.064446059 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.082191138 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.075753491 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.084599964 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066457127 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.085365674 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.076065448 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.080141525 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.067943938 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.064605985 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.081064992 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.065992773 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.088445464 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.070532978 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.084707032 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.06765922 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.06235634 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.085550968 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072754329 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.079905977 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.063751442 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.063824758 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.084239139 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.070996824 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.083736298 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.066234607 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.079214218 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.065672468 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068770688 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.083065597 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.065120133 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.079837183 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.069349826 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.064075725 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.086854961 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066005521 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.090203115 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.068840273 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.076414077 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.0689962 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.078531903 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.070914016 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.06106835 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.0792978 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.065113081 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.081839971 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.064860572 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.068903337 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.07531989 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072859292 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.087998036 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.065648323 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.064752728 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.080253733 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072985324 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.082549751 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070385081 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.068840068 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.086965375 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075797077 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.079991084 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.068268315 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.090679028 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.065815831 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.059772595 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.086574161 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.063891297 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.080571177 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.064032597 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.063208099 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.083259477 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.073782434 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.087721085 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.060288321 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.082522501 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.064273593 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.064780468 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.076211364 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.069933895 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.083962645 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.0665492 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.071790348 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.081834289 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.06631392 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.084752089 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.065368871 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.065725051 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.081642844 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.068790084 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.081670468 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068887627 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.064173499 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.083725729 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.064760351 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.078651704 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.067726072 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.065031181 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.081594935 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071079388 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.080159464 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065569367 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.068156969 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.082290213 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06623427 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.080398201 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.064803282 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.067741167 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.082745588 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.065609602 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.083072496 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061421366 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071738922 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.080390876 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073231551 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.081776968 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063225366 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.086141234 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.06724024 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.069264969 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.081196966 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.066997071 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.082085307 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.065573492 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.06798565 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.088365177 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064142036 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.090337087 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072931859 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.081243218 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.068657986 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.06554808 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.082684962 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065020972 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.081123205 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.065969672 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.065564171 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.081058484 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.069974201 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.083525484 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.066253104 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066735584 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.081139269 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.065921969 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.08160584 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060272383 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.06435966 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.080273454 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.065604597 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.089288672 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.0664573 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.081315115 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.064778013 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.065998398 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.080791894 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.063241219 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.087882155 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.073501426 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.080904769 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.071596887 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.063890963 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.081817931 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.075003309 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.075362811 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064041827 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.063133051 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.079398541 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072395768 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.081398276 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.074612052 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.081073799 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.064695959 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.063628712 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.08106917 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.064276243 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.059888475 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.078534977 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069765338 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.079894922 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064454956 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.065384623 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.085013461 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066682978 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.090240194 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.064557253 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.081949469 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.066069304 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.062351639 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.080178739 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.064905959 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.083427017 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.066450193 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.063721524 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.078983466 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.065640223 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.066092538 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.082199723 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.065423506 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.082201246 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07228284 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067824908 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.08342749 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.06801491 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.075841833 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.068831354 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.080544248 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.065821596 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.06499248 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.083604833 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.06891767 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.081942922 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.073861438 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.064119584 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.08213752 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065568231 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.079012084 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.065491672 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.064653947 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.080846419 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.065559214 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.082184786 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07284759 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.06333255 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.083524199 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065751207 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.081097529 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.07203508 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.081582032 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.068383465 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.088114469 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.06624659 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.067642565 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.088229594 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.069322226 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.083752571 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066728162 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.067021788 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.087268091 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065009536 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.087658376 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.066394692 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.065631241 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.082549036 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.063250125 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.080865754 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.065665838 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06418282 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.087206539 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.065595924 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.079899161 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065252883 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.063222876 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.082172985 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.06943232 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.088787928 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.06835159 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.084286266 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.061232791 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.062708967 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.081969193 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.063989286 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.08304961 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.068876536 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071364468 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.083861985 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066281571 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.080418445 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.074514514 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070691771 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.085473268 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.065111016 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.084393854 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.067068744 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.08334469 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.066655219 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.066128394 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.083687693 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.069762348 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.082552175 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.065223688 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07245966 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.084591033 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067222215 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.082722385 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.066609793 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.0661093 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.077116753 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.066602303 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.083074305 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071104647 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.067744248 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.081729918 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076327658 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.079187491 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.066110515 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.084279986 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064750132 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.06978575 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.076386103 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.06727541 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.081798922 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066955839 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.060996808 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.0808043 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.064365759 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.083325633 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.064693629 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.061140728 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.09181952 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.073991465 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.083778761 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064992668 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063775718 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.077237292 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.061776228 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.080408339 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066746124 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.067299816 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.091521517 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.064788469 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.080422929 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.061277356 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065253223 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.083483355 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.069014486 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.078523123 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.061459469 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.064339681 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.084768497 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.071822443 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.080367652 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.066327577 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068539218 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.083334024 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.064119776 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.083861184 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.062443171 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.068386948 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.094145314 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.066233663 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.082261891 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.072548045 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.089202118 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.066906909 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.076956127 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.066433672 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.068517692 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.082359169 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.066767358 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.082239733 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079964262 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.084435258 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.065044334 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.064670269 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.083982814 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.065605238 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.08926526 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066859208 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.064965048 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.086045597 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.067523087 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.088487456 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068579985 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.088483697 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069016907 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.083853347 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.064519419 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066744759 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.079847394 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065290171 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.065809286 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.082991954 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.070387605 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.089100216 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.064756787 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.091524323 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.074199235 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.082901974 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.063168737 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.064944898 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.081707447 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.061877294 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.081968773 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.063920616 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.063571968 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.080327525 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.064421653 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.066362701 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.086449415 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.065875288 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.082225352 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.065264698 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.059558369 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.084267444 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068080122 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.081808525 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.062746716 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.064754678 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.082372913 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.06934655 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.083833194 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.063753111 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.066563457 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.08378557 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066482126 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.077167931 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.071931165 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063785589 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.083859513 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.06528713 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.081312862 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.066918083 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.067934606 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.087004107 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066393439 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.083897266 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.074808435 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.082741944 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063047647 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.062519618 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.086557031 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.064473146 seconds)
  done (took 44.737221657 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.104260816 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07862229 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06170714 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.07705076 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072822142 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078911619 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061514956 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062027187 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.078855855 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.064430693 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.076976734 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061928908 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.085800002 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.085118069 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.089269134 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.065352719 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077652805 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.062979344 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.077587316 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062095473 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.085583041 seconds)
  done (took 2.314546836 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.073641331 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.085321529 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.071313722 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.090942894 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066852455 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.08617336 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.071325797 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086444746 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.091881626 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066604443 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.091060134 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069666873 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.082174185 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.066569544 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081653537 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070762217 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.090867028 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066871086 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.085535895 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.071999871 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.085945553 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.078459951 seconds)
  done (took 2.472895916 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.065660113 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.064243298 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.082588429 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.060736657 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.063930896 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.076341941 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.069076972 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.079598932 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.068659635 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.064386256 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.080978274 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.064976587 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.082600419 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.060943452 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.065640194 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.079484372 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.126106102 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.068734328 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.064442837 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.083316561 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.061346826 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.084103405 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.060685916 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061181679 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.080664887 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.069601798 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.082202484 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.063243436 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.06423262 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.0806665 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065673557 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.079436283 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.067343372 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.065385929 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.080614891 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.064175505 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.064020247 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.081953523 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.06094306 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.079395344 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.066169371 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.06117494 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.082137299 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.066515595 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.062887764 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.08012938 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.066481885 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.08035004 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.060806482 seconds)
  done (took 4.262597911 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.082587845 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.124712332 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.084219848 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.088826788 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.097400528 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.088116975 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.071521746 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.107022471 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.062300918 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.080634902 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.080353491 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.096538723 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.081840628 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.070042681 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.088107713 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065360433 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064814856 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.080969116 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.068549083 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.0813783 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.068626659 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.088111654 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.094205344 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.077500678 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.084492619 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064384942 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.080206966 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.069393763 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.092978593 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.070131057 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.086244446 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070346723 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.09655637 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.066758587 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.080558832 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.067599872 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.098393489 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065292423 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.084988051 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.06266706 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.083241667 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.069933708 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.087901374 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.081007676 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.082383024 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.070397637 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.081461424 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062116629 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.094475523 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067228745 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.089004205 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.096303389 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068686689 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.081103729 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070346373 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.096468095 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.066375487 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.079482323 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.06779275 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.093747556 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.063169835 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.08465882 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.079071819 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.082577021 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.0725352 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.095131359 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.070098793 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.08525089 seconds)
  done (took 6.32582652 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.073370362 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.087315858 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07966733 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.095757883 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.088089768 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.072113764 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.087669032 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.071669775 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.087737944 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.076721179 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.088533391 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.108243702 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.067203752 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.090275135 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.071331166 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.088338275 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.071763846 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.088602267 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.071367678 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.088544594 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.088051718 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.0795925 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.08757308 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.095772068 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.100726207 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.082647522 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.071898713 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.087409855 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079545325 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.088473196 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.098931728 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.071211676 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.088855801 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.096147497 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.084097523 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.087425495 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065084441 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.0884242 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.072359826 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.087617052 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.067475065 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.095986833 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.070290702 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.083501428 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071926692 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.088833459 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.095786708 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.083628299 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.090246774 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.092678554 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.070776371 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.096323083 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070962741 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.088519013 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.096106632 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.103668026 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.097630278 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.095242489 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071500065 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.095958061 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.095018855 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.103820572 seconds)
  done (took 6.036173471 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085128965 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.090959305 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.093768564 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.06150177 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064002842 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.086604259 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064709818 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.080337931 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073369632 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.090850795 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076838813 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.085052457 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071980179 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092951544 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.08516617 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072645785 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.085715919 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069626014 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.090297261 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069040172 seconds)
  done (took 2.347378792 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.075075665 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.098810433 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.066218712 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.070936515 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.086126864 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071106735 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.085175211 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068485056 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082979091 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069224407 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.091889847 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.076027399 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083223391 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071995633 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.091937009 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071448603 seconds)
  done (took 2.020892156 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.077211613 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.092013467 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.079683265 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.082828985 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.064241317 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.079439304 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.06556367 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061469688 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.079315346 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.080153182 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.082781066 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.068711344 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.082016098 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.064507437 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062157912 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.085422779 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.06222731 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.080311144 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.066519326 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.096765091 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.076774491 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.081098171 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.066295888 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.066843434 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.082868742 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.069991151 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.083712692 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.06346929 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.080571814 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.066284959 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.082658874 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.073691709 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.079560358 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.064470074 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064407505 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.080277003 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.066069728 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.082960785 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.068891152 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065172613 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.081490893 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.065287596 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.082298731 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.067136036 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.078802138 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.066981143 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.061905797 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.088488474 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.063971023 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.082230967 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.066117378 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.084385782 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.067376089 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.075343626 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.087335207 seconds)
  done (took 4.861275379 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079638903 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068721591 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.07875063 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064297482 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.084986858 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067671007 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068025329 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.084660695 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067158281 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.080290753 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067646494 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.084614452 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06798116 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.06910293 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.083872822 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068854953 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.078510908 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.068169367 seconds)
  done (took 2.097597003 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.071815061 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065190799 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.090877472 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065879517 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.082090841 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068453121 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061529798 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.081343292 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065534122 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.082139114 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065786967 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.067537533 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081255087 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.067882866 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.082272778 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.0655882 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.067643084 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081450388 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066215339 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.078527009 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.06869621 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064769358 seconds)
  done (took 2.358756521 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.071803191 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.091228064 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.157853755 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.103766775 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.081938264 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.096259256 seconds)
  done (took 1.369555678 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08939892 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094721069 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067469135 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104113317 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073100417 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085444085 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067829232 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084064661 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075964486 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097900024 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067347861 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092709251 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.092930247 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076130046 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090415029 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07297817 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084747477 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067396564 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.082410385 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102943711 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068030948 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.092351848 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067561595 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084382167 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067954741 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092472727 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075240566 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098175933 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083363626 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075277403 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090170993 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067526334 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.092459492 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096891235 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069950302 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.092278968 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06798272 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102274665 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.0730361 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092601635 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068126491 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090308886 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.092738066 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072586292 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092908327 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067746044 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088533357 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067040505 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08529905 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108517324 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073538216 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092183817 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09048484 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075681784 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.092403068 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108385423 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080927273 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093616058 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089343515 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080391023 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095407633 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072519475 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093414532 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097756179 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073560128 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092787538 seconds)
  done (took 6.323940425 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079676007 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.102102641 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067706254 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097603353 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093191517 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067647224 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083788391 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06827811 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084114318 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067135996 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125212411 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067592073 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.092818577 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092511614 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068169919 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084310273 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067990383 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092636876 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067602038 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109554483 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084004862 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075477085 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.092746462 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091998455 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080622274 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090846678 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067481808 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084791014 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067219247 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085113675 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071273124 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085944624 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092743591 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067699686 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.092922834 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068042172 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084040123 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072939066 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0851062 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073116217 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092778219 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.101885261 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068152441 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084335782 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080886217 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085125698 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066633572 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08509861 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066633014 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084223269 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080919662 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098565943 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097584544 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092402518 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067454346 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084536865 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068602479 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084549602 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06817191 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090091611 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075231635 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084819205 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108483922 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067811952 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08474461 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075629215 seconds)
  done (took 6.209910383 seconds)
done (took 122.491931545 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.179949487 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.159802357 seconds)
  done (took 1.106656267 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.06807142 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.094121933 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.094793827 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.123041919 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.083744912 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.097684364 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.113789211 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.078114452 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.065168753 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.083390882 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.066465834 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.084145158 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.125618777 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.065393641 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.083376956 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.067828437 seconds)
  done (took 2.168327473 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.100691545 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.190601905 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.105168199 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.064625832 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.094553309 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.076807196 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.082749865 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.075005692 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.090961591 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.065306136 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.093898226 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.074905629 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.063307091 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.092182595 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.074081034 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.094930042 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.064606815 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.094359936 seconds)
  done (took 2.377395212 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.100660098 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.134455916 seconds)
  done (took 1.01113974 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.191601768 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.117792481 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.194682604 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.403818562 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.196550665 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.269235595 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.168069939 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.166252601 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.148845768 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.15981485 seconds)
  done (took 2.789789402 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.096721403 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.165842557 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.303096166 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.133177471 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.083938664 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.110701301 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.133901353 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.087304766 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.097948394 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.096909884 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.079536414 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.093666901 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.095871215 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.091956833 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.072820566 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.093551664 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.1167306 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072922348 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.074787635 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.092670898 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.113315414 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.066021371 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.074232459 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.090670112 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.075184985 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.09414484 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065966346 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.082771675 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.074097034 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.091494332 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.077166983 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.10985671 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.093960759 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.12591347 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.080419293 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.127019155 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.093205662 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.071790809 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.091352638 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.07262162 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.093640391 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.075415963 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.099580668 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.075493665 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.082665368 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.075932485 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.08310268 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065164229 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.095112533 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.075154047 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.094931542 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.076269602 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.124504451 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.093374256 seconds)
  done (took 5.951199522 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.733198534 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.108197609 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.089580022 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.787804213 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.086779486 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100547759 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.69883454 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.112497296 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.207380049 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.748808418 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.087175195 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.094165459 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.176030247 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.217479982 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.996540523 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.283020443 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.624784815 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.101093487 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.105553941 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.126826892 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.134277127 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.168458634 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.144419254 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.398102291 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.074286002 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.089105416 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.131222646 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.073111325 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.134465116 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.101940349 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.089729139 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.149612976 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.225204564 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.151255465 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.093468805 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069096131 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.08675626 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.143497547 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.218162074 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.184096801 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.15267144 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067640838 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.087059938 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.134489996 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.126973781 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067457638 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.134939632 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.147550137 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.16036434 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.073023485 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.072663175 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.154715324 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.133166087 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.138449018 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.096442767 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.270351973 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.280242104 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068204025 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.11528312 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.0988477 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.213130713 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.099893517 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.19103222 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.134240048 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.161042405 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.086604903 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.78740751 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.142314289 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.087567344 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.073299622 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.11359029 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071538977 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.151963415 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.120251932 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.363676414 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.133952397 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.091663443 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067881776 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.198812742 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081229006 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.087144929 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.135446961 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.074220956 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.117263171 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.137010279 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.1554056 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.142043105 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.207916112 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.136086246 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.132023792 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.09110922 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.119380596 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.074279121 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.189092324 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.183960468 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.135143881 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.186304046 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.132817247 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.153910168 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.141984381 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.074954957 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.144080868 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.115107554 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.096779911 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.134284925 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.182142813 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.099810276 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.099569122 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070874484 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.151663354 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.101241629 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.101842212 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.133965809 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.144243793 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.442027248 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.142463307 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.066352439 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.102211677 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.1349939 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.135554838 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.091641187 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.210390971 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.118186478 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.141747786 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.116486317 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.066133219 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.115446323 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.134790879 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.095990927 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.116329904 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.132046895 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.093877905 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.211903701 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.164234837 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.094000626 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.188027079 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.158718597 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.072142438 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.162819184 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.114291383 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.141501581 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.076682714 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.130396194 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.092377626 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.77295996 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.156073061 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.096666196 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.090642123 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.159730554 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069854301 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.098743441 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.080353112 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.085013043 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.762071607 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.10087554 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.078070327 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.099810689 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071647968 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.116377795 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.129965957 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.091492075 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.133135985 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.192183738 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.073561406 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.112976697 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.098896534 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.133803856 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.073706114 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.098914794 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079227052 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.100967255 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.116474082 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070353646 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.099808872 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.140884651 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.13490171 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.184229671 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.534623463 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.08893004 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.08083585 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.191681295 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067857965 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.256169009 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.131417336 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.190260324 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.136564045 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.096201458 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.257788032 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.136990651 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.161267745 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.102125822 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.145746446 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066664642 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.130377304 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.156449598 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.07023911 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.091849736 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.135454635 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.138843172 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.135609685 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.94877816 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068972624 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.200024952 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.085967053 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.144422895 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.073378647 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.093392329 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.242558227 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.088484614 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.140469845 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.136095386 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.090987767 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.086505205 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.691003911 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.081469674 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.132742907 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.092728811 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.184116868 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.136787287 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.131183728 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.130655457 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.091951967 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.133456163 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.184615135 seconds)
  done (took 39.333051032 seconds)
done (took 55.515375264 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.248115557 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.171143408 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.232197415 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.138143299 seconds)
  done (took 1.658448301 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.138118242 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.101776394 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.113037666 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.082165587 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.099328312 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.082410569 seconds)
  done (took 1.41202821 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.387433744 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.252695648 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.220032725 seconds)
  done (took 1.656985439 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.253057935 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.205164148 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.435162048 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.28713042 seconds)
  done (took 2.101275814 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.168965731 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.109767659 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.065939394 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.102199613 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.152579816 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.241612112 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.122345967 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.177140905 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.077180012 seconds)
  done (took 2.059063729 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.18874175 seconds)
done (took 9.880127445 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.093258398 seconds)
    (2/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.121787904 seconds)
    (3/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.255393922 seconds)
    (4/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.099141737 seconds)
    (5/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.167082353 seconds)
    (6/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.074253109 seconds)
    (7/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.127676901 seconds)
    (8/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.129500152 seconds)
    (9/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.210641749 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.069664397 seconds)
    (11/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.125167108 seconds)
    (12/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.128954854 seconds)
    (13/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.213688651 seconds)
    (14/309) benchmarking ("sort", Int8, false)...
    done (took 0.168011176 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.076430152 seconds)
    (16/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.101755294 seconds)
    (17/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.117224576 seconds)
    (18/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.075278108 seconds)
    (19/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.093873094 seconds)
    (20/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.239044554 seconds)
    (21/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.095404593 seconds)
    (22/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.157612764 seconds)
    (23/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.198441129 seconds)
    (24/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.083723532 seconds)
    (25/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.079293037 seconds)
    (26/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.114295347 seconds)
    (27/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.0743318 seconds)
    (28/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.065854811 seconds)
    (29/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.206503044 seconds)
    (30/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.111002604 seconds)
    (31/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.213198312 seconds)
    (32/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.154522942 seconds)
    (33/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.070369728 seconds)
    (34/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.120027578 seconds)
    (35/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.105242196 seconds)
    (36/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.185931112 seconds)
    (37/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.138302857 seconds)
    (38/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.10922927 seconds)
    (39/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.074507544 seconds)
    (40/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.15506157 seconds)
    (41/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.182015731 seconds)
    (42/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.226276756 seconds)
    (43/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.061473537 seconds)
    (44/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.182401346 seconds)
    (45/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.073415015 seconds)
    (46/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.194736385 seconds)
    (47/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.165833016 seconds)
    (48/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.101827519 seconds)
    (49/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.084846488 seconds)
    (50/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.097157311 seconds)
    (51/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.155525308 seconds)
    (52/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.194996928 seconds)
    (53/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.072682511 seconds)
    (54/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.127214217 seconds)
    (55/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.089970863 seconds)
    (56/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.193604159 seconds)
    (57/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.113897336 seconds)
    (58/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.164244427 seconds)
    (59/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.094184918 seconds)
    (60/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.072022526 seconds)
    (61/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.086696319 seconds)
    (62/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.087139207 seconds)
    (63/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.062424361 seconds)
    (64/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.111046998 seconds)
    (65/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.067478306 seconds)
    (66/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.114617824 seconds)
    (67/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.07068542 seconds)
    (68/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.094167361 seconds)
    (69/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.181894898 seconds)
    (70/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.065224374 seconds)
    (71/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.069575727 seconds)
    (72/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.069891669 seconds)
    (73/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.072509094 seconds)
    (74/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.183642876 seconds)
    (75/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.069231872 seconds)
    (76/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.155160519 seconds)
    (77/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.129143277 seconds)
    (78/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.142377779 seconds)
    (79/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.147865948 seconds)
    (80/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.101690079 seconds)
    (81/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.068798367 seconds)
    (82/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.107312745 seconds)
    (83/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.087591291 seconds)
    (84/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.07541138 seconds)
    (85/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.051018818 seconds)
    (86/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.091132838 seconds)
    (87/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.097086746 seconds)
    (88/309) benchmarking ("sort", Int64, false)...
    done (took 0.083949295 seconds)
    (89/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.076586344 seconds)
    (90/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.121122614 seconds)
    (91/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.070654125 seconds)
    (92/309) benchmarking ("sort", BigInt, false)...
    done (took 0.209118286 seconds)
    (93/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.152709091 seconds)
    (94/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.066619608 seconds)
    (95/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.068667375 seconds)
    (96/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.108115728 seconds)
    (97/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.108783 seconds)
    (98/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.169669527 seconds)
    (99/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.217440842 seconds)
    (100/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.068026768 seconds)
    (101/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.087547936 seconds)
    (102/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.165950523 seconds)
    (103/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.110960509 seconds)
    (104/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.165141282 seconds)
    (105/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.164421488 seconds)
    (106/309) benchmarking ("sort", Float64, false)...
    done (took 0.145969999 seconds)
    (107/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.139655918 seconds)
    (108/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.064854348 seconds)
    (109/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.075583292 seconds)
    (110/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.093185526 seconds)
    (111/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.061428501 seconds)
    (112/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.050925828 seconds)
    (113/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.081909048 seconds)
    (114/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.076518126 seconds)
    (115/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.132924341 seconds)
    (116/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.072861247 seconds)
    (117/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.051514195 seconds)
    (118/309) benchmarking ("sort", Float32, false)...
    done (took 0.145772199 seconds)
    (119/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.201417218 seconds)
    (120/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.072327084 seconds)
    (121/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.155633158 seconds)
    (122/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.162434131 seconds)
    (123/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.051894516 seconds)
    (124/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.070122038 seconds)
    (125/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.110101718 seconds)
    (126/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.134688355 seconds)
    (127/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.070076966 seconds)
    (128/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.066701099 seconds)
    (129/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.151457024 seconds)
    (130/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.079128092 seconds)
    (131/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.071533445 seconds)
    (132/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.063934864 seconds)
    (133/309) benchmarking ("sort", Bool, false)...
    done (took 0.152552075 seconds)
    (134/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.074074494 seconds)
    (135/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.084394817 seconds)
    (136/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.166714822 seconds)
    (137/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.109840049 seconds)
    (138/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.153408103 seconds)
    (139/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.070451609 seconds)
    (140/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.071691525 seconds)
    (141/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.194590111 seconds)
    (142/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.069830238 seconds)
    (143/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.072125071 seconds)
    (144/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.073309223 seconds)
    (145/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.126902219 seconds)
    (146/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.05132194 seconds)
    (147/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.064387802 seconds)
    (148/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.152642776 seconds)
    (149/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.093844491 seconds)
    (150/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.086253842 seconds)
    (151/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.109125651 seconds)
    (152/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.096026059 seconds)
    (153/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.076496776 seconds)
    (154/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.141075971 seconds)
    (155/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.064783399 seconds)
    (156/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.091937077 seconds)
    (157/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.052097619 seconds)
    (158/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.109521764 seconds)
    (159/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.077182288 seconds)
    (160/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.096297232 seconds)
    (161/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.078179525 seconds)
    (162/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.108614323 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.07500148 seconds)
    (164/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.065880682 seconds)
    (165/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.108320834 seconds)
    (166/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.145331168 seconds)
    (167/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.178739041 seconds)
    (168/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.093439733 seconds)
    (169/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.066101758 seconds)
    (170/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.050765181 seconds)
    (171/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.059195687 seconds)
    (172/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.071935742 seconds)
    (173/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.068580823 seconds)
    (174/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.052429829 seconds)
    (175/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.074043573 seconds)
    (176/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.188953326 seconds)
    (177/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.145304771 seconds)
    (178/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.154781428 seconds)
    (179/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.096551717 seconds)
    (180/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.109793011 seconds)
    (181/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.087400773 seconds)
    (182/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.086590136 seconds)
    (183/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.133082866 seconds)
    (184/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.272227943 seconds)
    (185/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.065881674 seconds)
    (186/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.049861351 seconds)
    (187/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.088751944 seconds)
    (188/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.065945436 seconds)
    (189/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.050131556 seconds)
    (190/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.085285101 seconds)
    (191/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.08891343 seconds)
    (192/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.090763484 seconds)
    (193/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.072482966 seconds)
    (194/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.05047864 seconds)
    (195/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.162562962 seconds)
    (196/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.073409497 seconds)
    (197/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.091252089 seconds)
    (198/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.096520325 seconds)
    (199/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.084956434 seconds)
    (200/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.051304182 seconds)
    (201/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.063632775 seconds)
    (202/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.069933146 seconds)
    (203/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.166529086 seconds)
    (204/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.069955644 seconds)
    (205/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.08804591 seconds)
    (206/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.105350749 seconds)
    (207/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.069003798 seconds)
    (208/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.072991458 seconds)
    (209/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.083832518 seconds)
    (210/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.073359989 seconds)
    (211/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.075296505 seconds)
    (212/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.093248619 seconds)
    (213/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.071998774 seconds)
    (214/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.131244581 seconds)
    (215/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.064674312 seconds)
    (216/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.107732302 seconds)
    (217/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.105021777 seconds)
    (218/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.050638268 seconds)
    (219/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.120318281 seconds)
    (220/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.070652184 seconds)
    (221/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.062766144 seconds)
    (222/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.090252986 seconds)
    (223/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.05159933 seconds)
    (224/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.136514371 seconds)
    (225/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.05152842 seconds)
    (226/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.155619279 seconds)
    (227/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.166252512 seconds)
    (228/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.070626741 seconds)
    (229/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.101114842 seconds)
    (230/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.081584058 seconds)
    (231/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.050092993 seconds)
    (232/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.065023714 seconds)
    (233/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.050129501 seconds)
    (234/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.071788492 seconds)
    (235/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.074438953 seconds)
    (236/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.051022406 seconds)
    (237/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.091655556 seconds)
    (238/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.166326525 seconds)
    (239/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.050400177 seconds)
    (240/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.13367488 seconds)
    (241/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.081512427 seconds)
    (242/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.071324697 seconds)
    (243/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.051366092 seconds)
    (244/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.086334385 seconds)
    (245/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.09365989 seconds)
    (246/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.050046767 seconds)
    (247/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.084129034 seconds)
    (248/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.050815503 seconds)
    (249/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.115642261 seconds)
    (250/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.06414848 seconds)
    (251/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.067045971 seconds)
    (252/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.080639057 seconds)
    (253/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.051987976 seconds)
    (254/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.073268033 seconds)
    (255/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.090230508 seconds)
    (256/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.071116947 seconds)
    (257/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.065727379 seconds)
    (258/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.070144577 seconds)
    (259/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.073945824 seconds)
    (260/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.065140685 seconds)
    (261/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.085137703 seconds)
    (262/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.112652167 seconds)
    (263/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.079799698 seconds)
    (264/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.090216199 seconds)
    (265/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.060512324 seconds)
    (266/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.070861372 seconds)
    (267/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.134314639 seconds)
    (268/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.071578329 seconds)
    (269/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.051514636 seconds)
    (270/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.050660156 seconds)
    (271/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.086412275 seconds)
    (272/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.081156666 seconds)
    (273/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.071224724 seconds)
    (274/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.114196248 seconds)
    (275/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.063609199 seconds)
    (276/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.072266683 seconds)
    (277/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.064140357 seconds)
    (278/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.163374988 seconds)
    (279/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.060451513 seconds)
    (280/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.070041937 seconds)
    (281/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.070729739 seconds)
    (282/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.072055407 seconds)
    (283/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.10656368 seconds)
    (284/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.067145275 seconds)
    (285/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.052963712 seconds)
    (286/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.096925601 seconds)
    (287/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.069922319 seconds)
    (288/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.107917052 seconds)
    (289/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.065538313 seconds)
    (290/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.051121398 seconds)
    (291/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.059263834 seconds)
    (292/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.086046369 seconds)
    (293/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.051198982 seconds)
    (294/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.064919906 seconds)
    (295/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.072669456 seconds)
    (296/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.072790519 seconds)
    (297/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.04907988 seconds)
    (298/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.083531521 seconds)
    (299/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.070674653 seconds)
    (300/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.049943506 seconds)
    (301/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.072726521 seconds)
    (302/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.065814631 seconds)
    (303/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.086254573 seconds)
    (304/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.064181858 seconds)
    (305/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.050879127 seconds)
    (306/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.04921838 seconds)
    (307/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.100181044 seconds)
    (308/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.064623872 seconds)
    (309/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.083905067 seconds)
  done (took 31.993384508 seconds)
done (took 32.804360625 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.079756918 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.109966817 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.073864322 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.111164494 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.079895845 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.096260249 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.071755919 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.077335093 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.099542958 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.080361141 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.097923773 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.053853117 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.093549657 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.074526669 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.095057286 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090683896 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.098523128 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.071583838 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.072826252 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.084228527 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.072602898 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.084157204 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066236303 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.054040933 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.095751783 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.070905888 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.07140002 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.093162812 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065045962 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.084600494 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.067557915 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.071584408 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.084039872 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.077285378 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.090005944 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.072827914 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.074609333 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.094849254 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067082164 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.084233118 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.072437679 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.064493708 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.090729259 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.071876608 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.070545735 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.089758579 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.073113637 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.097786839 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090013509 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.086144993 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.072683442 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.095348209 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.075543717 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.071298397 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.08887581 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.072185543 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.089160437 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09016904 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.092815959 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066471523 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.072971295 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.093650525 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.070192974 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.092552636 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072822707 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.075058071 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.095657639 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.070469206 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.093960767 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.070420662 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.06412598 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.092278907 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068472337 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.064174805 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.095473347 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.075870469 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.083506325 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.069727464 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.071777687 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.090601813 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064410315 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066168622 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.086547574 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.070770048 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.085903233 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.054007894 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.068950973 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.090499636 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.063813271 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.074295447 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.091301048 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.072569138 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066227036 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.096182305 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.06448437 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.090488971 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.065295788 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.064930929 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.086452394 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.068971273 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.063937109 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.086671014 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.073655038 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.086113449 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.070977198 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.079011014 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.085671632 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.071236228 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.083940281 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064377946 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.080640578 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.094888515 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.065540723 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.08742822 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.06434876 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.072211105 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.084438541 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.064915518 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.064351918 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.085394948 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.070224969 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.065106129 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.087463428 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.072189453 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.097780061 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.06496025 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.068282507 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.087249998 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.06473931 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.069898965 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.085156581 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.065168376 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.065946392 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.082209984 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067131285 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.084700759 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072091245 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067412423 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.093390741 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.066749608 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.09315145 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.069006329 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.070284581 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.090070697 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064123248 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.058339206 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.08676612 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.0662633 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067670522 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.084596352 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.066256835 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065139145 seconds)
done (took 12.719816304 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.064812111 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.162895391 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.121713409 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.093642056 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.106233416 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.065300246 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.096078279 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.100958862 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.087496092 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.122531626 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.085529473 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.10421388 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.112565408 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.084279677 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065692444 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069685049 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.086961182 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.087230994 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.120645705 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.085069288 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.133957507 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.083799615 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.115418349 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.088504918 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.108118185 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.093251848 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.085746403 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069750518 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069057986 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.120459016 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.104672929 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.068485737 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.065201907 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.118125424 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.115165342 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.083272597 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.085808024 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.082882751 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.085000512 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065284501 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.110275545 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.097447576 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.100415141 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.080328066 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.089196491 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.068120802 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.086624002 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.083727182 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.108658911 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.079141934 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.10658598 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.128944014 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.067748467 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.101353119 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064575865 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.106070513 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.100228595 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.067937827 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.065425587 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.087697909 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065538191 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.068691115 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.107006252 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.111566474 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.068439917 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.100856978 seconds)
  done (took 6.941586634 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.083750831 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.11238685 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.082660731 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.103182602 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.06480253 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.065205259 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.086060251 seconds)
  done (took 1.458755798 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.065915162 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.086547206 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.107913306 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.088252 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.104902797 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.085468005 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.095311276 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.065989913 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.102391835 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.066922945 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.086457371 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.122781494 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.067254305 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.093911918 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.089889919 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.085895696 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.089221006 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.086213491 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.068548054 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.109324493 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068524004 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.0856137 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.08838872 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.065964525 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.100119067 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066047261 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.134485411 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071149438 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.087591437 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069051469 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064954278 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.134953565 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.100215751 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.076080314 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065501982 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.100863793 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.080718431 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.084658245 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.082077042 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.091902507 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.079515647 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.067507882 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.087774419 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.064502369 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070021222 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.097251813 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.067804181 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.087233029 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068605549 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085451769 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.087434918 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.080568726 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.08689952 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.06991557 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.068142346 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.091572017 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.075939463 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.087640328 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085680693 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067436474 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.103314984 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.082412702 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.101060541 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.082209821 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.089326559 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.080135586 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.101187682 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068360353 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068198353 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.090602329 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.082239059 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.084757188 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.068179828 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.076388913 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.088134902 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.089085306 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.109098638 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067323933 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.097375035 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.06695422 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.066260354 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.087241064 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.08929067 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.089552921 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066727598 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070968235 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.090125849 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064727013 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065663432 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.09072099 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064587924 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.066982665 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.089714442 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.066934228 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.089005319 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.082532599 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.067126688 seconds)
  done (took 8.934969654 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.067424301 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.067416046 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.089368645 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.06753515 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067838341 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.088054358 seconds)
  done (took 1.324667862 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.095838956 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.089452447 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.07983865 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.09249202 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.104145012 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.101060219 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.08092482 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.102028732 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.084008097 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.099601974 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.080749584 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.101601855 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.086563906 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.092584577 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.080872881 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.092285492 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.081249866 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.096191169 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.077708039 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.092935272 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.086207365 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.093660413 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072679882 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.081281236 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.090110554 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.072167161 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.096649243 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078174517 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.098743191 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.081250681 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.092254136 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.069791524 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.09209722 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.081416992 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.101229604 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070891273 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.092228539 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.070524801 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.096185053 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.069240117 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.102333558 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.071905978 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.077353676 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.091148211 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.101977796 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.071240287 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.070274887 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.095728458 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.081028058 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.090510458 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.070566393 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.09211038 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.070458667 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.091824834 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.071180363 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.102345519 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.07032732 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.102167038 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.072077779 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.070870448 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.089486638 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.070927335 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.101823639 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.069735897 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.099400378 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.070827016 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.091595523 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072287183 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.093648644 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.070892238 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.0708584 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.089159942 seconds)
  done (took 7.031254149 seconds)
done (took 26.553652595 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.624874786 seconds)
  done (took 1.495839463 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.731247483 seconds)
  done (took 1.6048903 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 13.261976391 seconds)
  done (took 14.141955091 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.577153992 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.713356213 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.781731164 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.131079374 seconds)
  done (took 3.078275518 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.841522695 seconds)
  done (took 1.73985276 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.227468381 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.217387266 seconds)
  done (took 1.325777302 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.684739811 seconds)
  done (took 1.572557393 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.264605884 seconds)
  done (took 2.144480138 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.30940429 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.175736516 seconds)
  done (took 1.372504179 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.507604653 seconds)
  done (took 1.394414992 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.062255305 seconds)
  done (took 6.952522972 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.222246084 seconds)
  done (took 1.121998826 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.261059768 seconds)
  done (took 1.150104278 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 2.848304488 seconds)
  done (took 3.737266025 seconds)
done (took 43.713746566 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.076452698 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.08087326 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.10027747 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.078212555 seconds)
  done (took 1.220197381 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.076269923 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.072813489 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.096013585 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.071809662 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.096810401 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.072346255 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.095205027 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.07598447 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.071108742 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.094344583 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.072711707 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.091925482 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.074395538 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.094605596 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.069652033 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.074603945 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.096071476 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.072489801 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.095645115 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.072888156 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070063186 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.09467548 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074714597 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.091526453 seconds)
  done (took 2.8656003 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.076574589 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072961279 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.093900936 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.071198135 seconds)
  done (took 1.207887596 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.075837347 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.110949214 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.087502562 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.076041267 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.11147105 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.10637373 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.068639122 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.069171702 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.091781314 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.078086606 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.088341126 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.097021694 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.106895916 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.076852416 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.098041602 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.066034941 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068037459 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.106677379 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.076176326 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.097218666 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069934167 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.076075626 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.087359453 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.090250702 seconds)
  done (took 2.979356073 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.075841296 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.101729935 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.097153971 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.087831237 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.111827975 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065619932 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.095804861 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.090139116 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.144772611 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.064841114 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.090516572 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.06562837 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.0930138 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.063966108 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.076272294 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.127440831 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.110446835 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.088890591 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.095980498 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.086263572 seconds)
  done (took 2.732315495 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.073184779 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.068815471 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.086051025 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.06769552 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.074765404 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.093150926 seconds)
  done (took 1.360822101 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.066728688 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.066219604 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.087234805 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.065438286 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.070811394 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.087354467 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.064879171 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.06673629 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.087519789 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.066255963 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.065053863 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.084921863 seconds)
  done (took 1.776519628 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.402572556 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.06708735 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.087792645 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.064565368 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070368376 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.086675344 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.079132561 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067038658 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.11041837 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066082538 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.087302267 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.067616038 seconds)
  done (took 2.157002715 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2499282 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076263448 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.308742903 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16200841 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134108796 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.150340293 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102209183 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134840888 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.188596426 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131812185 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192760601 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214477908 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128768669 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161586856 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110299116 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.126313507 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177456356 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209770563 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102641219 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213027934 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196325175 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151142744 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17340529 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.122800862 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128619418 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144945373 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.070918991 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10023529 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221495835 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15507193 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191440465 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133583375 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094794979 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220013892 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214454143 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185917616 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15699038 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083082567 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.148600926 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.157656835 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.244554384 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108129196 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18604517 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128588533 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101602257 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16472596 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139172274 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.140795484 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.131538976 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110547627 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167108719 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229545603 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.158943736 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107578018 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132158313 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135865396 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.136832795 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101172368 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229309424 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208434024 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152558141 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.092755418 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095895522 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200123263 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152739069 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.135638519 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.147388414 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.113611807 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161751393 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.200605505 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138979913 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167330721 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.170373674 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08784197 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140554445 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.184919312 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150070691 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195161381 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168116892 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.071373485 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1467698 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123864129 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081456695 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.163283857 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073630108 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221830631 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119053394 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.133361838 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133980199 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130063111 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108487084 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209911872 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191704542 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102396481 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.086719364 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125180285 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.143025646 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168401319 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107803627 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129909372 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140647938 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.077906448 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159321752 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.096149107 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147972201 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.077468191 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166629425 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157788113 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.07459637 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146286831 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.122860795 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.122722397 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157650558 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208855928 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088984613 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102542461 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193605786 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169510361 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.126593578 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.167689653 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.182528877 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.122132054 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124099514 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194612555 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230946792 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.0884628 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211388153 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129526584 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.08212507 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.108146678 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148907546 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133894502 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.142387846 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081836333 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.169070183 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19195237 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.095633134 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.094130641 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181897997 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079358448 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102874654 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133757138 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122487563 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.093475819 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.123083794 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.128374316 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162476891 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148672946 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127853288 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14646452 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118489021 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215182585 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110358774 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.125029451 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102931838 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.09106326 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.159727471 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183101721 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100232664 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214829695 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.148126847 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126858806 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140985843 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082446672 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161492866 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099064726 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070454144 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188671042 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132973521 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108299334 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.199055038 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125594173 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.148994389 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.145852575 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156214116 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152101772 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.178056228 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105202383 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.107844341 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134154651 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146702062 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.094415953 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.093527952 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.103539209 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12551878 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117386292 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082520222 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163972674 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171022073 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096340885 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133907235 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118713076 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.171633271 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.098105564 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152514171 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.141420155 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115433407 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.178227487 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201051483 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158386531 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.120638677 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169066671 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.0923277 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073351754 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.110597717 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149943189 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104436471 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082825788 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137476285 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.193260062 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151677014 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160051337 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131904118 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143326126 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.179416795 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.091768104 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.115645943 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193970713 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146092976 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.146347928 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089284502 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.119676042 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.167858558 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129501554 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231007939 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137065733 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146955361 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196138874 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.125225745 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08001167 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124535552 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160695667 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126496727 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1954178 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12153608 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087549398 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131091097 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.102472585 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125989559 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149531686 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143170389 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156928859 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.137589325 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177208106 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076542801 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138579838 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145000538 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143706664 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.085810332 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142095791 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208290807 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093461302 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139145713 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199655479 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08028466 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.145997074 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223829445 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190866105 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083557569 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130918446 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143497843 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150225238 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140012094 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.184564289 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132059992 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157597495 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132281919 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.084046997 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109124543 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096801763 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127730516 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.115673628 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.132348454 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.138887171 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.115294249 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153187401 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133762062 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131863724 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141018195 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.098027526 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.112537054 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119158047 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20069507 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1438932 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221861619 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.121583452 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.195821726 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193296131 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.097075935 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078714231 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.102150072 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163082656 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106210234 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156144738 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.117854915 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103687064 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149792017 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188740042 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094143242 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.090750921 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131448787 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158864173 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132505124 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120322972 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.103972763 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211152461 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.12478037 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078339204 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148069467 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126539696 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.12482294 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223293644 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.06137924 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119335633 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075078964 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102820621 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151477454 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204023599 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.082206963 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.143922493 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141534561 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142594272 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152064528 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123385218 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096429806 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135246211 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196358337 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151729585 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.110983968 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111582954 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174262218 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180151082 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127469943 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.116462009 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222726522 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179214465 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.210342973 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.110228667 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138282765 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13709884 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108501596 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201141369 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10549248 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192099577 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104716834 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159959216 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124868312 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.116228017 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151957339 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.117899681 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110457636 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172217112 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141531138 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103633946 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078599855 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13993979 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145133185 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127727499 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.096626909 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160240587 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.071401013 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182708572 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216809468 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082360887 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128739174 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.118297543 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081172331 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130814695 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125202961 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108494091 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.1163646 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217894049 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.111661466 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174744098 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188948812 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136095678 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159175396 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.120909266 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.656798313 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.077561372 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202747371 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138073958 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225152416 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119284534 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140656596 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132112329 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145274224 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168250672 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126486395 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.198771571 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156052989 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.142829287 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100597256 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1246101 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133176175 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.09031529 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127243938 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13573829 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138413666 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.123417471 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.144353031 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14910372 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.103854366 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116941358 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182821408 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139920342 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190428567 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163304236 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083803881 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141666232 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185857323 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07915637 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.167923865 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180836609 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129573574 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120441526 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.102754953 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.104839593 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220982764 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.0940757 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185772366 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146692575 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131937034 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13614716 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.1649264 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155907436 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130135777 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14858858 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.117958419 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.133767295 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138181336 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084739727 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.099847554 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129193547 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135771871 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.098639008 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12461553 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.135335655 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17523752 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.093174455 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095247717 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125618716 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190748434 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203612844 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.110894151 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104582949 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140629182 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134844582 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.139004525 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148270607 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.081384545 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104216431 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.104163497 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.107587755 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.13022868 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136479575 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124719686 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109431793 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214937775 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.106399306 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.222129242 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.116699647 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128232169 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.06884136 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.101684928 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117506338 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096506953 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130483589 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.119017727 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222484304 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.096081168 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.111724024 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.114455221 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.073082193 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104897406 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152431365 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132833237 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144632519 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119559763 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.062778914 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131819106 seconds)
  done (took 68.158227173 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.126460803 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.097560365 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.112342941 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.165103459 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.140628457 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.231081404 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.171729601 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.216898513 seconds)
  done (took 2.235754666 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.068158824 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.111449952 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.099912048 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.111393053 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.084785385 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.066747742 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.284681669 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.105098799 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.065428323 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.110646271 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.113870766 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.087490648 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.447756242 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.064441803 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.089814792 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.080339195 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.066089065 seconds)
  done (took 3.025218548 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.412940194 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.569962692 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.434295218 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.071486207 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.551518715 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.101857745 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 3.90347214 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.14971978 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.086515265 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.393812624 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.72111222 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.137199842 seconds)
  done (took 16.508866156 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.073606073 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.067692793 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.104145308 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.0814697 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.093957448 seconds)
  done (took 1.398387895 seconds)
done (took 108.514211583 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.077249646 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.327588565 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.051454917 seconds)
  done (took 1.385589125 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.081015186 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.082299467 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.105324018 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.0815569 seconds)
  done (took 1.333179908 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.072428362 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.074676738 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.104731513 seconds)
  done (took 1.232539673 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.265900923 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.158394943 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.087021229 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.079932303 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.075136421 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.099131842 seconds)
  done (took 1.236708256 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.070353697 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.073011565 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.09420738 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.074997165 seconds)
  done (took 1.290045944 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.074438553 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.05067387 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.053593361 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.076836291 seconds)
  done (took 1.237962245 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.08728406 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.100981589 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.078654589 seconds)
  done (took 1.247328154 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.10376272 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.107110028 seconds)
  done (took 1.195058107 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.079273368 seconds)
  done (took 1.057809095 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.088785654 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.133825376 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.149224238 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.130186377 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.157638067 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.131908698 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.084202646 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.108711782 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.098888665 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.085584463 seconds)
  done (took 2.151747408 seconds)
done (took 14.934230624 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.075551925 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.227916287 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.3514795 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.110932908 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.648894757 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.347020925 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.870190001 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.112742079 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.11842831 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.088922337 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.081278259 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.652436453 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.831564349 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.18651656 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.817718295 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.12946192 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.655593406 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06636834 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.065993029 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.088737461 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.832365066 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.088876772 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.065555964 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.066476612 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.655718075 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.36190673 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.088772337 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.129300767 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.065961851 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.090128071 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.345792637 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.08904823 seconds)
  done (took 14.383001387 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.068306704 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.136906072 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.071695735 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.08115314 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.092200293 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.06800284 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.093301366 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.067438493 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.145768991 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.066202606 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.105919022 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.066116594 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.092445779 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.067015165 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.084280699 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.089065144 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.067125942 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.066800089 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.088736375 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.066549576 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.106996616 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.065761194 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.06618209 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.089292882 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.065630596 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.100910382 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.066602282 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.06628914 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.088714901 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.068736505 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.092581497 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067322298 seconds)
  done (took 3.613433014 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.111406279 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.145738316 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.072010114 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.122533842 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.110600694 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.092159481 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.163718062 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.090288063 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.148011914 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.06645959 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.104790171 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.065984638 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.121303657 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.066657939 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.107440575 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.066551009 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.06762811 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.089956896 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.066115491 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.089353899 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.084619775 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.088546961 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.066267473 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067368177 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.090057859 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.079412667 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.090015973 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067015466 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.066560134 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.090853621 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.069967963 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.088828343 seconds)
  done (took 3.907239445 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.070548956 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.072970974 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.103013558 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.080804953 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.090457301 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.069776584 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.071010665 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.091263391 seconds)
  done (took 1.635148635 seconds)
done (took 24.526328442 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.076066388 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.068128645 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.093657676 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.079263471 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.094219477 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.076677205 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.06577565 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.096132504 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.07474118 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.071646607 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.0976658 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.066180679 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.092400134 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.065370873 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.07254669 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.089810463 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.077271065 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.092919195 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.076955028 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.077659741 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.091610025 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.075008093 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.095733306 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.076988925 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.101247244 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.076612281 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.080668701 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.094791271 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.067325737 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.091458732 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.074424453 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.081130083 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.090142281 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.077759955 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.0893891 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.066010775 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.065546588 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.08878377 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.07780573 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.094397228 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.068125602 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.095092287 seconds)
  done (took 4.407651538 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.085525701 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.088165286 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.105623195 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.064060153 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.092346779 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.063456391 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.109992553 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.061244174 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.057357657 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.109123345 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.05422419 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.057219056 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.084625764 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.052449445 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.057509074 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.055263984 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.08278758 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.055012677 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.057485797 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.081266379 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.056135569 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.053046767 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.081462344 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.061109184 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.056785923 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.083630026 seconds)
  done (took 2.860887775 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.073074861 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.081723829 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.108126096 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.125275199 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.126304623 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.075382956 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.099803864 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.085414745 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.107620087 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.06569651 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.069567363 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.117816619 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.085238891 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.096422639 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.066446095 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.114933951 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.080140336 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.067347426 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.095862197 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.087559416 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.105715505 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.07622731 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.114269341 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.079070867 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.065433187 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.091629925 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.069259913 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.102959156 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.070892667 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.074691529 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.093999725 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.069978292 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.091286692 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.076855244 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.093849193 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.068394536 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.087645642 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.099215351 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.075625566 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.090110131 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.069439896 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.066996611 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.109599053 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.108697433 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.089254996 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.071989313 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.09702905 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.075175579 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.065436311 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.107236273 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.074195006 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.088988103 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.068556881 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.065244273 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.09010071 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079296023 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.068386895 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.092057289 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.07419697 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.092899864 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.077425554 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.069428389 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.104250689 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.065793512 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.096733162 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.065597939 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.067076258 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.088221773 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.089066828 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.090864541 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.106660534 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.09145534 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.066640374 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.074866881 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.097181095 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.071666465 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.090384958 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080923826 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.075564502 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.093765019 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.075460247 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.093572683 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.068995155 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.08509858 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.092846067 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.068143097 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.066651907 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.095634008 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.068583283 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.091066022 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.078848951 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.066353485 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.092553118 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.082648346 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.089301759 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.066607214 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.072288621 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.094498007 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.065327202 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.1009781 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.071601863 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.090539733 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.074542262 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.066120815 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.093039502 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.075657343 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.0942088 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.064546956 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.070030883 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.096446318 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.066513072 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.068134859 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.092784252 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.067408533 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.099176784 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.071883936 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.069506808 seconds)
  done (took 10.792151816 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.182032429 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.176181768 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.067796364 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.170080197 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.074140223 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.10255639 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.171037368 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.093089607 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.093843305 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.067257864 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.067226607 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.123867069 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.118099505 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.102004081 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.1006995 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.066335303 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.10779203 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.101765853 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.173924076 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.168065868 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.109374608 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.07392521 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.067812317 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.092365806 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.068354016 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.076401522 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.105803663 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.074925187 seconds)
  done (took 4.00549901 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.078794268 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.123381376 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.071203694 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.086925128 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.114098273 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067329701 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.09603315 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.068294461 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.102541293 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.078428136 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.090942542 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.071160328 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.072216819 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.10068943 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.066967847 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.10022319 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.076240432 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.067155168 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.093533835 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.070817665 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.100318061 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.077413307 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.094169398 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.066033801 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.072273073 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.089802066 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.063713731 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.10722648 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.066215371 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.112521403 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.064114887 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.072001642 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.103104259 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.066385479 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.09075402 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.068966574 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.068900618 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.093800148 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.067085437 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.064207445 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.089517091 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.056166693 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.065070039 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.102276628 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.071682205 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.082460964 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.071466954 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.071279435 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.094519326 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.063907452 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.092962957 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.068006747 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.068678204 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.099478611 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.070353309 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.071110529 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.095007946 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.064468313 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.09788283 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.069456065 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.062647628 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.089551971 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.070623742 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.06501666 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.098627526 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.070397125 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.089639415 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.069097688 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.071050847 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.097213043 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.070009345 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.069323652 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.088577919 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.067857039 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.095453991 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.070999506 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.070254335 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.089702681 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.066276648 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.066397919 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.078736147 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.065886831 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.052154603 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.093568748 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.064977187 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.06447823 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.093218796 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.071946799 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.102707316 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.067552459 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.09665221 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.067279679 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.064770296 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.093715458 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.061516088 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.068814146 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.106024205 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.105457952 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.066353651 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.063946201 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.105620047 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.070674501 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.065353894 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.079969284 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.073289012 seconds)
  done (took 9.368555933 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.09274773 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.090536934 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.092616158 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.08106653 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.118487606 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.090552873 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.098340808 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.072220593 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.067390427 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.107681705 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.065624492 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.098827951 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.065906372 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.074132302 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.118406957 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.072909103 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.093403357 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.074515859 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.070338156 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.129322197 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.080110458 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.104271107 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.078083349 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.091519788 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.070972973 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.077470237 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.118498468 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.078578006 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.101407694 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.083002645 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.078572005 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.117576983 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.084406143 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.094806197 seconds)
  done (took 4.052981057 seconds)
done (took 36.476546457 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.077758729 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.26015145 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.058436804 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.816627505 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.09223169 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.094542017 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.07147791 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.060440995 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.406908384 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.063538285 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.312330077 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.48124499 seconds)
done (took 57.8076551 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.072686323 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.201490093 seconds)
    (2/2) benchmarking "String"...
    done (took 1.351235073 seconds)
  done (took 3.561063529 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.432186294 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.046124927 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.31366374 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.059629249 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.059281503 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.35765377 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.438722383 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 1.788487947 seconds)
  done (took 26.071286671 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.061954453 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.372113289 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.925616887 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.921595335 seconds)
  done (took 16.291165555 seconds)
done (took 55.437553048 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.065872689 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.074306443 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.099629654 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.056805956 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.155092356 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.079663673 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.276680412 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.984398004 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.05899923 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.051816688 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.060993327 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.060418701 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.076681455 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.205053715 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.06352695 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.062481007 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.121382003 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.292710122 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.39727246 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.072536664 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.072765787 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.076704463 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.066599009 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.063451406 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.135306496 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.061159007 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.061300552 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.060485529 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 3.786055144 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.062800813 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.131141019 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.423003392 seconds)
  done (took 185.326064282 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.061885833 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.117573582 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.164481667 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.098112618 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.648436111 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.258519274 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.196944116 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.697524455 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.074195769 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.090122839 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.393015218 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.062242184 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.443727697 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.025122883 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.069533947 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.153777089 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.239610896 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.395131064 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.074411665 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.335377549 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.08595937 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.311513584 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.253468108 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.301021594 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.084774041 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.140417196 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.077185497 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.089374033 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.244936974 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.175332078 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.088354337 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.080548181 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.549449456 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 1.920713239 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.086337963 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.073637989 seconds)
  done (took 145.17305004 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.302575189 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.062349784 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.061746958 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.06197218 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.087674775 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.063382519 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.508662681 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.508543316 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.552895101 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.56824388 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.121088429 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.148695605 seconds)
    (12/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.06270594 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.062211687 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.148917974 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.075418066 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.063586387 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.077485628 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.089131685 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.062644763 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.06269362 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.509876948 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.076442193 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.093826139 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.070469879 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.063318942 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.087724472 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.452735028 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.063591827 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.08839108 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.363461343 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.100235124 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.06352862 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.169901929 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.692992623 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.165539289 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.064953534 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.088583941 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.064610227 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.321841116 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.063337472 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.06334573 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.066244225 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.520953126 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.065772857 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.51037447 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.063246957 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 3.849141859 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.063180988 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.063634206 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.629444136 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.264750024 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.063672971 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.063965019 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.066549105 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.06493553 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.064575621 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.089972086 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.660298793 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.157583411 seconds)
    (60/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.064866871 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.064563294 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.067861453 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.08983742 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.06467532 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.077343403 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.065766005 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.25835929 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.119086098 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.171164623 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.514512689 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.066866997 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.148616203 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.17851618 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.065355096 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.064873329 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.065467756 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.06471473 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.16565195 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.065699256 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.381467597 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.071663094 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.066231708 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.121355263 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.153770045 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.065620447 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.20598257 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.06774786 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.065495281 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.691979332 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.151001133 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.065672327 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.064899347 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.065846109 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.381012618 seconds)
    (95/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.06576217 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.514657308 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.146227091 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.066380494 seconds)
    (99/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.066839317 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.683096376 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.069449666 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.391241649 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.506893584 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.530478445 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.067237854 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.167336448 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.070801659 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.06792657 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.065729571 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.095393814 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.066499548 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.121830546 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.066557301 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.457213835 seconds)
  done (took 326.876042992 seconds)
done (took 659.688075445 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.718267469 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.700931965 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.802000315 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.702913596 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.689238812 seconds)
  done (took 9.628279602 seconds)
done (took 10.643902226 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.227503278 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.228792736 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.118253708 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.227976717 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.091619856 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.242331314 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.206854596 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.086082004 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.156589538 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.131158543 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.156141886 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.109914307 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.090997276 seconds)
  done (took 16.090020878 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.358742408 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.345272666 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.13129144 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.349542757 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.108635923 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.377789547 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.248458932 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.251995283 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.246870005 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.083243267 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.082739094 seconds)
  done (took 14.601758504 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.350805446 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.347802643 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.135664409 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.358660637 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.110380476 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.349539858 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.250061078 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.255172135 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.243900081 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.082497198 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.081418984 seconds)
  done (took 14.582526499 seconds)
done (took 46.29042275 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.075649478 seconds)
  done (took 2.091800001 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.10647193 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.263762037 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.08884959 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.080264054 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.077993887 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.077543078 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.080050751 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.077397841 seconds)
  done (took 9.870344549 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.074260669 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.075248914 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.074119045 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.075556984 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.074576547 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.077302309 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.075086195 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.074884608 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.077097319 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.077650922 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.07686391 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.074402451 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.077730107 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.076633443 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.076849756 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.076781271 seconds)
  done (took 18.232592817 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.076423471 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.074459403 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.074761769 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.074959654 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.074532879 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.074957485 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.076147137 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.075000767 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.074728728 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.074557385 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.075532287 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.075381561 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.076256118 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.075532104 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.075787227 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.076170661 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.075172377 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.075352412 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.079783774 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.07561223 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.076304181 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.074978837 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.076134978 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.076735776 seconds)
  done (took 26.835385525 seconds)
done (took 58.047083188 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.658433461 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.300906325 seconds)
  done (took 7.977545013 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.077781199 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.078687362 seconds)
  done (took 3.176080016 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.078553695 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.078668246 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.0782598 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.07777654 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.078618005 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.078484469 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.078504592 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.078671966 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.078922833 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.078902551 seconds)
  done (took 11.803959549 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.07949981 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.078570356 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.076165272 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.079745109 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.07887496 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.07679419 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.079365075 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.079227371 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.079042963 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.077055408 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.078924023 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.077953977 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.079716365 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.077757924 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.079313763 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.076671871 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.077656458 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.076867159 seconds)
  done (took 20.428852227 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.079734126 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.079693477 seconds)
  done (took 3.179791082 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.077614297 seconds)
    (2/7) benchmarking "second"...
    done (took 1.077421606 seconds)
    (3/7) benchmarking "month"...
    done (took 1.077681761 seconds)
    (4/7) benchmarking "year"...
    done (took 1.077052828 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.077297671 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.077444492 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.077882424 seconds)
  done (took 8.562141463 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.080079374 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.245842876 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.317636062 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.677222786 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.081382884 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.083935673 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 1.909297357 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.084015523 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.08577052 seconds)
  done (took 12.585344776 seconds)
done (took 68.731978794 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.042078906 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.074556234 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.818160812 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.079819271 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.101423226 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.372043883 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.113906832 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.18971755 seconds)
done (took 35.812701127 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.087792902 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.698319079 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.742713553 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.021863885 seconds)
  done (took 10.477613297 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.048341143 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 1.853948646 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.122631304 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 1.966187358 seconds)
  done (took 16.999049884 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.581889986 seconds)
    (2/2) benchmarking "read"...
    done (took 1.377483279 seconds)
  done (took 3.956684922 seconds)
done (took 38.5422255 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.056085329 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.052562344 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.049844233 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.053007855 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.050105012 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.049814205 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.053052405 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.052856252 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 1.052847051 seconds)
    (10/24) benchmarking ("one", "Float32")...
    done (took 1.052454599 seconds)
    (11/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.05277438 seconds)
    (12/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.048041359 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.048688949 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.048210383 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.050772563 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.048507208 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.048392012 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.04862482 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.05077293 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.049102714 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.048971136 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.046266716 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.046648834 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.048655586 seconds)
  done (took 26.205980022 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.04863557 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.047488063 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.049122356 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.048638719 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.045888077 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.04835608 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.047716844 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.045122174 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.048156916 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.048046451 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.04499275 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.04546763 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.04767087 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.045038928 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.047665552 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.045562401 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.04780335 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.045726956 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.047991011 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.045339887 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.048205676 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.04579853 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.046297294 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.048197544 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.045621424 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.04557485 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.048524494 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.046316659 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.048730409 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.045579072 seconds)
  done (took 32.401402598 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.051976992 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.054243589 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.047839562 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.047039682 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.047377361 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.047238176 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.046748929 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.047372987 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.047018642 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.047649869 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.047080392 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.047009051 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.044002788 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.043906135 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.044478612 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.043779774 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.044169414 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.044491202 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.044862989 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.044207335 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.044563753 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.043659745 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.042533183 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.041686812 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.042399792 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.042797867 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.042804691 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.042666256 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.04213321 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.042795087 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.042973419 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.040165073 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.040356346 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.040198976 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.041682192 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.040727984 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.044112468 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.045779517 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.04044673 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.040590723 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.040467357 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.04095147 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.040194589 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.040762596 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.040166912 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.040914028 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.03956689 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.040991589 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.040221653 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.042506282 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.039873156 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.039750495 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.039313909 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.040543113 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.040099205 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.040132498 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.040241296 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.039686893 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.04004532 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.039749436 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.036223652 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.036878737 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.036708102 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.036500185 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.037587527 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.037078281 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.036783118 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.036938326 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.036595404 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.036024758 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.033922463 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.0343403 seconds)
  done (took 76.013364786 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.033873393 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.03238493 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.031133167 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.031975593 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.032500202 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.036338601 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.028694669 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.031493501 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.029658031 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.031122593 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.031241572 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.029770469 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.029331659 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.03232938 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.032594775 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.030108151 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.031361077 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.028544296 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.031051414 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.031441862 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.03123845 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.028846215 seconds)
  done (took 23.664654222 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.031107023 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.031493889 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.029074713 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.031185428 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.029230105 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.031720953 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.031522261 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.031836975 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.032246999 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.029327378 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.029044604 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.032306529 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.029273857 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.029399485 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.02965572 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.029426696 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.03193183 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.029292389 seconds)
  done (took 19.523335866 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.030051984 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.029286065 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.031921397 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.029857268 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.030231257 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.032669213 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.030089692 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.032495314 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.031925341 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.03058351 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.032950702 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.032456734 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.033016672 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.030037539 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.03248887 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.03096964 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.03285987 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.030783957 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.032551479 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.030701422 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.031204652 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.032877355 seconds)
  done (took 23.667362631 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.032745453 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.032685091 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.030874282 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.030565076 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.03096181 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.032856428 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.03380727 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.030672828 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.033227953 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.033034692 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.030729016 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.032673942 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.030731029 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.031886378 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.031337197 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.030783426 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.033627488 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.031353854 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.033873916 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.031433724 seconds)
  done (took 21.617071825 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.033033579 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.034115213 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.033639932 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.034750692 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.034591332 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.034600789 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.034263998 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.034358516 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.034569131 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.03453686 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.034385253 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.033953488 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.03429541 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.034653966 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.034665782 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.034749041 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.034731607 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.035737229 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.035049357 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.034746115 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.035285111 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.034778959 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.034376558 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.034371791 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.035120407 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.034878374 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.035229736 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.034402635 seconds)
  done (took 29.94505564 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.034741583 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.034800876 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.031913324 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.032379709 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.032262827 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.031874225 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.032425869 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.032645126 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.035537698 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.031956912 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.035474259 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.035233506 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.035082835 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.035114165 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.036091179 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.034984874 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.035939959 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.032788404 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.03292261 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.032777562 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.035560321 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.035578348 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.035476305 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.032608158 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.032819451 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.03561637 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.033939779 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.033266677 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.036078803 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.033387721 seconds)
  done (took 31.999505105 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.054658809 seconds)
    (2/2) benchmarking "in"...
    done (took 1.054328329 seconds)
  done (took 3.087458768 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.033624617 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.037085316 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.035864329 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.033886466 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.034387699 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.03611712 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.037521411 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.035397071 seconds)
  done (took 9.263087938 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.036559087 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.036579525 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.036632051 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.036826998 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.037445004 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.036411449 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.043206404 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.053039531 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.040239448 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.039756997 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.043457284 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.04445302 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.042303122 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.038970124 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.039608879 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.042247113 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.039988073 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.039488536 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.039018371 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.039526821 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.039653351 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.042651732 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.042408998 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.037625721 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.040204923 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.050201351 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.0455916 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.039771852 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.040315808 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.04460947 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.038981775 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.037510506 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.039796564 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.039886667 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.039780713 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.040091244 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.048480809 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.054123485 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.046630113 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.04148345 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.0405348 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.0388216 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.041778838 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.041694085 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.042863846 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.040659079 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.041333082 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.038402416 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.040549843 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.042453031 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.043818101 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.040808329 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.038874038 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.045583437 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.043043303 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.049369281 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.05521577 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.043851292 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.047424445 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.050788189 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.054209513 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.044894948 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.040943076 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.039059217 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.046587671 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.057067082 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.045902971 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.051028101 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.037078359 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.039002876 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.046000172 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.045308162 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.04191911 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.034036794 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.034113983 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.034358063 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.034106092 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.034867686 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.041820748 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.054244202 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.029303979 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.029649965 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.036996721 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.046457739 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.028623615 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.029563032 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.029333149 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.029558638 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.030825618 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.041026049 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.040528832 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.027041585 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.026542992 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.026699854 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.027950913 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.026903135 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.026051254 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.027464997 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.024989294 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.027846192 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.025906009 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.028499987 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.032866123 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.025694016 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.025903813 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.033339985 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.027887868 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.026112686 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.033663412 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.027739199 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.026443346 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.02726754 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.031625318 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.025063496 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.029114719 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.033585273 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.026421419 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.028857956 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.027264191 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.028176458 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.035398592 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.048219195 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.027746231 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.027893388 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.030783674 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.035207247 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.027075391 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.0309552 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.027821119 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.025053612 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.025244599 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.029860645 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.028207151 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.028287067 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.027574405 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.028508585 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.026073964 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.028781165 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.027414335 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.029307985 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.028489601 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.028567622 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.029328934 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.030416575 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.027782394 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.030283698 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.034592116 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.028732745 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.029615597 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.029656871 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.025933973 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.028702075 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.029603321 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.028798501 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.028660735 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.028344093 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.027704514 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.028749946 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.029273527 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.029635008 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.02911059 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.028958411 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.031271606 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.029669497 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.033563284 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.028299946 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.027148658 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.029161409 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.029789094 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.028808597 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.029729934 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.028624043 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.032083741 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.035261188 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.030324079 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.029559856 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.032571353 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.029587074 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.030226829 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.030091025 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.032157684 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.036053021 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.030189578 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.036874703 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.030570663 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.030338152 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.031417649 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.030520465 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.030141691 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.030328388 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.032529363 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.036332298 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.041525116 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.037156305 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.031372621 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.034329009 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.031894715 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.033206372 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.035188612 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.031036228 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.031880762 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.031575691 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.03058736 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.031573743 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.03294688 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.030897948 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.030621348 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.031878971 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.031924916 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.03163168 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.031727825 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.032157942 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.032594553 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.029604472 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.032055767 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.031669377 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.031235746 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.029754944 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.031051356 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.031493747 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.03252231 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.031778254 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.039204355 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.030660968 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.033863192 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.034291675 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.032375359 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.030864059 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.032640692 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.034777309 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.032154733 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.0391568 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.046697851 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.032984548 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.039910859 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.046064818 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.031117766 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.035225578 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.033161035 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.030449296 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.035030916 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.03836044 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.033203888 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.032782597 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.032678565 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.032946106 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.033761716 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.039440901 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.031479235 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.032353589 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.034019241 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.03432056 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.03071221 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.034828422 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.034805915 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.034873407 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.035670162 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.034090443 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.033876809 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.034574441 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.033232436 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.033948574 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.033733453 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.035727748 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.038932407 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.038599611 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.034607298 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.035840225 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.034430142 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.03680939 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.03436102 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.034128444 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.033658147 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.045285313 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.040052104 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.041167838 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.035561655 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.035276838 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.04043446 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.035684895 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.036727358 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.034621064 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.035110641 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.034668094 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.033673935 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.032372615 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.035958732 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.035723347 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.036485982 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.035950516 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.038053655 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.036393694 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.034375333 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.035644989 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.03478607 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.036463239 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.034917196 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.036054072 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.037844279 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.037578089 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.034723492 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.036058965 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.042681471 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.049426188 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.036847653 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.035613157 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.035629002 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.035126669 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.036998674 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.036331148 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.038547472 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.041037943 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.038476951 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.042692597 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.037182183 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.044639804 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.036193161 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.039489013 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.041778551 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.035014535 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.034726623 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.037721038 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.036329995 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.043973428 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.050409735 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.036877364 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.039084855 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.035902191 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.036879564 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.037920219 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.037050983 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.037250712 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.036327641 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.045631747 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.051935555 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.039228643 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.039941442 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.035155471 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.03695682 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.038043327 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.037405515 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.041048314 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.03742127 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.038720059 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.037367903 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.037968801 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.038508955 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.037428231 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.03865039 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.036504798 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.039358904 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.044547969 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.052212326 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.040799837 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.038653038 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.045517677 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.03806569 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.044896805 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.052204604 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.038832838 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.038389521 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.039022337 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.039963935 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.038123236 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.038926583 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.038614006 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.038815217 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.042145965 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.03825643 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.041666663 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.041303295 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.038746382 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.038821993 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.046812535 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.056358564 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.040748762 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.042452466 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.037212259 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.040584162 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.041704267 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.039089962 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.038528594 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.041450194 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.046701584 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.045258577 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.039588556 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.039477068 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.039886987 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.039676687 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.040089107 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.040869176 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.039388902 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.040682678 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.041509527 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.039459102 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.043947955 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.04058134 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.041250253 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.041406751 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.041385487 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.049390361 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.040762543 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.041689509 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.039893916 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.041057194 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.040702613 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.041355673 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.040983092 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.04104457 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.041489476 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.041635038 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.045739098 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.04521959 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.044045833 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.040367786 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.041265824 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.040872608 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.041911897 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.040794036 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.040579906 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.041062951 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.042485137 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.04056059 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.042824443 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.040346895 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.041484945 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.041850659 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.041766246 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.043247242 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.046793581 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.04242362 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.039981784 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.042188072 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.043139791 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.040834763 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.042446125 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.050070871 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.044468529 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.049320872 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.048654715 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.044470867 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.041915993 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.044355739 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.04777638 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.040715184 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.042592148 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.042869864 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.043560621 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.043245588 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.045027733 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.042661483 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.049165273 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.042846944 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.042348946 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.050699773 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.058493622 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.042855105 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.043829452 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.045583737 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.043149784 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.041334109 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.044222939 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.043091583 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.050778725 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.059371442 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.043321921 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.045618586 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.042493292 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.0443088 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.046432074 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.044582174 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.045095808 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.041701011 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.044757171 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.043461588 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.044383612 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.041744667 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.044018559 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.044370269 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.046192255 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.048794898 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.042542023 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.04677584 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.045173217 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.047502098 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.045841751 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.045312959 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.04260944 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.042614749 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.044678943 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.044406963 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.045519278 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.04785146 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.04585821 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.04543426 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.045716298 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.045659781 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.047576947 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.053834085 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.051013946 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.043266788 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.045688548 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.047188354 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.048735053 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.045296878 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.045793944 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.045314786 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.048963894 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.045688498 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.045222013 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.046347351 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.047980112 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.060442612 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.059953382 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.046312972 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.046659148 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.049642418 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.046902824 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.044261324 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.046662765 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.048383648 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.049151357 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.054357829 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.046669299 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.053114983 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.060778566 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.047213077 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.049400468 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.048848248 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.051971554 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.049483427 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.046276392 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.047087876 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.049885695 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.059998316 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.048335656 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.055007525 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.071421699 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.061965348 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.04868721 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.047260155 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.046368573 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.046760388 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.04921514 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.047093413 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.048025591 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.048148657 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.046599787 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.047916488 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.051816721 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.049333286 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.048199706 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.047803547 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.047567799 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.049063135 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.045363435 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.047837217 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.048319197 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.047822276 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.047846804 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.048236143 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.048059896 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.05931146 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.05658255 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.048929101 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.048548184 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.046167105 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.052131465 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.050283568 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.056750593 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.054382379 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.048643162 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.048354251 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.050364079 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.04803971 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.04662155 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.049402666 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.048858888 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.04841855 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.04730708 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.05954176 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.055640171 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.053604474 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.049513932 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.04911353 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.049601372 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.050510325 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.049573831 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.049902766 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.051292318 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.050605451 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.053182641 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.050062862 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.049842284 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.051933618 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.055907477 seconds)
  done (took 620.713775585 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.047984857 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.047914625 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.04765292 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.048352631 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.047694797 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.047595197 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.048123612 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.048269287 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.048272666 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.048501448 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.048688227 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.047860494 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.048010684 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.04837363 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.048035736 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.048064289 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.04829599 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.048591482 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.048469264 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.048452286 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.048308989 seconds)
  done (took 23.003924028 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.050623902 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.04851807 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.048547402 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.051319847 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.048768312 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.050552528 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.04889297 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.051278086 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.051420045 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.04869435 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.051623498 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.051159698 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.049005343 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.048602237 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.048995048 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.051626491 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.051675718 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.049431125 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.051535919 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.0493074 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.052273177 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.049521499 seconds)
  done (took 24.096537679 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.051739164 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.051593871 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.051458693 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.049378951 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.051855793 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.049659595 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.051516915 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.052120371 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.052375979 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.052312058 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.050933806 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.052645621 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.057383979 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.055561023 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.054148288 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.053259363 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.196232694 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.052137802 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.052451952 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.052287548 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.050206896 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.05821903 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.051531308 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.050793327 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.051804726 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.052970991 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.053036124 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.053259428 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.053109234 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.053828731 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.056588245 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.053492284 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.052665127 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.054939331 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.052761678 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.053861908 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.056517343 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.053463517 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.051185758 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.054250528 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.061321139 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.070242554 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.053990931 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.059457272 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.055460694 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.054680175 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.056524044 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.059141592 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.052012957 seconds)
  done (took 52.777774356 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.055087676 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.055340563 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.052217284 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.054414762 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.054689081 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.055358646 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.055063468 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.055684691 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.052333142 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.052684278 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.055881079 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.05370812 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.054145071 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.055885188 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.056109104 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.053521801 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.053118179 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.053070333 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.052794741 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.053587709 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.053261075 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.056041383 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.056593361 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.053408658 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.0561733 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.053480946 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.053445734 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.056311715 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.054207752 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.05336761 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.056605578 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.05654901 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.056105442 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.054527145 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.053718966 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.056137176 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.056729471 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.053977652 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.056446462 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.054115991 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.056710099 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.056959083 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.056728284 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.056590524 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.053434999 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.054608279 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.053498655 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.053916537 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.054439251 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.056795949 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.056533306 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.054968884 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.056635253 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.054196903 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.056772099 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.057449622 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.054018935 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.054157262 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.057039625 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.055155189 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.054665715 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.05792317 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.054714956 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.056428783 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.057180919 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.054810231 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.054350487 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.057056585 seconds)
  done (took 72.741689146 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.057285324 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.057040495 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.057035434 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.057702698 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.057080995 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.057737612 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.057168775 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.057564362 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.057545962 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.057434162 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.057641175 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.058291762 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.0577672 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.05841857 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.05805691 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.057581281 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.057762845 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.057722448 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.058347911 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.057736561 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.058285868 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.058008512 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.058505284 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.058290821 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.058495583 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.058535219 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.058170563 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.058314926 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.057827089 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.058487208 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.059253514 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.058131513 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.059079572 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.058319316 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.059187805 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.058869208 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.058916835 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.058989545 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.059152138 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.059153664 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.058826963 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.059072929 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.059020713 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.058736735 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.058601309 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.059610225 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.059282807 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.059124949 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.059851639 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.059055989 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.058903907 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.059249812 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.059229997 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.058844286 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.059480782 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.060575609 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.059301957 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.05981096 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.059711079 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.060435677 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.059466738 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.06070295 seconds)
  done (took 66.632396691 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.060438424 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.060592866 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.057576359 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.057770559 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.060819334 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.057437137 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.061118659 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.06042779 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.060592983 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.060486864 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.060984307 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.058395482 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.058854935 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.061019559 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.058535016 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.05881224 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.05914382 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.058846018 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.061241289 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.058791511 seconds)
  done (took 22.194044257 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.05954548 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.061935899 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.060081782 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.059065392 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.061128703 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.058543924 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.06086215 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.061212142 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.058514996 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.06132255 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.060932919 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.061429599 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.058358802 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.059227412 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.061673304 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.058989114 seconds)
  done (took 17.965436508 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.059393284 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.061554502 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.061941575 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.061213736 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.06006022 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.05906994 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.062294438 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.05975659 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.059605451 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.062219941 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.061704984 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.062344188 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.06301233 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.061592909 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.059611647 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.062517738 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.060217961 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.059812332 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.062410401 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.062269201 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.060467742 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.060464831 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.06294548 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.062835452 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.060493376 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.061416654 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.060282192 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.060504084 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.060485125 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.063272534 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.061172479 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.061152932 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.060952789 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.061283781 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.062734889 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.061285876 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.06347128 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.063193883 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.063458555 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.063292143 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.063324305 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.060904659 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.063325322 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.063598779 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.061302293 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.063522057 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.061094514 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.061748306 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.061183234 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.061531404 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.064023463 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.063822447 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.064121037 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.064566504 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.064024787 seconds)
  done (took 59.403823561 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.064325197 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.064579553 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.061643483 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.064306081 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.064179784 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.061885553 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.064672549 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.061715116 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.062456377 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.06388178 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.06284136 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.064553345 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.062593106 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.064803565 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.063291534 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.064786281 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.062037225 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.061836076 seconds)
  done (took 20.146092943 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.062791036 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.062404298 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.064780329 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.06229837 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.062331298 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.065230208 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.062532547 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.06479778 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.065269463 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.063210245 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.0628363 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.065261257 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.065731112 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.065834931 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.06353796 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.063196618 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.066542599 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.065416759 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.063355397 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.063489041 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.066144139 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.066377355 seconds)
  done (took 24.419842607 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.065114793 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.064332792 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.078975031 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.100202565 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.090022467 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.064180935 seconds)
  done (took 7.469316315 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.065246366 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.067272888 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.064181732 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.068019976 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.067035611 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.064107267 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.064724899 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.064752179 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.066506436 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.064928491 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.064483987 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.067423891 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.067392232 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.065301886 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.067174279 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.06743872 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.065205103 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.065499645 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.066128853 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.067642439 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.065738551 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.067808172 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.065655077 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.065073976 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.066095143 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.065300125 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.067416663 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.065730644 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.065804019 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.067390227 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.067815731 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.065093516 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.068346477 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.065653428 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.069138692 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.068717748 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.065236873 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.068321155 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.068490211 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.065342458 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.068201252 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.068462537 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.068458561 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.065832872 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.068604819 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.066179538 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.066034709 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.065705002 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.065905975 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.068945414 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.068941211 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.066172941 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.069136196 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.068879876 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.068726887 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.069041346 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.066840729 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.066622418 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.068781211 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.066736391 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.066748107 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.068969759 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.066786921 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.0672851 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.068979648 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.066723024 seconds)
  done (took 71.421646815 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.067174897 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.066259535 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.065952812 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.068221742 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.066436683 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.066657713 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.0664878 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.067588704 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.066744886 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.066862378 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.069468713 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.066865719 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.066969419 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.067045452 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.067125568 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.066706192 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.066701503 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.06715972 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.067317441 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.070512733 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.067703701 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.067499977 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.067536205 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.067187741 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.06827631 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.070113076 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.067802507 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.068085973 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.068222568 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.068702641 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.067927855 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.068626446 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.068280814 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.068731466 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.068395692 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.068798675 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.067923544 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.068679009 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.068220436 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.070872456 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.068597384 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.071392621 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.068895344 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.068767213 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.069379188 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.068676076 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.068829009 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.069046978 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.068675366 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.069072469 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.070085954 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.069358738 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.069426226 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.069110823 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.070734942 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.069237035 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.069438504 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.069286048 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.069588771 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.072283874 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.068719433 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.069641421 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.07159051 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.06888773 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.06989922 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.069710486 seconds)
  done (took 71.531896612 seconds)
done (took 1452.904549496 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.133892327 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.146042608 seconds)
  done (took 13.291937848 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.23055115 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.182909602 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.069986169 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.089114538 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.070071139 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.069659308 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.091610691 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.070306719 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.070633395 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.070340298 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.070832205 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.252987306 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.095059033 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.072222692 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.071609507 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.162267357 seconds)
  done (took 38.754841322 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.094907151 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.082229915 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.175365601 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.097985663 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.100773167 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.239086108 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.129344776 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.081030074 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.224475241 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.117045833 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.412574374 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.100754463 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.081459453 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.021907932 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.094985457 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.238689777 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.29513317 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.413824957 seconds)
  done (took 25.016369297 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.455550106 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.075338043 seconds)
  done (took 8.549213554 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.097435008 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.094356599 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.081025922 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.101693424 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.100951305 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.126750493 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.104569687 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.100696964 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.076246515 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.118906199 seconds)
  done (took 62.021967955 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.096230948 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.080489785 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.081395268 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.078010706 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.082607183 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.071231695 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.079717487 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.076531582 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.131968547 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.188242424 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.094449831 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.086187097 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.080772462 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.081459171 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.077988065 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.113517895 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.229271616 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.078414235 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.077481133 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.085732756 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.080726524 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.16757603 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.116118769 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.079512162 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.186090324 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.145385405 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.084444144 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.086574923 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.196913722 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.079298511 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.079400785 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.081195352 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.082307957 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.642157025 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.540148042 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.088043605 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.113264461 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.088807185 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.078972494 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.199421213 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.081181444 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.088516223 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.074193586 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.522154519 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.235395322 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.180696738 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.163493875 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.083991791 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.082366524 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.138138237 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.083009328 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.083023176 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.107354822 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.788648244 seconds)
  done (took 95.921268929 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.097578844 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.550678977 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.240013229 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.09086535 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.91721052 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.715025025 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.076134318 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.317656147 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.117986916 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.074223622 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.325211069 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.544176032 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.082640617 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.116050609 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.67524031 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.111753898 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.075441324 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.988778135 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.0747174 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.077368614 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.4812737 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.090807653 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.076733566 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.187514878 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.11007128 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.489735663 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.299074818 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.568087529 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.077007506 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.075107566 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.51060471 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.075343255 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.155936736 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.076490388 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.328055218 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.385466873 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.363026572 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.0765852 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.122176979 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.079283696 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.104014066 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.487166279 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.374233651 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.076169325 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.087179262 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.49247531 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.075597075 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.084616359 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.079089373 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.279334405 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.021834851 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.075994334 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.298432952 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.076191992 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.10019568 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.124545658 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.156380221 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.519848251 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.076373927 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.250789746 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.13037111 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.076417387 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.079646235 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.076996602 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.078691228 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.377989176 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.124616534 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.083968087 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.380772203 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.505042067 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.079561456 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.574883662 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.983144765 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.103084811 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.137782772 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.076976867 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.816358886 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.521417319 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.111935761 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.07698395 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.366341279 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.080622167 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.329896626 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.092110865 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.077669185 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.496858212 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.096475756 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.104717583 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.077356014 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.094367757 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.878793618 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.080240017 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.326655991 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.143241268 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.079023874 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.077526319 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.09079855 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.077148965 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.078030428 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.085406408 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.572355261 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.081119449 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.20698218 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.097631608 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.078113625 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.080748796 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.081032305 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.078646925 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.298332029 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.57339069 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.085719251 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.078808743 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.084043116 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.080928383 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.174872767 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.083074256 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.34244531 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.081360302 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.078795222 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.080486581 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.754437781 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.101224224 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.079557216 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.079287114 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.916383284 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.273614015 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.09437401 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.079293405 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.080733208 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.092739169 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.297264634 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.081906196 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.088922189 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.084120259 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.744792294 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.101501289 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.090061466 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.677371317 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.083827118 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.016146751 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.10650479 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.080775703 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.379434334 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.335568828 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.689124307 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.081796473 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.094854246 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.751954871 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.089077029 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.224933541 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.095850027 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.082375421 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.273266908 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.57979834 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.081496616 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.591615519 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.080968042 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.295191544 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.080844216 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.394320258 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.540494044 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.081431009 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.090585905 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.751793847 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.727710703 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.626604858 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.084352358 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.331402544 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 5.527686593 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.134025394 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.081649398 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.081122984 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.684914413 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.082572074 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.084161905 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.082137433 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.082358602 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.14168491 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.246192229 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.331477679 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.088969736 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.498290847 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.144911074 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.081861138 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.085440078 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.082649626 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.417256149 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.173131425 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.083787039 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.117715401 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.082639449 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.085301602 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.497415429 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.023536849 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.085278972 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.225233904 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.678719742 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.082544231 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.083092726 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.750710743 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.49934487 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.575143713 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.118834352 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.349454305 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.082717475 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.119702111 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.855060562 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.115981522 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.49776648 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.084540142 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.083284158 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.655055966 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.100200359 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.13802849 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.083515669 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.083422494 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.589446651 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.08324515 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.0846025 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.308573945 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.085420834 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.339370603 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.085062928 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.115769804 seconds)
  done (took 1051.719878897 seconds)
done (took 1296.28762177 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.085652204 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.08464089 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.07417874 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.086261788 seconds)
  done (took 25.362123616 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.09336202 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.089618169 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.090339165 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.088736971 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.091547604 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.090324762 seconds)
  done (took 7.57472239 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.138878784 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.08334527 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.085609706 seconds)
  done (took 18.339010571 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.280439507 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.181039201 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.409552215 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.010387267 seconds)
  done (took 8.912433256 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.089985524 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.090824502 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.089977716 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.092563017 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.094857217 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.095260758 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.092079316 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.092492908 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.095755416 seconds)
  done (took 10.864750514 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.580301282 seconds)
done (took 76.664541077 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.210883195 seconds)
    (2/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.425199478 seconds)
    (3/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.651837533 seconds)
    (4/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.086123675 seconds)
    (5/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.50325893 seconds)
    (6/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.16742803 seconds)
    (7/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 4.653366588 seconds)
    (8/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.101291192 seconds)
    (9/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.084380546 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.314567384 seconds)
    (11/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.681140229 seconds)
    (12/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.084518824 seconds)
    (13/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.3677413 seconds)
    (14/309) benchmarking ("sort", Int8, false)...
    done (took 4.10954515 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.127694352 seconds)
    (16/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.802725997 seconds)
    (17/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.760766515 seconds)
    (18/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.126692681 seconds)
    (19/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.111098841 seconds)
    (20/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.483987031 seconds)
    (21/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.098855279 seconds)
    (22/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.272170882 seconds)
    (23/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.311818176 seconds)
    (24/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.576897623 seconds)
    (25/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.055070402 seconds)
    (26/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.08699287 seconds)
    (27/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.196729394 seconds)
    (28/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.097885432 seconds)
    (29/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.886417366 seconds)
    (30/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.474853269 seconds)
    (31/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.090154875 seconds)
    (32/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.710832683 seconds)
    (33/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.216577737 seconds)
    (34/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.766707884 seconds)
    (35/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 4.540062371 seconds)
    (36/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.619281244 seconds)
    (37/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.588187788 seconds)
    (38/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.770693205 seconds)
    (39/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.146404091 seconds)
    (40/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.772064342 seconds)
    (41/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.267495044 seconds)
    (42/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.064850179 seconds)
    (43/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.548619118 seconds)
    (44/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.514429326 seconds)
    (45/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.114841785 seconds)
    (46/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.088579784 seconds)
    (47/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.084482614 seconds)
    (48/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.31721223 seconds)
    (49/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.427198412 seconds)
    (50/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.651682155 seconds)
    (51/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.088182725 seconds)
    (52/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.43557301 seconds)
    (53/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.210497088 seconds)
    (54/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.846950704 seconds)
    (55/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.350562741 seconds)
    (56/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.07407615 seconds)
    (57/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.866455483 seconds)
    (58/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.287566549 seconds)
    (59/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.146106848 seconds)
    (60/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.800579245 seconds)
    (61/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.090362001 seconds)
    (62/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.201493957 seconds)
    (63/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.39408438 seconds)
    (64/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 1.903133895 seconds)
    (65/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.16154238 seconds)
    (66/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.264352579 seconds)
    (67/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.770416126 seconds)
    (68/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.089514165 seconds)
    (69/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.190859724 seconds)
    (70/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.60178394 seconds)
    (71/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.324940213 seconds)
    (72/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.230395929 seconds)
    (73/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.213881021 seconds)
    (74/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.08868509 seconds)
    (75/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.190350668 seconds)
    (76/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.58239747 seconds)
    (77/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.116696969 seconds)
    (78/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.772171325 seconds)
    (79/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.19219157 seconds)
    (80/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.232469646 seconds)
    (81/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.147473578 seconds)
    (82/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.201854705 seconds)
    (83/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.148287231 seconds)
    (84/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.187573059 seconds)
    (85/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.598852384 seconds)
    (86/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.118462524 seconds)
    (87/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.624461692 seconds)
    (88/309) benchmarking ("sort", Int64, false)...
    done (took 5.179540143 seconds)
    (89/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.099111374 seconds)
    (90/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.41418891 seconds)
    (91/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.107694135 seconds)
    (92/309) benchmarking ("sort", BigInt, false)...
    done (took 6.089575775 seconds)
    (93/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.092007916 seconds)
    (94/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.107227811 seconds)
    (95/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.176039577 seconds)
    (96/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.343316207 seconds)
    (97/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.29942326 seconds)
    (98/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.450629259 seconds)
    (99/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.077684922 seconds)
    (100/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.50969374 seconds)
    (101/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.145439054 seconds)
    (102/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.074701156 seconds)
    (103/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.063306354 seconds)
    (104/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.104556722 seconds)
    (105/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.142597604 seconds)
    (106/309) benchmarking ("sort", Float64, false)...
    done (took 5.294607816 seconds)
    (107/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.113367604 seconds)
    (108/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.683344825 seconds)
    (109/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.095947198 seconds)
    (110/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.109515116 seconds)
    (111/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.575267131 seconds)
    (112/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.893157415 seconds)
    (113/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.130668365 seconds)
    (114/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.136899699 seconds)
    (115/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.162798924 seconds)
    (116/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.299887191 seconds)
    (117/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.077316682 seconds)
    (118/309) benchmarking ("sort", Float32, false)...
    done (took 5.062410552 seconds)
    (119/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.075851121 seconds)
    (120/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.126931247 seconds)
    (121/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.240133288 seconds)
    (122/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.09263251 seconds)
    (123/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.054355286 seconds)
    (124/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.490738685 seconds)
    (125/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.450964766 seconds)
    (126/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.322927905 seconds)
    (127/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.506067821 seconds)
    (128/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.141545807 seconds)
    (129/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.186161557 seconds)
    (130/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.212767529 seconds)
    (131/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.522197084 seconds)
    (132/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.172205741 seconds)
    (133/309) benchmarking ("sort", Bool, false)...
    done (took 1.593488347 seconds)
    (134/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.115615421 seconds)
    (135/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.833833813 seconds)
    (136/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.076088208 seconds)
    (137/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.372778172 seconds)
    (138/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.266375902 seconds)
    (139/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.757088081 seconds)
    (140/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.35155604 seconds)
    (141/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.090762068 seconds)
    (142/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.11680011 seconds)
    (143/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.499540497 seconds)
    (144/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.222046112 seconds)
    (145/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.764418634 seconds)
    (146/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.416980642 seconds)
    (147/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.471226828 seconds)
    (148/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.105633232 seconds)
    (149/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.132043674 seconds)
    (150/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.176000727 seconds)
    (151/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.079402276 seconds)
    (152/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.918596652 seconds)
    (153/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.1009479 seconds)
    (154/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.079715295 seconds)
    (155/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.76515232 seconds)
    (156/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.117848702 seconds)
    (157/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.627279889 seconds)
    (158/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.19323478 seconds)
    (159/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.177584661 seconds)
    (160/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.06579503 seconds)
    (161/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.17826421 seconds)
    (162/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.093037835 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.428967127 seconds)
    (164/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.937924665 seconds)
    (165/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.119482369 seconds)
    (166/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.091816031 seconds)
    (167/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.287439101 seconds)
    (168/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.115508136 seconds)
    (169/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.09232413 seconds)
    (170/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.396534705 seconds)
    (171/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.419267494 seconds)
    (172/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.095501273 seconds)
    (173/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.152639584 seconds)
    (174/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.079137451 seconds)
    (175/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.092370083 seconds)
    (176/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.093986143 seconds)
    (177/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.189739812 seconds)
    (178/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.230918418 seconds)
    (179/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.297468394 seconds)
    (180/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.094527084 seconds)
    (181/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.206833525 seconds)
    (182/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.092234612 seconds)
    (183/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.440779021 seconds)
    (184/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.358209325 seconds)
    (185/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.115556898 seconds)
    (186/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.287853111 seconds)
    (187/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.112881114 seconds)
    (188/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.923372957 seconds)
    (189/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.550034311 seconds)
    (190/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.64873867 seconds)
    (191/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 1.912329735 seconds)
    (192/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.13493555 seconds)
    (193/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.11932716 seconds)
    (194/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.838028401 seconds)
    (195/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.114490757 seconds)
    (196/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.134591657 seconds)
    (197/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.119375191 seconds)
    (198/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.085784694 seconds)
    (199/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.484726001 seconds)
    (200/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.255238155 seconds)
    (201/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.15179016 seconds)
    (202/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.20590603 seconds)
    (203/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.824616737 seconds)
    (204/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.378325768 seconds)
    (205/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.815100139 seconds)
    (206/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.361466111 seconds)
    (207/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.643884455 seconds)
    (208/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.133882219 seconds)
    (209/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.936857084 seconds)
    (210/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.121472483 seconds)
    (211/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.229100841 seconds)
    (212/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.692293836 seconds)
    (213/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.308824592 seconds)
    (214/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.262400574 seconds)
    (215/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.768191697 seconds)
    (216/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.773299293 seconds)
    (217/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.414633948 seconds)
    (218/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.086992609 seconds)
    (219/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.180588004 seconds)
    (220/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.116802323 seconds)
    (221/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.134845676 seconds)
    (222/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.178497392 seconds)
    (223/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.092591674 seconds)
    (224/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.097904328 seconds)
    (225/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.271841098 seconds)
    (226/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.097136878 seconds)
    (227/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.097032317 seconds)
    (228/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.244201609 seconds)
    (229/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.102029558 seconds)
    (230/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.258968136 seconds)
    (231/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.852829575 seconds)
    (232/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.870197091 seconds)
    (233/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.667640616 seconds)
    (234/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.082149274 seconds)
    (235/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.194583507 seconds)
    (236/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.089317891 seconds)
    (237/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.117190513 seconds)
    (238/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.605734196 seconds)
    (239/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.222054217 seconds)
    (240/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.199042686 seconds)
    (241/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.149841841 seconds)
    (242/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.142862215 seconds)
    (243/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.652778262 seconds)
    (244/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.199751735 seconds)
    (245/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.143721666 seconds)
    (246/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.869954432 seconds)
    (247/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.28932597 seconds)
    (248/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.671164591 seconds)
    (249/309) benchmarking ("map", identity, BigInt, false)...
    done (took 1.825303736 seconds)
    (250/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.486849703 seconds)
    (251/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.214583492 seconds)
    (252/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.219892632 seconds)
    (253/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.407889998 seconds)
    (254/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.120810926 seconds)
    (255/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.122502079 seconds)
    (256/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.211450449 seconds)
    (257/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.101774753 seconds)
    (258/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.596694665 seconds)
    (259/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.44339884 seconds)
    (260/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.543500273 seconds)
    (261/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.104131073 seconds)
    (262/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.175130369 seconds)
    (263/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.423429727 seconds)
    (264/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.213698609 seconds)
    (265/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.242478465 seconds)
    (266/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.437246714 seconds)
    (267/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.754241308 seconds)
    (268/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.625246098 seconds)
    (269/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.103523893 seconds)
    (270/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.632681423 seconds)
    (271/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.170069825 seconds)
    (272/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.339122274 seconds)
    (273/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.179399414 seconds)
    (274/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.145479692 seconds)
    (275/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.179264388 seconds)
    (276/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.094061526 seconds)
    (277/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.214193523 seconds)
    (278/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.294393093 seconds)
    (279/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.448986769 seconds)
    (280/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.29209802 seconds)
    (281/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.385372795 seconds)
    (282/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 2.861933486 seconds)
    (283/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.11322014 seconds)
    (284/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.110395225 seconds)
    (285/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.109748395 seconds)
    (286/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.101056537 seconds)
    (287/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.1422767 seconds)
    (288/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.280110468 seconds)
    (289/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.183995648 seconds)
    (290/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.361307317 seconds)
    (291/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.378176754 seconds)
    (292/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.280667508 seconds)
    (293/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.472973021 seconds)
    (294/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.114511542 seconds)
    (295/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.111149279 seconds)
    (296/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.110479999 seconds)
    (297/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.385426882 seconds)
    (298/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.197365963 seconds)
    (299/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.120130359 seconds)
    (300/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.606664221 seconds)
    (301/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.680401671 seconds)
    (302/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.098731525 seconds)
    (303/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.392505583 seconds)
    (304/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.333985935 seconds)
    (305/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.310742075 seconds)
    (306/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.399008202 seconds)
    (307/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.24166108 seconds)
    (308/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.106671927 seconds)
    (309/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.78226413 seconds)
  done (took 830.77001374 seconds)
done (took 831.80409532 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.129065706 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.124267177 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.108984174 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.131785298 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.221546947 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.141054856 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.120432708 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.111616262 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.157624793 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.158729854 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.108378645 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.142034325 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.110988326 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.109974218 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.108652268 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.123630369 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.012731723 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.111093869 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.126160121 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.119239713 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.126642647 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.10826752 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.158911285 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.142033524 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.113492879 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.113267961 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.112944 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.127337409 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.221235126 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.113582013 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.113085105 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.120821399 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.011671621 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.11001627 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.105255326 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.127607748 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.120839765 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.119913264 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.114358373 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.142038837 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.36929107 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.111814193 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.111611502 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.110760354 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.111507863 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.116462736 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.111683899 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.116523706 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.123255902 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.124980941 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.379156282 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.127750786 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.114126384 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.112902377 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.122728652 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.111581855 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.114622812 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.125064861 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.128402078 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.12542966 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.010961551 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.119607921 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.114598543 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.128446364 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.119359195 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.422459212 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.109165095 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.117424516 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.379761503 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.119877531 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.422935243 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.122243798 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.113926146 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.126373625 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.143560178 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.017816109 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.109011172 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.112038685 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.119735411 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.111120405 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.122248713 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.125293826 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.117982462 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.114955812 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.126776748 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.145297711 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.123564233 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.113494665 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.122384903 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.130201906 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.120483366 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.123976283 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.118192196 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.108793373 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.122798802 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.11719789 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.116839915 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.116051753 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.118214295 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.12478 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.377465099 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.129709195 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.11005901 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.110605002 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.113132041 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.127330037 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.378937725 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.116546507 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.133174731 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.162195437 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.11560953 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.013851563 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.119075903 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.128743783 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.123206304 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.117481319 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.11070247 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.015001953 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.386023199 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.130680269 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.116801086 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.112959166 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.129807474 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.117312009 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.112168827 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.023568527 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.117589481 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.128380323 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.235446909 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.125319897 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.146388973 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.113952235 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.118483966 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.142440428 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.129365725 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.146440385 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.118603278 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.128853399 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.131426767 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.112271408 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.126512055 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.125612433 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.116546534 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.12222164 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.110801002 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.142751885 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.128622071 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.128294234 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.136778028 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.2366463 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.113639726 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.018242468 seconds)
done (took 189.327364888 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.176135899 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.108945318 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.206086871 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.112329002 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.209340982 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.21005066 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.110234331 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.111072648 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.110818113 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.495989161 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.110725882 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.110786825 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.109216982 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.110982108 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.19517529 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.113467479 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.110866098 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.457070364 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.112987921 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.183186543 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.108622445 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.111226792 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.113311015 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.500282027 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.107552339 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.107138216 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.183507926 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.113952024 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.463212029 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.114252041 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.107899978 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.463187566 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.202880965 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.131407246 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.124059869 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.120496738 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.210322263 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.129153113 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.194964558 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.195102328 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.206699612 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.152353904 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.107167064 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.110158525 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.116014082 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.114457972 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.112545727 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.142044518 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.107883301 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.112766561 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.460053264 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.124503449 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.11266378 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.112710125 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.113002767 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.143299693 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.112961069 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.115384837 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.204612054 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.114487333 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.178131508 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.502807588 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.497795603 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.115266218 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.111722766 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.113440231 seconds)
  done (took 133.737931423 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.181779851 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.188392627 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.220727868 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.115821669 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.166647506 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.224399081 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.116063621 seconds)
  done (took 9.269237043 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.121312104 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.115968289 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.164481381 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.165673885 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.114770963 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.262579783 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.116393725 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.126656413 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.114273095 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.168803112 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.117015434 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.116910732 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.123448803 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.117468623 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.163392983 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.126953857 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.231831616 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.117361253 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.11598901 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.267947873 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.114378686 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.123965323 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.167982952 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.127744643 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.118283036 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.12304188 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.685167659 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.11679784 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.114902706 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.117265172 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.115182011 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.155236855 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.117435016 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.112267389 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.11533045 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.232213056 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.11724988 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.114903319 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.118208298 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.113537429 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.117953991 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.117761903 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.118442456 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.115683913 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.118515598 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.140314101 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.117987166 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.118451131 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.118139835 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.119135517 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.167267118 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.118280693 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.11588018 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.115464045 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.173724127 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.125103504 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.118137514 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.115697191 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.118790722 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.1161847 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.269468472 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.165801053 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.118630368 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.165534443 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.119162818 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.120085524 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.118655225 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.118977666 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.172589407 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.11913389 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.167181875 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.116751653 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.273434104 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.141576004 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.120505199 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.121386443 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.121394924 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.11878583 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.119803415 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.124555149 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.11723637 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.119956157 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.124648725 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.116788864 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.116921036 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.22184748 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.227612632 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.117279865 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.131969768 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.12595104 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.117573328 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.172134979 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.120233824 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.117613527 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.171492887 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.234727548 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.173189352 seconds)
  done (took 132.076814181 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.125289688 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.128420734 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.121856803 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.136317182 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.120551482 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.120344111 seconds)
  done (took 7.812993715 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.122233017 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.121249085 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.121276128 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.12118401 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.120321507 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.121137134 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.121027915 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.121370502 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.123836579 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.121328522 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.122344716 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.123047112 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.123865778 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.120674268 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.120839182 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.121595991 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.121472586 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.118834788 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.121343943 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.120737049 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.215558781 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.120226831 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.120521933 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.122192278 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.125811768 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.122040746 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.129002323 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.121583278 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.12207212 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.127681592 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.123708751 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.122834511 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.123647367 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.126443743 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.124922592 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.12302926 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.125045082 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.123734677 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.120789182 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.123069239 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.124371948 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.122640101 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.122977644 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.124609626 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.124250015 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.126233296 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.127417163 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.130391499 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.12295275 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.124045117 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.125219173 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.123769232 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.123741308 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.124821424 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.126317169 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.126097747 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.127444506 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.123410644 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.122804957 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.124115209 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.123786751 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.124097974 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.125122784 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.126631163 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.130859648 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.125506173 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.125627309 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.126460464 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.123389301 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.125210071 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.125626955 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.257074634 seconds)
  done (took 83.193909727 seconds)
done (took 367.142820231 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.446647112 seconds)
  done (took 7.640322586 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.450795378 seconds)
  done (took 7.646454721 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.17748474 seconds)
  done (took 19.373699764 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.315201894 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.278956156 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.254390908 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.261773731 seconds)
  done (took 26.303503961 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.393287999 seconds)
  done (took 7.586024823 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.249362091 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.257273682 seconds)
  done (took 13.702007882 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.49140055 seconds)
  done (took 7.684596774 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.328317003 seconds)
  done (took 7.522616023 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.272084111 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.259070648 seconds)
  done (took 13.978338782 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.237653568 seconds)
  done (took 7.432512737 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.900081999 seconds)
  done (took 8.095505256 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.253745677 seconds)
  done (took 7.451027406 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.286183454 seconds)
  done (took 7.481148645 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.380467834 seconds)
  done (took 8.575396676 seconds)
done (took 151.667027711 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.252394602 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.256139424 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.256813807 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.255539087 seconds)
  done (took 26.21617113 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.29258511 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.292889634 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.294114108 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.303472324 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.296043648 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.293294445 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.285244686 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.285429052 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.303977984 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.296161939 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.294738989 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.295119955 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.292454389 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.285738695 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.295135275 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.295405365 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.304806029 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.294869945 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.285730717 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.296552677 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.260293427 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.304600885 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.297360703 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.260986458 seconds)
  done (took 32.202956215 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.457708862 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.330347185 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.413774298 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.312390604 seconds)
  done (took 6.710482807 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.312391302 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.314110726 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.325107622 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.363991423 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.3977652 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.324104077 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.287612058 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.282310685 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.268976674 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.314597939 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.389979096 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.330590729 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.397576416 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.261292349 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.438576744 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.261380677 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.261205742 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.313508215 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.364570493 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.378401852 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.262748674 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.313156069 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.316062965 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.330351565 seconds)
  done (took 33.007117562 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.259863118 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.26870978 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.266784745 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.261001866 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.261766836 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.261429353 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.266659643 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.262510928 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.283756182 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.262526262 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.260522557 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.261365517 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.260840438 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.261469529 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.260688511 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.274484747 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.275347379 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.261964625 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.264866979 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.268397636 seconds)
  done (took 26.502929868 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.255414815 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.109842556 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.607523663 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.51172689 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.256294948 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.255407917 seconds)
  done (took 27.194703464 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.324381875 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.441740719 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.264593634 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.580139921 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.661218287 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.265541989 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.263594926 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.473339713 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.743502065 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.744982309 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.314526575 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.323870964 seconds)
  done (took 18.600500985 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.266271194 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.260018646 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.268108735 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.274496613 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.312701654 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.269203731 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.271283038 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.256966902 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.31501135 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.318698547 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.269699774 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.314884044 seconds)
  done (took 36.598181003 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.346292229 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.301600387 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.144987828 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.980185988 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.637358968 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.470102443 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.012720549 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.677032819 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.263524912 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.532111874 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.925102921 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.363142752 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.516363047 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.260646407 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.261651244 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.20165877 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.489747129 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.707131894 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.261448459 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.92429846 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.287234327 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.259789724 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.0844158 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.289567346 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.470242565 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.388164035 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.548507611 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.260245752 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.515377916 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.273327416 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.269962469 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.259759164 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.534138884 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.891882554 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.352861238 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.270798768 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.941021299 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.97388665 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.261943567 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.936565391 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.699321444 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.265856918 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.271019717 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.260770998 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.195269451 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.260831585 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.685399039 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.268995084 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 3.972658631 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.260542395 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.27160904 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.356179541 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.264774175 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.07579252 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.300138431 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.262457851 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.259799964 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.268141199 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.835102275 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.391334092 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.272637558 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.199469818 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.625639636 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.936455401 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.840564316 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.365546051 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.26557428 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.265744693 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.195715663 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.995820312 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.281956291 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.610071582 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.283376488 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.91154788 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.899508039 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.938676699 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.207047432 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.775459163 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.265248843 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.213820538 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.490120412 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.26350338 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.198613772 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.210779478 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.199833966 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.92545287 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.27706432 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.617297931 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.274124187 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.680572183 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.277074294 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.282532516 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.289163763 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.489876664 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.149672103 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.266862435 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 5.704395424 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.41298134 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.2880774 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.687120513 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.203175365 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.269596948 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.52229502 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.47737186 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.270545021 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.207410487 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.457171258 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.278950704 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.284254842 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.27508014 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.279244803 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.791660718 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.281139298 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.402170406 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.702275562 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.267540633 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.969672466 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.270361352 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.382775081 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.961168535 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.512735 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.006640414 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.271932572 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.348453653 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.275363427 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.268408474 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.040244755 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.784363197 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.267820646 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.269553461 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.272211184 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.279479181 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.267877706 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.21645217 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.270114128 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.978316606 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.273323416 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.492389382 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.269711674 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.545868763 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.203022625 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.616238995 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.361376209 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.491479041 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.377680045 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.270281798 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.529239091 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.275309262 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.284175733 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.282293686 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.287606185 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.367047286 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.290648098 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.268299746 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.527953413 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.271880088 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.272562634 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.035392481 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.27362611 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.277307124 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.274186911 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.092213326 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.796709593 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.249708651 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.274763157 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.157973847 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.283212304 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.334065874 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.275587162 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.279059724 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.920017846 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.078602062 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.274758993 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.276165989 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.496401117 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.280180069 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.032443334 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.354153408 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.453472903 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.799855933 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.287330208 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.2041107 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 3.981525221 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.963342316 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.271078154 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.205374242 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.269806563 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.279518446 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.281120496 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.783472641 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.801753324 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.275627566 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.952618726 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.278697355 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.280920396 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.274758006 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.271206386 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.890031311 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.412701441 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.284416143 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.283332454 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.413687611 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.283567902 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.205218186 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.275384595 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.275408461 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.270993172 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.271747851 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.303790647 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.949053602 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.734341896 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.533133232 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.986338474 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.285300851 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.104725615 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.303684731 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.270607453 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.7201338 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.287389345 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.287383403 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.283594784 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.282268116 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.001843484 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.933989881 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.842101507 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.933552117 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.754535136 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.157097781 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.274927059 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.286288762 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.694333012 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.206963779 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.827769468 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.442895759 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.694561834 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.217791946 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.456655597 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.380938955 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 1.969865126 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.284077714 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.499639965 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.149410527 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 5.719559401 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.300325389 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.483751805 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.30689191 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.283759634 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.202934851 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.558817546 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.492786103 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.731815251 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.353981329 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.690855881 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.721216708 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.289435633 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.271753123 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.549206307 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.431399919 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.989072563 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.445681962 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.273394951 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.95452773 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.746161852 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.280762307 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.499389719 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.851225119 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.277439356 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.45986721 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.212838944 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.285244618 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.284869638 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.274178932 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.405507155 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.24205751 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.541511489 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.285137952 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.208917636 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.284923964 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.755023656 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.130567292 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.279935901 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.274470906 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.973383915 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.285395879 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.531491825 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.287054241 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.863536845 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.281200843 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.20938328 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.207643467 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.969028338 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.282092327 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.251377579 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.725033782 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.623652698 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.272599553 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.298510782 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.501294879 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.531463613 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.288200033 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.80178737 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.506236882 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.051237579 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.300401174 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.375843507 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.757635002 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.27789687 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.276086636 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.511909461 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.100081709 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.501074222 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.171291953 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.180949679 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.274531625 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.489708792 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.276429979 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.967123266 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.514753934 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 3.988982155 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.287437612 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.930362502 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.303664418 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.968735853 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.206526254 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.636554103 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.285364472 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.355359502 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.287121376 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.287048361 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.287611897 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.435377482 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.972325867 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.291796749 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.290397707 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.369963791 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.422892802 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.870844924 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.282308218 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.809587586 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.953017977 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.810248811 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.292362427 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.27783703 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.283670432 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.212179444 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.425912641 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.503382202 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.550599542 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.409131759 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.752489965 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.301175884 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.765786945 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.296611933 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.490255888 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.552064665 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.173079814 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.287909983 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.291533933 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.277556562 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.288928216 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.489490212 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.733698013 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.794137194 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403911123 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.27841927 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.700867436 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.555211029 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.278789079 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.278708899 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.872081116 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.296633484 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.567279156 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.284707819 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.004330956 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.428043157 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.289709514 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.915345938 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.288710285 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.43566047 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.052432947 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.968784217 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.537687936 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.697182636 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.293348405 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.811424995 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.920220768 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.545176432 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.345855716 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.290098439 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.394280224 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.426171923 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.282380686 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.2825659 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.281142288 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.329162463 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 3.990519518 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.290217717 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.816629195 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.546886074 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.279615636 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.281400919 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.305188242 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.290216232 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.504463973 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.947603578 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.506037898 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.290485594 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.286421064 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.098501992 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.817043069 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.295253096 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.215948897 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.284160969 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.502165403 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.518134937 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.30309379 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.745302388 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 3.991304494 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.796530879 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.276107849 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.302596324 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.281962278 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.922859675 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.816695868 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.893041184 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.7391737 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.8408121 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.291185714 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.557804959 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.285881446 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.286416976 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.560507984 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.286770059 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.292369878 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.295135028 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.81301007 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 1.983909619 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.287105243 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.988971191 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.221459618 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.623806854 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.901210167 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.221219366 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.29337657 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.45208825 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.286071019 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.413078125 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.294645743 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.283649972 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.287371898 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.041995247 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.56714726 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.288292603 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.278617055 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 5.823136145 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.296326481 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.292687649 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.505703711 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.285497806 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.959540661 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.633057968 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.540233238 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.284782471 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.270160589 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.287380074 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.284489033 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.271444285 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.483691209 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.788565014 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.803205512 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.285533052 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.295627532 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.288093014 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.501256554 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.495370033 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.01085452 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.310770302 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.296873151 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.301078665 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.189795111 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.786058799 seconds)
  done (took 1548.60859561 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.306632636 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.309794556 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.294940006 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.284174468 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.296028721 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.386828527 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.328810446 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.360228281 seconds)
  done (took 51.793566012 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.284812875 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.508140861 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.314046148 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.290094191 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.295443784 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.296678334 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.684236461 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.286305562 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.294213646 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.295177549 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.297727854 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.289395984 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.854851085 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.296620236 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.292434907 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.278831655 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.294198522 seconds)
  done (took 64.380325208 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.287675957 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.487561877 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.362996249 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.303685381 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 6.96448346 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.294003698 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.466807365 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.314309392 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.289457613 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.298347938 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 6.937535117 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.313481926 seconds)
  done (took 82.548443797 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.293600319 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.2930733 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.29419142 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.294471918 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.293848392 seconds)
  done (took 7.697654382 seconds)
done (took 1963.257800789 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.537858261 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.909519937 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.885709937 seconds)
  done (took 5.023611138 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.431179507 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.479043705 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.601965171 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.62014093 seconds)
  done (took 7.357893103 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.561088647 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.666682249 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.468319962 seconds)
  done (took 5.922023478 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.550369277 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.299356229 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.405489341 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.285324112 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.28500231 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.283696993 seconds)
  done (took 20.081413904 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.287538075 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.291585872 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.288250081 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.291137582 seconds)
  done (took 6.383884245 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.270277646 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.026747775 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.273041496 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.286973698 seconds)
  done (took 18.082395928 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.030941842 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.056951786 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.032300671 seconds)
  done (took 7.346795073 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.284329001 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.144706914 seconds)
  done (took 9.655727113 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.589163682 seconds)
  done (took 2.816405418 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.420235284 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.556828417 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.225156797 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.168224057 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.261300195 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 4.667694175 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.729412187 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.356375252 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.156821994 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.200321905 seconds)
  done (took 25.970151058 seconds)
done (took 121.661956767 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 4.784551011 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.65204386 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.482186221 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 4.750384065 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.505528274 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.481334032 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.487276823 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 4.714182369 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.297472211 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.252153931 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 4.796321741 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.507133606 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.436409879 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.647297397 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.437365409 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.521228407 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.533039783 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 4.819386112 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.434226798 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.632058019 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.491496476 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.38924642 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.624148519 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.445945702 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.511756469 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.434314455 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 4.966478154 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.520847736 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.60743208 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.026284153 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.435973365 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 5.801414572 seconds)
  done (took 185.655914098 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.279162209 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.274694046 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.288418501 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.292622592 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.275317465 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.276236872 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.274023358 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.279955733 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.27427974 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.2766356 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.275030698 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.274937147 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.275224425 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.299816121 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.274443526 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.274921872 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.2752348 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.288536794 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.281527205 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.276021443 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.277216467 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.300122775 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.276990998 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.275986343 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.29025578 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.275578741 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.287960968 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.275704192 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.287686347 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.275473197 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.293521333 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.298948935 seconds)
  done (took 202.221515289 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.276270551 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.277291156 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.277362104 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.276689629 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.277283349 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.276530041 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.279358389 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.2927087 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.276663972 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.27583999 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.295894835 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.278252642 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.276254969 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.285763244 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.275944748 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.27678768 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.27760974 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.278358606 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.276484241 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.283854163 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.276835526 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.276552137 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.277756389 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.285128371 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.27605728 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.278884566 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.27690682 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.277412409 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.289907847 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.278034065 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.279494253 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.280887045 seconds)
  done (took 202.165402191 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.479805975 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.285549825 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.286845165 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.241484982 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.286346167 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.28494503 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.276618223 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.482338377 seconds)
  done (took 13.844188743 seconds)
done (took 605.111973407 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.438590525 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.18707043 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.476096565 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.309576082 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.968030605 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.309632073 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.310407783 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.462529368 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.176022684 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.463966418 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.462774748 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.307799258 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.584435426 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.306986561 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.542957958 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.396605126 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.10934576 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.216011081 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.601328611 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.741370745 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.544904133 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.680668393 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.464329326 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.169183679 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.592173703 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.676719398 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.925279759 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.120445993 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.309793703 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.605457423 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.777630119 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.165745618 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.360309572 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.343165715 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.399219126 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.380131921 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.142717009 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.341360892 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.47911331 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.445611445 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.748921328 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 1.997010157 seconds)
  done (took 87.264203723 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.277788877 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.277353772 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.277271925 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.278971943 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.278397424 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.277876093 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.277239313 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.277617331 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.278703654 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.278352621 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.277801527 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.27848465 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.278220553 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.279296602 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.27692766 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.276746818 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.278414075 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.280834256 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.278010226 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.278006498 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.278967368 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.277526501 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.279125752 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.278678724 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.279217377 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.279465925 seconds)
  done (took 34.461890162 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.292446906 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.511239223 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.676991777 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.299848312 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.29133712 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.295880925 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.362218562 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.29370021 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.293542105 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.294424373 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.437561873 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.296186597 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.324597575 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.688085767 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.29787919 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.297858717 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.294651687 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.294067287 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.521195998 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.305979595 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.365287486 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.296610965 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.362945649 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.30705973 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.296698518 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.295379021 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.298691348 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.813272518 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.298070078 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.440937075 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.980892138 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.36327655 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.78434247 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.691966706 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.983945877 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.298270411 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.296018381 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.445678654 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.298813599 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.29626012 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.363334263 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.297588273 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.687766963 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.90892257 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.312235393 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.29618087 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.833896412 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.446806099 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.512524284 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.305996845 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.709687009 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.301707962 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.297582144 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.296651687 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.512439208 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.303635838 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.295476404 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.85231339 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.303292705 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.36554437 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.297740819 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.297038595 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.529278669 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.297122714 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.518384403 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.298343847 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.305444342 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.299057395 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.689324903 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.300408067 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.929024022 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.313247509 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.297192604 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.443161998 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.520284213 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.861139901 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.301820551 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.533416415 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.793058347 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.365459805 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.301530898 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.804822032 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.368200726 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.30081031 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.300365649 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.300238084 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.297967104 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.341365981 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.363629015 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.854441693 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.919751407 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.869454429 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.369209869 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.309873917 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.299455035 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.854735415 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.302464565 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.299182964 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.684657545 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.93227859 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.314062301 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.306378923 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.927785755 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.317079983 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.368276515 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.30595097 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.69660265 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.302180652 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.342433001 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.299294561 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.306668201 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.301993609 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.3690599 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.302492554 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.2998554 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.898029806 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.465878974 seconds)
  done (took 170.408024888 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.294344347 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.292463697 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.294301619 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.292964166 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.29277325 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.299106794 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.293079958 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.29293437 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.298976138 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.292845686 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.292528524 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.294130383 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.295268624 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.293474273 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.303439795 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.300161004 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.903050608 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.2944492 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.300826271 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.293689138 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.06857929 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.296057678 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.300638627 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.294353034 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.29479328 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.29457842 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.296896299 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.297162437 seconds)
  done (took 150.894570841 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.301730137 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.805924942 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.303914326 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.417858216 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.321366754 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.299170558 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.416178319 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.352425438 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.303661226 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.299269438 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.299085112 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.571835681 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.305433505 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.763690173 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.46918861 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.419592158 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.766676434 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.305590363 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.300828682 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.299365199 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.419436084 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.308148298 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.572014679 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.805444339 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.303760604 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.807183112 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.291044172 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.302229148 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.300874547 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.808460403 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.300686949 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.572954353 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.370293531 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.353756712 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.80994399 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.766228449 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.769420097 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.433080765 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.302238951 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.300796734 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.301021016 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.290688749 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.813243642 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.30567867 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.304389604 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.806024044 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.320081228 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.303954795 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.311731807 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.30198372 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.354782301 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.356655862 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.577666213 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.816201802 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.370999822 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.324481433 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.418972635 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.663053949 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.306508025 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.763719632 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.291763332 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.815022693 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.306383043 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.291188583 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.304416558 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.308483719 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.43586047 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.420533714 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.765496752 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.304914309 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.765081304 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.466690581 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.307307384 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.305861448 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.307831888 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.835293547 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.77747186 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.443703372 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.430765504 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.481913491 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.298049547 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.306155617 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.295810418 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.376582609 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.307349172 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.831639513 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.781945999 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.310809164 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.308908509 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.309244115 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.308338657 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.466570117 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.834043854 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.380629891 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.773833695 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.60334724 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.592365675 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.311904913 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.363381129 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.30756622 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.590329433 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.311617817 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.36015409 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.727721569 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.591320977 seconds)
  done (took 154.489015352 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.531316749 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.412919713 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.393195097 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.412541841 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.811440131 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.85827592 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.46485512 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.430495694 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.408849142 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.537582227 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.396793172 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.400292939 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.477133729 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.376230723 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 1.986971677 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.374755327 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.393851504 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.431378802 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.410481701 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.268545734 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 1.918186251 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.586836718 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.46674159 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.35490215 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.399053057 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.05198975 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.829589076 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.794028211 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.46349816 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.492768894 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.802449831 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.376311631 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.19217209 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 1.934075721 seconds)
  done (took 62.684359362 seconds)
done (took 661.422976754 seconds)
SAVING RESULT...
DONE!
